MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "13.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                13.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2S1EY69 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2S1EY69 new;
MPRINT(EM_DIAGRAM):   run;
60969      filename emflow
60969    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring NEURAL40_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60970      *------------------------------------------------------------*;
60971      * Ensmbl24: Scoring NEURAL40_TRAIN data;
60972      *------------------------------------------------------------*;
60973      data EMWS8.Ensmbl24_TRAIN
60974      / view=EMWS8.Ensmbl24_TRAIN
60975      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_TRAIN / view=EMWS8.Ensmbl24_TRAIN ;
60976      set EMWS8.Neural40_TRAIN
60977      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_TRAIN ;
60978      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas.
60979     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60980     +* Ensmbl24: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Combine model for DepVar;
60981     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60982     +* Ensmbl24: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 1 of 7;
60983     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60984     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60985     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
60986     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
60987     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
60988     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60989     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60990     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
60991     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
60992     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
60993     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60994     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60995     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
60996     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
60997     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
60998     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
60999     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61000     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
61001     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
61002     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
61003     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61004     +
61005     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
61006     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
61006    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
61007     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
61008     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
61009     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
61010     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
61011     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
61012     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61013     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
61014     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
61015     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
61016     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61017     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61018     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
61019     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61020     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
61021     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
61022     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
61023     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61024     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
61025     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
61026     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
61027     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61028     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61029     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
61030     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
61031     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
61032     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61033     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61034     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
61035     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
61036     +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
61037     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61038     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
61039     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
61040     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
61041     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
61042     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
61043     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
61044     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
61045     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
61046     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
61047     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
61048     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
61049     +LENGTH _WARN_ $4
61050     +      F_DepVar  $ 12
61051     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
61052     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
61053     +
61054     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
61055     +
61056     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
61057     +
61058     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
61059     +
61060     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
61061     +
61062     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
61063     +
61064     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
61065     +
61066     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
61067     +
61068     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
61069     +
61070     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
61071     +
61072     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
61073     +
61074     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
61075     +
61076     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
61077     +
61078     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
61079     +
61080     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
61081     +
61082     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
61083     +
61084     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
61085     +
61086     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
61087     +
61088     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
61089     +
61090     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
61091     +
61092     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
61093     +
61094     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
61095     +
61096     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
61097     +
61098     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
61099     +
61100     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
61101     +
61102     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
61103     +
61104     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
61105     +
61106     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
61107     +
61108     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
61109     +
61110     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
61111     +
61112     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
61113     +
61114     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
61115     +
61116     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
61117     +
61118     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
61119     +
61120     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
61121     +
61122     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
61123     +
61124     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
61125     +
61126     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
61127     +
61128     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
61129     +
61130     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
61131     +
61132     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
61133     +
61134     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
61135     +
61136     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
61137     +
61138     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
61139     +
61140     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
61141     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
61142     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
61143     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
61144     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61145     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61146     +end;
MPRINT(EM_DIAGRAM):   end;
61147     +else do;
MPRINT(EM_DIAGRAM):   else do;
61148     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61149     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
61150     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61151     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61152     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
61153     +   end;
MPRINT(EM_DIAGRAM):   end;
61154     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61155     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
61156     +   end;
MPRINT(EM_DIAGRAM):   end;
61157     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61158     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
61159     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61160     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61161     +   end;
MPRINT(EM_DIAGRAM):   end;
61162     +end;
MPRINT(EM_DIAGRAM):   end;
61163     +
61164     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
61165     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
61166     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
61167     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
61168     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61169     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61170     +end;
MPRINT(EM_DIAGRAM):   end;
61171     +else do;
MPRINT(EM_DIAGRAM):   else do;
61172     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61173     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
61174     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61175     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61176     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
61177     +   end;
MPRINT(EM_DIAGRAM):   end;
61178     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61179     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
61180     +   end;
MPRINT(EM_DIAGRAM):   end;
61181     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61182     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
61183     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61184     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61185     +   end;
MPRINT(EM_DIAGRAM):   end;
61186     +end;
MPRINT(EM_DIAGRAM):   end;
61187     +
61188     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
61189     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
61190     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
61191     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
61192     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61193     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61194     +end;
MPRINT(EM_DIAGRAM):   end;
61195     +else do;
MPRINT(EM_DIAGRAM):   else do;
61196     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61197     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
61198     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61199     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61200     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
61201     +   end;
MPRINT(EM_DIAGRAM):   end;
61202     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61203     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
61204     +   end;
MPRINT(EM_DIAGRAM):   end;
61205     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61206     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
61207     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61208     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61209     +   end;
MPRINT(EM_DIAGRAM):   end;
61210     +end;
MPRINT(EM_DIAGRAM):   end;
61211     +
61212     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
61213     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
61214     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
61215     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
61216     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61217     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61218     +end;
MPRINT(EM_DIAGRAM):   end;
61219     +else do;
MPRINT(EM_DIAGRAM):   else do;
61220     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61221     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
61222     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61223     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61224     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
61225     +   end;
MPRINT(EM_DIAGRAM):   end;
61226     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61227     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
61228     +   end;
MPRINT(EM_DIAGRAM):   end;
61229     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61230     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
61231     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61232     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61233     +   end;
MPRINT(EM_DIAGRAM):   end;
61234     +end;
MPRINT(EM_DIAGRAM):   end;
61235     +
61236     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
61237     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
61238     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
61239     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
61240     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61241     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61242     +end;
MPRINT(EM_DIAGRAM):   end;
61243     +else do;
MPRINT(EM_DIAGRAM):   else do;
61244     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61245     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
61246     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61247     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61248     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
61249     +   end;
MPRINT(EM_DIAGRAM):   end;
61250     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61251     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
61252     +   end;
MPRINT(EM_DIAGRAM):   end;
61253     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61254     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
61255     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61256     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61257     +   end;
MPRINT(EM_DIAGRAM):   end;
61258     +end;
MPRINT(EM_DIAGRAM):   end;
61259     +
61260     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
61261     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
61262     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
61263     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
61264     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61265     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61266     +end;
MPRINT(EM_DIAGRAM):   end;
61267     +else do;
MPRINT(EM_DIAGRAM):   else do;
61268     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61269     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
61270     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61271     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61272     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
61273     +   end;
MPRINT(EM_DIAGRAM):   end;
61274     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61275     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
61276     +   end;
MPRINT(EM_DIAGRAM):   end;
61277     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61278     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
61279     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61280     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61281     +   end;
MPRINT(EM_DIAGRAM):   end;
61282     +end;
MPRINT(EM_DIAGRAM):   end;
61283     +
61284     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
61285     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
61286     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
61287     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
61288     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61289     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61290     +end;
MPRINT(EM_DIAGRAM):   end;
61291     +else do;
MPRINT(EM_DIAGRAM):   else do;
61292     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61293     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
61294     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61295     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
61296     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
61297     +   end;
MPRINT(EM_DIAGRAM):   end;
61298     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
61299     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
61300     +   end;
MPRINT(EM_DIAGRAM):   end;
61301     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61302     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
61303     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61304     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61305     +   end;
MPRINT(EM_DIAGRAM):   end;
61306     +end;
MPRINT(EM_DIAGRAM):   end;
61307     +
61308     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
61309     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
61310     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
61311     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
61312     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
61313     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
61314     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
61315     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
61316     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
61317     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
61318     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
61319     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
61320     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61321     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61322     +end;
MPRINT(EM_DIAGRAM):   end;
61323     +else do;
MPRINT(EM_DIAGRAM):   else do;
61324     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
61325     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
61326     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61327     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
61328     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
61329     +   end;
MPRINT(EM_DIAGRAM):   end;
61330     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
61331     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
61332     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
61333     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
61334     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
61335     +   end;
MPRINT(EM_DIAGRAM):   end;
61336     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
61337     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
61338     +   end;
MPRINT(EM_DIAGRAM):   end;
61339     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
61340     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
61341     +   end;
MPRINT(EM_DIAGRAM):   end;
61342     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
61343     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
61344     +   end;
MPRINT(EM_DIAGRAM):   end;
61345     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61346     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
61347     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
61348     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
61349     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
61350     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61351     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61352     +   end;
MPRINT(EM_DIAGRAM):   end;
61353     +end;
MPRINT(EM_DIAGRAM):   end;
61354     +
61355     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
61356     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
61357     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
61358     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
61359     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
61360     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
61361     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
61362     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
61363     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
61364     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
61365     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
61366     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
61367     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
61368     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61369     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61370     +end;
MPRINT(EM_DIAGRAM):   end;
61371     +else do;
MPRINT(EM_DIAGRAM):   else do;
61372     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
61373     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
61374     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61375     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
61376     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
61377     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
61378     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
61379     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
61380     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61381     +         end;
MPRINT(EM_DIAGRAM):   end;
61382     +         else do;
MPRINT(EM_DIAGRAM):   else do;
61383     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
61384     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
61385     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61386     +            end;
MPRINT(EM_DIAGRAM):   end;
61387     +         end;
MPRINT(EM_DIAGRAM):   end;
61388     +      end;
MPRINT(EM_DIAGRAM):   end;
61389     +      else do;
MPRINT(EM_DIAGRAM):   else do;
61390     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
61391     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
61392     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61393     +         end;
MPRINT(EM_DIAGRAM):   end;
61394     +      end;
MPRINT(EM_DIAGRAM):   end;
61395     +   end;
MPRINT(EM_DIAGRAM):   end;
61396     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61397     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
61398     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
61399     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61400     +      end;
MPRINT(EM_DIAGRAM):   end;
61401     +      else do;
MPRINT(EM_DIAGRAM):   else do;
61402     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
61403     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
61404     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
61405     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
61406     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
61407     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
61408     +         end;
MPRINT(EM_DIAGRAM):   end;
61409     +      end;
MPRINT(EM_DIAGRAM):   end;
61410     +   end;
MPRINT(EM_DIAGRAM):   end;
61411     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
61412     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
61413     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
61414     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
61415     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
61416     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61417     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61418     +   end;
MPRINT(EM_DIAGRAM):   end;
61419     +end;
MPRINT(EM_DIAGRAM):   end;
61420     +
61421     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61422     +*** Checking missing input Interval
61423     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
61424     +
61425     +IF NMISS(
61426     +   AcceptedCmpTotal ,
61427     +   Age ,
61428     +   Frq ,
61429     +   Income ,
61430     +   Kidhome ,
61431     +   MntFishProducts ,
61432     +   MntFruits ,
61433     +   MntGoldProds ,
61434     +   MntSweetProducts ,
61435     +   MonthsAsCustomer ,
61436     +   NumDealsPurchases ,
61437     +   NumWebVisitsMonth ,
61438     +   RFMstat ,
61439     +   RMntFrq ,
61440     +   Recency ,
61441     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
61442     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
61443     +
61444     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61445     +END;
MPRINT(EM_DIAGRAM):   END;
61446     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61447     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
61448     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61449     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61450     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
61451     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
61452     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
61453     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
61454     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
61455     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
61456     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
61457     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
61458     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
61459     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
61460     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
61461     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
61462     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
61463     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
61464     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
61465     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
61466     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
61467     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
61468     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
61469     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
61470     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
61471     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
61472     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
61473     +END;
MPRINT(EM_DIAGRAM):   END;
61474     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61475     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
61476     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
61477     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
61478     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
61479     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
61480     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
61481     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
61482     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
61483     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
61484     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
61485     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
61486     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
61487     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
61488     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
61489     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
61490     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
61491     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
61492     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
61493     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
61494     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
61495     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
61496     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
61497     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
61498     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
61499     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
61500     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
61501     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
61502     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
61503     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
61504     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
61505     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
61506     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
61507     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
61508     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
61509     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
61510     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
61511     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
61512     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
61513     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
61514     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
61515     +END;
MPRINT(EM_DIAGRAM):   END;
61516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61517     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
61518     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61519     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61520     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
61521     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61522     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61523     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
61524     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61525     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61526     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
61527     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
61528     +        S_Income  +     0.39760289149752 * S_Kidhome
61529     +          +     -0.0376693415484 * S_MntFishProducts
61530     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
61531     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
61532     +          +    -0.13043754404228 * S_MonthsAsCustomer
61533     +          +     -0.0139146653349 * S_NumDealsPurchases
61534     +          +    -0.01539820220757 * S_NumWebVisitsMonth
61535     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
61536     +        S_RMntFrq  +     0.55149605442396 * S_Recency
61537     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
61538     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
61539     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
61540     +        S_Income  +     0.31208673256073 * S_Kidhome
61541     +          +    -0.04911763008195 * S_MntFishProducts
61542     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
61543     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
61544     +          +    -0.48577934340503 * S_MonthsAsCustomer
61545     +          +     0.31218334237091 * S_NumDealsPurchases
61546     +          +     0.24212805498377 * S_NumWebVisitsMonth
61547     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
61548     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
61549     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
61550     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
61551     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
61552     +        S_Income  +    -0.48748003518551 * S_Kidhome
61553     +          +     0.15434683428908 * S_MntFishProducts
61554     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
61555     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
61556     +          +    -0.07405705160744 * S_MonthsAsCustomer
61557     +          +    -0.44979778263337 * S_NumDealsPurchases
61558     +          +    -0.51422673599958 * S_NumWebVisitsMonth
61559     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
61560     +        S_RMntFrq  +     0.79850779605341 * S_Recency
61561     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
61562     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
61563     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
61564     +        S_Income  +    -0.62401744170985 * S_Kidhome
61565     +          +    -0.08499883212951 * S_MntFishProducts
61566     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
61567     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
61568     +          +    -0.04051431518694 * S_MonthsAsCustomer
61569     +          +     0.00788125797776 * S_NumDealsPurchases
61570     +          +     0.59495434076477 * S_NumWebVisitsMonth
61571     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
61572     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
61573     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
61574     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
61575     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
61576     +        S_Income  +     -0.0256051183156 * S_Kidhome
61577     +          +    -0.15661247042419 * S_MntFishProducts
61578     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
61579     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
61580     +          +     0.03994503424293 * S_MonthsAsCustomer
61581     +          +    -0.53734193208154 * S_NumDealsPurchases
61582     +          +    -0.58547802324835 * S_NumWebVisitsMonth
61583     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
61584     +        S_RMntFrq  +     0.66048924026365 * S_Recency
61585     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
61586     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
61587     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
61588     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
61589     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
61590     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
61591     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
61592     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
61593     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
61594     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
61595     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
61596     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
61597     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
61598     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
61599     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
61600     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
61601     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
61602     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
61603     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
61604     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
61605     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
61606     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
61607     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
61608     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
61609     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
61610     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
61611     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
61612     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
61613     +        EducationGraduation  +     0.23295390047952 * EducationMaster
61614     +          +    -0.41529808115031 * Marital_StatusDivorced
61615     +          +     0.65264978817749 * Marital_StatusMarried
61616     +          +    -0.52150453945732 * Marital_StatusSingle
61617     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
61618     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
61619     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
61620     +        EducationGraduation  +     0.04425534246646 * EducationMaster
61621     +          +    -0.32207382402099 * Marital_StatusDivorced
61622     +          +     0.16112567537413 * Marital_StatusMarried
61623     +          +     0.28859198712458 * Marital_StatusSingle
61624     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
61625     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
61626     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
61627     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
61628     +          +    -0.06823118087629 * Marital_StatusDivorced
61629     +          +    -0.01696675344176 * Marital_StatusMarried
61630     +          +    -0.04922830766868 * Marital_StatusSingle
61631     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
61632     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
61633     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
61634     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
61635     +          +     0.20346888384065 * Marital_StatusDivorced
61636     +          +     -0.5246097720646 * Marital_StatusMarried
61637     +          +     0.50991923175058 * Marital_StatusSingle
61638     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
61639     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
61640     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
61641     +        EducationGraduation  +     0.03117170136897 * EducationMaster
61642     +          +    -0.14128509643843 * Marital_StatusDivorced
61643     +          +    -0.17344467864829 * Marital_StatusMarried
61644     +          +     0.09201105049634 * Marital_StatusSingle
61645     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
61646     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
61647     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
61648     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
61649     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
61650     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
61651     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
61652     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
61653     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
61654     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
61655     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
61656     +END;
MPRINT(EM_DIAGRAM):   END;
61657     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61658     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
61659     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
61660     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
61661     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
61662     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
61663     +END;
MPRINT(EM_DIAGRAM):   END;
61664     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61665     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
61666     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61667     +
61668     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
61669     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
61670     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
61671     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
61672     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
61673     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61674     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
61675     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
61676     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
61677     +end;
MPRINT(EM_DIAGRAM):   end;
61678     +else do;
MPRINT(EM_DIAGRAM):   else do;
61679     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
61680     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
61681     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
61682     +   end;
MPRINT(EM_DIAGRAM):   end;
61683     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
61684     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
61685     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
61686     +   end;
MPRINT(EM_DIAGRAM):   end;
61687     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61688     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
61689     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
61690     +   end;
MPRINT(EM_DIAGRAM):   end;
61691     +end;
MPRINT(EM_DIAGRAM):   end;
61692     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
61693     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
61694     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
61695     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
61696     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
61697     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
61698     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
61699     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
61700     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
61701     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
61702     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
61703     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
61704     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
61705     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
61706     +END;
MPRINT(EM_DIAGRAM):   END;
61707     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
61708     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
61709     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
61710     +END;
MPRINT(EM_DIAGRAM):   END;
61711     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
61712     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
61713     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
61714     +END;
MPRINT(EM_DIAGRAM):   END;
61715     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
61716     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
61717     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
61718     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
61719     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
61720     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
61721     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
61722     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61723     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
61724     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
61725     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
61726     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
61727     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
61728     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
61729     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
61730     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
61731     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
61732     +END;
MPRINT(EM_DIAGRAM):   END;
61733     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
61734     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
61735     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
61736     +drop
61737     +H11
61738     +H12
61739     +H13
61740     +H14
61741     +H15
61742     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
61743     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
61744     +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
61745     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61746     +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
61747     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61748     +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
61749     +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
61750     +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
61751     +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
61752     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61753     +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
61754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61755     +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
61756     +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
61757     +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
61758     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61759     +* Ensmbl24: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 2 of 7;
The SAS System

61760     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61761     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61762     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
61763     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
61764     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
61765     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
61766     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
61767     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
61768     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
61769     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
61770     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
61771     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
61772     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
61773     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
61774     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
61775     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
61776     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
61777     +LENGTH _WARN_ $4
61778     +      F_DepVar  $ 12
61779     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
61780     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
61781     +
61782     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
61783     +
61784     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
61785     +
61786     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
61787     +
61788     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
61789     +
61790     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
61791     +
61792     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
61793     +
61794     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
61795     +
61796     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
61797     +
61798     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
61799     +
61800     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
61801     +
61802     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
61803     +
61804     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
61805     +
61806     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
61807     +
61808     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
61809     +
61810     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
61811     +
61812     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
61813     +
61814     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
61815     +
61816     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
61817     +
61818     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
61819     +
61820     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
61821     +
61822     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
61823     +
61824     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
61825     +
61826     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
61827     +
61828     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
61829     +
61830     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
61831     +
61832     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
61833     +
61834     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
61835     +
61836     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
61837     +
61838     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
61839     +
61840     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
61841     +
61842     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
61843     +
61844     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
61845     +
61846     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
61847     +
61848     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
61849     +
61850     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
61851     +
61852     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
61853     +
61854     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
61855     +
61856     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
61857     +
61858     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
61859     +
61860     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
61861     +
61862     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
61863     +
61864     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
61865     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
61866     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
61867     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
61868     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61869     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61870     +end;
MPRINT(EM_DIAGRAM):   end;
61871     +else do;
MPRINT(EM_DIAGRAM):   else do;
61872     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61873     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
61874     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61875     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61876     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
61877     +   end;
MPRINT(EM_DIAGRAM):   end;
61878     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61879     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
61880     +   end;
MPRINT(EM_DIAGRAM):   end;
61881     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61882     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
61883     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61884     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61885     +   end;
MPRINT(EM_DIAGRAM):   end;
61886     +end;
MPRINT(EM_DIAGRAM):   end;
61887     +
61888     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
61889     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
61890     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
61891     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
61892     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61893     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61894     +end;
MPRINT(EM_DIAGRAM):   end;
61895     +else do;
MPRINT(EM_DIAGRAM):   else do;
61896     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61897     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
61898     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61899     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61900     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
61901     +   end;
MPRINT(EM_DIAGRAM):   end;
61902     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61903     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
61904     +   end;
MPRINT(EM_DIAGRAM):   end;
61905     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61906     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
61907     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61908     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61909     +   end;
MPRINT(EM_DIAGRAM):   end;
61910     +end;
MPRINT(EM_DIAGRAM):   end;
61911     +
61912     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
61913     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
61914     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
61915     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
61916     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61917     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61918     +end;
MPRINT(EM_DIAGRAM):   end;
61919     +else do;
MPRINT(EM_DIAGRAM):   else do;
61920     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61921     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
61922     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61923     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61924     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
61925     +   end;
MPRINT(EM_DIAGRAM):   end;
61926     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61927     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
61928     +   end;
MPRINT(EM_DIAGRAM):   end;
61929     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61930     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
61931     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61932     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61933     +   end;
MPRINT(EM_DIAGRAM):   end;
61934     +end;
MPRINT(EM_DIAGRAM):   end;
61935     +
61936     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
61937     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
61938     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
61939     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
61940     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61941     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61942     +end;
MPRINT(EM_DIAGRAM):   end;
61943     +else do;
MPRINT(EM_DIAGRAM):   else do;
61944     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61945     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
61946     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61947     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61948     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
61949     +   end;
MPRINT(EM_DIAGRAM):   end;
61950     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61951     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
61952     +   end;
MPRINT(EM_DIAGRAM):   end;
61953     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61954     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
61955     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61956     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61957     +   end;
MPRINT(EM_DIAGRAM):   end;
61958     +end;
MPRINT(EM_DIAGRAM):   end;
61959     +
61960     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
61961     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
61962     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
61963     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
61964     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61965     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61966     +end;
MPRINT(EM_DIAGRAM):   end;
61967     +else do;
MPRINT(EM_DIAGRAM):   else do;
61968     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61969     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
61970     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61971     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61972     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
61973     +   end;
MPRINT(EM_DIAGRAM):   end;
61974     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61975     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
61976     +   end;
MPRINT(EM_DIAGRAM):   end;
61977     +   else do;
MPRINT(EM_DIAGRAM):   else do;
61978     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
61979     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
61980     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61981     +   end;
MPRINT(EM_DIAGRAM):   end;
61982     +end;
MPRINT(EM_DIAGRAM):   end;
61983     +
61984     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
61985     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
61986     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
61987     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
61988     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
61989     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
61990     +end;
MPRINT(EM_DIAGRAM):   end;
61991     +else do;
MPRINT(EM_DIAGRAM):   else do;
61992     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
61993     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
61994     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
61995     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
61996     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
61997     +   end;
MPRINT(EM_DIAGRAM):   end;
61998     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
61999     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
62000     +   end;
MPRINT(EM_DIAGRAM):   end;
62001     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62002     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
62003     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62004     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62005     +   end;
MPRINT(EM_DIAGRAM):   end;
62006     +end;
MPRINT(EM_DIAGRAM):   end;
62007     +
62008     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
62009     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
62010     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
62011     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62012     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62013     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62014     +end;
MPRINT(EM_DIAGRAM):   end;
62015     +else do;
MPRINT(EM_DIAGRAM):   else do;
62016     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62017     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
62018     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62019     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
62020     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
62021     +   end;
MPRINT(EM_DIAGRAM):   end;
62022     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
62023     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
62024     +   end;
MPRINT(EM_DIAGRAM):   end;
62025     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62026     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62027     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62028     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62029     +   end;
MPRINT(EM_DIAGRAM):   end;
62030     +end;
MPRINT(EM_DIAGRAM):   end;
62031     +
62032     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
62033     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
62034     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62035     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
62036     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
62037     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
62038     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
62039     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
62040     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62041     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62042     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62043     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62044     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62045     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62046     +end;
MPRINT(EM_DIAGRAM):   end;
62047     +else do;
MPRINT(EM_DIAGRAM):   else do;
62048     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
62049     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
62050     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62051     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
62052     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
62053     +   end;
MPRINT(EM_DIAGRAM):   end;
62054     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
62055     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
62056     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
62057     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
62058     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
62059     +   end;
MPRINT(EM_DIAGRAM):   end;
62060     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
62061     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
62062     +   end;
MPRINT(EM_DIAGRAM):   end;
62063     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
62064     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
62065     +   end;
MPRINT(EM_DIAGRAM):   end;
62066     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
62067     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
62068     +   end;
MPRINT(EM_DIAGRAM):   end;
62069     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62070     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62071     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62072     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62073     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62074     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62075     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62076     +   end;
MPRINT(EM_DIAGRAM):   end;
62077     +end;
MPRINT(EM_DIAGRAM):   end;
62078     +
62079     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
62080     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
62081     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
62082     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62083     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
62084     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
62085     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
62086     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
62087     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
62088     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62089     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62090     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62091     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62092     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62093     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62094     +end;
MPRINT(EM_DIAGRAM):   end;
62095     +else do;
MPRINT(EM_DIAGRAM):   else do;
62096     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
62097     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
62098     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62099     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
62100     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
62101     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
62102     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
62103     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
62104     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62105     +         end;
MPRINT(EM_DIAGRAM):   end;
62106     +         else do;
MPRINT(EM_DIAGRAM):   else do;
62107     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
62108     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
62109     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62110     +            end;
MPRINT(EM_DIAGRAM):   end;
62111     +         end;
MPRINT(EM_DIAGRAM):   end;
62112     +      end;
MPRINT(EM_DIAGRAM):   end;
62113     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62114     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
62115     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
62116     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62117     +         end;
MPRINT(EM_DIAGRAM):   end;
62118     +      end;
MPRINT(EM_DIAGRAM):   end;
62119     +   end;
MPRINT(EM_DIAGRAM):   end;
62120     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62121     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
62122     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
62123     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62124     +      end;
MPRINT(EM_DIAGRAM):   end;
62125     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62126     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
62127     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
62128     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
62129     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
62130     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
62131     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62132     +         end;
MPRINT(EM_DIAGRAM):   end;
62133     +      end;
MPRINT(EM_DIAGRAM):   end;
62134     +   end;
MPRINT(EM_DIAGRAM):   end;
62135     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
62136     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62137     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62138     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62139     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62140     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62141     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62142     +   end;
MPRINT(EM_DIAGRAM):   end;
62143     +end;
MPRINT(EM_DIAGRAM):   end;
62144     +
62145     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62146     +*** Checking missing input Interval
62147     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
62148     +
62149     +IF NMISS(
62150     +   AcceptedCmpTotal ,
62151     +   Age ,
62152     +   Frq ,
62153     +   Income ,
62154     +   Kidhome ,
62155     +   MntFishProducts ,
62156     +   MntFruits ,
62157     +   MntGoldProds ,
62158     +   MntSweetProducts ,
62159     +   MonthsAsCustomer ,
62160     +   NumDealsPurchases ,
62161     +   NumWebVisitsMonth ,
62162     +   RFMstat ,
62163     +   RMntFrq ,
62164     +   Recency ,
62165     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
62166     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
62167     +
62168     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62169     +END;
MPRINT(EM_DIAGRAM):   END;
62170     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62171     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
62172     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62173     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62174     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62175     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62176     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62177     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62178     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62179     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62180     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62181     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62182     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62183     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62184     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
62185     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62186     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62187     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62188     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62189     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62190     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62191     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62192     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62193     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62194     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62195     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62196     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62197     +END;
MPRINT(EM_DIAGRAM):   END;
62198     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62199     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
62200     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62201     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62202     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
62203     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62204     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
62205     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62206     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
62207     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62208     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
62209     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62210     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
62211     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62212     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62213     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
62214     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
62215     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62216     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
62217     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62218     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
62219     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
62220     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62221     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62222     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
62223     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62224     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62225     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
62226     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62227     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62228     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
62229     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62230     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62231     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
62232     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62233     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
62234     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62235     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
62236     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62237     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
62238     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62239     +END;
MPRINT(EM_DIAGRAM):   END;
62240     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62241     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
62242     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62243     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62244     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
62245     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62246     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62247     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
62248     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62249     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62250     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
62251     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
62252     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
62253     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
62254     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
62255     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
62256     +          +     -0.1740957673716 * S_MonthsAsCustomer
62257     +          +     0.66565026405117 * S_NumDealsPurchases
62258     +          +     0.43247206282836 * S_NumWebVisitsMonth
62259     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
62260     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
62261     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
62262     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
62263     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
62264     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
62265     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
62266     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
62267     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
62268     +          +    -0.06176784990963 * S_MonthsAsCustomer
62269     +          +    -0.11740415005833 * S_NumDealsPurchases
62270     +          +    -0.17084845478672 * S_NumWebVisitsMonth
62271     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
62272     +        S_RMntFrq  +     0.54983271222574 * S_Recency
62273     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
62274     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
62275     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
62276     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
62277     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
62278     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
62279     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
62280     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
62281     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
62282     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
62283     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
62284     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
62285     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
62286     +        EducationGraduation  +     0.22632282500966 * EducationMaster
62287     +          +     -0.0800438380883 * Marital_StatusDivorced
62288     +          +     0.44505766937623 * Marital_StatusMarried
62289     +          +    -0.57546515626468 * Marital_StatusSingle
62290     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
62291     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
62292     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
62293     +        EducationGraduation  +      0.0794165981215 * EducationMaster
62294     +          +    -0.20291653465543 * Marital_StatusDivorced
62295     +          +     0.39547414450617 * Marital_StatusMarried
62296     +          +    -0.37001331184001 * Marital_StatusSingle
62297     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
62298     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
62299     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
62300     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
62301     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
62302     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
62303     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
62304     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
62305     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
62306     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
62307     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
62308     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
62309     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
62310     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
62311     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
62312     +END;
MPRINT(EM_DIAGRAM):   END;
62313     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62314     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
62315     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
62316     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
62317     +END;
MPRINT(EM_DIAGRAM):   END;
62318     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62319     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
62320     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62321     +
62322     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
62323     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
62324     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
62325     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
62326     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
62327     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62328     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
62329     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
62330     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
62331     +end;
MPRINT(EM_DIAGRAM):   end;
62332     +else do;
MPRINT(EM_DIAGRAM):   else do;
62333     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
62334     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
62335     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
62336     +   end;
MPRINT(EM_DIAGRAM):   end;
62337     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
62338     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
62339     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
62340     +   end;
MPRINT(EM_DIAGRAM):   end;
62341     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62342     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
62343     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
62344     +   end;
MPRINT(EM_DIAGRAM):   end;
62345     +end;
MPRINT(EM_DIAGRAM):   end;
62346     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62347     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
62348     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
62349     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
62350     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
62351     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
62352     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
62353     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
62354     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
62355     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
62356     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
62357     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
62358     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
62359     +END;
MPRINT(EM_DIAGRAM):   END;
62360     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62361     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
62362     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
62363     +END;
MPRINT(EM_DIAGRAM):   END;
62364     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
62365     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
62366     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
62367     +END;
MPRINT(EM_DIAGRAM):   END;
62368     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
62369     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
62370     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
62371     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
62372     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
62373     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
62374     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
62375     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62376     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
62377     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62378     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
62379     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
62380     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
62381     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
62382     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
62383     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
62384     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
62385     +END;
MPRINT(EM_DIAGRAM):   END;
62386     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
62387     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
62388     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
62389     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
62390     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
62391     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62392     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
62393     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62394     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
62395     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
62396     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
62397     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
62398     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62399     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
62400     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62401     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
62402     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
62403     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
62404     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62405     +* Ensmbl24: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 3 of 7;
62406     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62407     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62408     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
62409     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
62410     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
62411     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
62412     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
62413     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
62414     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
62415     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
62416     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
62417     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
62418     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
62419     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
62420     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
62421     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
62422     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
62423     +LENGTH _WARN_ $4
62424     +      F_DepVar  $ 12
62425     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
62426     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
62427     +
62428     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
62429     +
62430     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
62431     +
62432     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
62433     +
62434     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
62435     +
62436     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
62437     +
62438     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
62439     +
62440     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
62441     +
62442     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
62443     +
62444     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
62445     +
62446     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
62447     +
62448     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
62449     +
62450     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
62451     +
62452     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
62453     +
62454     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
62455     +
62456     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
62457     +
62458     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
62459     +
62460     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
62461     +
62462     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
62463     +
62464     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
62465     +
62466     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
62467     +
62468     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
62469     +
62470     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
62471     +
62472     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
62473     +
62474     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
62475     +
62476     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
62477     +
62478     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
62479     +
62480     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
62481     +
62482     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
62483     +
62484     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
62485     +
62486     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
62487     +
62488     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
62489     +
62490     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
62491     +
62492     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
62493     +
62494     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
62495     +
62496     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
62497     +
62498     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
62499     +
62500     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
62501     +
62502     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
62503     +
62504     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
62505     +
62506     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
62507     +
62508     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
62509     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
62510     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
62511     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
62512     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62513     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62514     +end;
MPRINT(EM_DIAGRAM):   end;
62515     +else do;
MPRINT(EM_DIAGRAM):   else do;
62516     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62517     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
62518     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62519     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62520     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
62521     +   end;
MPRINT(EM_DIAGRAM):   end;
62522     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62523     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
62524     +   end;
MPRINT(EM_DIAGRAM):   end;
62525     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62526     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
62527     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62528     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62529     +   end;
MPRINT(EM_DIAGRAM):   end;
62530     +end;
MPRINT(EM_DIAGRAM):   end;
62531     +
62532     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
62533     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
62534     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
62535     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
62536     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62537     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62538     +end;
MPRINT(EM_DIAGRAM):   end;
62539     +else do;
MPRINT(EM_DIAGRAM):   else do;
62540     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62541     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
62542     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62543     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62544     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
62545     +   end;
MPRINT(EM_DIAGRAM):   end;
62546     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62547     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
62548     +   end;
MPRINT(EM_DIAGRAM):   end;
62549     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62550     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
62551     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62552     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62553     +   end;
MPRINT(EM_DIAGRAM):   end;
62554     +end;
MPRINT(EM_DIAGRAM):   end;
62555     +
62556     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
62557     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
62558     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
62559     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
62560     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62561     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62562     +end;
MPRINT(EM_DIAGRAM):   end;
62563     +else do;
MPRINT(EM_DIAGRAM):   else do;
62564     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62565     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
62566     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62567     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62568     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
62569     +   end;
MPRINT(EM_DIAGRAM):   end;
62570     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62571     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
62572     +   end;
MPRINT(EM_DIAGRAM):   end;
62573     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62574     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
62575     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62576     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62577     +   end;
MPRINT(EM_DIAGRAM):   end;
62578     +end;
MPRINT(EM_DIAGRAM):   end;
62579     +
62580     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
62581     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
62582     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
62583     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
62584     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62585     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62586     +end;
MPRINT(EM_DIAGRAM):   end;
62587     +else do;
MPRINT(EM_DIAGRAM):   else do;
62588     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62589     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
62590     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62591     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62592     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
62593     +   end;
MPRINT(EM_DIAGRAM):   end;
62594     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62595     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
62596     +   end;
MPRINT(EM_DIAGRAM):   end;
62597     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62598     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
62599     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62600     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62601     +   end;
MPRINT(EM_DIAGRAM):   end;
62602     +end;
MPRINT(EM_DIAGRAM):   end;
62603     +
62604     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
62605     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
62606     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
62607     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
62608     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62609     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62610     +end;
MPRINT(EM_DIAGRAM):   end;
62611     +else do;
MPRINT(EM_DIAGRAM):   else do;
62612     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62613     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
62614     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62615     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62616     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
62617     +   end;
MPRINT(EM_DIAGRAM):   end;
62618     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62619     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
62620     +   end;
MPRINT(EM_DIAGRAM):   end;
62621     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62622     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
62623     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62624     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62625     +   end;
MPRINT(EM_DIAGRAM):   end;
62626     +end;
MPRINT(EM_DIAGRAM):   end;
62627     +
62628     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
62629     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
62630     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
62631     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
62632     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62633     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62634     +end;
MPRINT(EM_DIAGRAM):   end;
62635     +else do;
MPRINT(EM_DIAGRAM):   else do;
62636     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62637     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
62638     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62639     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
62640     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
62641     +   end;
MPRINT(EM_DIAGRAM):   end;
62642     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
62643     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
62644     +   end;
MPRINT(EM_DIAGRAM):   end;
62645     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62646     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
62647     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62648     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62649     +   end;
MPRINT(EM_DIAGRAM):   end;
62650     +end;
MPRINT(EM_DIAGRAM):   end;
62651     +
62652     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
62653     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
62654     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
62655     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62656     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62657     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62658     +end;
MPRINT(EM_DIAGRAM):   end;
62659     +else do;
MPRINT(EM_DIAGRAM):   else do;
62660     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
62661     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
62662     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62663     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
62664     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
62665     +   end;
MPRINT(EM_DIAGRAM):   end;
62666     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
62667     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
62668     +   end;
MPRINT(EM_DIAGRAM):   end;
62669     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62670     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
62671     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62672     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62673     +   end;
MPRINT(EM_DIAGRAM):   end;
62674     +end;
MPRINT(EM_DIAGRAM):   end;
62675     +
62676     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
62677     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
62678     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62679     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
62680     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
62681     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
62682     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
62683     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
62684     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62685     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62686     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62687     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62688     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62689     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62690     +end;
MPRINT(EM_DIAGRAM):   end;
62691     +else do;
MPRINT(EM_DIAGRAM):   else do;
62692     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
62693     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
62694     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62695     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
62696     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
62697     +   end;
MPRINT(EM_DIAGRAM):   end;
62698     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
62699     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
62700     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
62701     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
62702     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
62703     +   end;
MPRINT(EM_DIAGRAM):   end;
62704     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
62705     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
62706     +   end;
MPRINT(EM_DIAGRAM):   end;
62707     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
62708     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
62709     +   end;
MPRINT(EM_DIAGRAM):   end;
62710     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
62711     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
62712     +   end;
MPRINT(EM_DIAGRAM):   end;
62713     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62714     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
62715     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
62716     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
62717     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
62718     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62719     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62720     +   end;
MPRINT(EM_DIAGRAM):   end;
62721     +end;
MPRINT(EM_DIAGRAM):   end;
62722     +
62723     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
62724     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
62725     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
62726     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
62727     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
62728     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
62729     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
62730     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
62731     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
62732     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62733     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62734     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62735     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62736     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
62737     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62738     +end;
MPRINT(EM_DIAGRAM):   end;
62739     +else do;
MPRINT(EM_DIAGRAM):   else do;
62740     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
62741     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
62742     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62743     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
62744     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
62745     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
62746     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
62747     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
62748     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62749     +         end;
MPRINT(EM_DIAGRAM):   end;
62750     +         else do;
MPRINT(EM_DIAGRAM):   else do;
62751     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
62752     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
62753     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62754     +            end;
MPRINT(EM_DIAGRAM):   end;
62755     +         end;
MPRINT(EM_DIAGRAM):   end;
62756     +      end;
MPRINT(EM_DIAGRAM):   end;
62757     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62758     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
62759     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
62760     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62761     +         end;
MPRINT(EM_DIAGRAM):   end;
62762     +      end;
MPRINT(EM_DIAGRAM):   end;
62763     +   end;
MPRINT(EM_DIAGRAM):   end;
62764     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62765     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
62766     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
62767     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62768     +      end;
MPRINT(EM_DIAGRAM):   end;
62769     +      else do;
MPRINT(EM_DIAGRAM):   else do;
62770     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
62771     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
62772     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
62773     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
62774     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
62775     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
62776     +         end;
MPRINT(EM_DIAGRAM):   end;
62777     +      end;
MPRINT(EM_DIAGRAM):   end;
62778     +   end;
MPRINT(EM_DIAGRAM):   end;
62779     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
62780     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
62781     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
62782     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
62783     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
62784     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
62785     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62786     +   end;
MPRINT(EM_DIAGRAM):   end;
62787     +end;
MPRINT(EM_DIAGRAM):   end;
62788     +
62789     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62790     +*** Checking missing input Interval
62791     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
62792     +
62793     +IF NMISS(
62794     +   AcceptedCmpTotal ,
62795     +   Age ,
62796     +   Frq ,
62797     +   Income ,
62798     +   Kidhome ,
62799     +   MntFishProducts ,
62800     +   MntFruits ,
62801     +   MntGoldProds ,
62802     +   MntSweetProducts ,
62803     +   MonthsAsCustomer ,
62804     +   NumDealsPurchases ,
62805     +   NumWebVisitsMonth ,
62806     +   RFMstat ,
62807     +   RMntFrq ,
62808     +   Recency ,
62809     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
62810     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
62811     +
62812     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
62813     +END;
MPRINT(EM_DIAGRAM):   END;
62814     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62815     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
62816     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62817     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62818     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62819     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62820     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62821     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62822     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62823     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62824     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62825     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62826     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62827     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62828     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
62829     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62830     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62831     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62832     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62833     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62834     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62835     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62836     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62837     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62838     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62839     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62840     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62841     +END;
MPRINT(EM_DIAGRAM):   END;
62842     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62843     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
62844     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
62845     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
62846     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
62847     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
62848     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
62849     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
62850     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
62851     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
62852     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
62853     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
62854     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
62855     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
62856     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
62857     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
62858     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
62859     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
62860     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
62861     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
62862     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
62863     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
62864     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
62865     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
62866     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
62867     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
62868     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
62869     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
62870     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
62871     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
62872     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
62873     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
62874     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
62875     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
62876     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
62877     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
62878     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
62879     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
62880     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
62881     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
62882     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
62883     +END;
MPRINT(EM_DIAGRAM):   END;
62884     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62885     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
62886     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62887     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62888     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
62889     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62890     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62891     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
62892     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62893     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62894     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
62895     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
62896     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
62897     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
62898     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
62899     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
62900     +          +     0.07696704519183 * S_MonthsAsCustomer
62901     +          +     0.06885982009617 * S_NumDealsPurchases
62902     +          +     0.18284147478918 * S_NumWebVisitsMonth
62903     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
62904     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
62905     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
62906     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
62907     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
62908     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
62909     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
62910     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
62911     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
62912     +          +     0.19400730773464 * S_MonthsAsCustomer
62913     +          +    -1.36455521037197 * S_NumDealsPurchases
62914     +          +    -1.07068059346196 * S_NumWebVisitsMonth
62915     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
62916     +        S_RMntFrq  +     1.36066079800227 * S_Recency
62917     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
62918     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
62919     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
62920     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
62921     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
62922     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
62923     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
62924     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
62925     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
62926     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
62927     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
62928     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
62929     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
62930     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
62931     +          +     0.23432241402098 * Marital_StatusDivorced
62932     +          +    -0.46302700269027 * Marital_StatusMarried
62933     +          +      0.4032168653504 * Marital_StatusSingle
62934     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
62935     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
62936     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
62937     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
62938     +          +    -0.31347503340603 * Marital_StatusDivorced
62939     +          +    -0.20319530959178 * Marital_StatusMarried
62940     +          +     0.48298350411196 * Marital_StatusSingle
62941     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
62942     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
62943     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
62944     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
62945     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
62946     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
62947     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
62948     +END;
MPRINT(EM_DIAGRAM):   END;
62949     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62950     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
62951     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
62952     +END;
MPRINT(EM_DIAGRAM):   END;
62953     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62954     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
62955     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
62956     +
62957     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
62958     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
62959     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
62960     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
62961     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
62962     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
62963     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
62964     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
62965     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
62966     +end;
MPRINT(EM_DIAGRAM):   end;
62967     +else do;
MPRINT(EM_DIAGRAM):   else do;
62968     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
62969     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
62970     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
62971     +   end;
MPRINT(EM_DIAGRAM):   end;
62972     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
62973     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
62974     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
62975     +   end;
MPRINT(EM_DIAGRAM):   end;
62976     +   else do;
MPRINT(EM_DIAGRAM):   else do;
62977     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
62978     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
62979     +   end;
MPRINT(EM_DIAGRAM):   end;
62980     +end;
MPRINT(EM_DIAGRAM):   end;
62981     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
62982     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
62983     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
62984     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
62985     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
62986     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
62987     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
62988     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
62989     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
62990     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
62991     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
62992     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
62993     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
62994     +END;
MPRINT(EM_DIAGRAM):   END;
62995     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
62996     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
62997     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
62998     +END;
MPRINT(EM_DIAGRAM):   END;
62999     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
63000     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
63001     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
63002     +END;
MPRINT(EM_DIAGRAM):   END;
63003     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
63004     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
63005     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
63006     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
63007     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
63008     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
63009     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
63010     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63011     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
63012     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63013     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
63014     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
63015     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
63016     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
63017     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
63018     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
63019     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
63020     +END;
MPRINT(EM_DIAGRAM):   END;
63021     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63022     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
63023     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63024     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
63025     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
63026     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63027     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
63028     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63029     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
63030     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
63031     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
63032     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
63033     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63034     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
63035     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63036     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
63037     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
63038     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
63039     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63040     +* Ensmbl24: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 4 of 7;
63041     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63042     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63043     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
63044     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
63045     +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
63046     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63047     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63048     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
63049     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63050     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
63051     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
63052     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
63053     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
63054     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
63055     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
63056     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
63057     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
63058     +LENGTH _WARN_ $4
63059     +      F_DepVar  $ 12
63060     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
63061     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
63062     +
63063     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
63064     +
63065     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
63066     +
63067     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
63068     +
63069     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
63070     +
63071     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
63072     +
63073     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
63074     +
63075     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
63076     +
63077     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
63078     +
63079     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
63080     +
63081     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
63082     +
63083     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
63084     +
63085     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
63086     +
63087     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
63088     +
63089     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
63090     +
63091     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
63092     +
63093     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
63094     +
63095     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
63096     +
63097     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
63098     +
63099     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
63100     +
63101     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
63102     +
63103     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
63104     +
63105     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
63106     +
63107     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
63108     +
63109     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
63110     +
63111     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
63112     +
63113     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
63114     +
63115     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
63116     +
63117     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
63118     +
63119     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
63120     +
63121     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
63122     +
63123     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
63124     +
63125     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
63126     +
63127     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
63128     +
63129     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
63130     +
63131     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
63132     +
63133     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
63134     +
63135     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
63136     +
63137     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
63138     +
63139     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
63140     +
63141     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
63142     +
63143     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
63144     +
63145     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
63146     +
63147     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
63148     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
63149     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
63150     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
63151     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63152     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63153     +end;
MPRINT(EM_DIAGRAM):   end;
63154     +else do;
MPRINT(EM_DIAGRAM):   else do;
63155     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63156     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
63157     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63158     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63159     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
63160     +   end;
MPRINT(EM_DIAGRAM):   end;
63161     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63162     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
63163     +   end;
MPRINT(EM_DIAGRAM):   end;
63164     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63165     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
63166     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63167     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63168     +   end;
MPRINT(EM_DIAGRAM):   end;
63169     +end;
MPRINT(EM_DIAGRAM):   end;
63170     +
63171     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
63172     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
63173     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
63174     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
63175     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63176     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63177     +end;
MPRINT(EM_DIAGRAM):   end;
63178     +else do;
MPRINT(EM_DIAGRAM):   else do;
63179     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63180     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
63181     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63182     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63183     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
63184     +   end;
MPRINT(EM_DIAGRAM):   end;
63185     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63186     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
63187     +   end;
MPRINT(EM_DIAGRAM):   end;
63188     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63189     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
63190     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63191     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63192     +   end;
MPRINT(EM_DIAGRAM):   end;
63193     +end;
MPRINT(EM_DIAGRAM):   end;
63194     +
63195     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
63196     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
63197     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
63198     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
63199     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63200     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63201     +end;
MPRINT(EM_DIAGRAM):   end;
63202     +else do;
MPRINT(EM_DIAGRAM):   else do;
63203     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63204     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
63205     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63206     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63207     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
63208     +   end;
MPRINT(EM_DIAGRAM):   end;
63209     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63210     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
63211     +   end;
MPRINT(EM_DIAGRAM):   end;
63212     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63213     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
63214     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63215     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63216     +   end;
MPRINT(EM_DIAGRAM):   end;
63217     +end;
MPRINT(EM_DIAGRAM):   end;
63218     +
63219     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
63220     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
63221     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
63222     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
63223     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63224     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63225     +end;
MPRINT(EM_DIAGRAM):   end;
63226     +else do;
MPRINT(EM_DIAGRAM):   else do;
63227     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63228     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
63229     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63230     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63231     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
63232     +   end;
MPRINT(EM_DIAGRAM):   end;
63233     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63234     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
63235     +   end;
MPRINT(EM_DIAGRAM):   end;
63236     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63237     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
63238     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63239     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63240     +   end;
MPRINT(EM_DIAGRAM):   end;
63241     +end;
MPRINT(EM_DIAGRAM):   end;
63242     +
63243     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
63244     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
63245     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
63246     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
63247     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63248     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63249     +end;
MPRINT(EM_DIAGRAM):   end;
63250     +else do;
MPRINT(EM_DIAGRAM):   else do;
63251     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63252     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
63253     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63254     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63255     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
63256     +   end;
MPRINT(EM_DIAGRAM):   end;
63257     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63258     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
63259     +   end;
MPRINT(EM_DIAGRAM):   end;
63260     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63261     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
63262     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63263     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63264     +   end;
MPRINT(EM_DIAGRAM):   end;
63265     +end;
MPRINT(EM_DIAGRAM):   end;
63266     +
63267     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
63268     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
63269     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
63270     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
63271     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63272     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63273     +end;
MPRINT(EM_DIAGRAM):   end;
63274     +else do;
MPRINT(EM_DIAGRAM):   else do;
63275     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63276     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
63277     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63278     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63279     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
63280     +   end;
MPRINT(EM_DIAGRAM):   end;
63281     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63282     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
63283     +   end;
MPRINT(EM_DIAGRAM):   end;
63284     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63285     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
63286     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63287     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63288     +   end;
MPRINT(EM_DIAGRAM):   end;
63289     +end;
MPRINT(EM_DIAGRAM):   end;
63290     +
63291     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
63292     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
63293     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
63294     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
63295     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63296     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63297     +end;
MPRINT(EM_DIAGRAM):   end;
63298     +else do;
MPRINT(EM_DIAGRAM):   else do;
63299     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63300     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
63301     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63302     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
63303     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
63304     +   end;
MPRINT(EM_DIAGRAM):   end;
63305     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
63306     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
63307     +   end;
MPRINT(EM_DIAGRAM):   end;
63308     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63309     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
63310     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63311     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63312     +   end;
MPRINT(EM_DIAGRAM):   end;
63313     +end;
MPRINT(EM_DIAGRAM):   end;
63314     +
63315     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
63316     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
63317     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
63318     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
63319     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
63320     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
63321     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
63322     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
63323     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
63324     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
63325     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
63326     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
63327     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63328     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63329     +end;
MPRINT(EM_DIAGRAM):   end;
63330     +else do;
MPRINT(EM_DIAGRAM):   else do;
63331     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
63332     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
63333     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63334     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
63335     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
63336     +   end;
MPRINT(EM_DIAGRAM):   end;
63337     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
63338     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
63339     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
63340     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
63341     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
63342     +   end;
MPRINT(EM_DIAGRAM):   end;
63343     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
63344     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
63345     +   end;
MPRINT(EM_DIAGRAM):   end;
63346     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
63347     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
63348     +   end;
MPRINT(EM_DIAGRAM):   end;
63349     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
63350     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
63351     +   end;
MPRINT(EM_DIAGRAM):   end;
63352     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63353     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
63354     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
63355     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
63356     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
63357     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63358     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63359     +   end;
MPRINT(EM_DIAGRAM):   end;
63360     +end;
MPRINT(EM_DIAGRAM):   end;
63361     +
63362     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
63363     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
63364     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
63365     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
63366     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
63367     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
63368     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
63369     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
63370     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
63371     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
63372     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
63373     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
63374     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
63375     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63376     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63377     +end;
MPRINT(EM_DIAGRAM):   end;
63378     +else do;
MPRINT(EM_DIAGRAM):   else do;
63379     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
63380     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
63381     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63382     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
63383     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
63384     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
63385     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
63386     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
63387     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63388     +         end;
MPRINT(EM_DIAGRAM):   end;
63389     +         else do;
MPRINT(EM_DIAGRAM):   else do;
63390     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
63391     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
63392     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63393     +            end;
MPRINT(EM_DIAGRAM):   end;
63394     +         end;
MPRINT(EM_DIAGRAM):   end;
63395     +      end;
MPRINT(EM_DIAGRAM):   end;
63396     +      else do;
MPRINT(EM_DIAGRAM):   else do;
63397     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
63398     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
63399     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63400     +         end;
MPRINT(EM_DIAGRAM):   end;
63401     +      end;
MPRINT(EM_DIAGRAM):   end;
63402     +   end;
MPRINT(EM_DIAGRAM):   end;
63403     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63404     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
63405     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
63406     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63407     +      end;
MPRINT(EM_DIAGRAM):   end;
63408     +      else do;
MPRINT(EM_DIAGRAM):   else do;
63409     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
63410     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
63411     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
63412     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
63413     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
63414     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
63415     +         end;
MPRINT(EM_DIAGRAM):   end;
63416     +      end;
MPRINT(EM_DIAGRAM):   end;
63417     +   end;
MPRINT(EM_DIAGRAM):   end;
63418     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
63419     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
63420     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
63421     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
63422     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
63423     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63424     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63425     +   end;
MPRINT(EM_DIAGRAM):   end;
63426     +end;
MPRINT(EM_DIAGRAM):   end;
63427     +
63428     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63429     +*** Checking missing input Interval
63430     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
63431     +
63432     +IF NMISS(
63433     +   AcceptedCmpTotal ,
63434     +   Age ,
63435     +   Frq ,
63436     +   Income ,
63437     +   Kidhome ,
63438     +   MntFishProducts ,
63439     +   MntFruits ,
63440     +   MntGoldProds ,
63441     +   MntSweetProducts ,
63442     +   MonthsAsCustomer ,
63443     +   NumDealsPurchases ,
63444     +   NumWebVisitsMonth ,
63445     +   RFMstat ,
63446     +   RMntFrq ,
63447     +   Recency ,
63448     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
63449     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
63450     +
63451     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63452     +END;
MPRINT(EM_DIAGRAM):   END;
63453     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63454     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
63455     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63456     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63457     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
63458     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
63459     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
63460     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
63461     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
63462     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
63463     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
63464     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
63465     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
63466     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
63467     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
63468     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
63469     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
63470     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
63471     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
63472     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
63473     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
63474     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
63475     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
63476     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
63477     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
63478     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
63479     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
63480     +END;
MPRINT(EM_DIAGRAM):   END;
63481     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63482     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
63483     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
63484     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
63485     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
63486     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
63487     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
63488     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
63489     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
63490     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
63491     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
63492     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
63493     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
63494     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
63495     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
63496     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
63497     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
63498     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
63499     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
63500     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
63501     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
63502     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
63503     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
63504     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
63505     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
63506     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
63507     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
63508     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
63509     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
63510     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
63511     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
63512     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
63513     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
63514     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
63515     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
63516     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
63517     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
63518     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
63519     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
63520     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
63521     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
63522     +END;
MPRINT(EM_DIAGRAM):   END;
63523     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63524     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
63525     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63526     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63527     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
63528     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63529     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63530     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
63531     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63532     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63533     +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
63534     +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
63535     +        S_Income  +     0.27663215475285 * S_Kidhome
63536     +          +    -0.02861873561507 * S_MntFishProducts
63537     +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
63538     +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
63539     +          +    -0.30820227749029 * S_MonthsAsCustomer
63540     +          +    -0.64335583461867 * S_NumDealsPurchases
63541     +          +    -0.40339200335235 * S_NumWebVisitsMonth
63542     +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
63543     +        S_RMntFrq  +     0.73297917115427 * S_Recency
63544     +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
63545     +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
63546     +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
63547     +        S_Income  +     0.04677082637593 * S_Kidhome
63548     +          +    -0.26310923797495 * S_MntFishProducts
63549     +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
63550     +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
63551     +          +     0.31464974024806 * S_MonthsAsCustomer
63552     +          +    -0.51422897206707 * S_NumDealsPurchases
63553     +          +    -0.70210448968741 * S_NumWebVisitsMonth
63554     +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
63555     +        S_RMntFrq  +     1.12297422526954 * S_Recency
63556     +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
63557     +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
63558     +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
63559     +        S_Income  +    -0.76074905594112 * S_Kidhome
63560     +          +     0.28012200156756 * S_MntFishProducts
63561     +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
63562     +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
63563     +          +    -0.02209353426555 * S_MonthsAsCustomer
63564     +          +    -0.30351716506195 * S_NumDealsPurchases
63565     +          +    -0.54961975756206 * S_NumWebVisitsMonth
63566     +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
63567     +        S_RMntFrq  +     0.84276565192556 * S_Recency
63568     +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
63569     +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
63570     +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
63571     +        S_Income  +     0.68593841144377 * S_Kidhome
63572     +          +     -0.0587169446037 * S_MntFishProducts
63573     +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
63574     +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
63575     +          +    -0.17220981900732 * S_MonthsAsCustomer
63576     +          +     0.27940162953795 * S_NumDealsPurchases
63577     +          +    -0.04761461934562 * S_NumWebVisitsMonth
63578     +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
63579     +        S_RMntFrq  +     0.68962447302378 * S_Recency
63580     +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
63581     +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
63582     +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
63583     +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
63584     +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
63585     +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
63586     +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
63587     +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
63588     +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
63589     +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
63590     +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
63591     +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
63592     +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
63593     +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
63594     +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
63595     +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
63596     +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
63597     +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
63598     +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
63599     +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
63600     +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
63601     +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
63602     +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
63603     +        EducationGraduation  +    -0.09512206973791 * EducationMaster
63604     +          +     0.04284251520428 * Marital_StatusDivorced
63605     +          +    -0.08591343257218 * Marital_StatusMarried
63606     +          +     0.43667281622253 * Marital_StatusSingle
63607     +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
63608     +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
63609     +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
63610     +        EducationGraduation  +    -0.17955750532548 * EducationMaster
63611     +          +    -0.10823631131846 * Marital_StatusDivorced
63612     +          +     0.15344450170599 * Marital_StatusMarried
63613     +          +    -0.00222187507332 * Marital_StatusSingle
63614     +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
63615     +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
63616     +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
63617     +        EducationGraduation  +     0.06012880669469 * EducationMaster
63618     +          +    -0.20523044713629 * Marital_StatusDivorced
63619     +          +     0.15779331320414 * Marital_StatusMarried
63620     +          +    -0.33273914160638 * Marital_StatusSingle
63621     +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
63622     +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
63623     +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
63624     +        EducationGraduation  +      0.3018512119562 * EducationMaster
63625     +          +    -0.24973986133996 * Marital_StatusDivorced
63626     +          +     1.15862092191103 * Marital_StatusMarried
63627     +          +    -0.91451543179937 * Marital_StatusSingle
63628     +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
63629     +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
63630     +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
63631     +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
63632     +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
63633     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
63634     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
63635     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
63636     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
63637     +END;
MPRINT(EM_DIAGRAM):   END;
63638     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63639     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
63640     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
63641     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
63642     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
63643     +END;
MPRINT(EM_DIAGRAM):   END;
63644     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63645     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
63646     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63647     +
63648     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
63649     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
63650     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
63651     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
63652     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
63653     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63654     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
63655     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
63656     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
63657     +end;
MPRINT(EM_DIAGRAM):   end;
63658     +else do;
MPRINT(EM_DIAGRAM):   else do;
63659     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
63660     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
63661     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
63662     +   end;
MPRINT(EM_DIAGRAM):   end;
63663     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
63664     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
63665     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
63666     +   end;
MPRINT(EM_DIAGRAM):   end;
63667     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63668     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
63669     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
63670     +   end;
MPRINT(EM_DIAGRAM):   end;
63671     +end;
MPRINT(EM_DIAGRAM):   end;
63672     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
63673     +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
63674     +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
63675     +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
63676     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
63677     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
63678     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
63679     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
63680     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
63681     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
63682     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
63683     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
63684     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
63685     +END;
MPRINT(EM_DIAGRAM):   END;
63686     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
63687     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
63688     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
63689     +END;
MPRINT(EM_DIAGRAM):   END;
63690     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
63691     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
63692     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
63693     +END;
MPRINT(EM_DIAGRAM):   END;
63694     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
63695     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
63696     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
63697     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
63698     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
63699     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
63700     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
63701     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63702     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
63703     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
63704     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
63705     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
63706     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
63707     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
63708     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
63709     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
63710     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
63711     +END;
MPRINT(EM_DIAGRAM):   END;
63712     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63713     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
63714     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
63715     +drop
63716     +H11
63717     +H12
63718     +H13
63719     +H14
63720     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
63721     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
63722     +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
63723     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63724     +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
63725     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63726     +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
63727     +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
63728     +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
63729     +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
63730     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63731     +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
63732     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63733     +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
63734     +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
63735     +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
63736     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63737     +* Ensmbl24: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 5 of 7;
63738     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63739     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63740     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
63741     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
63742     +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
63743     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
63744     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63745     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
63746     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
63747     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
63748     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
63749     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
63750     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
63751     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
63752     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
63753     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
63754     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
63755     +LENGTH _WARN_ $4
63756     +      F_DepVar  $ 12
63757     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
63758     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
63759     +
63760     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
63761     +
63762     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
63763     +
63764     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
63765     +
63766     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
63767     +
63768     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
63769     +
63770     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
63771     +
63772     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
63773     +
63774     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
63775     +
63776     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
63777     +
63778     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
63779     +
63780     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
63781     +
63782     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
63783     +
63784     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
63785     +
63786     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
63787     +
63788     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
63789     +
63790     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
63791     +
63792     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
63793     +
63794     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
63795     +
63796     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
63797     +
63798     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
63799     +
63800     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
63801     +
63802     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
63803     +
63804     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
63805     +
63806     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
63807     +
63808     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
63809     +
63810     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
63811     +
63812     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
63813     +
63814     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
63815     +
63816     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
63817     +
63818     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
63819     +
63820     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
63821     +
63822     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
63823     +
63824     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
63825     +
63826     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
63827     +
63828     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
63829     +
63830     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
63831     +
63832     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
63833     +
63834     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
63835     +
63836     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
63837     +
63838     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
63839     +
63840     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
63841     +
63842     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
63843     +
63844     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
63845     +
63846     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
63847     +
63848     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
63849     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
63850     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
63851     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
63852     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63853     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63854     +end;
MPRINT(EM_DIAGRAM):   end;
63855     +else do;
MPRINT(EM_DIAGRAM):   else do;
63856     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63857     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
63858     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63859     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63860     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
63861     +   end;
MPRINT(EM_DIAGRAM):   end;
63862     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63863     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
63864     +   end;
MPRINT(EM_DIAGRAM):   end;
63865     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63866     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
63867     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63868     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63869     +   end;
MPRINT(EM_DIAGRAM):   end;
63870     +end;
MPRINT(EM_DIAGRAM):   end;
63871     +
63872     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
63873     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
63874     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
63875     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
63876     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63877     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63878     +end;
MPRINT(EM_DIAGRAM):   end;
63879     +else do;
MPRINT(EM_DIAGRAM):   else do;
63880     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63881     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
63882     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63883     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63884     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
63885     +   end;
MPRINT(EM_DIAGRAM):   end;
63886     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63887     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
63888     +   end;
MPRINT(EM_DIAGRAM):   end;
63889     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63890     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
63891     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63892     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63893     +   end;
MPRINT(EM_DIAGRAM):   end;
63894     +end;
MPRINT(EM_DIAGRAM):   end;
63895     +
63896     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
63897     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
63898     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
63899     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
63900     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63901     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63902     +end;
MPRINT(EM_DIAGRAM):   end;
63903     +else do;
MPRINT(EM_DIAGRAM):   else do;
63904     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63905     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
63906     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63907     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63908     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
63909     +   end;
MPRINT(EM_DIAGRAM):   end;
63910     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63911     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
63912     +   end;
MPRINT(EM_DIAGRAM):   end;
63913     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63914     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
63915     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63916     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63917     +   end;
MPRINT(EM_DIAGRAM):   end;
63918     +end;
MPRINT(EM_DIAGRAM):   end;
63919     +
63920     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
63921     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
63922     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
63923     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
63924     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63925     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63926     +end;
MPRINT(EM_DIAGRAM):   end;
63927     +else do;
MPRINT(EM_DIAGRAM):   else do;
63928     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63929     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
63930     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63931     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63932     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
63933     +   end;
MPRINT(EM_DIAGRAM):   end;
63934     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63935     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
63936     +   end;
MPRINT(EM_DIAGRAM):   end;
63937     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63938     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
63939     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63940     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63941     +   end;
MPRINT(EM_DIAGRAM):   end;
63942     +end;
MPRINT(EM_DIAGRAM):   end;
63943     +
63944     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
63945     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
63946     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
63947     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
63948     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63949     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63950     +end;
MPRINT(EM_DIAGRAM):   end;
63951     +else do;
MPRINT(EM_DIAGRAM):   else do;
63952     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63953     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
63954     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63955     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63956     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
63957     +   end;
MPRINT(EM_DIAGRAM):   end;
63958     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63959     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
63960     +   end;
MPRINT(EM_DIAGRAM):   end;
63961     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63962     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
63963     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63964     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63965     +   end;
MPRINT(EM_DIAGRAM):   end;
63966     +end;
MPRINT(EM_DIAGRAM):   end;
63967     +
63968     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
63969     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
63970     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
63971     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
63972     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63973     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63974     +end;
MPRINT(EM_DIAGRAM):   end;
63975     +else do;
MPRINT(EM_DIAGRAM):   else do;
63976     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
63977     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
63978     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
63979     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
63980     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
63981     +   end;
MPRINT(EM_DIAGRAM):   end;
63982     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
63983     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
63984     +   end;
MPRINT(EM_DIAGRAM):   end;
63985     +   else do;
MPRINT(EM_DIAGRAM):   else do;
63986     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
63987     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
63988     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63989     +   end;
MPRINT(EM_DIAGRAM):   end;
63990     +end;
MPRINT(EM_DIAGRAM):   end;
63991     +
63992     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
63993     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
63994     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
63995     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
63996     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
63997     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
63998     +end;
MPRINT(EM_DIAGRAM):   end;
63999     +else do;
MPRINT(EM_DIAGRAM):   else do;
64000     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64001     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
64002     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64003     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
64004     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
64005     +   end;
MPRINT(EM_DIAGRAM):   end;
64006     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
64007     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
64008     +   end;
MPRINT(EM_DIAGRAM):   end;
64009     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64010     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64011     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64012     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64013     +   end;
MPRINT(EM_DIAGRAM):   end;
64014     +end;
MPRINT(EM_DIAGRAM):   end;
64015     +
64016     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
64017     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
64018     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64019     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
64020     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
64021     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
64022     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
64023     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
64024     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64025     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64026     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64027     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64028     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64029     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64030     +end;
MPRINT(EM_DIAGRAM):   end;
64031     +else do;
MPRINT(EM_DIAGRAM):   else do;
64032     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
64033     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
64034     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64035     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
64036     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
64037     +   end;
MPRINT(EM_DIAGRAM):   end;
64038     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
64039     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
64040     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
64041     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
64042     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
64043     +   end;
MPRINT(EM_DIAGRAM):   end;
64044     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
64045     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
64046     +   end;
MPRINT(EM_DIAGRAM):   end;
64047     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
64048     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
64049     +   end;
MPRINT(EM_DIAGRAM):   end;
64050     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
64051     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
64052     +   end;
MPRINT(EM_DIAGRAM):   end;
64053     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64054     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64055     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64056     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64057     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64058     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64059     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64060     +   end;
MPRINT(EM_DIAGRAM):   end;
64061     +end;
MPRINT(EM_DIAGRAM):   end;
64062     +
64063     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
64064     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
64065     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
64066     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64067     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
64068     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
64069     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
64070     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
64071     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
64072     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
64073     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
64074     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
64075     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
64076     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64077     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64078     +end;
MPRINT(EM_DIAGRAM):   end;
64079     +else do;
MPRINT(EM_DIAGRAM):   else do;
64080     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
64081     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
64082     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64083     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
64084     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
64085     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
64086     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
64087     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
64088     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64089     +         end;
MPRINT(EM_DIAGRAM):   end;
64090     +         else do;
MPRINT(EM_DIAGRAM):   else do;
64091     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
64092     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
64093     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64094     +            end;
MPRINT(EM_DIAGRAM):   end;
64095     +         end;
MPRINT(EM_DIAGRAM):   end;
64096     +      end;
MPRINT(EM_DIAGRAM):   end;
64097     +      else do;
MPRINT(EM_DIAGRAM):   else do;
64098     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
64099     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
64100     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64101     +         end;
MPRINT(EM_DIAGRAM):   end;
64102     +      end;
MPRINT(EM_DIAGRAM):   end;
64103     +   end;
MPRINT(EM_DIAGRAM):   end;
64104     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64105     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
64106     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
64107     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64108     +      end;
MPRINT(EM_DIAGRAM):   end;
64109     +      else do;
MPRINT(EM_DIAGRAM):   else do;
64110     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
64111     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
64112     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
64113     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
64114     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
64115     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64116     +         end;
MPRINT(EM_DIAGRAM):   end;
64117     +      end;
MPRINT(EM_DIAGRAM):   end;
64118     +   end;
MPRINT(EM_DIAGRAM):   end;
64119     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
64120     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
64121     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
64122     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
64123     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
64124     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64125     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64126     +   end;
MPRINT(EM_DIAGRAM):   end;
64127     +end;
MPRINT(EM_DIAGRAM):   end;
64128     +
64129     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64130     +*** Checking missing input Interval
64131     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
64132     +
64133     +IF NMISS(
64134     +   AcceptedCmpTotal ,
64135     +   Age ,
64136     +   Frq ,
64137     +   Income ,
64138     +   Kidhome ,
64139     +   MntFishProducts ,
64140     +   MntFruits ,
64141     +   MntGoldProds ,
64142     +   MntSweetProducts ,
64143     +   MonthsAsCustomer ,
64144     +   NumDealsPurchases ,
64145     +   NumWebVisitsMonth ,
64146     +   RFMstat ,
64147     +   RMntFrq ,
64148     +   Recency ,
64149     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
64150     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
64151     +
64152     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64153     +END;
MPRINT(EM_DIAGRAM):   END;
64154     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64155     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
64156     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64157     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64158     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
64159     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
64160     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
64161     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
64162     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
64163     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
64164     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
64165     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
64166     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
64167     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
64168     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
64169     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
64170     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
64171     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
64172     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
64173     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
64174     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
64175     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
64176     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
64177     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
64178     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
64179     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
64180     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
64181     +END;
MPRINT(EM_DIAGRAM):   END;
64182     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64183     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
64184     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
64185     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
64186     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
64187     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
64188     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
64189     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
64190     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
64191     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
64192     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
64193     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
64194     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
64195     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
64196     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
64197     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
64198     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
64199     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
64200     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
64201     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
64202     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
64203     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
64204     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
64205     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
64206     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
64207     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
64208     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
64209     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
64210     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
64211     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
64212     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
64213     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
64214     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
64215     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
64216     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
64217     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
64218     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
64219     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
64220     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
64221     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
64222     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
64223     +END;
MPRINT(EM_DIAGRAM):   END;
64224     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64225     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
64226     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64227     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64228     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
64229     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64230     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64231     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
64232     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64233     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64234     +   H11  =    -0.50311574684963 * S_AcceptedCmpTotal  +    -0.18985055644549 *
64235     +        S_Age  +     0.44828804873659 * S_Frq  +    -0.51280008296346 *
64236     +        S_Income  +    -0.07468461691846 * S_Kidhome
64237     +          +    -0.02817334981603 * S_MntFishProducts
64238     +          +    -0.23674836972041 * S_MntFruits  +     0.09571592531833 *
64239     +        S_MntGoldProds  +    -0.09676918994417 * S_MntSweetProducts
64240     +          +     0.11832246824115 * S_MonthsAsCustomer
64241     +          +    -0.06605281991661 * S_NumDealsPurchases
64242     +          +    -0.48924564446119 * S_NumWebVisitsMonth
64243     +          +    -0.46878579854964 * S_RFMstat  +    -0.08286830724047 *
64244     +        S_RMntFrq  +     0.72493722489034 * S_Recency
64245     +          +     0.54759769648457 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.50311574684963 * S_AcceptedCmpTotal + -0.18985055644549 * S_Age 
+ 0.44828804873659 * S_Frq + -0.51280008296346 * S_Income + -0.07468461691846 * S_Kidhome + 
-0.02817334981603 * S_MntFishProducts + -0.23674836972041 * S_MntFruits + 0.09571592531833 * 
S_MntGoldProds + -0.09676918994417 * S_MntSweetProducts + 0.11832246824115 * 
S_MonthsAsCustomer + -0.06605281991661 * S_NumDealsPurchases + -0.48924564446119 * 
S_NumWebVisitsMonth + -0.46878579854964 * S_RFMstat + -0.08286830724047 * S_RMntFrq + 
0.72493722489034 * S_Recency + 0.54759769648457 * S_Teenhome ;
64246     +   H12  =     0.27433541795855 * S_AcceptedCmpTotal  +    -0.13239293741829 *
64247     +        S_Age  +       0.297440346075 * S_Frq  +     0.60301641350325 *
64248     +        S_Income  +    -0.52629295860426 * S_Kidhome
64249     +          +    -0.09281934074994 * S_MntFishProducts
64250     +          +    -0.01139552037387 * S_MntFruits  +    -0.01724648803464 *
64251     +        S_MntGoldProds  +    -0.11213003865462 * S_MntSweetProducts
64252     +          +     0.01420877288416 * S_MonthsAsCustomer
64253     +          +     0.15753030263585 * S_NumDealsPurchases
64254     +          +     0.12839062787468 * S_NumWebVisitsMonth
64255     +          +     0.09918681531437 * S_RFMstat  +     0.28128581499392 *
64256     +        S_RMntFrq  +    -0.77555854798433 * S_Recency
64257     +          +    -0.39696436898966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.27433541795855 * S_AcceptedCmpTotal + -0.13239293741829 * S_Age 
+ 0.297440346075 * S_Frq + 0.60301641350325 * S_Income + -0.52629295860426 * S_Kidhome + 
-0.09281934074994 * S_MntFishProducts + -0.01139552037387 * S_MntFruits + -0.01724648803464 * 
S_MntGoldProds + -0.11213003865462 * S_MntSweetProducts + 0.01420877288416 * 
S_MonthsAsCustomer + 0.15753030263585 * S_NumDealsPurchases + 0.12839062787468 * 
S_NumWebVisitsMonth + 0.09918681531437 * S_RFMstat + 0.28128581499392 * S_RMntFrq + 
-0.77555854798433 * S_Recency + -0.39696436898966 * S_Teenhome ;
64258     +   H13  =     0.03123358805476 * S_AcceptedCmpTotal  +    -0.11998608363847 *
64259     +        S_Age  +     0.08338729365626 * S_Frq  +     0.36926635699098 *
64260     +        S_Income  +     0.00460024601501 * S_Kidhome
64261     +          +    -0.02200799678674 * S_MntFishProducts
64262     +          +     0.17038795346592 * S_MntFruits  +    -0.01191054270128 *
64263     +        S_MntGoldProds  +     0.09461198228745 * S_MntSweetProducts
64264     +          +     0.11175639451728 * S_MonthsAsCustomer
64265     +          +    -0.14915044300238 * S_NumDealsPurchases
64266     +          +     -0.0217132622877 * S_NumWebVisitsMonth
64267     +          +     0.19209945631632 * S_RFMstat  +     0.27685327218371 *
64268     +        S_RMntFrq  +     -0.1114202547513 * S_Recency
64269     +          +    -0.07677627375613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.03123358805476 * S_AcceptedCmpTotal + -0.11998608363847 * S_Age 
+ 0.08338729365626 * S_Frq + 0.36926635699098 * S_Income + 0.00460024601501 * S_Kidhome + 
-0.02200799678674 * S_MntFishProducts + 0.17038795346592 * S_MntFruits + -0.01191054270128 * 
S_MntGoldProds + 0.09461198228745 * S_MntSweetProducts + 0.11175639451728 * S_MonthsAsCustomer 
+ -0.14915044300238 * S_NumDealsPurchases + -0.0217132622877 * S_NumWebVisitsMonth + 
0.19209945631632 * S_RFMstat + 0.27685327218371 * S_RMntFrq + -0.1114202547513 * S_Recency + 
-0.07677627375613 * S_Teenhome ;
64270     +   H14  =      -0.510052563552 * S_AcceptedCmpTotal  +    -0.12652051241051 *
64271     +        S_Age  +    -0.42250950524778 * S_Frq  +    -0.66291360306733 *
64272     +        S_Income  +    -0.50120074528145 * S_Kidhome
64273     +          +     0.44715945861433 * S_MntFishProducts
64274     +          +     0.23552533999892 * S_MntFruits  +    -0.60812570135419 *
64275     +        S_MntGoldProds  +    -0.29436997886251 * S_MntSweetProducts
64276     +          +    -0.16226459240838 * S_MonthsAsCustomer
64277     +          +    -0.66300674579813 * S_NumDealsPurchases
64278     +          +    -0.46113723081205 * S_NumWebVisitsMonth
64279     +          +    -0.28741955047351 * S_RFMstat  +    -0.51342973736897 *
64280     +        S_RMntFrq  +     0.32948062104596 * S_Recency
64281     +          +     0.04630647814801 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.510052563552 * S_AcceptedCmpTotal + -0.12652051241051 * S_Age + 
-0.42250950524778 * S_Frq + -0.66291360306733 * S_Income + -0.50120074528145 * S_Kidhome + 
0.44715945861433 * S_MntFishProducts + 0.23552533999892 * S_MntFruits + -0.60812570135419 * 
S_MntGoldProds + -0.29436997886251 * S_MntSweetProducts + -0.16226459240838 * 
S_MonthsAsCustomer + -0.66300674579813 * S_NumDealsPurchases + -0.46113723081205 * 
S_NumWebVisitsMonth + -0.28741955047351 * S_RFMstat + -0.51342973736897 * S_RMntFrq + 
0.32948062104596 * S_Recency + 0.04630647814801 * S_Teenhome ;
64282     +   H15  =    -0.05552489181258 * S_AcceptedCmpTotal  +      0.3358097664399 *
64283     +        S_Age  +     0.99860330572057 * S_Frq  +     0.33672529961967 *
64284     +        S_Income  +     0.16969714205994 * S_Kidhome
64285     +          +     0.04976308170854 * S_MntFishProducts
64286     +          +     0.17074705999537 * S_MntFruits  +    -0.14669916972196 *
64287     +        S_MntGoldProds  +    -0.09562051744533 * S_MntSweetProducts
64288     +          +     0.17484703075203 * S_MonthsAsCustomer
64289     +          +    -0.55173591551358 * S_NumDealsPurchases
64290     +          +    -0.43823357997032 * S_NumWebVisitsMonth
64291     +          +     0.35315919586696 * S_RFMstat  +    -0.19785503093343 *
64292     +        S_RMntFrq  +     0.71670167585868 * S_Recency
64293     +          +    -0.28983189748238 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.05552489181258 * S_AcceptedCmpTotal + 0.3358097664399 * S_Age + 
0.99860330572057 * S_Frq + 0.33672529961967 * S_Income + 0.16969714205994 * S_Kidhome + 
0.04976308170854 * S_MntFishProducts + 0.17074705999537 * S_MntFruits + -0.14669916972196 * 
S_MntGoldProds + -0.09562051744533 * S_MntSweetProducts + 0.17484703075203 * 
S_MonthsAsCustomer + -0.55173591551358 * S_NumDealsPurchases + -0.43823357997032 * 
S_NumWebVisitsMonth + 0.35315919586696 * S_RFMstat + -0.19785503093343 * S_RMntFrq + 
0.71670167585868 * S_Recency + -0.28983189748238 * S_Teenhome ;
64294     +   H16  =     0.13586107601616 * S_AcceptedCmpTotal  +    -0.03004972131524 *
64295     +        S_Age  +     0.34607777972893 * S_Frq  +     0.04594045147698 *
64296     +        S_Income  +    -0.02355089102951 * S_Kidhome
64297     +          +     0.17666646340328 * S_MntFishProducts
64298     +          +    -0.42460885844972 * S_MntFruits  +      0.1419729562767 *
64299     +        S_MntGoldProds  +    -0.37586377717812 * S_MntSweetProducts
64300     +          +     0.13355805650034 * S_MonthsAsCustomer
64301     +          +     0.14924024487443 * S_NumDealsPurchases
64302     +          +     0.34848278731511 * S_NumWebVisitsMonth
64303     +          +     0.19641659129802 * S_RFMstat  +    -0.04454828782133 *
64304     +        S_RMntFrq  +    -0.80210797166772 * S_Recency
64305     +          +    -0.42106674037771 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.13586107601616 * S_AcceptedCmpTotal + -0.03004972131524 * S_Age 
+ 0.34607777972893 * S_Frq + 0.04594045147698 * S_Income + -0.02355089102951 * S_Kidhome + 
0.17666646340328 * S_MntFishProducts + -0.42460885844972 * S_MntFruits + 0.1419729562767 * 
S_MntGoldProds + -0.37586377717812 * S_MntSweetProducts + 0.13355805650034 * 
S_MonthsAsCustomer + 0.14924024487443 * S_NumDealsPurchases + 0.34848278731511 * 
S_NumWebVisitsMonth + 0.19641659129802 * S_RFMstat + -0.04454828782133 * S_RMntFrq + 
-0.80210797166772 * S_Recency + -0.42106674037771 * S_Teenhome ;
64306     +   H11  = H11  +     0.23614129020735 * AcceptedCmp10
64307     +          +    -0.02084878775169 * AcceptedCmp20  +     0.37466381839371 *
64308     +        AcceptedCmp30  +    -0.73407018983175 * AcceptedCmp40
64309     +          +     0.56003163460043 * AcceptedCmp50  +      0.2232704545414 *
64310     +        Complain0  +    -0.47480864689786 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23614129020735 * AcceptedCmp10 + -0.02084878775169 * 
AcceptedCmp20 + 0.37466381839371 * AcceptedCmp30 + -0.73407018983175 * AcceptedCmp40 + 
0.56003163460043 * AcceptedCmp50 + 0.2232704545414 * Complain0 + -0.47480864689786 * 
HigherEducationBinary0 ;
64311     +   H12  = H12  +    -0.27353744753102 * AcceptedCmp10
64312     +          +    -0.28444143977421 * AcceptedCmp20  +    -0.31024205224044 *
64313     +        AcceptedCmp30  +     -0.3066557522304 * AcceptedCmp40
64314     +          +      0.0549579852636 * AcceptedCmp50  +    -0.14741752806404 *
64315     +        Complain0  +     0.28934485954948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27353744753102 * AcceptedCmp10 + -0.28444143977421 * 
AcceptedCmp20 + -0.31024205224044 * AcceptedCmp30 + -0.3066557522304 * AcceptedCmp40 + 
0.0549579852636 * AcceptedCmp50 + -0.14741752806404 * Complain0 + 0.28934485954948 * 
HigherEducationBinary0 ;
64316     +   H13  = H13  +    -0.04693289193242 * AcceptedCmp10
64317     +          +     0.14083843787444 * AcceptedCmp20  +     0.35339306333755 *
64318     +        AcceptedCmp30  +     0.18353806616447 * AcceptedCmp40
64319     +          +      0.1789056537211 * AcceptedCmp50  +     -0.0778376167893 *
64320     +        Complain0  +    -0.42804187853556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.04693289193242 * AcceptedCmp10 + 0.14083843787444 * 
AcceptedCmp20 + 0.35339306333755 * AcceptedCmp30 + 0.18353806616447 * AcceptedCmp40 + 
0.1789056537211 * AcceptedCmp50 + -0.0778376167893 * Complain0 + -0.42804187853556 * 
HigherEducationBinary0 ;
64321     +   H14  = H14  +     -0.1827583424217 * AcceptedCmp10
64322     +          +     -0.1489832073407 * AcceptedCmp20  +     0.19258598777521 *
64323     +        AcceptedCmp30  +    -0.09050532815681 * AcceptedCmp40
64324     +          +     0.31883627486144 * AcceptedCmp50  +    -0.45377259681397 *
64325     +        Complain0  +     0.15391344192243 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.1827583424217 * AcceptedCmp10 + -0.1489832073407 * 
AcceptedCmp20 + 0.19258598777521 * AcceptedCmp30 + -0.09050532815681 * AcceptedCmp40 + 
0.31883627486144 * AcceptedCmp50 + -0.45377259681397 * Complain0 + 0.15391344192243 * 
HigherEducationBinary0 ;
64326     +   H15  = H15  +     0.27865852917942 * AcceptedCmp10
64327     +          +       0.138287927284 * AcceptedCmp20  +     0.16317472998408 *
64328     +        AcceptedCmp30  +    -0.05372991123771 * AcceptedCmp40
64329     +          +     0.10581002090735 * AcceptedCmp50  +     -0.1352393114395 *
64330     +        Complain0  +    -0.01276168923951 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.27865852917942 * AcceptedCmp10 + 0.138287927284 * 
AcceptedCmp20 + 0.16317472998408 * AcceptedCmp30 + -0.05372991123771 * AcceptedCmp40 + 
0.10581002090735 * AcceptedCmp50 + -0.1352393114395 * Complain0 + -0.01276168923951 * 
HigherEducationBinary0 ;
64331     +   H16  = H16  +     0.54923092188785 * AcceptedCmp10
64332     +          +     0.06197589967314 * AcceptedCmp20  +    -0.16384237649268 *
64333     +        AcceptedCmp30  +     0.19164251659143 * AcceptedCmp40
64334     +          +     -0.0276972319359 * AcceptedCmp50  +     0.24239824406043 *
64335     +        Complain0  +    -0.10846507318888 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.54923092188785 * AcceptedCmp10 + 0.06197589967314 * 
AcceptedCmp20 + -0.16384237649268 * AcceptedCmp30 + 0.19164251659143 * AcceptedCmp40 + 
-0.0276972319359 * AcceptedCmp50 + 0.24239824406043 * Complain0 + -0.10846507318888 * 
HigherEducationBinary0 ;
64336     +   H11  = H11  +     0.04065157802519 * Education2n_Cycle
64337     +          +     0.07405354529938 * EducationBasic  +    -0.27041205259916 *
64338     +        EducationGraduation  +     0.19305680604676 * EducationMaster
64339     +          +    -0.26816495704747 * Marital_StatusDivorced
64340     +          +     0.29673114151649 * Marital_StatusMarried
64341     +          +    -0.41626876543099 * Marital_StatusSingle
64342     +          +     0.09243411924301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04065157802519 * Education2n_Cycle + 0.07405354529938 * 
EducationBasic + -0.27041205259916 * EducationGraduation + 0.19305680604676 * EducationMaster 
+ -0.26816495704747 * Marital_StatusDivorced + 0.29673114151649 * Marital_StatusMarried + 
-0.41626876543099 * Marital_StatusSingle + 0.09243411924301 * Marital_StatusTogether ;
64343     +   H12  = H12  +     0.01524024349677 * Education2n_Cycle
64344     +          +     0.15070908916981 * EducationBasic  +     0.08422316601088 *
64345     +        EducationGraduation  +     -0.1896291301388 * EducationMaster
64346     +          +     0.11744127787391 * Marital_StatusDivorced
64347     +          +    -0.63703361207291 * Marital_StatusMarried
64348     +          +     0.57071735977739 * Marital_StatusSingle
64349     +          +    -0.68611342778218 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01524024349677 * Education2n_Cycle + 0.15070908916981 * 
EducationBasic + 0.08422316601088 * EducationGraduation + -0.1896291301388 * EducationMaster + 
0.11744127787391 * Marital_StatusDivorced + -0.63703361207291 * Marital_StatusMarried + 
0.57071735977739 * Marital_StatusSingle + -0.68611342778218 * Marital_StatusTogether ;
64350     +   H13  = H13  +     0.09605604995794 * Education2n_Cycle
64351     +          +    -0.04349642322783 * EducationBasic  +    -0.11196808839685 *
64352     +        EducationGraduation  +    -0.01261925630364 * EducationMaster
64353     +          +     -0.1701911327485 * Marital_StatusDivorced
64354     +          +     0.22770672854155 * Marital_StatusMarried
64355     +          +    -0.00691671702288 * Marital_StatusSingle
64356     +          +       0.236686912143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09605604995794 * Education2n_Cycle + -0.04349642322783 * 
EducationBasic + -0.11196808839685 * EducationGraduation + -0.01261925630364 * EducationMaster 
+ -0.1701911327485 * Marital_StatusDivorced + 0.22770672854155 * Marital_StatusMarried + 
-0.00691671702288 * Marital_StatusSingle + 0.236686912143 * Marital_StatusTogether ;
64357     +   H14  = H14  +     0.10857873061564 * Education2n_Cycle
64358     +          +     0.16814453951395 * EducationBasic  +    -0.34874327957426 *
64359     +        EducationGraduation  +    -0.25193270521624 * EducationMaster
64360     +          +    -0.15403542879027 * Marital_StatusDivorced
64361     +          +     0.02652360752468 * Marital_StatusMarried
64362     +          +    -0.10723298292119 * Marital_StatusSingle
64363     +          +     0.11548543150405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.10857873061564 * Education2n_Cycle + 0.16814453951395 * 
EducationBasic + -0.34874327957426 * EducationGraduation + -0.25193270521624 * EducationMaster 
+ -0.15403542879027 * Marital_StatusDivorced + 0.02652360752468 * Marital_StatusMarried + 
-0.10723298292119 * Marital_StatusSingle + 0.11548543150405 * Marital_StatusTogether ;
64364     +   H15  = H15  +     0.15880112810083 * Education2n_Cycle
64365     +          +     0.24466813535709 * EducationBasic  +    -0.03905452635368 *
64366     +        EducationGraduation  +    -0.24152136481937 * EducationMaster
64367     +          +    -0.00204417192532 * Marital_StatusDivorced
64368     +          +    -0.16973417192262 * Marital_StatusMarried
64369     +          +     0.23027366297507 * Marital_StatusSingle
64370     +          +     0.08101453661219 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.15880112810083 * Education2n_Cycle + 0.24466813535709 * 
EducationBasic + -0.03905452635368 * EducationGraduation + -0.24152136481937 * EducationMaster 
+ -0.00204417192532 * Marital_StatusDivorced + -0.16973417192262 * Marital_StatusMarried + 
0.23027366297507 * Marital_StatusSingle + 0.08101453661219 * Marital_StatusTogether ;
64371     +   H16  = H16  +     0.06080074855433 * Education2n_Cycle
64372     +          +     0.05712541606796 * EducationBasic  +     0.08565135130429 *
64373     +        EducationGraduation  +    -0.35693831321015 * EducationMaster
64374     +          +     0.23360275712164 * Marital_StatusDivorced
64375     +          +    -0.12276379115508 * Marital_StatusMarried
64376     +          +     0.25482197877469 * Marital_StatusSingle
64377     +          +    -0.38122499701658 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06080074855433 * Education2n_Cycle + 0.05712541606796 * 
EducationBasic + 0.08565135130429 * EducationGraduation + -0.35693831321015 * EducationMaster 
+ 0.23360275712164 * Marital_StatusDivorced + -0.12276379115508 * Marital_StatusMarried + 
0.25482197877469 * Marital_StatusSingle + -0.38122499701658 * Marital_StatusTogether ;
64378     +   H11  =    -1.45785613717334 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.45785613717334 + H11 ;
64379     +   H12  =    -1.39199534011753 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.39199534011753 + H12 ;
64380     +   H13  =     2.43348807391253 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.43348807391253 + H13 ;
64381     +   H14  =    -0.82674437249292 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.82674437249292 + H14 ;
64382     +   H15  =     1.84262829639962 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.84262829639962 + H15 ;
64383     +   H16  =     1.40892711992493 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.40892711992493 + H16 ;
64384     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
64385     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
64386     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
64387     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
64388     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
64389     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
64390     +END;
MPRINT(EM_DIAGRAM):   END;
64391     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64392     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
64393     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
64394     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
64395     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
64396     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
64397     +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
64398     +END;
MPRINT(EM_DIAGRAM):   END;
64399     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64400     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
64401     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64402     +
64403     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
64404     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
64405     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
64406     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
64407     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
64408     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64409     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
64410     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
64411     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
64412     +end;
MPRINT(EM_DIAGRAM):   end;
64413     +else do;
MPRINT(EM_DIAGRAM):   else do;
64414     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
64415     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
64416     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
64417     +   end;
MPRINT(EM_DIAGRAM):   end;
64418     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
64419     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
64420     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
64421     +   end;
MPRINT(EM_DIAGRAM):   end;
64422     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64423     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
64424     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
64425     +   end;
MPRINT(EM_DIAGRAM):   end;
64426     +end;
MPRINT(EM_DIAGRAM):   end;
64427     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64428     +   P_DepVar1  =    -2.98548396417337 * H11  +     3.55440982243177 * H12
64429     +          +    -1.98442501061115 * H13  +    -2.67879549563082 * H14
64430     +          +    -2.68634609959794 * H15  +     3.13238014605319 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.98548396417337 * H11 + 3.55440982243177 * H12 + 
-1.98442501061115 * H13 + -2.67879549563082 * H14 + -2.68634609959794 * H15 + 3.13238014605319 
* H16 ;
64431     +   P_DepVar1  =    -2.49443575387204 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49443575387204 + P_DepVar1 ;
64432     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
64433     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
64434     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
64435     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
64436     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
64437     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
64438     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
64439     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
64440     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
64441     +END;
MPRINT(EM_DIAGRAM):   END;
64442     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64443     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
64444     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
64445     +END;
MPRINT(EM_DIAGRAM):   END;
64446     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
64447     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
64448     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
64449     +END;
MPRINT(EM_DIAGRAM):   END;
64450     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
64451     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
64452     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
64453     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
64454     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
64455     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
64456     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
64457     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64458     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
64459     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64460     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
64461     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
64462     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
64463     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
64464     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
64465     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
64466     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
64467     +END;
MPRINT(EM_DIAGRAM):   END;
64468     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
64469     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
64470     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
64471     +drop
64472     +H11
64473     +H12
64474     +H13
64475     +H14
64476     +H15
64477     +H16
64478     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
64479     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
64480     +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
64481     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64482     +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
64483     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64484     +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
64485     +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
64486     +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
64487     +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
64488     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64489     +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
64490     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64491     +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
64492     +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
64493     +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
64494     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64495     +* Ensmbl24: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 6 of 7;
64496     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64497     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64498     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
64499     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
64500     +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
64501     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
64502     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
64503     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
64504     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
64505     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
64506     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
64507     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
64508     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
64509     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
64510     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
64511     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
64512     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
64513     +LENGTH _WARN_ $4
64514     +      F_DepVar  $ 12
64515     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
64516     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
64517     +
64518     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
64519     +
64520     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
64521     +
64522     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
64523     +
64524     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
64525     +
64526     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
64527     +
64528     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
64529     +
64530     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
64531     +
64532     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
64533     +
64534     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
64535     +
64536     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
64537     +
64538     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
64539     +
64540     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
64541     +
64542     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
64543     +
64544     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
64545     +
64546     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
64547     +
64548     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
64549     +
64550     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
64551     +
64552     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
64553     +
64554     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
64555     +
64556     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
64557     +
64558     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
64559     +
64560     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
64561     +
64562     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
64563     +
64564     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
64565     +
64566     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
64567     +
64568     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
64569     +
64570     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
64571     +
64572     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
64573     +
64574     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
64575     +
64576     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
64577     +
64578     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
64579     +
64580     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
64581     +
64582     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
64583     +
64584     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
64585     +
64586     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
64587     +
64588     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
64589     +
64590     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
64591     +
64592     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
64593     +
64594     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
64595     +
64596     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
64597     +
64598     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
64599     +
64600     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
64601     +
64602     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
64603     +
64604     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
64605     +
64606     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
64607     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
64608     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
64609     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
64610     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64611     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64612     +end;
MPRINT(EM_DIAGRAM):   end;
64613     +else do;
MPRINT(EM_DIAGRAM):   else do;
64614     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64615     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
64616     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64617     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64618     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
64619     +   end;
MPRINT(EM_DIAGRAM):   end;
64620     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64621     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
64622     +   end;
MPRINT(EM_DIAGRAM):   end;
64623     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64624     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
64625     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64626     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64627     +   end;
MPRINT(EM_DIAGRAM):   end;
64628     +end;
MPRINT(EM_DIAGRAM):   end;
64629     +
64630     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
64631     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
64632     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
64633     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
64634     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64635     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64636     +end;
MPRINT(EM_DIAGRAM):   end;
64637     +else do;
MPRINT(EM_DIAGRAM):   else do;
64638     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64639     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
64640     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64641     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64642     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
64643     +   end;
MPRINT(EM_DIAGRAM):   end;
64644     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64645     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
64646     +   end;
MPRINT(EM_DIAGRAM):   end;
64647     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64648     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
64649     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64650     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64651     +   end;
MPRINT(EM_DIAGRAM):   end;
64652     +end;
MPRINT(EM_DIAGRAM):   end;
64653     +
64654     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
64655     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
64656     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
64657     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
64658     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64659     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64660     +end;
MPRINT(EM_DIAGRAM):   end;
64661     +else do;
MPRINT(EM_DIAGRAM):   else do;
64662     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64663     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
64664     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64665     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64666     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
64667     +   end;
MPRINT(EM_DIAGRAM):   end;
64668     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64669     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
64670     +   end;
MPRINT(EM_DIAGRAM):   end;
64671     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64672     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
64673     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64674     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64675     +   end;
MPRINT(EM_DIAGRAM):   end;
64676     +end;
MPRINT(EM_DIAGRAM):   end;
64677     +
64678     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
64679     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
64680     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
64681     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
64682     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64683     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64684     +end;
MPRINT(EM_DIAGRAM):   end;
64685     +else do;
MPRINT(EM_DIAGRAM):   else do;
64686     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64687     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
64688     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64689     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64690     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
64691     +   end;
MPRINT(EM_DIAGRAM):   end;
64692     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64693     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
64694     +   end;
MPRINT(EM_DIAGRAM):   end;
64695     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64696     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
64697     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64698     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64699     +   end;
MPRINT(EM_DIAGRAM):   end;
64700     +end;
MPRINT(EM_DIAGRAM):   end;
64701     +
64702     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
64703     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
64704     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
64705     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
64706     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64707     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64708     +end;
MPRINT(EM_DIAGRAM):   end;
64709     +else do;
MPRINT(EM_DIAGRAM):   else do;
64710     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64711     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
64712     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64713     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64714     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
64715     +   end;
MPRINT(EM_DIAGRAM):   end;
64716     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64717     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
64718     +   end;
MPRINT(EM_DIAGRAM):   end;
64719     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64720     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
64721     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64722     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64723     +   end;
MPRINT(EM_DIAGRAM):   end;
64724     +end;
MPRINT(EM_DIAGRAM):   end;
64725     +
64726     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
64727     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
64728     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
64729     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
64730     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64731     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64732     +end;
MPRINT(EM_DIAGRAM):   end;
64733     +else do;
MPRINT(EM_DIAGRAM):   else do;
64734     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64735     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
64736     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64737     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
64738     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
64739     +   end;
MPRINT(EM_DIAGRAM):   end;
64740     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
64741     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
64742     +   end;
MPRINT(EM_DIAGRAM):   end;
64743     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64744     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
64745     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64746     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64747     +   end;
MPRINT(EM_DIAGRAM):   end;
64748     +end;
MPRINT(EM_DIAGRAM):   end;
64749     +
64750     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
64751     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
64752     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
64753     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64754     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64755     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64756     +end;
MPRINT(EM_DIAGRAM):   end;
64757     +else do;
MPRINT(EM_DIAGRAM):   else do;
64758     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
64759     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
64760     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64761     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
64762     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
64763     +   end;
MPRINT(EM_DIAGRAM):   end;
64764     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
64765     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
64766     +   end;
MPRINT(EM_DIAGRAM):   end;
64767     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64768     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
64769     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64770     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64771     +   end;
MPRINT(EM_DIAGRAM):   end;
64772     +end;
MPRINT(EM_DIAGRAM):   end;
64773     +
64774     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
64775     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
64776     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64777     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
64778     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
64779     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
64780     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
64781     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
64782     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64783     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64784     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64785     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64786     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64787     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64788     +end;
MPRINT(EM_DIAGRAM):   end;
64789     +else do;
MPRINT(EM_DIAGRAM):   else do;
64790     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
64791     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
64792     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64793     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
64794     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
64795     +   end;
MPRINT(EM_DIAGRAM):   end;
64796     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
64797     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
64798     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
64799     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
64800     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
64801     +   end;
MPRINT(EM_DIAGRAM):   end;
64802     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
64803     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
64804     +   end;
MPRINT(EM_DIAGRAM):   end;
64805     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
64806     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
64807     +   end;
MPRINT(EM_DIAGRAM):   end;
64808     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
64809     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
64810     +   end;
MPRINT(EM_DIAGRAM):   end;
64811     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64812     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
64813     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
64814     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
64815     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
64816     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64817     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64818     +   end;
MPRINT(EM_DIAGRAM):   end;
64819     +end;
MPRINT(EM_DIAGRAM):   end;
64820     +
64821     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
64822     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
64823     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
64824     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
64825     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
64826     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
64827     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
64828     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
64829     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
64830     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
64831     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
64832     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
64833     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
64834     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
64835     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64836     +end;
MPRINT(EM_DIAGRAM):   end;
64837     +else do;
MPRINT(EM_DIAGRAM):   else do;
64838     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
64839     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
64840     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
64841     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
64842     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
64843     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
64844     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
64845     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
64846     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64847     +         end;
MPRINT(EM_DIAGRAM):   end;
64848     +         else do;
MPRINT(EM_DIAGRAM):   else do;
64849     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
64850     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
64851     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64852     +            end;
MPRINT(EM_DIAGRAM):   end;
64853     +         end;
MPRINT(EM_DIAGRAM):   end;
64854     +      end;
MPRINT(EM_DIAGRAM):   end;
64855     +      else do;
MPRINT(EM_DIAGRAM):   else do;
64856     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
64857     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
64858     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64859     +         end;
MPRINT(EM_DIAGRAM):   end;
64860     +      end;
MPRINT(EM_DIAGRAM):   end;
64861     +   end;
MPRINT(EM_DIAGRAM):   end;
64862     +   else do;
MPRINT(EM_DIAGRAM):   else do;
64863     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
64864     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
64865     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64866     +      end;
MPRINT(EM_DIAGRAM):   end;
64867     +      else do;
MPRINT(EM_DIAGRAM):   else do;
64868     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
64869     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
64870     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
64871     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
64872     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
64873     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
64874     +         end;
MPRINT(EM_DIAGRAM):   end;
64875     +      end;
MPRINT(EM_DIAGRAM):   end;
64876     +   end;
MPRINT(EM_DIAGRAM):   end;
64877     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
64878     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
64879     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
64880     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
64881     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
64882     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
64883     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64884     +   end;
MPRINT(EM_DIAGRAM):   end;
64885     +end;
MPRINT(EM_DIAGRAM):   end;
64886     +
64887     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64888     +*** Checking missing input Interval
64889     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
64890     +
64891     +IF NMISS(
64892     +   AcceptedCmpTotal ,
64893     +   Age ,
64894     +   Frq ,
64895     +   Income ,
64896     +   Kidhome ,
64897     +   MntFishProducts ,
64898     +   MntFruits ,
64899     +   MntGoldProds ,
64900     +   MntSweetProducts ,
64901     +   MonthsAsCustomer ,
64902     +   NumDealsPurchases ,
64903     +   NumWebVisitsMonth ,
64904     +   RFMstat ,
64905     +   RMntFrq ,
64906     +   Recency ,
64907     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
64908     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
64909     +
64910     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
64911     +END;
MPRINT(EM_DIAGRAM):   END;
64912     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64913     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
64914     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64915     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64916     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
64917     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
64918     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
64919     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
64920     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
64921     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
64922     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
64923     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
64924     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
64925     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
64926     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
64927     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
64928     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
64929     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
64930     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
64931     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
64932     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
64933     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
64934     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
64935     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
64936     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
64937     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
64938     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
64939     +END;
MPRINT(EM_DIAGRAM):   END;
64940     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
64941     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
64942     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
64943     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
64944     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
64945     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
64946     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
64947     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
64948     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
64949     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
64950     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
64951     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
64952     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
64953     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
64954     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
64955     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
64956     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
64957     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
64958     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
64959     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
64960     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
64961     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
64962     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
64963     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
64964     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
64965     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
64966     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
64967     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
64968     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
64969     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
64970     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
64971     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
64972     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
64973     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
64974     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
64975     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
64976     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
64977     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
64978     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
64979     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
64980     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
64981     +END;
MPRINT(EM_DIAGRAM):   END;
64982     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64983     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
64984     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64985     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64986     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
64987     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64988     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64989     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
64990     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
64991     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
64992     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
64993     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
64994     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
64995     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
64996     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
64997     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
64998     +          +    -0.01191239814261 * S_MonthsAsCustomer
64999     +          +      -0.307259983666 * S_NumDealsPurchases
65000     +          +    -0.23972300101674 * S_NumWebVisitsMonth
65001     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
65002     +        S_RMntFrq  +     0.32671320165482 * S_Recency
65003     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
65004     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
65005     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
65006     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
65007     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
65008     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
65009     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
65010     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
65011     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
65012     +          +     -0.0692762335753 * Marital_StatusDivorced
65013     +          +     0.02472293911071 * Marital_StatusMarried
65014     +          +     0.04038393550437 * Marital_StatusSingle
65015     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
65016     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
65017     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
65018     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
65019     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
65020     +END;
MPRINT(EM_DIAGRAM):   END;
65021     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65022     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
65023     +END;
MPRINT(EM_DIAGRAM):   END;
65024     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65025     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
65026     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65027     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65028     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
65029     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
65030     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
65031     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
65032     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
65033     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
65034     +          +     0.14524334187971 * S_MonthsAsCustomer
65035     +          +    -0.58464031025411 * S_NumDealsPurchases
65036     +          +    -0.10768856151333 * S_NumWebVisitsMonth
65037     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
65038     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
65039     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
65040     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
65041     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
65042     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
65043     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
65044     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
65045     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
65046     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
65047     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
65048     +          +     0.07007941100006 * Marital_StatusDivorced
65049     +          +     -0.7850554528889 * Marital_StatusMarried
65050     +          +     1.17661634109847 * Marital_StatusSingle
65051     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
65052     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
65053     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
65054     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
65055     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
65056     +END;
MPRINT(EM_DIAGRAM):   END;
65057     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65058     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
65059     +END;
MPRINT(EM_DIAGRAM):   END;
65060     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65061     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
65062     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65063     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65064     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
65065     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
65066     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
65067     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
65068     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
65069     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
65070     +          +    -2.17154324602167 * S_MonthsAsCustomer
65071     +          +    -1.39930460918007 * S_NumDealsPurchases
65072     +          +    -0.16044576482901 * S_NumWebVisitsMonth
65073     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
65074     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
65075     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
65076     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
65077     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
65078     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
65079     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
65080     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
65081     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
65082     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
65083     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
65084     +          +     0.83271778325587 * Marital_StatusDivorced
65085     +          +     0.79137899511518 * Marital_StatusMarried
65086     +          +    -0.51320080030576 * Marital_StatusSingle
65087     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
65088     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
65089     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
65090     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
65091     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
65092     +END;
MPRINT(EM_DIAGRAM):   END;
65093     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65094     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
65095     +END;
MPRINT(EM_DIAGRAM):   END;
65096     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65097     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
65098     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65099     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65100     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
65101     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
65102     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
65103     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
65104     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
65105     +END;
MPRINT(EM_DIAGRAM):   END;
65106     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65107     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
65108     +END;
MPRINT(EM_DIAGRAM):   END;
65109     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65110     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
65111     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65112     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65113     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
65114     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
65115     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
65116     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
65117     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
65118     +END;
MPRINT(EM_DIAGRAM):   END;
65119     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65120     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
65121     +END;
MPRINT(EM_DIAGRAM):   END;
65122     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65123     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
65124     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65125     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65126     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
65127     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
65128     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
65129     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
65130     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
65131     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
65132     +END;
MPRINT(EM_DIAGRAM):   END;
65133     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65134     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
65135     +END;
MPRINT(EM_DIAGRAM):   END;
65136     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65137     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
65138     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65139     +
65140     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
65141     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
65142     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
65143     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
65144     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
65145     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65146     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
65147     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65148     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65149     +end;
MPRINT(EM_DIAGRAM):   end;
65150     +else do;
MPRINT(EM_DIAGRAM):   else do;
65151     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
65152     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
65153     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
65154     +   end;
MPRINT(EM_DIAGRAM):   end;
65155     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
65156     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
65157     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
65158     +   end;
MPRINT(EM_DIAGRAM):   end;
65159     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65160     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65161     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65162     +   end;
MPRINT(EM_DIAGRAM):   end;
65163     +end;
MPRINT(EM_DIAGRAM):   end;
65164     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65165     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
65166     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
65167     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
65168     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
65169     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
65170     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
65171     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
65172     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
65173     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
65174     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
65175     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
65176     +END;
MPRINT(EM_DIAGRAM):   END;
65177     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65178     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
65179     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
65180     +END;
MPRINT(EM_DIAGRAM):   END;
65181     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
65182     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
65183     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
65184     +END;
MPRINT(EM_DIAGRAM):   END;
65185     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
65186     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
65187     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
65188     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
65189     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
65190     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
65191     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
65192     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65193     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
65194     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65195     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
65196     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
65197     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
65198     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
65199     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
65200     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
65201     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
65202     +END;
MPRINT(EM_DIAGRAM):   END;
65203     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65204     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
65205     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65206     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
65207     +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
65208     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65209     +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
65210     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65211     +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
65212     +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
65213     +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
65214     +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
65215     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65216     +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
65217     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65218     +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
65219     +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
65220     +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
65221     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65222     +* Ensmbl24: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 7 of 7;
65223     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65224     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65225     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
65226     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
65227     +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
65228     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65229     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
65230     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
65231     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
65232     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
65233     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
65234     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
65235     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
65236     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
65237     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
65238     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
65239     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
65240     +LENGTH _WARN_ $4
65241     +      F_DepVar  $ 12
65242     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
65243     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
65244     +
65245     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
65246     +
65247     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
65248     +
65249     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
65250     +
65251     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
65252     +
65253     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
65254     +
65255     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
65256     +
65257     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
65258     +
65259     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
65260     +
65261     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
65262     +
65263     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
65264     +
65265     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
65266     +
65267     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
65268     +
65269     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
65270     +
65271     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
65272     +
65273     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
65274     +
65275     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
65276     +
65277     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
65278     +
65279     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
65280     +
65281     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
65282     +
65283     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
65284     +
65285     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
65286     +
65287     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
65288     +
65289     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
65290     +
65291     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
65292     +
65293     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
65294     +
65295     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
65296     +
65297     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
65298     +
65299     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
65300     +
65301     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
65302     +
65303     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
65304     +
65305     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
65306     +
65307     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
65308     +
65309     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
65310     +
65311     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
65312     +
65313     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
65314     +
65315     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
65316     +
65317     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
65318     +
65319     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
65320     +
65321     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
65322     +
65323     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
65324     +
65325     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
65326     +
65327     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
65328     +
65329     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
65330     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
65331     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
65332     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
65333     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65334     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65335     +end;
MPRINT(EM_DIAGRAM):   end;
65336     +else do;
MPRINT(EM_DIAGRAM):   else do;
65337     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65338     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
65339     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65340     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65341     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
65342     +   end;
MPRINT(EM_DIAGRAM):   end;
65343     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65344     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
65345     +   end;
MPRINT(EM_DIAGRAM):   end;
65346     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65347     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
65348     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65349     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65350     +   end;
MPRINT(EM_DIAGRAM):   end;
65351     +end;
MPRINT(EM_DIAGRAM):   end;
65352     +
65353     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
65354     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
65355     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
65356     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
65357     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65358     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65359     +end;
MPRINT(EM_DIAGRAM):   end;
65360     +else do;
MPRINT(EM_DIAGRAM):   else do;
65361     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65362     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
65363     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65364     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65365     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
65366     +   end;
MPRINT(EM_DIAGRAM):   end;
65367     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65368     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
65369     +   end;
MPRINT(EM_DIAGRAM):   end;
65370     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65371     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
65372     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65373     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65374     +   end;
MPRINT(EM_DIAGRAM):   end;
65375     +end;
MPRINT(EM_DIAGRAM):   end;
65376     +
65377     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
65378     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
65379     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
65380     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
65381     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65382     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65383     +end;
MPRINT(EM_DIAGRAM):   end;
65384     +else do;
MPRINT(EM_DIAGRAM):   else do;
65385     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65386     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
65387     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65388     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65389     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
65390     +   end;
MPRINT(EM_DIAGRAM):   end;
65391     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65392     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
65393     +   end;
MPRINT(EM_DIAGRAM):   end;
65394     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65395     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
65396     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65397     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65398     +   end;
MPRINT(EM_DIAGRAM):   end;
65399     +end;
MPRINT(EM_DIAGRAM):   end;
65400     +
65401     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
65402     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
65403     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
65404     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
65405     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65406     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65407     +end;
MPRINT(EM_DIAGRAM):   end;
65408     +else do;
MPRINT(EM_DIAGRAM):   else do;
65409     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65410     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
65411     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65412     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65413     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
65414     +   end;
MPRINT(EM_DIAGRAM):   end;
65415     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65416     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
65417     +   end;
MPRINT(EM_DIAGRAM):   end;
65418     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65419     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
65420     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65421     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65422     +   end;
MPRINT(EM_DIAGRAM):   end;
65423     +end;
MPRINT(EM_DIAGRAM):   end;
65424     +
65425     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
65426     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
65427     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
65428     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
65429     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65430     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65431     +end;
MPRINT(EM_DIAGRAM):   end;
65432     +else do;
MPRINT(EM_DIAGRAM):   else do;
65433     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65434     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
65435     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65436     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65437     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
65438     +   end;
MPRINT(EM_DIAGRAM):   end;
65439     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65440     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
65441     +   end;
MPRINT(EM_DIAGRAM):   end;
65442     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65443     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
65444     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65445     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65446     +   end;
MPRINT(EM_DIAGRAM):   end;
65447     +end;
MPRINT(EM_DIAGRAM):   end;
65448     +
65449     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
65450     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
65451     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
65452     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
65453     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65454     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65455     +end;
MPRINT(EM_DIAGRAM):   end;
65456     +else do;
MPRINT(EM_DIAGRAM):   else do;
65457     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65458     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
65459     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65460     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
65461     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
65462     +   end;
MPRINT(EM_DIAGRAM):   end;
65463     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
65464     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
65465     +   end;
MPRINT(EM_DIAGRAM):   end;
65466     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65467     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
65468     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65469     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65470     +   end;
MPRINT(EM_DIAGRAM):   end;
65471     +end;
MPRINT(EM_DIAGRAM):   end;
65472     +
65473     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
65474     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
65475     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
65476     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
65477     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65478     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65479     +end;
MPRINT(EM_DIAGRAM):   end;
65480     +else do;
MPRINT(EM_DIAGRAM):   else do;
65481     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
65482     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
65483     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65484     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
65485     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
65486     +   end;
MPRINT(EM_DIAGRAM):   end;
65487     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
65488     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
65489     +   end;
MPRINT(EM_DIAGRAM):   end;
65490     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65491     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
65492     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65493     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65494     +   end;
MPRINT(EM_DIAGRAM):   end;
65495     +end;
MPRINT(EM_DIAGRAM):   end;
65496     +
65497     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
65498     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
65499     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
65500     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
65501     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
65502     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
65503     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
65504     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
65505     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
65506     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
65507     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
65508     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
65509     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65510     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65511     +end;
MPRINT(EM_DIAGRAM):   end;
65512     +else do;
MPRINT(EM_DIAGRAM):   else do;
65513     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
65514     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
65515     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65516     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
65517     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
65518     +   end;
MPRINT(EM_DIAGRAM):   end;
65519     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
65520     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
65521     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
65522     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
65523     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
65524     +   end;
MPRINT(EM_DIAGRAM):   end;
65525     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
65526     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
65527     +   end;
MPRINT(EM_DIAGRAM):   end;
65528     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
65529     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
65530     +   end;
MPRINT(EM_DIAGRAM):   end;
65531     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
65532     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
65533     +   end;
MPRINT(EM_DIAGRAM):   end;
65534     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65535     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
65536     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
65537     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
65538     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
65539     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65540     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65541     +   end;
MPRINT(EM_DIAGRAM):   end;
65542     +end;
MPRINT(EM_DIAGRAM):   end;
65543     +
65544     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
65545     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
65546     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
65547     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
65548     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
65549     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
65550     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
65551     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
65552     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
65553     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
65554     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
65555     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
65556     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
65557     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
65558     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65559     +end;
MPRINT(EM_DIAGRAM):   end;
65560     +else do;
MPRINT(EM_DIAGRAM):   else do;
65561     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
65562     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
65563     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65564     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
65565     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
65566     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
65567     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
65568     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
65569     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65570     +         end;
MPRINT(EM_DIAGRAM):   end;
65571     +         else do;
MPRINT(EM_DIAGRAM):   else do;
65572     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
65573     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
65574     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65575     +            end;
MPRINT(EM_DIAGRAM):   end;
65576     +         end;
MPRINT(EM_DIAGRAM):   end;
65577     +      end;
MPRINT(EM_DIAGRAM):   end;
65578     +      else do;
MPRINT(EM_DIAGRAM):   else do;
65579     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
65580     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
65581     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65582     +         end;
MPRINT(EM_DIAGRAM):   end;
65583     +      end;
MPRINT(EM_DIAGRAM):   end;
65584     +   end;
MPRINT(EM_DIAGRAM):   end;
65585     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65586     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
65587     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
65588     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65589     +      end;
MPRINT(EM_DIAGRAM):   end;
65590     +      else do;
MPRINT(EM_DIAGRAM):   else do;
65591     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
65592     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
65593     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
65594     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
65595     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
65596     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
65597     +         end;
MPRINT(EM_DIAGRAM):   end;
65598     +      end;
MPRINT(EM_DIAGRAM):   end;
65599     +   end;
MPRINT(EM_DIAGRAM):   end;
65600     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
65601     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
65602     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
65603     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
65604     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
65605     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
65606     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65607     +   end;
MPRINT(EM_DIAGRAM):   end;
65608     +end;
MPRINT(EM_DIAGRAM):   end;
65609     +
65610     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65611     +*** Checking missing input Interval
65612     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
65613     +
65614     +IF NMISS(
65615     +   AcceptedCmpTotal ,
65616     +   Age ,
65617     +   Frq ,
65618     +   Income ,
65619     +   Kidhome ,
65620     +   MntFishProducts ,
65621     +   MntFruits ,
65622     +   MntGoldProds ,
65623     +   MntSweetProducts ,
65624     +   MonthsAsCustomer ,
65625     +   NumDealsPurchases ,
65626     +   NumWebVisitsMonth ,
65627     +   RFMstat ,
65628     +   RMntFrq ,
65629     +   Recency ,
65630     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
65631     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
65632     +
65633     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
65634     +END;
MPRINT(EM_DIAGRAM):   END;
65635     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65636     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
65637     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65638     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65639     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
65640     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
65641     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
65642     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
65643     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
65644     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
65645     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
65646     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
65647     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
65648     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
65649     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
65650     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
65651     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
65652     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
65653     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
65654     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
65655     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
65656     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
65657     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
65658     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
65659     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
65660     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
65661     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
65662     +END;
MPRINT(EM_DIAGRAM):   END;
65663     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65664     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
65665     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
65666     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
65667     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
65668     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
65669     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
65670     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
65671     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
65672     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
65673     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
65674     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
65675     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
65676     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
65677     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
65678     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
65679     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
65680     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
65681     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
65682     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
65683     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
65684     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
65685     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
65686     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
65687     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
65688     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
65689     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
65690     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
65691     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
65692     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
65693     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
65694     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
65695     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
65696     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
65697     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
65698     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
65699     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
65700     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
65701     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
65702     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
65703     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
65704     +END;
MPRINT(EM_DIAGRAM):   END;
65705     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65706     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
65707     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65708     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65709     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
65710     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65711     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65712     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
65713     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65714     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65715     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
65716     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
65717     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
65718     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
65719     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
65720     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
65721     +          +     -0.6473961304074 * S_MonthsAsCustomer
65722     +          +     0.68960902951007 * S_NumDealsPurchases
65723     +          +    -0.03600585273268 * S_NumWebVisitsMonth
65724     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
65725     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
65726     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
65727     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
65728     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
65729     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
65730     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
65731     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
65732     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
65733     +          +    -0.70674764548268 * S_MonthsAsCustomer
65734     +          +     0.03761139203619 * S_NumDealsPurchases
65735     +          +    -0.69359662485747 * S_NumWebVisitsMonth
65736     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
65737     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
65738     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
65739     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
65740     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
65741     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
65742     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
65743     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
65744     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
65745     +          +    -0.47559913836984 * S_MonthsAsCustomer
65746     +          +    -0.26961781245749 * S_NumDealsPurchases
65747     +          +    -0.67017962977412 * S_NumWebVisitsMonth
65748     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
65749     +        S_RMntFrq  +     0.67120737584665 * S_Recency
65750     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
65751     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
65752     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
65753     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
65754     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
65755     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
65756     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
65757     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
65758     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
65759     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
65760     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
65761     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
65762     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
65763     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
65764     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
65765     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
65766     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
65767     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
65768     +        EducationGraduation  +     0.46172475127934 * EducationMaster
65769     +          +    -0.18858032329482 * Marital_StatusDivorced
65770     +          +     0.16067956508072 * Marital_StatusMarried
65771     +          +    -0.90926406046237 * Marital_StatusSingle
65772     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
65773     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
65774     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
65775     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
65776     +          +     0.71998738170149 * Marital_StatusDivorced
65777     +          +    -1.53543515752013 * Marital_StatusMarried
65778     +          +     0.44068743694663 * Marital_StatusSingle
65779     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
65780     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
65781     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
65782     +        EducationGraduation  +     0.11252156068047 * EducationMaster
65783     +          +    -0.31683932084863 * Marital_StatusDivorced
65784     +          +     0.17674162427585 * Marital_StatusMarried
65785     +          +    -0.67064017247711 * Marital_StatusSingle
65786     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
65787     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
65788     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
65789     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
65790     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
65791     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
65792     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
65793     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
65794     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
65795     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
65796     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
65797     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
65798     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
65799     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
65800     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
65801     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
65802     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
65803     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
65804     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
65805     +END;
MPRINT(EM_DIAGRAM):   END;
65806     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65807     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
65808     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
65809     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
65810     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
65811     +END;
MPRINT(EM_DIAGRAM):   END;
65812     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65813     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
65814     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65815     +
65816     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
65817     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
65818     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
65819     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
65820     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
65821     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
65822     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
65823     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65824     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65825     +end;
MPRINT(EM_DIAGRAM):   end;
65826     +else do;
MPRINT(EM_DIAGRAM):   else do;
65827     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
65828     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
65829     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
65830     +   end;
MPRINT(EM_DIAGRAM):   end;
65831     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
65832     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
65833     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
65834     +   end;
MPRINT(EM_DIAGRAM):   end;
65835     +   else do;
MPRINT(EM_DIAGRAM):   else do;
65836     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
65837     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
65838     +   end;
MPRINT(EM_DIAGRAM):   end;
65839     +end;
MPRINT(EM_DIAGRAM):   end;
65840     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
65841     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
65842     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
65843     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
65844     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
65845     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
65846     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
65847     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
65848     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
65849     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
65850     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
65851     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
65852     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
65853     +END;
MPRINT(EM_DIAGRAM):   END;
65854     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
65855     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
65856     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
65857     +END;
MPRINT(EM_DIAGRAM):   END;
65858     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
65859     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
65860     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
65861     +END;
MPRINT(EM_DIAGRAM):   END;
65862     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
65863     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
65864     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
65865     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
65866     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
65867     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
65868     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
65869     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65870     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
65871     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
65872     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
65873     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
65874     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
65875     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
65876     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
65877     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
65878     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
65879     +END;
MPRINT(EM_DIAGRAM):   END;
65880     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65881     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
65882     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
65883     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
65884     +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
65885     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65886     +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
65887     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65888     +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
65889     +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
65890     +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
65891     +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
65892     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65893     +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
65894     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65895     +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
65896     +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
65897     +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
65898     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65899     +* Ensmbl24: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Average Posteriors of 7 models;
65900     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65901     +P_DepVar1 = (
65902     +Neural40_P_DepVar1 +
65903     +AutoNeural39_P_DepVar1 +
65904     +AutoNeural38_P_DepVar1 +
65905     +Neural39_P_DepVar1 +
65906     +Neural41_P_DepVar1 +
65907     +AutoNeural37_P_DepVar1 +
65908     +AutoNeural40_P_DepVar1
65909     +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural39_P_DepVar1 + 
AutoNeural38_P_DepVar1 + Neural39_P_DepVar1 + Neural41_P_DepVar1 + AutoNeural37_P_DepVar1 + 
AutoNeural40_P_DepVar1 )/7;
65910     +P_DepVar0 = (
65911     +Neural40_P_DepVar0 +
65912     +AutoNeural39_P_DepVar0 +
65913     +AutoNeural38_P_DepVar0 +
65914     +Neural39_P_DepVar0 +
65915     +Neural41_P_DepVar0 +
65916     +AutoNeural37_P_DepVar0 +
65917     +AutoNeural40_P_DepVar0
65918     +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural39_P_DepVar0 + 
AutoNeural38_P_DepVar0 + Neural39_P_DepVar0 + Neural41_P_DepVar0 + AutoNeural37_P_DepVar0 + 
AutoNeural40_P_DepVar0 )/7;
65919     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65920     +* Ensmbl24: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Classification Vars;
65921     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65922     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
65923     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
65924     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
65925     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
65926     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
65927     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
65928     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
65929     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
65930     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
65931     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
65932     +end;
MPRINT(EM_DIAGRAM):   end;
65933     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
65934     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
65935     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
65936     +end;
MPRINT(EM_DIAGRAM):   end;
65937     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
65938     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65939     +* Ensmbl24: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Producing Unformatted variable;
65940     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65941     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
65942     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
65943     +else
65944     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
65945     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65946     +* Ensmbl24: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing _WARN_ Variable;
65947     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65948     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
65949     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
65950     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
65951     +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
65951    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65952     +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
65952    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65953     +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
65953    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65954     +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
65954    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65955     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
65955    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65956     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
65956    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65957     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
65957    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65958     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
65958    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65959     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
65959    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65960     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
65960    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65961     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
65961    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65962     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
65962    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65963     +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
65963    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65964     +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
65964    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65965     +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
65965    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65966     +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
65966    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65967     +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
65967    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65968     +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
65968    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65969     +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
65969    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65970     +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
65970    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65971     +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
65971    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65972     +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
65972    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65973     +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
65973    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65974     +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
65974    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65975     +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
65975    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
65976     +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
65976    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
65977     +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
65977    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
65978     +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
65978    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
65979     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65980     +* Ensmbl24: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Residual Vars;
65981     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
65982     +if
65983     +F_DepVar NE '1'
65984     +AND F_DepVar NE '0'
65985     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
65986     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
65987     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
65988     +end;
MPRINT(EM_DIAGRAM):   end;
65989     +else do;
MPRINT(EM_DIAGRAM):   else do;
65990     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
65991     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
65992     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
65993     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
65994     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
65995     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
65996     +END;
MPRINT(EM_DIAGRAM):   END;
65997     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
65998      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL24_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.18 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.19 seconds
      cpu time            0.20 seconds
      

MPRINT(EM_DIAGRAM):   quit;
65999      quit;
66000      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
66001      filename emflow
66001    ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring NEURAL40_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66002      *------------------------------------------------------------*;
66003      * Ensmbl24: Scoring NEURAL40_VALIDATE data;
66004      *------------------------------------------------------------*;
66005      data EMWS8.Ensmbl24_VALIDATE
66006      / view=EMWS8.Ensmbl24_VALIDATE
66007      ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_VALIDATE / view=EMWS8.Ensmbl24_VALIDATE ;
66008      set EMWS8.Neural40_VALIDATE
66009      ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_VALIDATE ;
66010      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas.
66011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66012     +* Ensmbl24: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Combine model for DepVar;
66013     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66014     +* Ensmbl24: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 1 of 7;
66015     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66016     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66017     +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
66018     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
66019     +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
66020     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66021     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66022     +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
66023     +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
66024     +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
66025     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66026     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66027     +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
66028     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
66029     +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
66030     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66031     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66032     +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
66033     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
66034     +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
66035     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66036     +
66037     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
66038     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
66038    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
66039     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
66040     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
66041     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
66042     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
66043     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
66044     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66045     +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
66046     +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
66047     +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
66048     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66049     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66050     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
66051     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66052     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
66053     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
66054     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
66055     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66056     +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
66057     +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
66058     +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
66059     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66060     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66061     +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
66062     +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
66063     +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
66064     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66065     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66066     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
66067     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
66068     +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
66069     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66070     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
66071     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
66072     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
66073     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
66074     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
66075     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
66076     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
66077     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
66078     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
66079     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
66080     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
66081     +LENGTH _WARN_ $4
66082     +      F_DepVar  $ 12
66083     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
66084     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
66085     +
66086     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
66087     +
66088     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
66089     +
66090     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
66091     +
66092     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
66093     +
66094     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
66095     +
66096     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
66097     +
66098     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
66099     +
66100     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
66101     +
66102     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
66103     +
66104     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
66105     +
66106     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
66107     +
66108     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
66109     +
66110     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
66111     +
66112     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
66113     +
66114     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
66115     +
66116     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
66117     +
66118     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
66119     +
66120     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
66121     +
66122     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
66123     +
66124     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
66125     +
66126     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
66127     +
66128     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
66129     +
66130     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
66131     +
66132     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
66133     +
66134     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
66135     +
66136     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
66137     +
66138     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
66139     +
66140     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
66141     +
66142     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
66143     +
66144     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
66145     +
66146     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
66147     +
66148     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
66149     +
66150     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
66151     +
66152     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
66153     +
66154     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
66155     +
66156     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
66157     +
66158     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
66159     +
66160     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
66161     +
66162     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
66163     +
66164     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
66165     +
66166     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
66167     +
66168     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
66169     +
66170     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
66171     +
66172     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
66173     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
66174     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
66175     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
66176     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66177     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66178     +end;
MPRINT(EM_DIAGRAM):   end;
66179     +else do;
MPRINT(EM_DIAGRAM):   else do;
66180     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66181     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
66182     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66183     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66184     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
66185     +   end;
MPRINT(EM_DIAGRAM):   end;
66186     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66187     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
66188     +   end;
MPRINT(EM_DIAGRAM):   end;
66189     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66190     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
66191     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66192     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66193     +   end;
MPRINT(EM_DIAGRAM):   end;
66194     +end;
MPRINT(EM_DIAGRAM):   end;
66195     +
66196     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
66197     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
66198     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
66199     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
66200     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66201     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66202     +end;
MPRINT(EM_DIAGRAM):   end;
66203     +else do;
MPRINT(EM_DIAGRAM):   else do;
66204     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66205     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
66206     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66207     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66208     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
66209     +   end;
MPRINT(EM_DIAGRAM):   end;
66210     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66211     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
66212     +   end;
MPRINT(EM_DIAGRAM):   end;
66213     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66214     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
66215     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66216     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66217     +   end;
MPRINT(EM_DIAGRAM):   end;
66218     +end;
MPRINT(EM_DIAGRAM):   end;
66219     +
66220     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
66221     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
66222     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
66223     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
66224     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66225     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66226     +end;
MPRINT(EM_DIAGRAM):   end;
66227     +else do;
MPRINT(EM_DIAGRAM):   else do;
66228     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66229     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
66230     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66231     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66232     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
66233     +   end;
MPRINT(EM_DIAGRAM):   end;
66234     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66235     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
66236     +   end;
MPRINT(EM_DIAGRAM):   end;
66237     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66238     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
66239     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66240     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66241     +   end;
MPRINT(EM_DIAGRAM):   end;
66242     +end;
MPRINT(EM_DIAGRAM):   end;
66243     +
66244     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
66245     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
66246     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
66247     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
66248     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66249     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66250     +end;
MPRINT(EM_DIAGRAM):   end;
66251     +else do;
MPRINT(EM_DIAGRAM):   else do;
66252     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66253     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
66254     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66255     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66256     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
66257     +   end;
MPRINT(EM_DIAGRAM):   end;
66258     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66259     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
66260     +   end;
MPRINT(EM_DIAGRAM):   end;
66261     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66262     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
66263     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66264     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66265     +   end;
MPRINT(EM_DIAGRAM):   end;
66266     +end;
MPRINT(EM_DIAGRAM):   end;
66267     +
66268     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
66269     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
66270     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
66271     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
66272     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66273     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66274     +end;
MPRINT(EM_DIAGRAM):   end;
66275     +else do;
MPRINT(EM_DIAGRAM):   else do;
66276     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66277     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
66278     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66279     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66280     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
66281     +   end;
MPRINT(EM_DIAGRAM):   end;
66282     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66283     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
66284     +   end;
MPRINT(EM_DIAGRAM):   end;
66285     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66286     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
66287     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66288     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66289     +   end;
MPRINT(EM_DIAGRAM):   end;
66290     +end;
MPRINT(EM_DIAGRAM):   end;
66291     +
66292     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
66293     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
66294     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
66295     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
66296     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66297     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66298     +end;
MPRINT(EM_DIAGRAM):   end;
66299     +else do;
MPRINT(EM_DIAGRAM):   else do;
66300     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66301     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
66302     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66303     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66304     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
66305     +   end;
MPRINT(EM_DIAGRAM):   end;
66306     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66307     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
66308     +   end;
MPRINT(EM_DIAGRAM):   end;
66309     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66310     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
66311     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66312     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66313     +   end;
MPRINT(EM_DIAGRAM):   end;
66314     +end;
MPRINT(EM_DIAGRAM):   end;
66315     +
66316     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
66317     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
66318     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
66319     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
66320     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66321     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66322     +end;
MPRINT(EM_DIAGRAM):   end;
66323     +else do;
MPRINT(EM_DIAGRAM):   else do;
66324     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66325     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
66326     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66327     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
66328     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
66329     +   end;
MPRINT(EM_DIAGRAM):   end;
66330     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
66331     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
66332     +   end;
MPRINT(EM_DIAGRAM):   end;
66333     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66334     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
66335     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66336     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66337     +   end;
MPRINT(EM_DIAGRAM):   end;
66338     +end;
MPRINT(EM_DIAGRAM):   end;
66339     +
66340     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
66341     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
66342     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
66343     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
66344     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
66345     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
66346     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
66347     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
66348     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
66349     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
66350     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
66351     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
66352     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66353     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66354     +end;
MPRINT(EM_DIAGRAM):   end;
66355     +else do;
MPRINT(EM_DIAGRAM):   else do;
66356     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
66357     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
66358     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66359     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
66360     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
66361     +   end;
MPRINT(EM_DIAGRAM):   end;
66362     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
66363     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
66364     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
66365     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
66366     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
66367     +   end;
MPRINT(EM_DIAGRAM):   end;
66368     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
66369     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
66370     +   end;
MPRINT(EM_DIAGRAM):   end;
66371     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
66372     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
66373     +   end;
MPRINT(EM_DIAGRAM):   end;
66374     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
66375     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
66376     +   end;
MPRINT(EM_DIAGRAM):   end;
66377     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66378     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
66379     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
66380     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
66381     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
66382     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66383     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66384     +   end;
MPRINT(EM_DIAGRAM):   end;
66385     +end;
MPRINT(EM_DIAGRAM):   end;
66386     +
66387     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
66388     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
66389     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
66390     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
66391     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
66392     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
66393     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
66394     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
66395     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
66396     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
66397     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
66398     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
66399     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
66400     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66401     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66402     +end;
MPRINT(EM_DIAGRAM):   end;
66403     +else do;
MPRINT(EM_DIAGRAM):   else do;
66404     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
66405     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
66406     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66407     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
66408     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
66409     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
66410     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
66411     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
66412     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66413     +         end;
MPRINT(EM_DIAGRAM):   end;
66414     +         else do;
MPRINT(EM_DIAGRAM):   else do;
66415     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
66416     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
66417     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66418     +            end;
MPRINT(EM_DIAGRAM):   end;
66419     +         end;
MPRINT(EM_DIAGRAM):   end;
66420     +      end;
MPRINT(EM_DIAGRAM):   end;
66421     +      else do;
MPRINT(EM_DIAGRAM):   else do;
66422     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
66423     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
66424     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66425     +         end;
MPRINT(EM_DIAGRAM):   end;
66426     +      end;
MPRINT(EM_DIAGRAM):   end;
66427     +   end;
MPRINT(EM_DIAGRAM):   end;
66428     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66429     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
66430     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
66431     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66432     +      end;
MPRINT(EM_DIAGRAM):   end;
66433     +      else do;
MPRINT(EM_DIAGRAM):   else do;
66434     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
66435     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
66436     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
66437     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
66438     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
66439     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
66440     +         end;
MPRINT(EM_DIAGRAM):   end;
66441     +      end;
MPRINT(EM_DIAGRAM):   end;
66442     +   end;
MPRINT(EM_DIAGRAM):   end;
66443     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
66444     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
66445     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
66446     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
66447     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
66448     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66449     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66450     +   end;
MPRINT(EM_DIAGRAM):   end;
66451     +end;
MPRINT(EM_DIAGRAM):   end;
66452     +
66453     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66454     +*** Checking missing input Interval
66455     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
66456     +
66457     +IF NMISS(
66458     +   AcceptedCmpTotal ,
66459     +   Age ,
66460     +   Frq ,
66461     +   Income ,
66462     +   Kidhome ,
66463     +   MntFishProducts ,
66464     +   MntFruits ,
66465     +   MntGoldProds ,
66466     +   MntSweetProducts ,
66467     +   MonthsAsCustomer ,
66468     +   NumDealsPurchases ,
66469     +   NumWebVisitsMonth ,
66470     +   RFMstat ,
66471     +   RMntFrq ,
66472     +   Recency ,
66473     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
66474     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
66475     +
66476     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66477     +END;
MPRINT(EM_DIAGRAM):   END;
66478     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66479     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
66480     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66481     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66482     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
66483     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
66484     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
66485     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
66486     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
66487     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
66488     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
66489     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
66490     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
66491     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
66492     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
66493     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
66494     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
66495     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
66496     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
66497     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
66498     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
66499     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
66500     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
66501     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
66502     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
66503     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
66504     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
66505     +END;
MPRINT(EM_DIAGRAM):   END;
66506     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66507     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
66508     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
66509     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
66510     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
66511     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
66512     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
66513     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
66514     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
66515     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
66516     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
66517     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
66518     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
66519     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
66520     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
66521     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
66522     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
66523     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
66524     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
66525     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
66526     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
66527     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
66528     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
66529     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
66530     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
66531     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
66532     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
66533     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
66534     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
66535     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
66536     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
66537     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
66538     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
66539     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
66540     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
66541     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
66542     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
66543     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
66544     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
66545     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
66546     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
66547     +END;
MPRINT(EM_DIAGRAM):   END;
66548     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66549     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
66550     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66551     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66552     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
66553     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66554     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66555     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
66556     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66557     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66558     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
66559     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
66560     +        S_Income  +     0.39760289149752 * S_Kidhome
66561     +          +     -0.0376693415484 * S_MntFishProducts
66562     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
66563     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
66564     +          +    -0.13043754404228 * S_MonthsAsCustomer
66565     +          +     -0.0139146653349 * S_NumDealsPurchases
66566     +          +    -0.01539820220757 * S_NumWebVisitsMonth
66567     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
66568     +        S_RMntFrq  +     0.55149605442396 * S_Recency
66569     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
66570     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
66571     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
66572     +        S_Income  +     0.31208673256073 * S_Kidhome
66573     +          +    -0.04911763008195 * S_MntFishProducts
66574     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
66575     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
66576     +          +    -0.48577934340503 * S_MonthsAsCustomer
66577     +          +     0.31218334237091 * S_NumDealsPurchases
66578     +          +     0.24212805498377 * S_NumWebVisitsMonth
66579     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
66580     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
66581     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
66582     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
66583     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
66584     +        S_Income  +    -0.48748003518551 * S_Kidhome
66585     +          +     0.15434683428908 * S_MntFishProducts
66586     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
66587     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
66588     +          +    -0.07405705160744 * S_MonthsAsCustomer
66589     +          +    -0.44979778263337 * S_NumDealsPurchases
66590     +          +    -0.51422673599958 * S_NumWebVisitsMonth
66591     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
66592     +        S_RMntFrq  +     0.79850779605341 * S_Recency
66593     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
66594     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
66595     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
66596     +        S_Income  +    -0.62401744170985 * S_Kidhome
66597     +          +    -0.08499883212951 * S_MntFishProducts
66598     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
66599     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
66600     +          +    -0.04051431518694 * S_MonthsAsCustomer
66601     +          +     0.00788125797776 * S_NumDealsPurchases
66602     +          +     0.59495434076477 * S_NumWebVisitsMonth
66603     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
66604     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
66605     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
66606     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
66607     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
66608     +        S_Income  +     -0.0256051183156 * S_Kidhome
66609     +          +    -0.15661247042419 * S_MntFishProducts
66610     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
66611     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
66612     +          +     0.03994503424293 * S_MonthsAsCustomer
66613     +          +    -0.53734193208154 * S_NumDealsPurchases
66614     +          +    -0.58547802324835 * S_NumWebVisitsMonth
66615     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
66616     +        S_RMntFrq  +     0.66048924026365 * S_Recency
66617     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
66618     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
66619     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
66620     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
66621     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
66622     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
66623     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
66624     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
66625     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
66626     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
66627     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
66628     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
66629     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
66630     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
66631     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
66632     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
66633     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
66634     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
66635     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
66636     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
66637     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
66638     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
66639     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
66640     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
66641     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
66642     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
66643     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
66644     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
66645     +        EducationGraduation  +     0.23295390047952 * EducationMaster
66646     +          +    -0.41529808115031 * Marital_StatusDivorced
66647     +          +     0.65264978817749 * Marital_StatusMarried
66648     +          +    -0.52150453945732 * Marital_StatusSingle
66649     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
66650     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
66651     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
66652     +        EducationGraduation  +     0.04425534246646 * EducationMaster
66653     +          +    -0.32207382402099 * Marital_StatusDivorced
66654     +          +     0.16112567537413 * Marital_StatusMarried
66655     +          +     0.28859198712458 * Marital_StatusSingle
66656     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
66657     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
66658     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
66659     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
66660     +          +    -0.06823118087629 * Marital_StatusDivorced
66661     +          +    -0.01696675344176 * Marital_StatusMarried
66662     +          +    -0.04922830766868 * Marital_StatusSingle
66663     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
66664     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
66665     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
66666     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
66667     +          +     0.20346888384065 * Marital_StatusDivorced
66668     +          +     -0.5246097720646 * Marital_StatusMarried
66669     +          +     0.50991923175058 * Marital_StatusSingle
66670     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
66671     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
66672     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
66673     +        EducationGraduation  +     0.03117170136897 * EducationMaster
66674     +          +    -0.14128509643843 * Marital_StatusDivorced
66675     +          +    -0.17344467864829 * Marital_StatusMarried
66676     +          +     0.09201105049634 * Marital_StatusSingle
66677     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
66678     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
66679     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
66680     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
66681     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
66682     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
66683     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
66684     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
66685     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
66686     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
66687     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
66688     +END;
MPRINT(EM_DIAGRAM):   END;
66689     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66690     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
66691     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
66692     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
66693     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
66694     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
66695     +END;
MPRINT(EM_DIAGRAM):   END;
66696     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66697     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
66698     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66699     +
66700     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
66701     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
66702     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
66703     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
66704     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
66705     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66706     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
66707     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
66708     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
66709     +end;
MPRINT(EM_DIAGRAM):   end;
66710     +else do;
MPRINT(EM_DIAGRAM):   else do;
66711     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
66712     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
66713     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
66714     +   end;
MPRINT(EM_DIAGRAM):   end;
66715     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
66716     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
66717     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
66718     +   end;
MPRINT(EM_DIAGRAM):   end;
66719     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66720     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
66721     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
66722     +   end;
MPRINT(EM_DIAGRAM):   end;
66723     +end;
MPRINT(EM_DIAGRAM):   end;
66724     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
66725     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
66726     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
66727     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
66728     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
66729     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
66730     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
66731     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
66732     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
66733     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
66734     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
66735     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
66736     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
66737     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
66738     +END;
MPRINT(EM_DIAGRAM):   END;
66739     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
66740     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
66741     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
66742     +END;
MPRINT(EM_DIAGRAM):   END;
66743     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
66744     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
66745     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
66746     +END;
MPRINT(EM_DIAGRAM):   END;
66747     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
66748     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
66749     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
66750     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
66751     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
66752     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
66753     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
66754     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66755     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
66756     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
66757     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
66758     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
66759     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
66760     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
66761     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
66762     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
66763     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
66764     +END;
MPRINT(EM_DIAGRAM):   END;
66765     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
66766     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
66767     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
66768     +drop
66769     +H11
66770     +H12
66771     +H13
66772     +H14
66773     +H15
66774     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
66775     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
66776     +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
66777     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66778     +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
66779     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66780     +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
66781     +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
66782     +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
66783     +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
66784     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66785     +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
66786     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66787     +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
66788     +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
66789     +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
66790     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66791     +* Ensmbl24: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 2 of 7;
66792     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66793     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66794     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
66795     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
66796     +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
66797     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
66798     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
66799     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
66800     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
66801     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
66802     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
66803     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
66804     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
66805     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
66806     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
66807     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
66808     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
66809     +LENGTH _WARN_ $4
66810     +      F_DepVar  $ 12
66811     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
66812     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
66813     +
66814     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
66815     +
66816     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
66817     +
66818     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
66819     +
66820     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
66821     +
66822     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
66823     +
66824     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
66825     +
66826     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
66827     +
66828     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
66829     +
66830     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
66831     +
66832     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
66833     +
66834     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
66835     +
66836     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
66837     +
66838     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
66839     +
66840     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
66841     +
66842     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
66843     +
66844     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
66845     +
66846     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
66847     +
66848     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
66849     +
66850     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
66851     +
66852     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
66853     +
66854     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
66855     +
66856     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
66857     +
66858     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
66859     +
66860     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
66861     +
66862     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
66863     +
66864     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
66865     +
66866     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
66867     +
66868     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
66869     +
66870     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
66871     +
66872     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
66873     +
66874     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
66875     +
66876     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
66877     +
66878     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
66879     +
66880     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
66881     +
66882     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
66883     +
66884     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
66885     +
66886     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
66887     +
66888     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
66889     +
66890     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
66891     +
66892     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
66893     +
66894     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
66895     +
66896     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
66897     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
66898     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
66899     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
66900     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66901     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66902     +end;
MPRINT(EM_DIAGRAM):   end;
66903     +else do;
MPRINT(EM_DIAGRAM):   else do;
66904     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66905     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
66906     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66907     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66908     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
66909     +   end;
MPRINT(EM_DIAGRAM):   end;
66910     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66911     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
66912     +   end;
MPRINT(EM_DIAGRAM):   end;
66913     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66914     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
66915     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66916     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66917     +   end;
MPRINT(EM_DIAGRAM):   end;
66918     +end;
MPRINT(EM_DIAGRAM):   end;
66919     +
66920     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
66921     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
66922     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
66923     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
66924     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66925     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66926     +end;
MPRINT(EM_DIAGRAM):   end;
66927     +else do;
MPRINT(EM_DIAGRAM):   else do;
66928     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66929     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
66930     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66931     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66932     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
66933     +   end;
MPRINT(EM_DIAGRAM):   end;
66934     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66935     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
66936     +   end;
MPRINT(EM_DIAGRAM):   end;
66937     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66938     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
66939     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66940     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66941     +   end;
MPRINT(EM_DIAGRAM):   end;
66942     +end;
MPRINT(EM_DIAGRAM):   end;
66943     +
66944     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
66945     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
66946     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
66947     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
66948     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66949     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66950     +end;
MPRINT(EM_DIAGRAM):   end;
66951     +else do;
MPRINT(EM_DIAGRAM):   else do;
66952     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66953     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
66954     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66955     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66956     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
66957     +   end;
MPRINT(EM_DIAGRAM):   end;
66958     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66959     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
66960     +   end;
MPRINT(EM_DIAGRAM):   end;
66961     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66962     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
66963     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66964     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66965     +   end;
MPRINT(EM_DIAGRAM):   end;
66966     +end;
MPRINT(EM_DIAGRAM):   end;
66967     +
66968     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
66969     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
66970     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
66971     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
66972     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66973     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66974     +end;
MPRINT(EM_DIAGRAM):   end;
66975     +else do;
MPRINT(EM_DIAGRAM):   else do;
66976     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
66977     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
66978     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
66979     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
66980     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
66981     +   end;
MPRINT(EM_DIAGRAM):   end;
66982     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
66983     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
66984     +   end;
MPRINT(EM_DIAGRAM):   end;
66985     +   else do;
MPRINT(EM_DIAGRAM):   else do;
66986     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
66987     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
66988     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66989     +   end;
MPRINT(EM_DIAGRAM):   end;
66990     +end;
MPRINT(EM_DIAGRAM):   end;
66991     +
66992     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
66993     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
66994     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
66995     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
66996     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
66997     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
66998     +end;
MPRINT(EM_DIAGRAM):   end;
66999     +else do;
MPRINT(EM_DIAGRAM):   else do;
67000     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67001     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
67002     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67003     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67004     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
67005     +   end;
MPRINT(EM_DIAGRAM):   end;
67006     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67007     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
67008     +   end;
MPRINT(EM_DIAGRAM):   end;
67009     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67010     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
67011     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67012     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67013     +   end;
The SAS System

MPRINT(EM_DIAGRAM):   end;
67014     +end;
MPRINT(EM_DIAGRAM):   end;
67015     +
67016     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
67017     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
67018     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
67019     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
67020     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67021     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67022     +end;
MPRINT(EM_DIAGRAM):   end;
67023     +else do;
MPRINT(EM_DIAGRAM):   else do;
67024     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67025     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
67026     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67027     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67028     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
67029     +   end;
MPRINT(EM_DIAGRAM):   end;
67030     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67031     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
67032     +   end;
MPRINT(EM_DIAGRAM):   end;
67033     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67034     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
67035     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67036     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67037     +   end;
MPRINT(EM_DIAGRAM):   end;
67038     +end;
MPRINT(EM_DIAGRAM):   end;
67039     +
67040     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
67041     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
67042     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
67043     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
67044     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67045     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67046     +end;
MPRINT(EM_DIAGRAM):   end;
67047     +else do;
MPRINT(EM_DIAGRAM):   else do;
67048     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67049     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
67050     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67051     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
67052     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
67053     +   end;
MPRINT(EM_DIAGRAM):   end;
67054     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
67055     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
67056     +   end;
MPRINT(EM_DIAGRAM):   end;
67057     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67058     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
67059     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67060     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67061     +   end;
MPRINT(EM_DIAGRAM):   end;
67062     +end;
MPRINT(EM_DIAGRAM):   end;
67063     +
67064     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
67065     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
67066     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
67067     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
67068     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
67069     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
67070     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
67071     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
67072     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
67073     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
67074     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
67075     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
67076     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67077     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67078     +end;
MPRINT(EM_DIAGRAM):   end;
67079     +else do;
MPRINT(EM_DIAGRAM):   else do;
67080     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
67081     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
67082     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67083     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
67084     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
67085     +   end;
MPRINT(EM_DIAGRAM):   end;
67086     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
67087     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
67088     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
67089     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
67090     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
67091     +   end;
MPRINT(EM_DIAGRAM):   end;
67092     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
67093     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
67094     +   end;
MPRINT(EM_DIAGRAM):   end;
67095     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
67096     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
67097     +   end;
MPRINT(EM_DIAGRAM):   end;
67098     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
67099     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
67100     +   end;
MPRINT(EM_DIAGRAM):   end;
67101     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67102     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
67103     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
67104     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
67105     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
67106     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67107     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67108     +   end;
MPRINT(EM_DIAGRAM):   end;
67109     +end;
MPRINT(EM_DIAGRAM):   end;
67110     +
67111     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
67112     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
67113     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
67114     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
67115     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
67116     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
67117     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
67118     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
67119     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
67120     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
67121     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
67122     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
67123     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
67124     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67125     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67126     +end;
MPRINT(EM_DIAGRAM):   end;
67127     +else do;
MPRINT(EM_DIAGRAM):   else do;
67128     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
67129     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
67130     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67131     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
67132     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
67133     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
67134     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
67135     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
67136     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67137     +         end;
MPRINT(EM_DIAGRAM):   end;
67138     +         else do;
MPRINT(EM_DIAGRAM):   else do;
67139     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
67140     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
67141     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67142     +            end;
MPRINT(EM_DIAGRAM):   end;
67143     +         end;
MPRINT(EM_DIAGRAM):   end;
67144     +      end;
MPRINT(EM_DIAGRAM):   end;
67145     +      else do;
MPRINT(EM_DIAGRAM):   else do;
67146     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
67147     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
67148     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67149     +         end;
MPRINT(EM_DIAGRAM):   end;
67150     +      end;
MPRINT(EM_DIAGRAM):   end;
67151     +   end;
MPRINT(EM_DIAGRAM):   end;
67152     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67153     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
67154     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
67155     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67156     +      end;
MPRINT(EM_DIAGRAM):   end;
67157     +      else do;
MPRINT(EM_DIAGRAM):   else do;
67158     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
67159     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
67160     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
67161     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
67162     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
67163     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67164     +         end;
MPRINT(EM_DIAGRAM):   end;
67165     +      end;
MPRINT(EM_DIAGRAM):   end;
67166     +   end;
MPRINT(EM_DIAGRAM):   end;
67167     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
67168     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
67169     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
67170     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
67171     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
67172     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67173     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67174     +   end;
MPRINT(EM_DIAGRAM):   end;
67175     +end;
MPRINT(EM_DIAGRAM):   end;
67176     +
67177     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67178     +*** Checking missing input Interval
67179     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
67180     +
67181     +IF NMISS(
67182     +   AcceptedCmpTotal ,
67183     +   Age ,
67184     +   Frq ,
67185     +   Income ,
67186     +   Kidhome ,
67187     +   MntFishProducts ,
67188     +   MntFruits ,
67189     +   MntGoldProds ,
67190     +   MntSweetProducts ,
67191     +   MonthsAsCustomer ,
67192     +   NumDealsPurchases ,
67193     +   NumWebVisitsMonth ,
67194     +   RFMstat ,
67195     +   RMntFrq ,
67196     +   Recency ,
67197     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
67198     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
67199     +
67200     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67201     +END;
MPRINT(EM_DIAGRAM):   END;
67202     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67203     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
67204     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67205     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67206     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
67207     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
67208     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
67209     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
67210     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
67211     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
67212     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
67213     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
67214     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
67215     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
67216     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
67217     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
67218     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
67219     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
67220     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
67221     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
67222     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
67223     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
67224     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
67225     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
67226     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
67227     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
67228     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
67229     +END;
MPRINT(EM_DIAGRAM):   END;
67230     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67231     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
67232     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
67233     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
67234     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
67235     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
67236     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
67237     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
67238     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
67239     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
67240     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
67241     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
67242     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
67243     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
67244     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
67245     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
67246     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
67247     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
67248     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
67249     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
67250     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
67251     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
67252     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
67253     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
67254     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
67255     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
67256     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
67257     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
67258     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
67259     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
67260     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
67261     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
67262     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
67263     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
67264     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
67265     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
67266     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
67267     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
67268     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
67269     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
67270     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
67271     +END;
MPRINT(EM_DIAGRAM):   END;
67272     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67273     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
67274     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67275     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67276     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
67277     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67278     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67279     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
67280     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67281     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67282     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
67283     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
67284     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
67285     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
67286     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
67287     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
67288     +          +     -0.1740957673716 * S_MonthsAsCustomer
67289     +          +     0.66565026405117 * S_NumDealsPurchases
67290     +          +     0.43247206282836 * S_NumWebVisitsMonth
67291     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
67292     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
67293     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
67294     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
67295     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
67296     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
67297     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
67298     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
67299     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
67300     +          +    -0.06176784990963 * S_MonthsAsCustomer
67301     +          +    -0.11740415005833 * S_NumDealsPurchases
67302     +          +    -0.17084845478672 * S_NumWebVisitsMonth
67303     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
67304     +        S_RMntFrq  +     0.54983271222574 * S_Recency
67305     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
67306     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
67307     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
67308     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
67309     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
67310     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
67311     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
67312     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
67313     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
67314     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
67315     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
67316     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
67317     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
67318     +        EducationGraduation  +     0.22632282500966 * EducationMaster
67319     +          +     -0.0800438380883 * Marital_StatusDivorced
67320     +          +     0.44505766937623 * Marital_StatusMarried
67321     +          +    -0.57546515626468 * Marital_StatusSingle
67322     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
67323     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
67324     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
67325     +        EducationGraduation  +      0.0794165981215 * EducationMaster
67326     +          +    -0.20291653465543 * Marital_StatusDivorced
67327     +          +     0.39547414450617 * Marital_StatusMarried
67328     +          +    -0.37001331184001 * Marital_StatusSingle
67329     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
67330     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
67331     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
67332     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
67333     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
67334     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
67335     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
67336     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
67337     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
67338     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
67339     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
67340     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
67341     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
67342     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
67343     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
67344     +END;
MPRINT(EM_DIAGRAM):   END;
67345     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67346     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
67347     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
67348     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
67349     +END;
MPRINT(EM_DIAGRAM):   END;
67350     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67351     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
67352     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67353     +
67354     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
67355     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
67356     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
67357     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
67358     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
67359     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67360     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
67361     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
67362     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
67363     +end;
MPRINT(EM_DIAGRAM):   end;
67364     +else do;
MPRINT(EM_DIAGRAM):   else do;
67365     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
67366     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
67367     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
67368     +   end;
MPRINT(EM_DIAGRAM):   end;
67369     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
67370     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
67371     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
67372     +   end;
MPRINT(EM_DIAGRAM):   end;
67373     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67374     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
67375     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
67376     +   end;
MPRINT(EM_DIAGRAM):   end;
67377     +end;
MPRINT(EM_DIAGRAM):   end;
67378     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67379     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
67380     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
67381     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
67382     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
67383     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
67384     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
67385     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
67386     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
67387     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
67388     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
67389     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
67390     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
67391     +END;
MPRINT(EM_DIAGRAM):   END;
67392     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67393     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
67394     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
67395     +END;
MPRINT(EM_DIAGRAM):   END;
67396     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
67397     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
67398     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
67399     +END;
MPRINT(EM_DIAGRAM):   END;
67400     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
67401     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
67402     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
67403     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
67404     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
67405     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
67406     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
67407     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67408     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
67409     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67410     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
67411     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
67412     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
67413     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
67414     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
67415     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
67416     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
67417     +END;
MPRINT(EM_DIAGRAM):   END;
67418     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
67419     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
67420     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
67421     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
67422     +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
67423     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67424     +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
67425     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67426     +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
67427     +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
67428     +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
67429     +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
67430     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67431     +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
67432     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67433     +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
67434     +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
67435     +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
67436     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67437     +* Ensmbl24: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 3 of 7;
67438     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67439     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67440     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
67441     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
67442     +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
67443     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
67444     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
67445     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
67446     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
67447     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
67448     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
67449     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
67450     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
67451     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
67452     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
67453     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
67454     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
67455     +LENGTH _WARN_ $4
67456     +      F_DepVar  $ 12
67457     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
67458     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
67459     +
67460     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
67461     +
67462     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
67463     +
67464     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
67465     +
67466     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
67467     +
67468     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
67469     +
67470     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
67471     +
67472     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
67473     +
67474     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
67475     +
67476     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
67477     +
67478     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
67479     +
67480     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
67481     +
67482     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
67483     +
67484     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
67485     +
67486     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
67487     +
67488     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
67489     +
67490     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
67491     +
67492     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
67493     +
67494     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
67495     +
67496     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
67497     +
67498     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
67499     +
67500     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
67501     +
67502     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
67503     +
67504     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
67505     +
67506     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
67507     +
67508     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
67509     +
67510     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
67511     +
67512     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
67513     +
67514     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
67515     +
67516     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
67517     +
67518     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
67519     +
67520     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
67521     +
67522     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
67523     +
67524     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
67525     +
67526     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
67527     +
67528     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
67529     +
67530     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
67531     +
67532     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
67533     +
67534     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
67535     +
67536     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
67537     +
67538     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
67539     +
67540     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
67541     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
67542     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
67543     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
67544     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67545     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67546     +end;
MPRINT(EM_DIAGRAM):   end;
67547     +else do;
MPRINT(EM_DIAGRAM):   else do;
67548     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67549     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
67550     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67551     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67552     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
67553     +   end;
MPRINT(EM_DIAGRAM):   end;
67554     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67555     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
67556     +   end;
MPRINT(EM_DIAGRAM):   end;
67557     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67558     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
67559     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67560     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67561     +   end;
MPRINT(EM_DIAGRAM):   end;
67562     +end;
MPRINT(EM_DIAGRAM):   end;
67563     +
67564     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
67565     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
67566     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
67567     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
67568     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67569     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67570     +end;
MPRINT(EM_DIAGRAM):   end;
67571     +else do;
MPRINT(EM_DIAGRAM):   else do;
67572     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67573     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
67574     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67575     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67576     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
67577     +   end;
MPRINT(EM_DIAGRAM):   end;
67578     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67579     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
67580     +   end;
MPRINT(EM_DIAGRAM):   end;
67581     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67582     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
67583     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67584     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67585     +   end;
MPRINT(EM_DIAGRAM):   end;
67586     +end;
MPRINT(EM_DIAGRAM):   end;
67587     +
67588     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
67589     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
67590     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
67591     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
67592     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67593     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67594     +end;
MPRINT(EM_DIAGRAM):   end;
67595     +else do;
MPRINT(EM_DIAGRAM):   else do;
67596     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67597     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
67598     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67599     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67600     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
67601     +   end;
MPRINT(EM_DIAGRAM):   end;
67602     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67603     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
67604     +   end;
MPRINT(EM_DIAGRAM):   end;
67605     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67606     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
67607     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67608     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67609     +   end;
MPRINT(EM_DIAGRAM):   end;
67610     +end;
MPRINT(EM_DIAGRAM):   end;
67611     +
67612     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
67613     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
67614     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
67615     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
67616     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67617     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67618     +end;
MPRINT(EM_DIAGRAM):   end;
67619     +else do;
MPRINT(EM_DIAGRAM):   else do;
67620     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67621     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
67622     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67623     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67624     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
67625     +   end;
MPRINT(EM_DIAGRAM):   end;
67626     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67627     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
67628     +   end;
MPRINT(EM_DIAGRAM):   end;
67629     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67630     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
67631     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67632     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67633     +   end;
MPRINT(EM_DIAGRAM):   end;
67634     +end;
MPRINT(EM_DIAGRAM):   end;
67635     +
67636     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
67637     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
67638     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
67639     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
67640     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67641     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67642     +end;
MPRINT(EM_DIAGRAM):   end;
67643     +else do;
MPRINT(EM_DIAGRAM):   else do;
67644     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67645     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
67646     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67647     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67648     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
67649     +   end;
MPRINT(EM_DIAGRAM):   end;
67650     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67651     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
67652     +   end;
MPRINT(EM_DIAGRAM):   end;
67653     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67654     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
67655     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67656     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67657     +   end;
MPRINT(EM_DIAGRAM):   end;
67658     +end;
MPRINT(EM_DIAGRAM):   end;
67659     +
67660     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
67661     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
67662     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
67663     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
67664     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67665     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67666     +end;
MPRINT(EM_DIAGRAM):   end;
67667     +else do;
MPRINT(EM_DIAGRAM):   else do;
67668     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67669     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
67670     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67671     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
67672     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
67673     +   end;
MPRINT(EM_DIAGRAM):   end;
67674     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
67675     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
67676     +   end;
MPRINT(EM_DIAGRAM):   end;
67677     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67678     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
67679     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67680     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67681     +   end;
MPRINT(EM_DIAGRAM):   end;
67682     +end;
MPRINT(EM_DIAGRAM):   end;
67683     +
67684     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
67685     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
67686     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
67687     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
67688     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67689     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67690     +end;
MPRINT(EM_DIAGRAM):   end;
67691     +else do;
MPRINT(EM_DIAGRAM):   else do;
67692     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
67693     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
67694     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67695     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
67696     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
67697     +   end;
MPRINT(EM_DIAGRAM):   end;
67698     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
67699     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
67700     +   end;
MPRINT(EM_DIAGRAM):   end;
67701     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67702     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
67703     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67704     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67705     +   end;
MPRINT(EM_DIAGRAM):   end;
67706     +end;
MPRINT(EM_DIAGRAM):   end;
67707     +
67708     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
67709     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
67710     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
67711     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
67712     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
67713     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
67714     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
67715     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
67716     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
67717     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
67718     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
67719     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
67720     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67721     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67722     +end;
MPRINT(EM_DIAGRAM):   end;
67723     +else do;
MPRINT(EM_DIAGRAM):   else do;
67724     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
67725     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
67726     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67727     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
67728     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
67729     +   end;
MPRINT(EM_DIAGRAM):   end;
67730     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
67731     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
67732     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
67733     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
67734     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
67735     +   end;
MPRINT(EM_DIAGRAM):   end;
67736     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
67737     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
67738     +   end;
MPRINT(EM_DIAGRAM):   end;
67739     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
67740     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
67741     +   end;
MPRINT(EM_DIAGRAM):   end;
67742     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
67743     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
67744     +   end;
MPRINT(EM_DIAGRAM):   end;
67745     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67746     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
67747     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
67748     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
67749     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
67750     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67751     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67752     +   end;
MPRINT(EM_DIAGRAM):   end;
67753     +end;
MPRINT(EM_DIAGRAM):   end;
67754     +
67755     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
67756     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
67757     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
67758     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
67759     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
67760     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
67761     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
67762     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
67763     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
67764     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
67765     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
67766     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
67767     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
67768     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
67769     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67770     +end;
MPRINT(EM_DIAGRAM):   end;
67771     +else do;
MPRINT(EM_DIAGRAM):   else do;
67772     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
67773     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
67774     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67775     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
67776     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
67777     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
67778     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
67779     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
67780     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67781     +         end;
MPRINT(EM_DIAGRAM):   end;
67782     +         else do;
MPRINT(EM_DIAGRAM):   else do;
67783     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
67784     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
67785     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67786     +            end;
MPRINT(EM_DIAGRAM):   end;
67787     +         end;
MPRINT(EM_DIAGRAM):   end;
67788     +      end;
MPRINT(EM_DIAGRAM):   end;
67789     +      else do;
MPRINT(EM_DIAGRAM):   else do;
67790     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
67791     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
67792     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67793     +         end;
MPRINT(EM_DIAGRAM):   end;
67794     +      end;
MPRINT(EM_DIAGRAM):   end;
67795     +   end;
MPRINT(EM_DIAGRAM):   end;
67796     +   else do;
MPRINT(EM_DIAGRAM):   else do;
67797     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
67798     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
67799     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67800     +      end;
MPRINT(EM_DIAGRAM):   end;
67801     +      else do;
MPRINT(EM_DIAGRAM):   else do;
67802     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
67803     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
67804     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
67805     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
67806     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
67807     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
67808     +         end;
MPRINT(EM_DIAGRAM):   end;
67809     +      end;
MPRINT(EM_DIAGRAM):   end;
67810     +   end;
MPRINT(EM_DIAGRAM):   end;
67811     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
67812     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
67813     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
67814     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
67815     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
67816     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
67817     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67818     +   end;
MPRINT(EM_DIAGRAM):   end;
67819     +end;
MPRINT(EM_DIAGRAM):   end;
67820     +
67821     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67822     +*** Checking missing input Interval
67823     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
67824     +
67825     +IF NMISS(
67826     +   AcceptedCmpTotal ,
67827     +   Age ,
67828     +   Frq ,
67829     +   Income ,
67830     +   Kidhome ,
67831     +   MntFishProducts ,
67832     +   MntFruits ,
67833     +   MntGoldProds ,
67834     +   MntSweetProducts ,
67835     +   MonthsAsCustomer ,
67836     +   NumDealsPurchases ,
67837     +   NumWebVisitsMonth ,
67838     +   RFMstat ,
67839     +   RMntFrq ,
67840     +   Recency ,
67841     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
67842     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
67843     +
67844     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
67845     +END;
MPRINT(EM_DIAGRAM):   END;
67846     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67847     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
67848     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67849     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67850     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
67851     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
67852     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
67853     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
67854     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
67855     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
67856     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
67857     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
67858     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
67859     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
67860     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
67861     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
67862     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
67863     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
67864     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
67865     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
67866     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
67867     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
67868     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
67869     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
67870     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
67871     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
67872     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
67873     +END;
MPRINT(EM_DIAGRAM):   END;
67874     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67875     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
67876     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
67877     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
67878     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
67879     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
67880     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
67881     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
67882     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
67883     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
67884     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
67885     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
67886     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
67887     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
67888     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
67889     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
67890     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
67891     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
67892     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
67893     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
67894     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
67895     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
67896     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
67897     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
67898     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
67899     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
67900     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
67901     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
67902     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
67903     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
67904     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
67905     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
67906     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
67907     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
67908     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
67909     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
67910     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
67911     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
67912     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
67913     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
67914     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
67915     +END;
MPRINT(EM_DIAGRAM):   END;
67916     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67917     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
67918     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67919     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67920     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
67921     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67922     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67923     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
67924     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67925     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
67926     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
67927     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
67928     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
67929     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
67930     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
67931     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
67932     +          +     0.07696704519183 * S_MonthsAsCustomer
67933     +          +     0.06885982009617 * S_NumDealsPurchases
67934     +          +     0.18284147478918 * S_NumWebVisitsMonth
67935     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
67936     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
67937     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
67938     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
67939     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
67940     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
67941     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
67942     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
67943     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
67944     +          +     0.19400730773464 * S_MonthsAsCustomer
67945     +          +    -1.36455521037197 * S_NumDealsPurchases
67946     +          +    -1.07068059346196 * S_NumWebVisitsMonth
67947     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
67948     +        S_RMntFrq  +     1.36066079800227 * S_Recency
67949     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
67950     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
67951     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
67952     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
67953     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
67954     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
67955     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
67956     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
67957     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
67958     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
67959     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
67960     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
67961     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
67962     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
67963     +          +     0.23432241402098 * Marital_StatusDivorced
67964     +          +    -0.46302700269027 * Marital_StatusMarried
67965     +          +      0.4032168653504 * Marital_StatusSingle
67966     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
67967     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
67968     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
67969     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
67970     +          +    -0.31347503340603 * Marital_StatusDivorced
67971     +          +    -0.20319530959178 * Marital_StatusMarried
67972     +          +     0.48298350411196 * Marital_StatusSingle
67973     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
67974     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
67975     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
67976     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
67977     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
67978     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
67979     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
67980     +END;
MPRINT(EM_DIAGRAM):   END;
67981     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
67982     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
67983     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
67984     +END;
MPRINT(EM_DIAGRAM):   END;
67985     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67986     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
67987     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
67988     +
67989     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
67990     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
67991     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
67992     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
67993     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
67994     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
67995     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
67996     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
67997     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
67998     +end;
MPRINT(EM_DIAGRAM):   end;
67999     +else do;
MPRINT(EM_DIAGRAM):   else do;
68000     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
68001     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
68002     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
68003     +   end;
MPRINT(EM_DIAGRAM):   end;
68004     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
68005     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
68006     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
68007     +   end;
MPRINT(EM_DIAGRAM):   end;
68008     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68009     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
68010     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
68011     +   end;
MPRINT(EM_DIAGRAM):   end;
68012     +end;
MPRINT(EM_DIAGRAM):   end;
68013     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68014     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
68015     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
68016     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
68017     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
68018     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
68019     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
68020     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
68021     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
68022     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
68023     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
68024     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
68025     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
68026     +END;
MPRINT(EM_DIAGRAM):   END;
68027     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68028     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
68029     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
68030     +END;
MPRINT(EM_DIAGRAM):   END;
68031     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
68032     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
68033     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
68034     +END;
MPRINT(EM_DIAGRAM):   END;
68035     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
68036     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
68037     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
68038     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
68039     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
68040     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
68041     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
68042     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68043     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
68044     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68045     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
68046     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
68047     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
68048     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
68049     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
68050     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
68051     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
68052     +END;
MPRINT(EM_DIAGRAM):   END;
68053     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
68054     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
68055     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
68056     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
68057     +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
68058     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68059     +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
68060     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68061     +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
68062     +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
68063     +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
68064     +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
68065     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68066     +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
68067     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68068     +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
68069     +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
68070     +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
68071     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68072     +* Ensmbl24: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 4 of 7;
68073     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68074     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68075     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
68076     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
68077     +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
68078     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68079     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
68080     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
68081     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
68082     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
68083     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
68084     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
68085     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
68086     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
68087     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
68088     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
68089     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
68090     +LENGTH _WARN_ $4
68091     +      F_DepVar  $ 12
68092     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
68093     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
68094     +
68095     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
68096     +
68097     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
68098     +
68099     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
68100     +
68101     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
68102     +
68103     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
68104     +
68105     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
68106     +
68107     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
68108     +
68109     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
68110     +
68111     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
68112     +
68113     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
68114     +
68115     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
68116     +
68117     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
68118     +
68119     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
68120     +
68121     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
68122     +
68123     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
68124     +
68125     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
68126     +
68127     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
68128     +
68129     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
68130     +
68131     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
68132     +
68133     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
68134     +
68135     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
68136     +
68137     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
68138     +
68139     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
68140     +
68141     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
68142     +
68143     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
68144     +
68145     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
68146     +
68147     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
68148     +
68149     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
68150     +
68151     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
68152     +
68153     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
68154     +
68155     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
68156     +
68157     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
68158     +
68159     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
68160     +
68161     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
68162     +
68163     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
68164     +
68165     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
68166     +
68167     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
68168     +
68169     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
68170     +
68171     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
68172     +
68173     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
68174     +
68175     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
68176     +
68177     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
68178     +
68179     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
68180     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
68181     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
68182     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
68183     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68184     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68185     +end;
MPRINT(EM_DIAGRAM):   end;
68186     +else do;
MPRINT(EM_DIAGRAM):   else do;
68187     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68188     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
68189     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68190     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68191     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
68192     +   end;
MPRINT(EM_DIAGRAM):   end;
68193     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68194     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
68195     +   end;
MPRINT(EM_DIAGRAM):   end;
68196     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68197     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
68198     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68199     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68200     +   end;
MPRINT(EM_DIAGRAM):   end;
68201     +end;
MPRINT(EM_DIAGRAM):   end;
68202     +
68203     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
68204     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
68205     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
68206     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
68207     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68208     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68209     +end;
MPRINT(EM_DIAGRAM):   end;
68210     +else do;
MPRINT(EM_DIAGRAM):   else do;
68211     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68212     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
68213     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68214     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68215     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
68216     +   end;
MPRINT(EM_DIAGRAM):   end;
68217     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68218     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
68219     +   end;
MPRINT(EM_DIAGRAM):   end;
68220     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68221     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
68222     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68223     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68224     +   end;
MPRINT(EM_DIAGRAM):   end;
68225     +end;
MPRINT(EM_DIAGRAM):   end;
68226     +
68227     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
68228     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
68229     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
68230     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
68231     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68232     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68233     +end;
MPRINT(EM_DIAGRAM):   end;
68234     +else do;
MPRINT(EM_DIAGRAM):   else do;
68235     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68236     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
68237     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68238     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68239     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
68240     +   end;
MPRINT(EM_DIAGRAM):   end;
68241     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68242     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
68243     +   end;
MPRINT(EM_DIAGRAM):   end;
68244     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68245     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
68246     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68247     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68248     +   end;
MPRINT(EM_DIAGRAM):   end;
68249     +end;
MPRINT(EM_DIAGRAM):   end;
68250     +
68251     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
68252     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
68253     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
68254     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
68255     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68256     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68257     +end;
MPRINT(EM_DIAGRAM):   end;
68258     +else do;
MPRINT(EM_DIAGRAM):   else do;
68259     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68260     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
68261     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68262     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68263     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
68264     +   end;
MPRINT(EM_DIAGRAM):   end;
68265     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68266     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
68267     +   end;
MPRINT(EM_DIAGRAM):   end;
68268     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68269     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
68270     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68271     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68272     +   end;
MPRINT(EM_DIAGRAM):   end;
68273     +end;
MPRINT(EM_DIAGRAM):   end;
68274     +
68275     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
68276     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
68277     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
68278     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
68279     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68280     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68281     +end;
MPRINT(EM_DIAGRAM):   end;
68282     +else do;
MPRINT(EM_DIAGRAM):   else do;
68283     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68284     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
68285     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68286     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68287     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
68288     +   end;
MPRINT(EM_DIAGRAM):   end;
68289     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68290     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
68291     +   end;
MPRINT(EM_DIAGRAM):   end;
68292     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68293     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
68294     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68295     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68296     +   end;
MPRINT(EM_DIAGRAM):   end;
68297     +end;
MPRINT(EM_DIAGRAM):   end;
68298     +
68299     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
68300     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
68301     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
68302     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
68303     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68304     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68305     +end;
MPRINT(EM_DIAGRAM):   end;
68306     +else do;
MPRINT(EM_DIAGRAM):   else do;
68307     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68308     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
68309     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68310     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68311     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
68312     +   end;
MPRINT(EM_DIAGRAM):   end;
68313     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68314     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
68315     +   end;
MPRINT(EM_DIAGRAM):   end;
68316     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68317     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
68318     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68319     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68320     +   end;
MPRINT(EM_DIAGRAM):   end;
68321     +end;
MPRINT(EM_DIAGRAM):   end;
68322     +
68323     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
68324     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
68325     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
68326     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
68327     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68328     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68329     +end;
MPRINT(EM_DIAGRAM):   end;
68330     +else do;
MPRINT(EM_DIAGRAM):   else do;
68331     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68332     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
68333     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68334     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
68335     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
68336     +   end;
MPRINT(EM_DIAGRAM):   end;
68337     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
68338     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
68339     +   end;
MPRINT(EM_DIAGRAM):   end;
68340     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68341     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
68342     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68343     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68344     +   end;
MPRINT(EM_DIAGRAM):   end;
68345     +end;
MPRINT(EM_DIAGRAM):   end;
68346     +
68347     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
68348     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
68349     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
68350     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
68351     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
68352     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
68353     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
68354     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
68355     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
68356     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
68357     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
68358     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
68359     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68360     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68361     +end;
MPRINT(EM_DIAGRAM):   end;
68362     +else do;
MPRINT(EM_DIAGRAM):   else do;
68363     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
68364     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
68365     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68366     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
68367     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
68368     +   end;
MPRINT(EM_DIAGRAM):   end;
68369     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
68370     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
68371     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
68372     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
68373     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
68374     +   end;
MPRINT(EM_DIAGRAM):   end;
68375     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
68376     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
68377     +   end;
MPRINT(EM_DIAGRAM):   end;
68378     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
68379     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
68380     +   end;
MPRINT(EM_DIAGRAM):   end;
68381     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
68382     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
68383     +   end;
MPRINT(EM_DIAGRAM):   end;
68384     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68385     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
68386     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
68387     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
68388     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
68389     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68390     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68391     +   end;
MPRINT(EM_DIAGRAM):   end;
68392     +end;
MPRINT(EM_DIAGRAM):   end;
68393     +
68394     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
68395     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
68396     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
68397     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
68398     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
68399     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
68400     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
68401     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
68402     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
68403     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
68404     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
68405     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
68406     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
68407     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68408     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68409     +end;
MPRINT(EM_DIAGRAM):   end;
68410     +else do;
MPRINT(EM_DIAGRAM):   else do;
68411     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
68412     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
68413     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68414     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
68415     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
68416     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
68417     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
68418     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
68419     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68420     +         end;
MPRINT(EM_DIAGRAM):   end;
68421     +         else do;
MPRINT(EM_DIAGRAM):   else do;
68422     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
68423     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
68424     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68425     +            end;
MPRINT(EM_DIAGRAM):   end;
68426     +         end;
MPRINT(EM_DIAGRAM):   end;
68427     +      end;
MPRINT(EM_DIAGRAM):   end;
68428     +      else do;
MPRINT(EM_DIAGRAM):   else do;
68429     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
68430     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
68431     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68432     +         end;
MPRINT(EM_DIAGRAM):   end;
68433     +      end;
MPRINT(EM_DIAGRAM):   end;
68434     +   end;
MPRINT(EM_DIAGRAM):   end;
68435     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68436     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
68437     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
68438     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68439     +      end;
MPRINT(EM_DIAGRAM):   end;
68440     +      else do;
MPRINT(EM_DIAGRAM):   else do;
68441     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
68442     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
68443     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
68444     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
68445     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
68446     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
68447     +         end;
MPRINT(EM_DIAGRAM):   end;
68448     +      end;
MPRINT(EM_DIAGRAM):   end;
68449     +   end;
MPRINT(EM_DIAGRAM):   end;
68450     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
68451     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
68452     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
68453     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
68454     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
68455     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68456     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68457     +   end;
MPRINT(EM_DIAGRAM):   end;
68458     +end;
MPRINT(EM_DIAGRAM):   end;
68459     +
68460     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68461     +*** Checking missing input Interval
68462     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
68463     +
68464     +IF NMISS(
68465     +   AcceptedCmpTotal ,
68466     +   Age ,
68467     +   Frq ,
68468     +   Income ,
68469     +   Kidhome ,
68470     +   MntFishProducts ,
68471     +   MntFruits ,
68472     +   MntGoldProds ,
68473     +   MntSweetProducts ,
68474     +   MonthsAsCustomer ,
68475     +   NumDealsPurchases ,
68476     +   NumWebVisitsMonth ,
68477     +   RFMstat ,
68478     +   RMntFrq ,
68479     +   Recency ,
68480     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
68481     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
68482     +
68483     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68484     +END;
MPRINT(EM_DIAGRAM):   END;
68485     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68486     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
68487     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68488     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68489     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
68490     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
68491     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
68492     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
68493     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
68494     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
68495     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
68496     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
68497     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
68498     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
68499     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
68500     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
68501     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
68502     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
68503     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
68504     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
68505     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
68506     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
68507     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
68508     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
68509     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
68510     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
68511     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
68512     +END;
MPRINT(EM_DIAGRAM):   END;
68513     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68514     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
68515     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
68516     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
68517     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
68518     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
68519     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
68520     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
68521     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
68522     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
68523     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
68524     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
68525     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
68526     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
68527     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
68528     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
68529     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
68530     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
68531     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
68532     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
68533     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
68534     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
68535     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
68536     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
68537     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
68538     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
68539     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
68540     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
68541     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
68542     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
68543     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
68544     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
68545     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
68546     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
68547     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
68548     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
68549     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
68550     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
68551     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
68552     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
68553     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
68554     +END;
MPRINT(EM_DIAGRAM):   END;
68555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68556     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
68557     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68559     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
68560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68561     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68562     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
68563     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68564     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68565     +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
68566     +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
68567     +        S_Income  +     0.27663215475285 * S_Kidhome
68568     +          +    -0.02861873561507 * S_MntFishProducts
68569     +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
68570     +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
68571     +          +    -0.30820227749029 * S_MonthsAsCustomer
68572     +          +    -0.64335583461867 * S_NumDealsPurchases
68573     +          +    -0.40339200335235 * S_NumWebVisitsMonth
68574     +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
68575     +        S_RMntFrq  +     0.73297917115427 * S_Recency
68576     +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
68577     +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
68578     +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
68579     +        S_Income  +     0.04677082637593 * S_Kidhome
68580     +          +    -0.26310923797495 * S_MntFishProducts
68581     +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
68582     +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
68583     +          +     0.31464974024806 * S_MonthsAsCustomer
68584     +          +    -0.51422897206707 * S_NumDealsPurchases
68585     +          +    -0.70210448968741 * S_NumWebVisitsMonth
68586     +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
68587     +        S_RMntFrq  +     1.12297422526954 * S_Recency
68588     +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
68589     +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
68590     +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
68591     +        S_Income  +    -0.76074905594112 * S_Kidhome
68592     +          +     0.28012200156756 * S_MntFishProducts
68593     +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
68594     +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
68595     +          +    -0.02209353426555 * S_MonthsAsCustomer
68596     +          +    -0.30351716506195 * S_NumDealsPurchases
68597     +          +    -0.54961975756206 * S_NumWebVisitsMonth
68598     +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
68599     +        S_RMntFrq  +     0.84276565192556 * S_Recency
68600     +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
68601     +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
68602     +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
68603     +        S_Income  +     0.68593841144377 * S_Kidhome
68604     +          +     -0.0587169446037 * S_MntFishProducts
68605     +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
68606     +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
68607     +          +    -0.17220981900732 * S_MonthsAsCustomer
68608     +          +     0.27940162953795 * S_NumDealsPurchases
68609     +          +    -0.04761461934562 * S_NumWebVisitsMonth
68610     +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
68611     +        S_RMntFrq  +     0.68962447302378 * S_Recency
68612     +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
68613     +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
68614     +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
68615     +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
68616     +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
68617     +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
68618     +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
68619     +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
68620     +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
68621     +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
68622     +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
68623     +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
68624     +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
68625     +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
68626     +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
68627     +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
68628     +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
68629     +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
68630     +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
68631     +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
68632     +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
68633     +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
68634     +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
68635     +        EducationGraduation  +    -0.09512206973791 * EducationMaster
68636     +          +     0.04284251520428 * Marital_StatusDivorced
68637     +          +    -0.08591343257218 * Marital_StatusMarried
68638     +          +     0.43667281622253 * Marital_StatusSingle
68639     +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
68640     +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
68641     +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
68642     +        EducationGraduation  +    -0.17955750532548 * EducationMaster
68643     +          +    -0.10823631131846 * Marital_StatusDivorced
68644     +          +     0.15344450170599 * Marital_StatusMarried
68645     +          +    -0.00222187507332 * Marital_StatusSingle
68646     +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
68647     +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
68648     +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
68649     +        EducationGraduation  +     0.06012880669469 * EducationMaster
68650     +          +    -0.20523044713629 * Marital_StatusDivorced
68651     +          +     0.15779331320414 * Marital_StatusMarried
68652     +          +    -0.33273914160638 * Marital_StatusSingle
68653     +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
68654     +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
68655     +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
68656     +        EducationGraduation  +      0.3018512119562 * EducationMaster
68657     +          +    -0.24973986133996 * Marital_StatusDivorced
68658     +          +     1.15862092191103 * Marital_StatusMarried
68659     +          +    -0.91451543179937 * Marital_StatusSingle
68660     +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
68661     +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
68662     +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
68663     +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
68664     +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
68665     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
68666     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
68667     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
68668     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
68669     +END;
MPRINT(EM_DIAGRAM):   END;
68670     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68671     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
68672     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
68673     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
68674     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
68675     +END;
MPRINT(EM_DIAGRAM):   END;
68676     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68677     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
68678     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68679     +
68680     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
68681     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
68682     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
68683     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
68684     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
68685     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68686     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
68687     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
68688     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
68689     +end;
MPRINT(EM_DIAGRAM):   end;
68690     +else do;
MPRINT(EM_DIAGRAM):   else do;
68691     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
68692     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
68693     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
68694     +   end;
MPRINT(EM_DIAGRAM):   end;
68695     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
68696     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
68697     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
68698     +   end;
MPRINT(EM_DIAGRAM):   end;
68699     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68700     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
68701     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
68702     +   end;
MPRINT(EM_DIAGRAM):   end;
68703     +end;
MPRINT(EM_DIAGRAM):   end;
68704     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
68705     +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
68706     +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
68707     +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
68708     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
68709     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
68710     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
68711     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
68712     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
68713     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
68714     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
68715     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
68716     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
68717     +END;
MPRINT(EM_DIAGRAM):   END;
68718     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
68719     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
68720     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
68721     +END;
MPRINT(EM_DIAGRAM):   END;
68722     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
68723     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
68724     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
68725     +END;
MPRINT(EM_DIAGRAM):   END;
68726     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
68727     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
68728     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
68729     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
68730     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
68731     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
68732     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
68733     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68734     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
68735     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
68736     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
68737     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
68738     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
68739     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
68740     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
68741     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
68742     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
68743     +END;
MPRINT(EM_DIAGRAM):   END;
68744     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
68745     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
68746     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
68747     +drop
68748     +H11
68749     +H12
68750     +H13
68751     +H14
68752     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
68753     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
68754     +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
68755     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68756     +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
68757     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68758     +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
68759     +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
68760     +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
68761     +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
68762     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68763     +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
68764     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68765     +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
68766     +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
68767     +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
68768     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68769     +* Ensmbl24: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 5 of 7;
68770     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68771     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68772     +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
68773     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
68774     +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
68775     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
68776     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
68777     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
68778     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
68779     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
68780     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
68781     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
68782     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
68783     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
68784     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
68785     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
68786     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
68787     +LENGTH _WARN_ $4
68788     +      F_DepVar  $ 12
68789     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
68790     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
68791     +
68792     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
68793     +
68794     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
68795     +
68796     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
68797     +
68798     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
68799     +
68800     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
68801     +
68802     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
68803     +
68804     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
68805     +
68806     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
68807     +
68808     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
68809     +
68810     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
68811     +
68812     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
68813     +
68814     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
68815     +
68816     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
68817     +
68818     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
68819     +
68820     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
68821     +
68822     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
68823     +
68824     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
68825     +
68826     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
68827     +
68828     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
68829     +
68830     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
68831     +
68832     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
68833     +
68834     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
68835     +
68836     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
68837     +
68838     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
68839     +
68840     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
68841     +
68842     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
68843     +
68844     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
68845     +
68846     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
68847     +
68848     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
68849     +
68850     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
68851     +
68852     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
68853     +
68854     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
68855     +
68856     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
68857     +
68858     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
68859     +
68860     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
68861     +
68862     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
68863     +
68864     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
68865     +
68866     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
68867     +
68868     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
68869     +
68870     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
68871     +
68872     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
68873     +
68874     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
68875     +
68876     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
68877     +
68878     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
68879     +
68880     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
68881     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
68882     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
68883     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
68884     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68885     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68886     +end;
MPRINT(EM_DIAGRAM):   end;
68887     +else do;
MPRINT(EM_DIAGRAM):   else do;
68888     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68889     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
68890     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68891     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68892     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
68893     +   end;
MPRINT(EM_DIAGRAM):   end;
68894     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68895     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
68896     +   end;
MPRINT(EM_DIAGRAM):   end;
68897     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68898     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
68899     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68900     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68901     +   end;
MPRINT(EM_DIAGRAM):   end;
68902     +end;
MPRINT(EM_DIAGRAM):   end;
68903     +
68904     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
68905     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
68906     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
68907     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
68908     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68909     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68910     +end;
MPRINT(EM_DIAGRAM):   end;
68911     +else do;
MPRINT(EM_DIAGRAM):   else do;
68912     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68913     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
68914     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68915     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68916     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
68917     +   end;
MPRINT(EM_DIAGRAM):   end;
68918     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68919     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
68920     +   end;
MPRINT(EM_DIAGRAM):   end;
68921     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68922     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
68923     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68924     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68925     +   end;
MPRINT(EM_DIAGRAM):   end;
68926     +end;
MPRINT(EM_DIAGRAM):   end;
68927     +
68928     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
68929     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
68930     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
68931     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
68932     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68933     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68934     +end;
MPRINT(EM_DIAGRAM):   end;
68935     +else do;
MPRINT(EM_DIAGRAM):   else do;
68936     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68937     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
68938     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68939     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68940     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
68941     +   end;
MPRINT(EM_DIAGRAM):   end;
68942     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68943     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
68944     +   end;
MPRINT(EM_DIAGRAM):   end;
68945     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68946     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
68947     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68948     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68949     +   end;
MPRINT(EM_DIAGRAM):   end;
68950     +end;
MPRINT(EM_DIAGRAM):   end;
68951     +
68952     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
68953     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
68954     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
68955     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
68956     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68957     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68958     +end;
MPRINT(EM_DIAGRAM):   end;
68959     +else do;
MPRINT(EM_DIAGRAM):   else do;
68960     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68961     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
68962     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68963     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68964     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
68965     +   end;
MPRINT(EM_DIAGRAM):   end;
68966     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68967     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
68968     +   end;
MPRINT(EM_DIAGRAM):   end;
68969     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68970     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
68971     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68972     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68973     +   end;
MPRINT(EM_DIAGRAM):   end;
68974     +end;
MPRINT(EM_DIAGRAM):   end;
68975     +
68976     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
68977     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
68978     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
68979     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
68980     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
68981     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68982     +end;
MPRINT(EM_DIAGRAM):   end;
68983     +else do;
MPRINT(EM_DIAGRAM):   else do;
68984     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
68985     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
68986     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
68987     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
68988     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
68989     +   end;
MPRINT(EM_DIAGRAM):   end;
68990     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
68991     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
68992     +   end;
MPRINT(EM_DIAGRAM):   end;
68993     +   else do;
MPRINT(EM_DIAGRAM):   else do;
68994     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
68995     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
68996     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
68997     +   end;
MPRINT(EM_DIAGRAM):   end;
68998     +end;
MPRINT(EM_DIAGRAM):   end;
68999     +
69000     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
69001     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
69002     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
69003     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
69004     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69005     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69006     +end;
MPRINT(EM_DIAGRAM):   end;
69007     +else do;
MPRINT(EM_DIAGRAM):   else do;
69008     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69009     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
69010     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69011     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69012     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
69013     +   end;
MPRINT(EM_DIAGRAM):   end;
69014     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69015     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
69016     +   end;
MPRINT(EM_DIAGRAM):   end;
69017     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69018     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
69019     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69020     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69021     +   end;
MPRINT(EM_DIAGRAM):   end;
69022     +end;
MPRINT(EM_DIAGRAM):   end;
69023     +
69024     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
69025     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
69026     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
69027     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
69028     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69029     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69030     +end;
MPRINT(EM_DIAGRAM):   end;
69031     +else do;
MPRINT(EM_DIAGRAM):   else do;
69032     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69033     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
69034     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69035     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
69036     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
69037     +   end;
MPRINT(EM_DIAGRAM):   end;
69038     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
69039     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
69040     +   end;
MPRINT(EM_DIAGRAM):   end;
69041     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69042     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
69043     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69044     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69045     +   end;
MPRINT(EM_DIAGRAM):   end;
69046     +end;
MPRINT(EM_DIAGRAM):   end;
69047     +
69048     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
69049     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
69050     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
69051     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
69052     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
69053     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
69054     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
69055     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
69056     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
69057     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
69058     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
69059     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
69060     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69061     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69062     +end;
MPRINT(EM_DIAGRAM):   end;
69063     +else do;
MPRINT(EM_DIAGRAM):   else do;
69064     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
69065     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
69066     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69067     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
69068     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
69069     +   end;
MPRINT(EM_DIAGRAM):   end;
69070     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
69071     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
69072     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
69073     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
69074     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
69075     +   end;
MPRINT(EM_DIAGRAM):   end;
69076     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
69077     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
69078     +   end;
MPRINT(EM_DIAGRAM):   end;
69079     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
69080     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
69081     +   end;
MPRINT(EM_DIAGRAM):   end;
69082     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
69083     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
69084     +   end;
MPRINT(EM_DIAGRAM):   end;
69085     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69086     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
69087     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
69088     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
69089     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
69090     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69091     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69092     +   end;
MPRINT(EM_DIAGRAM):   end;
69093     +end;
MPRINT(EM_DIAGRAM):   end;
69094     +
69095     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
69096     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
69097     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
69098     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
69099     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
69100     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
69101     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
69102     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
69103     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
69104     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
69105     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
69106     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
69107     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
69108     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69109     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69110     +end;
MPRINT(EM_DIAGRAM):   end;
69111     +else do;
MPRINT(EM_DIAGRAM):   else do;
69112     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
69113     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
69114     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69115     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
69116     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
69117     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
69118     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
69119     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
69120     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69121     +         end;
MPRINT(EM_DIAGRAM):   end;
69122     +         else do;
MPRINT(EM_DIAGRAM):   else do;
69123     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
69124     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
69125     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69126     +            end;
MPRINT(EM_DIAGRAM):   end;
69127     +         end;
MPRINT(EM_DIAGRAM):   end;
69128     +      end;
MPRINT(EM_DIAGRAM):   end;
69129     +      else do;
MPRINT(EM_DIAGRAM):   else do;
69130     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
69131     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
69132     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69133     +         end;
MPRINT(EM_DIAGRAM):   end;
69134     +      end;
MPRINT(EM_DIAGRAM):   end;
69135     +   end;
MPRINT(EM_DIAGRAM):   end;
69136     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69137     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
69138     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
69139     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69140     +      end;
MPRINT(EM_DIAGRAM):   end;
69141     +      else do;
MPRINT(EM_DIAGRAM):   else do;
69142     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
69143     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
69144     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
69145     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
69146     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
69147     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69148     +         end;
MPRINT(EM_DIAGRAM):   end;
69149     +      end;
MPRINT(EM_DIAGRAM):   end;
69150     +   end;
MPRINT(EM_DIAGRAM):   end;
69151     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
69152     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
69153     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
69154     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
69155     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
69156     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69157     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69158     +   end;
MPRINT(EM_DIAGRAM):   end;
69159     +end;
MPRINT(EM_DIAGRAM):   end;
69160     +
69161     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69162     +*** Checking missing input Interval
69163     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
69164     +
69165     +IF NMISS(
69166     +   AcceptedCmpTotal ,
69167     +   Age ,
69168     +   Frq ,
69169     +   Income ,
69170     +   Kidhome ,
69171     +   MntFishProducts ,
69172     +   MntFruits ,
69173     +   MntGoldProds ,
69174     +   MntSweetProducts ,
69175     +   MonthsAsCustomer ,
69176     +   NumDealsPurchases ,
69177     +   NumWebVisitsMonth ,
69178     +   RFMstat ,
69179     +   RMntFrq ,
69180     +   Recency ,
69181     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
69182     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
69183     +
69184     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69185     +END;
MPRINT(EM_DIAGRAM):   END;
69186     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69187     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
69188     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69189     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69190     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
69191     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
69192     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
69193     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
69194     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
69195     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
69196     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
69197     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
69198     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
69199     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
69200     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
69201     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
69202     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
69203     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
69204     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
69205     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
69206     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
69207     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
69208     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
69209     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
69210     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
69211     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
69212     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
69213     +END;
MPRINT(EM_DIAGRAM):   END;
69214     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69215     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
69216     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
69217     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
69218     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
69219     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
69220     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
69221     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
69222     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
69223     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
69224     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
69225     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
69226     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
69227     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
69228     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
69229     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
69230     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
69231     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
69232     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
69233     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
69234     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
69235     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
69236     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
69237     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
69238     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
69239     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
69240     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
69241     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
69242     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
69243     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
69244     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
69245     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
69246     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
69247     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
69248     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
69249     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
69250     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
69251     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
69252     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
69253     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
69254     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
69255     +END;
MPRINT(EM_DIAGRAM):   END;
69256     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69257     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
69258     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69259     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69260     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
69261     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69262     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69263     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
69264     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69265     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69266     +   H11  =    -0.50311574684963 * S_AcceptedCmpTotal  +    -0.18985055644549 *
69267     +        S_Age  +     0.44828804873659 * S_Frq  +    -0.51280008296346 *
69268     +        S_Income  +    -0.07468461691846 * S_Kidhome
69269     +          +    -0.02817334981603 * S_MntFishProducts
69270     +          +    -0.23674836972041 * S_MntFruits  +     0.09571592531833 *
69271     +        S_MntGoldProds  +    -0.09676918994417 * S_MntSweetProducts
69272     +          +     0.11832246824115 * S_MonthsAsCustomer
69273     +          +    -0.06605281991661 * S_NumDealsPurchases
69274     +          +    -0.48924564446119 * S_NumWebVisitsMonth
69275     +          +    -0.46878579854964 * S_RFMstat  +    -0.08286830724047 *
69276     +        S_RMntFrq  +     0.72493722489034 * S_Recency
69277     +          +     0.54759769648457 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.50311574684963 * S_AcceptedCmpTotal + -0.18985055644549 * S_Age 
+ 0.44828804873659 * S_Frq + -0.51280008296346 * S_Income + -0.07468461691846 * S_Kidhome + 
-0.02817334981603 * S_MntFishProducts + -0.23674836972041 * S_MntFruits + 0.09571592531833 * 
S_MntGoldProds + -0.09676918994417 * S_MntSweetProducts + 0.11832246824115 * 
S_MonthsAsCustomer + -0.06605281991661 * S_NumDealsPurchases + -0.48924564446119 * 
S_NumWebVisitsMonth + -0.46878579854964 * S_RFMstat + -0.08286830724047 * S_RMntFrq + 
0.72493722489034 * S_Recency + 0.54759769648457 * S_Teenhome ;
69278     +   H12  =     0.27433541795855 * S_AcceptedCmpTotal  +    -0.13239293741829 *
69279     +        S_Age  +       0.297440346075 * S_Frq  +     0.60301641350325 *
69280     +        S_Income  +    -0.52629295860426 * S_Kidhome
69281     +          +    -0.09281934074994 * S_MntFishProducts
69282     +          +    -0.01139552037387 * S_MntFruits  +    -0.01724648803464 *
69283     +        S_MntGoldProds  +    -0.11213003865462 * S_MntSweetProducts
69284     +          +     0.01420877288416 * S_MonthsAsCustomer
69285     +          +     0.15753030263585 * S_NumDealsPurchases
69286     +          +     0.12839062787468 * S_NumWebVisitsMonth
69287     +          +     0.09918681531437 * S_RFMstat  +     0.28128581499392 *
69288     +        S_RMntFrq  +    -0.77555854798433 * S_Recency
69289     +          +    -0.39696436898966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.27433541795855 * S_AcceptedCmpTotal + -0.13239293741829 * S_Age 
+ 0.297440346075 * S_Frq + 0.60301641350325 * S_Income + -0.52629295860426 * S_Kidhome + 
-0.09281934074994 * S_MntFishProducts + -0.01139552037387 * S_MntFruits + -0.01724648803464 * 
S_MntGoldProds + -0.11213003865462 * S_MntSweetProducts + 0.01420877288416 * 
S_MonthsAsCustomer + 0.15753030263585 * S_NumDealsPurchases + 0.12839062787468 * 
S_NumWebVisitsMonth + 0.09918681531437 * S_RFMstat + 0.28128581499392 * S_RMntFrq + 
-0.77555854798433 * S_Recency + -0.39696436898966 * S_Teenhome ;
69290     +   H13  =     0.03123358805476 * S_AcceptedCmpTotal  +    -0.11998608363847 *
69291     +        S_Age  +     0.08338729365626 * S_Frq  +     0.36926635699098 *
69292     +        S_Income  +     0.00460024601501 * S_Kidhome
69293     +          +    -0.02200799678674 * S_MntFishProducts
69294     +          +     0.17038795346592 * S_MntFruits  +    -0.01191054270128 *
69295     +        S_MntGoldProds  +     0.09461198228745 * S_MntSweetProducts
69296     +          +     0.11175639451728 * S_MonthsAsCustomer
69297     +          +    -0.14915044300238 * S_NumDealsPurchases
69298     +          +     -0.0217132622877 * S_NumWebVisitsMonth
69299     +          +     0.19209945631632 * S_RFMstat  +     0.27685327218371 *
69300     +        S_RMntFrq  +     -0.1114202547513 * S_Recency
69301     +          +    -0.07677627375613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.03123358805476 * S_AcceptedCmpTotal + -0.11998608363847 * S_Age 
+ 0.08338729365626 * S_Frq + 0.36926635699098 * S_Income + 0.00460024601501 * S_Kidhome + 
-0.02200799678674 * S_MntFishProducts + 0.17038795346592 * S_MntFruits + -0.01191054270128 * 
S_MntGoldProds + 0.09461198228745 * S_MntSweetProducts + 0.11175639451728 * S_MonthsAsCustomer 
+ -0.14915044300238 * S_NumDealsPurchases + -0.0217132622877 * S_NumWebVisitsMonth + 
0.19209945631632 * S_RFMstat + 0.27685327218371 * S_RMntFrq + -0.1114202547513 * S_Recency + 
-0.07677627375613 * S_Teenhome ;
69302     +   H14  =      -0.510052563552 * S_AcceptedCmpTotal  +    -0.12652051241051 *
69303     +        S_Age  +    -0.42250950524778 * S_Frq  +    -0.66291360306733 *
69304     +        S_Income  +    -0.50120074528145 * S_Kidhome
69305     +          +     0.44715945861433 * S_MntFishProducts
69306     +          +     0.23552533999892 * S_MntFruits  +    -0.60812570135419 *
69307     +        S_MntGoldProds  +    -0.29436997886251 * S_MntSweetProducts
69308     +          +    -0.16226459240838 * S_MonthsAsCustomer
69309     +          +    -0.66300674579813 * S_NumDealsPurchases
69310     +          +    -0.46113723081205 * S_NumWebVisitsMonth
69311     +          +    -0.28741955047351 * S_RFMstat  +    -0.51342973736897 *
69312     +        S_RMntFrq  +     0.32948062104596 * S_Recency
69313     +          +     0.04630647814801 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.510052563552 * S_AcceptedCmpTotal + -0.12652051241051 * S_Age + 
-0.42250950524778 * S_Frq + -0.66291360306733 * S_Income + -0.50120074528145 * S_Kidhome + 
0.44715945861433 * S_MntFishProducts + 0.23552533999892 * S_MntFruits + -0.60812570135419 * 
S_MntGoldProds + -0.29436997886251 * S_MntSweetProducts + -0.16226459240838 * 
S_MonthsAsCustomer + -0.66300674579813 * S_NumDealsPurchases + -0.46113723081205 * 
S_NumWebVisitsMonth + -0.28741955047351 * S_RFMstat + -0.51342973736897 * S_RMntFrq + 
0.32948062104596 * S_Recency + 0.04630647814801 * S_Teenhome ;
69314     +   H15  =    -0.05552489181258 * S_AcceptedCmpTotal  +      0.3358097664399 *
69315     +        S_Age  +     0.99860330572057 * S_Frq  +     0.33672529961967 *
69316     +        S_Income  +     0.16969714205994 * S_Kidhome
69317     +          +     0.04976308170854 * S_MntFishProducts
69318     +          +     0.17074705999537 * S_MntFruits  +    -0.14669916972196 *
69319     +        S_MntGoldProds  +    -0.09562051744533 * S_MntSweetProducts
69320     +          +     0.17484703075203 * S_MonthsAsCustomer
69321     +          +    -0.55173591551358 * S_NumDealsPurchases
69322     +          +    -0.43823357997032 * S_NumWebVisitsMonth
69323     +          +     0.35315919586696 * S_RFMstat  +    -0.19785503093343 *
69324     +        S_RMntFrq  +     0.71670167585868 * S_Recency
69325     +          +    -0.28983189748238 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.05552489181258 * S_AcceptedCmpTotal + 0.3358097664399 * S_Age + 
0.99860330572057 * S_Frq + 0.33672529961967 * S_Income + 0.16969714205994 * S_Kidhome + 
0.04976308170854 * S_MntFishProducts + 0.17074705999537 * S_MntFruits + -0.14669916972196 * 
S_MntGoldProds + -0.09562051744533 * S_MntSweetProducts + 0.17484703075203 * 
S_MonthsAsCustomer + -0.55173591551358 * S_NumDealsPurchases + -0.43823357997032 * 
S_NumWebVisitsMonth + 0.35315919586696 * S_RFMstat + -0.19785503093343 * S_RMntFrq + 
0.71670167585868 * S_Recency + -0.28983189748238 * S_Teenhome ;
69326     +   H16  =     0.13586107601616 * S_AcceptedCmpTotal  +    -0.03004972131524 *
69327     +        S_Age  +     0.34607777972893 * S_Frq  +     0.04594045147698 *
69328     +        S_Income  +    -0.02355089102951 * S_Kidhome
69329     +          +     0.17666646340328 * S_MntFishProducts
69330     +          +    -0.42460885844972 * S_MntFruits  +      0.1419729562767 *
69331     +        S_MntGoldProds  +    -0.37586377717812 * S_MntSweetProducts
69332     +          +     0.13355805650034 * S_MonthsAsCustomer
69333     +          +     0.14924024487443 * S_NumDealsPurchases
69334     +          +     0.34848278731511 * S_NumWebVisitsMonth
69335     +          +     0.19641659129802 * S_RFMstat  +    -0.04454828782133 *
69336     +        S_RMntFrq  +    -0.80210797166772 * S_Recency
69337     +          +    -0.42106674037771 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.13586107601616 * S_AcceptedCmpTotal + -0.03004972131524 * S_Age 
+ 0.34607777972893 * S_Frq + 0.04594045147698 * S_Income + -0.02355089102951 * S_Kidhome + 
0.17666646340328 * S_MntFishProducts + -0.42460885844972 * S_MntFruits + 0.1419729562767 * 
S_MntGoldProds + -0.37586377717812 * S_MntSweetProducts + 0.13355805650034 * 
S_MonthsAsCustomer + 0.14924024487443 * S_NumDealsPurchases + 0.34848278731511 * 
S_NumWebVisitsMonth + 0.19641659129802 * S_RFMstat + -0.04454828782133 * S_RMntFrq + 
-0.80210797166772 * S_Recency + -0.42106674037771 * S_Teenhome ;
69338     +   H11  = H11  +     0.23614129020735 * AcceptedCmp10
69339     +          +    -0.02084878775169 * AcceptedCmp20  +     0.37466381839371 *
69340     +        AcceptedCmp30  +    -0.73407018983175 * AcceptedCmp40
69341     +          +     0.56003163460043 * AcceptedCmp50  +      0.2232704545414 *
69342     +        Complain0  +    -0.47480864689786 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23614129020735 * AcceptedCmp10 + -0.02084878775169 * 
AcceptedCmp20 + 0.37466381839371 * AcceptedCmp30 + -0.73407018983175 * AcceptedCmp40 + 
0.56003163460043 * AcceptedCmp50 + 0.2232704545414 * Complain0 + -0.47480864689786 * 
HigherEducationBinary0 ;
69343     +   H12  = H12  +    -0.27353744753102 * AcceptedCmp10
69344     +          +    -0.28444143977421 * AcceptedCmp20  +    -0.31024205224044 *
69345     +        AcceptedCmp30  +     -0.3066557522304 * AcceptedCmp40
69346     +          +      0.0549579852636 * AcceptedCmp50  +    -0.14741752806404 *
69347     +        Complain0  +     0.28934485954948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27353744753102 * AcceptedCmp10 + -0.28444143977421 * 
AcceptedCmp20 + -0.31024205224044 * AcceptedCmp30 + -0.3066557522304 * AcceptedCmp40 + 
0.0549579852636 * AcceptedCmp50 + -0.14741752806404 * Complain0 + 0.28934485954948 * 
HigherEducationBinary0 ;
69348     +   H13  = H13  +    -0.04693289193242 * AcceptedCmp10
69349     +          +     0.14083843787444 * AcceptedCmp20  +     0.35339306333755 *
69350     +        AcceptedCmp30  +     0.18353806616447 * AcceptedCmp40
69351     +          +      0.1789056537211 * AcceptedCmp50  +     -0.0778376167893 *
69352     +        Complain0  +    -0.42804187853556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.04693289193242 * AcceptedCmp10 + 0.14083843787444 * 
AcceptedCmp20 + 0.35339306333755 * AcceptedCmp30 + 0.18353806616447 * AcceptedCmp40 + 
0.1789056537211 * AcceptedCmp50 + -0.0778376167893 * Complain0 + -0.42804187853556 * 
HigherEducationBinary0 ;
69353     +   H14  = H14  +     -0.1827583424217 * AcceptedCmp10
69354     +          +     -0.1489832073407 * AcceptedCmp20  +     0.19258598777521 *
69355     +        AcceptedCmp30  +    -0.09050532815681 * AcceptedCmp40
69356     +          +     0.31883627486144 * AcceptedCmp50  +    -0.45377259681397 *
69357     +        Complain0  +     0.15391344192243 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.1827583424217 * AcceptedCmp10 + -0.1489832073407 * 
AcceptedCmp20 + 0.19258598777521 * AcceptedCmp30 + -0.09050532815681 * AcceptedCmp40 + 
0.31883627486144 * AcceptedCmp50 + -0.45377259681397 * Complain0 + 0.15391344192243 * 
HigherEducationBinary0 ;
69358     +   H15  = H15  +     0.27865852917942 * AcceptedCmp10
69359     +          +       0.138287927284 * AcceptedCmp20  +     0.16317472998408 *
69360     +        AcceptedCmp30  +    -0.05372991123771 * AcceptedCmp40
69361     +          +     0.10581002090735 * AcceptedCmp50  +     -0.1352393114395 *
69362     +        Complain0  +    -0.01276168923951 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.27865852917942 * AcceptedCmp10 + 0.138287927284 * 
AcceptedCmp20 + 0.16317472998408 * AcceptedCmp30 + -0.05372991123771 * AcceptedCmp40 + 
0.10581002090735 * AcceptedCmp50 + -0.1352393114395 * Complain0 + -0.01276168923951 * 
HigherEducationBinary0 ;
69363     +   H16  = H16  +     0.54923092188785 * AcceptedCmp10
69364     +          +     0.06197589967314 * AcceptedCmp20  +    -0.16384237649268 *
69365     +        AcceptedCmp30  +     0.19164251659143 * AcceptedCmp40
69366     +          +     -0.0276972319359 * AcceptedCmp50  +     0.24239824406043 *
69367     +        Complain0  +    -0.10846507318888 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.54923092188785 * AcceptedCmp10 + 0.06197589967314 * 
AcceptedCmp20 + -0.16384237649268 * AcceptedCmp30 + 0.19164251659143 * AcceptedCmp40 + 
-0.0276972319359 * AcceptedCmp50 + 0.24239824406043 * Complain0 + -0.10846507318888 * 
HigherEducationBinary0 ;
69368     +   H11  = H11  +     0.04065157802519 * Education2n_Cycle
69369     +          +     0.07405354529938 * EducationBasic  +    -0.27041205259916 *
69370     +        EducationGraduation  +     0.19305680604676 * EducationMaster
69371     +          +    -0.26816495704747 * Marital_StatusDivorced
69372     +          +     0.29673114151649 * Marital_StatusMarried
69373     +          +    -0.41626876543099 * Marital_StatusSingle
69374     +          +     0.09243411924301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04065157802519 * Education2n_Cycle + 0.07405354529938 * 
EducationBasic + -0.27041205259916 * EducationGraduation + 0.19305680604676 * EducationMaster 
+ -0.26816495704747 * Marital_StatusDivorced + 0.29673114151649 * Marital_StatusMarried + 
-0.41626876543099 * Marital_StatusSingle + 0.09243411924301 * Marital_StatusTogether ;
69375     +   H12  = H12  +     0.01524024349677 * Education2n_Cycle
69376     +          +     0.15070908916981 * EducationBasic  +     0.08422316601088 *
69377     +        EducationGraduation  +     -0.1896291301388 * EducationMaster
69378     +          +     0.11744127787391 * Marital_StatusDivorced
69379     +          +    -0.63703361207291 * Marital_StatusMarried
69380     +          +     0.57071735977739 * Marital_StatusSingle
69381     +          +    -0.68611342778218 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01524024349677 * Education2n_Cycle + 0.15070908916981 * 
EducationBasic + 0.08422316601088 * EducationGraduation + -0.1896291301388 * EducationMaster + 
0.11744127787391 * Marital_StatusDivorced + -0.63703361207291 * Marital_StatusMarried + 
0.57071735977739 * Marital_StatusSingle + -0.68611342778218 * Marital_StatusTogether ;
69382     +   H13  = H13  +     0.09605604995794 * Education2n_Cycle
69383     +          +    -0.04349642322783 * EducationBasic  +    -0.11196808839685 *
69384     +        EducationGraduation  +    -0.01261925630364 * EducationMaster
69385     +          +     -0.1701911327485 * Marital_StatusDivorced
69386     +          +     0.22770672854155 * Marital_StatusMarried
69387     +          +    -0.00691671702288 * Marital_StatusSingle
69388     +          +       0.236686912143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09605604995794 * Education2n_Cycle + -0.04349642322783 * 
EducationBasic + -0.11196808839685 * EducationGraduation + -0.01261925630364 * EducationMaster 
+ -0.1701911327485 * Marital_StatusDivorced + 0.22770672854155 * Marital_StatusMarried + 
-0.00691671702288 * Marital_StatusSingle + 0.236686912143 * Marital_StatusTogether ;
69389     +   H14  = H14  +     0.10857873061564 * Education2n_Cycle
69390     +          +     0.16814453951395 * EducationBasic  +    -0.34874327957426 *
69391     +        EducationGraduation  +    -0.25193270521624 * EducationMaster
69392     +          +    -0.15403542879027 * Marital_StatusDivorced
69393     +          +     0.02652360752468 * Marital_StatusMarried
69394     +          +    -0.10723298292119 * Marital_StatusSingle
69395     +          +     0.11548543150405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.10857873061564 * Education2n_Cycle + 0.16814453951395 * 
EducationBasic + -0.34874327957426 * EducationGraduation + -0.25193270521624 * EducationMaster 
+ -0.15403542879027 * Marital_StatusDivorced + 0.02652360752468 * Marital_StatusMarried + 
-0.10723298292119 * Marital_StatusSingle + 0.11548543150405 * Marital_StatusTogether ;
69396     +   H15  = H15  +     0.15880112810083 * Education2n_Cycle
69397     +          +     0.24466813535709 * EducationBasic  +    -0.03905452635368 *
69398     +        EducationGraduation  +    -0.24152136481937 * EducationMaster
69399     +          +    -0.00204417192532 * Marital_StatusDivorced
69400     +          +    -0.16973417192262 * Marital_StatusMarried
69401     +          +     0.23027366297507 * Marital_StatusSingle
69402     +          +     0.08101453661219 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.15880112810083 * Education2n_Cycle + 0.24466813535709 * 
EducationBasic + -0.03905452635368 * EducationGraduation + -0.24152136481937 * EducationMaster 
+ -0.00204417192532 * Marital_StatusDivorced + -0.16973417192262 * Marital_StatusMarried + 
0.23027366297507 * Marital_StatusSingle + 0.08101453661219 * Marital_StatusTogether ;
69403     +   H16  = H16  +     0.06080074855433 * Education2n_Cycle
69404     +          +     0.05712541606796 * EducationBasic  +     0.08565135130429 *
69405     +        EducationGraduation  +    -0.35693831321015 * EducationMaster
69406     +          +     0.23360275712164 * Marital_StatusDivorced
69407     +          +    -0.12276379115508 * Marital_StatusMarried
69408     +          +     0.25482197877469 * Marital_StatusSingle
69409     +          +    -0.38122499701658 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06080074855433 * Education2n_Cycle + 0.05712541606796 * 
EducationBasic + 0.08565135130429 * EducationGraduation + -0.35693831321015 * EducationMaster 
+ 0.23360275712164 * Marital_StatusDivorced + -0.12276379115508 * Marital_StatusMarried + 
0.25482197877469 * Marital_StatusSingle + -0.38122499701658 * Marital_StatusTogether ;
69410     +   H11  =    -1.45785613717334 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.45785613717334 + H11 ;
69411     +   H12  =    -1.39199534011753 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.39199534011753 + H12 ;
69412     +   H13  =     2.43348807391253 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.43348807391253 + H13 ;
69413     +   H14  =    -0.82674437249292 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.82674437249292 + H14 ;
69414     +   H15  =     1.84262829639962 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.84262829639962 + H15 ;
69415     +   H16  =     1.40892711992493 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.40892711992493 + H16 ;
69416     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
69417     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
69418     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
69419     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
69420     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
69421     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
69422     +END;
MPRINT(EM_DIAGRAM):   END;
69423     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69424     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
69425     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
69426     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
69427     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
69428     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
69429     +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
69430     +END;
MPRINT(EM_DIAGRAM):   END;
69431     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69432     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
69433     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69434     +
69435     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
69436     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
69437     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
69438     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
69439     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
69440     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69441     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
69442     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
69443     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
69444     +end;
MPRINT(EM_DIAGRAM):   end;
69445     +else do;
MPRINT(EM_DIAGRAM):   else do;
69446     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
69447     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
69448     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
69449     +   end;
MPRINT(EM_DIAGRAM):   end;
69450     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
69451     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
69452     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
69453     +   end;
MPRINT(EM_DIAGRAM):   end;
69454     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69455     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
69456     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
69457     +   end;
MPRINT(EM_DIAGRAM):   end;
69458     +end;
MPRINT(EM_DIAGRAM):   end;
69459     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69460     +   P_DepVar1  =    -2.98548396417337 * H11  +     3.55440982243177 * H12
69461     +          +    -1.98442501061115 * H13  +    -2.67879549563082 * H14
69462     +          +    -2.68634609959794 * H15  +     3.13238014605319 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.98548396417337 * H11 + 3.55440982243177 * H12 + 
-1.98442501061115 * H13 + -2.67879549563082 * H14 + -2.68634609959794 * H15 + 3.13238014605319 
* H16 ;
69463     +   P_DepVar1  =    -2.49443575387204 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49443575387204 + P_DepVar1 ;
69464     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
69465     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
69466     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
69467     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
69468     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
69469     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
69470     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
69471     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
69472     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
69473     +END;
MPRINT(EM_DIAGRAM):   END;
69474     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69475     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
69476     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
69477     +END;
MPRINT(EM_DIAGRAM):   END;
69478     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
69479     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
69480     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
69481     +END;
MPRINT(EM_DIAGRAM):   END;
69482     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
69483     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
69484     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
69485     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
69486     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
69487     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
69488     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
69489     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69490     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
69491     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69492     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
69493     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
69494     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
69495     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
69496     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
69497     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
69498     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
69499     +END;
MPRINT(EM_DIAGRAM):   END;
69500     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
69501     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
69502     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
69503     +drop
69504     +H11
69505     +H12
69506     +H13
69507     +H14
69508     +H15
69509     +H16
69510     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
69511     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
69512     +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
69513     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69514     +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
69515     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69516     +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
69517     +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
69518     +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
69519     +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
69520     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69521     +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
69522     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69523     +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
69524     +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
69525     +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
69526     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69527     +* Ensmbl24: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 6 of 7;
69528     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69529     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69530     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
69531     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
69532     +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
69533     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
69534     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
69535     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
69536     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
69537     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
69538     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
69539     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
69540     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
69541     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
69542     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
69543     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
69544     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
69545     +LENGTH _WARN_ $4
69546     +      F_DepVar  $ 12
69547     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
69548     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
69549     +
69550     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
69551     +
69552     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
69553     +
69554     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
69555     +
69556     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
69557     +
69558     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
69559     +
69560     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
69561     +
69562     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
69563     +
69564     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
69565     +
69566     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
69567     +
69568     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
69569     +
69570     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
69571     +
69572     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
69573     +
69574     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
69575     +
69576     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
69577     +
69578     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
69579     +
69580     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
69581     +
69582     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
69583     +
69584     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
69585     +
69586     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
69587     +
69588     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
69589     +
69590     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
69591     +
69592     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
69593     +
69594     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
69595     +
69596     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
69597     +
69598     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
69599     +
69600     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
69601     +
69602     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
69603     +
69604     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
69605     +
69606     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
69607     +
69608     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
69609     +
69610     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
69611     +
69612     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
69613     +
69614     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
69615     +
69616     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
69617     +
69618     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
69619     +
69620     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
69621     +
69622     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
69623     +
69624     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
69625     +
69626     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
69627     +
69628     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
69629     +
69630     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
69631     +
69632     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
69633     +
69634     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
69635     +
69636     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
69637     +
69638     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
69639     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
69640     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
69641     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
69642     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69643     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69644     +end;
MPRINT(EM_DIAGRAM):   end;
69645     +else do;
MPRINT(EM_DIAGRAM):   else do;
69646     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69647     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
69648     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69649     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69650     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
69651     +   end;
MPRINT(EM_DIAGRAM):   end;
69652     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69653     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
69654     +   end;
MPRINT(EM_DIAGRAM):   end;
69655     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69656     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
69657     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69658     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69659     +   end;
MPRINT(EM_DIAGRAM):   end;
69660     +end;
MPRINT(EM_DIAGRAM):   end;
69661     +
69662     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
69663     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
69664     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
69665     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
69666     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69667     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69668     +end;
MPRINT(EM_DIAGRAM):   end;
69669     +else do;
MPRINT(EM_DIAGRAM):   else do;
69670     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69671     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
69672     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69673     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69674     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
69675     +   end;
MPRINT(EM_DIAGRAM):   end;
69676     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69677     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
69678     +   end;
MPRINT(EM_DIAGRAM):   end;
69679     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69680     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
69681     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69682     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69683     +   end;
MPRINT(EM_DIAGRAM):   end;
69684     +end;
MPRINT(EM_DIAGRAM):   end;
69685     +
69686     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
69687     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
69688     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
69689     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
69690     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69691     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69692     +end;
MPRINT(EM_DIAGRAM):   end;
69693     +else do;
MPRINT(EM_DIAGRAM):   else do;
69694     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69695     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
69696     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69697     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69698     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
69699     +   end;
MPRINT(EM_DIAGRAM):   end;
69700     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69701     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
69702     +   end;
MPRINT(EM_DIAGRAM):   end;
69703     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69704     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
69705     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69706     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69707     +   end;
MPRINT(EM_DIAGRAM):   end;
69708     +end;
MPRINT(EM_DIAGRAM):   end;
69709     +
69710     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
69711     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
69712     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
69713     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
69714     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69715     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69716     +end;
MPRINT(EM_DIAGRAM):   end;
69717     +else do;
MPRINT(EM_DIAGRAM):   else do;
69718     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69719     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
69720     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69721     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69722     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
69723     +   end;
MPRINT(EM_DIAGRAM):   end;
69724     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69725     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
69726     +   end;
MPRINT(EM_DIAGRAM):   end;
69727     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69728     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
69729     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69730     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69731     +   end;
MPRINT(EM_DIAGRAM):   end;
69732     +end;
MPRINT(EM_DIAGRAM):   end;
69733     +
69734     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
69735     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
69736     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
69737     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
69738     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69739     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69740     +end;
MPRINT(EM_DIAGRAM):   end;
69741     +else do;
MPRINT(EM_DIAGRAM):   else do;
69742     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69743     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
69744     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69745     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69746     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
69747     +   end;
MPRINT(EM_DIAGRAM):   end;
69748     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69749     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
69750     +   end;
MPRINT(EM_DIAGRAM):   end;
69751     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69752     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
69753     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69754     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69755     +   end;
MPRINT(EM_DIAGRAM):   end;
69756     +end;
MPRINT(EM_DIAGRAM):   end;
69757     +
69758     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
69759     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
69760     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
69761     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
69762     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69763     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69764     +end;
MPRINT(EM_DIAGRAM):   end;
69765     +else do;
MPRINT(EM_DIAGRAM):   else do;
69766     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69767     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
69768     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69769     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
69770     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
69771     +   end;
MPRINT(EM_DIAGRAM):   end;
69772     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
69773     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
69774     +   end;
MPRINT(EM_DIAGRAM):   end;
69775     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69776     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
69777     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69778     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69779     +   end;
MPRINT(EM_DIAGRAM):   end;
69780     +end;
MPRINT(EM_DIAGRAM):   end;
69781     +
69782     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
69783     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
69784     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
69785     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
69786     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69787     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69788     +end;
MPRINT(EM_DIAGRAM):   end;
69789     +else do;
MPRINT(EM_DIAGRAM):   else do;
69790     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
69791     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
69792     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69793     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
69794     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
69795     +   end;
MPRINT(EM_DIAGRAM):   end;
69796     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
69797     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
69798     +   end;
MPRINT(EM_DIAGRAM):   end;
69799     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69800     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
69801     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69802     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69803     +   end;
MPRINT(EM_DIAGRAM):   end;
69804     +end;
MPRINT(EM_DIAGRAM):   end;
69805     +
69806     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
69807     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
69808     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
69809     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
69810     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
69811     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
69812     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
69813     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
69814     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
69815     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
69816     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
69817     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
69818     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69819     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69820     +end;
MPRINT(EM_DIAGRAM):   end;
69821     +else do;
MPRINT(EM_DIAGRAM):   else do;
69822     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
69823     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
69824     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69825     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
69826     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
69827     +   end;
MPRINT(EM_DIAGRAM):   end;
69828     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
69829     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
69830     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
69831     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
69832     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
69833     +   end;
MPRINT(EM_DIAGRAM):   end;
69834     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
69835     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
69836     +   end;
MPRINT(EM_DIAGRAM):   end;
69837     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
69838     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
69839     +   end;
MPRINT(EM_DIAGRAM):   end;
69840     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
69841     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
69842     +   end;
MPRINT(EM_DIAGRAM):   end;
69843     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69844     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
69845     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
69846     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
69847     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
69848     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69849     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69850     +   end;
MPRINT(EM_DIAGRAM):   end;
69851     +end;
MPRINT(EM_DIAGRAM):   end;
69852     +
69853     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
69854     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
69855     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
69856     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
69857     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
69858     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
69859     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
69860     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
69861     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
69862     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
69863     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
69864     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
69865     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
69866     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
69867     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69868     +end;
MPRINT(EM_DIAGRAM):   end;
69869     +else do;
MPRINT(EM_DIAGRAM):   else do;
69870     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
69871     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
69872     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
69873     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
69874     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
69875     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
69876     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
69877     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
69878     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69879     +         end;
MPRINT(EM_DIAGRAM):   end;
69880     +         else do;
MPRINT(EM_DIAGRAM):   else do;
69881     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
69882     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
69883     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69884     +            end;
MPRINT(EM_DIAGRAM):   end;
69885     +         end;
MPRINT(EM_DIAGRAM):   end;
69886     +      end;
MPRINT(EM_DIAGRAM):   end;
69887     +      else do;
MPRINT(EM_DIAGRAM):   else do;
69888     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
69889     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
69890     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69891     +         end;
MPRINT(EM_DIAGRAM):   end;
69892     +      end;
MPRINT(EM_DIAGRAM):   end;
69893     +   end;
MPRINT(EM_DIAGRAM):   end;
69894     +   else do;
MPRINT(EM_DIAGRAM):   else do;
69895     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
69896     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
69897     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69898     +      end;
MPRINT(EM_DIAGRAM):   end;
69899     +      else do;
MPRINT(EM_DIAGRAM):   else do;
69900     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
69901     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
69902     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
69903     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
69904     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
69905     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
69906     +         end;
MPRINT(EM_DIAGRAM):   end;
69907     +      end;
MPRINT(EM_DIAGRAM):   end;
69908     +   end;
MPRINT(EM_DIAGRAM):   end;
69909     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
69910     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
69911     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
69912     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
69913     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
69914     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
69915     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69916     +   end;
MPRINT(EM_DIAGRAM):   end;
69917     +end;
MPRINT(EM_DIAGRAM):   end;
69918     +
69919     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69920     +*** Checking missing input Interval
69921     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
69922     +
69923     +IF NMISS(
69924     +   AcceptedCmpTotal ,
69925     +   Age ,
69926     +   Frq ,
69927     +   Income ,
69928     +   Kidhome ,
69929     +   MntFishProducts ,
69930     +   MntFruits ,
69931     +   MntGoldProds ,
69932     +   MntSweetProducts ,
69933     +   MonthsAsCustomer ,
69934     +   NumDealsPurchases ,
69935     +   NumWebVisitsMonth ,
69936     +   RFMstat ,
69937     +   RMntFrq ,
69938     +   Recency ,
69939     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
69940     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
69941     +
69942     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
69943     +END;
MPRINT(EM_DIAGRAM):   END;
69944     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69945     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
69946     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
69947     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
69948     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
69949     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
69950     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
69951     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
69952     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
69953     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
69954     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
69955     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
69956     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
69957     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
69958     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
69959     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
69960     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
69961     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
69962     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
69963     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
69964     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
69965     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
69966     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
69967     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
69968     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
69969     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
69970     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
69971     +END;
MPRINT(EM_DIAGRAM):   END;
69972     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
69973     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
69974     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
69975     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
69976     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
69977     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
69978     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
69979     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
69980     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
69981     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
69982     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
69983     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
69984     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
69985     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
69986     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
69987     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
69988     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
69989     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
69990     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
69991     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
69992     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
69993     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
69994     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
69995     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
69996     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
69997     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
69998     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
69999     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
70000     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70001     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
70002     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
70003     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70004     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
70005     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
70006     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70007     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
70008     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
70009     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
70010     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70011     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
70012     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70013     +END;
MPRINT(EM_DIAGRAM):   END;
70014     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70015     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
70016     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70017     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70018     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
70019     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70020     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70021     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
70022     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70023     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70024     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
70025     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
70026     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
70027     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
70028     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
70029     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
70030     +          +    -0.01191239814261 * S_MonthsAsCustomer
70031     +          +      -0.307259983666 * S_NumDealsPurchases
70032     +          +    -0.23972300101674 * S_NumWebVisitsMonth
70033     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
70034     +        S_RMntFrq  +     0.32671320165482 * S_Recency
70035     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
70036     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
70037     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
70038     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
70039     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
70040     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
70041     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
70042     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
70043     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
70044     +          +     -0.0692762335753 * Marital_StatusDivorced
70045     +          +     0.02472293911071 * Marital_StatusMarried
70046     +          +     0.04038393550437 * Marital_StatusSingle
70047     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
70048     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
70049     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70050     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70051     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
70052     +END;
MPRINT(EM_DIAGRAM):   END;
70053     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70054     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
70055     +END;
MPRINT(EM_DIAGRAM):   END;
70056     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70057     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
70058     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70059     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70060     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
70061     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
70062     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
70063     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
70064     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
70065     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
70066     +          +     0.14524334187971 * S_MonthsAsCustomer
70067     +          +    -0.58464031025411 * S_NumDealsPurchases
70068     +          +    -0.10768856151333 * S_NumWebVisitsMonth
70069     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
70070     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
70071     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
70072     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
70073     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
70074     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
70075     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
70076     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
70077     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
70078     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
70079     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
70080     +          +     0.07007941100006 * Marital_StatusDivorced
70081     +          +     -0.7850554528889 * Marital_StatusMarried
70082     +          +     1.17661634109847 * Marital_StatusSingle
70083     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
70084     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
70085     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70086     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70087     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
70088     +END;
MPRINT(EM_DIAGRAM):   END;
70089     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70090     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
70091     +END;
MPRINT(EM_DIAGRAM):   END;
70092     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70093     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
70094     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70095     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70096     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
70097     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
70098     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
70099     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
70100     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
70101     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
70102     +          +    -2.17154324602167 * S_MonthsAsCustomer
70103     +          +    -1.39930460918007 * S_NumDealsPurchases
70104     +          +    -0.16044576482901 * S_NumWebVisitsMonth
70105     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
70106     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
70107     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
70108     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
70109     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
70110     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
70111     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
70112     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
70113     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
70114     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
70115     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
70116     +          +     0.83271778325587 * Marital_StatusDivorced
70117     +          +     0.79137899511518 * Marital_StatusMarried
70118     +          +    -0.51320080030576 * Marital_StatusSingle
70119     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
70120     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
70121     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70122     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70123     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
70124     +END;
MPRINT(EM_DIAGRAM):   END;
70125     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70126     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
70127     +END;
MPRINT(EM_DIAGRAM):   END;
70128     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70129     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
70130     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70131     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70132     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
70133     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
70134     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
70135     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
70136     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
70137     +END;
MPRINT(EM_DIAGRAM):   END;
70138     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70139     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
70140     +END;
MPRINT(EM_DIAGRAM):   END;
70141     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70142     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
70143     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70144     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70145     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
70146     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
70147     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
70148     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
70149     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
70150     +END;
MPRINT(EM_DIAGRAM):   END;
70151     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70152     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
70153     +END;
MPRINT(EM_DIAGRAM):   END;
70154     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70155     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
70156     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70157     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70158     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
70159     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
70160     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
70161     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
70162     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
70163     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
70164     +END;
MPRINT(EM_DIAGRAM):   END;
70165     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70166     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
70167     +END;
MPRINT(EM_DIAGRAM):   END;
70168     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70169     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
70170     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70171     +
70172     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
70173     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
70174     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
70175     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
70176     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
70177     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70178     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
70179     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
70180     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
70181     +end;
MPRINT(EM_DIAGRAM):   end;
70182     +else do;
MPRINT(EM_DIAGRAM):   else do;
70183     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
70184     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
70185     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
70186     +   end;
MPRINT(EM_DIAGRAM):   end;
70187     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
70188     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
70189     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
70190     +   end;
MPRINT(EM_DIAGRAM):   end;
70191     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70192     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
70193     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
70194     +   end;
MPRINT(EM_DIAGRAM):   end;
70195     +end;
MPRINT(EM_DIAGRAM):   end;
70196     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70197     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
70198     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
70199     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
70200     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
70201     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
70202     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
70203     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
70204     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
70205     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
70206     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
70207     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
70208     +END;
MPRINT(EM_DIAGRAM):   END;
70209     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70210     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
70211     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
70212     +END;
MPRINT(EM_DIAGRAM):   END;
70213     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
70214     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
70215     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
70216     +END;
MPRINT(EM_DIAGRAM):   END;
70217     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
70218     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
70219     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
70220     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
70221     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
70222     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
70223     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
70224     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70225     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
70226     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70227     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
70228     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
70229     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
70230     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
70231     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
70232     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
70233     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
70234     +END;
MPRINT(EM_DIAGRAM):   END;
70235     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70236     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
70237     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70238     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
70239     +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
70240     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70241     +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
70242     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70243     +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
70244     +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
70245     +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
70246     +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
70247     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70248     +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
70249     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70250     +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
70251     +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
70252     +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
70253     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70254     +* Ensmbl24: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 7 of 7;
70255     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70256     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70257     +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
70258     +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
70259     +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
70260     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70261     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70262     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
70263     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
70264     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
70265     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
70266     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
70267     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
70268     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
70269     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
70270     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
70271     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
70272     +LENGTH _WARN_ $4
70273     +      F_DepVar  $ 12
70274     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
70275     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
70276     +
70277     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
70278     +
70279     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
70280     +
70281     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
70282     +
70283     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
70284     +
70285     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
70286     +
70287     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
70288     +
70289     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
70290     +
70291     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
70292     +
70293     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
70294     +
70295     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
70296     +
70297     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
70298     +
70299     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
70300     +
70301     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
70302     +
70303     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
70304     +
70305     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
70306     +
70307     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
70308     +
70309     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
70310     +
70311     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
70312     +
70313     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
70314     +
70315     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
70316     +
70317     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
70318     +
70319     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
70320     +
70321     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
70322     +
70323     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
70324     +
70325     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
70326     +
70327     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
70328     +
70329     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
70330     +
70331     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
70332     +
70333     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
70334     +
70335     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
70336     +
70337     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
70338     +
70339     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
70340     +
70341     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
70342     +
70343     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
70344     +
70345     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
70346     +
70347     +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
70348     +
70349     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
70350     +
70351     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
70352     +
70353     +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
70354     +
70355     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
70356     +
70357     +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
70358     +
70359     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
70360     +
70361     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
70362     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
70363     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
70364     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
70365     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70366     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70367     +end;
MPRINT(EM_DIAGRAM):   end;
70368     +else do;
MPRINT(EM_DIAGRAM):   else do;
70369     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70370     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
70371     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70372     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70373     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
70374     +   end;
MPRINT(EM_DIAGRAM):   end;
70375     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70376     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
70377     +   end;
MPRINT(EM_DIAGRAM):   end;
70378     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70379     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
70380     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70381     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70382     +   end;
MPRINT(EM_DIAGRAM):   end;
70383     +end;
MPRINT(EM_DIAGRAM):   end;
70384     +
70385     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
70386     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
70387     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
70388     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
70389     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70390     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70391     +end;
MPRINT(EM_DIAGRAM):   end;
70392     +else do;
MPRINT(EM_DIAGRAM):   else do;
70393     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70394     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
70395     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70396     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70397     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
70398     +   end;
MPRINT(EM_DIAGRAM):   end;
70399     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70400     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
70401     +   end;
MPRINT(EM_DIAGRAM):   end;
70402     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70403     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
70404     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70405     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70406     +   end;
MPRINT(EM_DIAGRAM):   end;
70407     +end;
MPRINT(EM_DIAGRAM):   end;
70408     +
70409     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
70410     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
70411     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
70412     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
70413     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70414     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70415     +end;
MPRINT(EM_DIAGRAM):   end;
70416     +else do;
MPRINT(EM_DIAGRAM):   else do;
70417     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70418     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
70419     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70420     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70421     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
70422     +   end;
MPRINT(EM_DIAGRAM):   end;
70423     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70424     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
70425     +   end;
MPRINT(EM_DIAGRAM):   end;
70426     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70427     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
70428     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70429     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70430     +   end;
MPRINT(EM_DIAGRAM):   end;
70431     +end;
MPRINT(EM_DIAGRAM):   end;
70432     +
70433     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
70434     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
70435     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
70436     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
70437     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70438     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70439     +end;
MPRINT(EM_DIAGRAM):   end;
70440     +else do;
MPRINT(EM_DIAGRAM):   else do;
70441     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70442     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
70443     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70444     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70445     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
70446     +   end;
MPRINT(EM_DIAGRAM):   end;
70447     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70448     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
70449     +   end;
MPRINT(EM_DIAGRAM):   end;
70450     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70451     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
70452     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70453     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70454     +   end;
MPRINT(EM_DIAGRAM):   end;
70455     +end;
MPRINT(EM_DIAGRAM):   end;
70456     +
70457     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
70458     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
70459     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
70460     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
70461     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70462     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70463     +end;
MPRINT(EM_DIAGRAM):   end;
70464     +else do;
MPRINT(EM_DIAGRAM):   else do;
70465     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70466     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
70467     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70468     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70469     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
70470     +   end;
MPRINT(EM_DIAGRAM):   end;
70471     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70472     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
70473     +   end;
MPRINT(EM_DIAGRAM):   end;
70474     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70475     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
70476     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70477     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70478     +   end;
MPRINT(EM_DIAGRAM):   end;
70479     +end;
MPRINT(EM_DIAGRAM):   end;
70480     +
70481     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
70482     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
70483     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
70484     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
70485     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70486     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70487     +end;
MPRINT(EM_DIAGRAM):   end;
70488     +else do;
MPRINT(EM_DIAGRAM):   else do;
70489     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70490     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
70491     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70492     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
70493     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
70494     +   end;
MPRINT(EM_DIAGRAM):   end;
70495     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
70496     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
70497     +   end;
MPRINT(EM_DIAGRAM):   end;
70498     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70499     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
70500     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70501     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70502     +   end;
MPRINT(EM_DIAGRAM):   end;
70503     +end;
MPRINT(EM_DIAGRAM):   end;
70504     +
70505     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
70506     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
70507     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
70508     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
70509     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70510     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70511     +end;
MPRINT(EM_DIAGRAM):   end;
70512     +else do;
MPRINT(EM_DIAGRAM):   else do;
70513     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
70514     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
70515     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70516     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
70517     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
70518     +   end;
MPRINT(EM_DIAGRAM):   end;
70519     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
70520     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
70521     +   end;
MPRINT(EM_DIAGRAM):   end;
70522     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70523     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
70524     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70525     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70526     +   end;
MPRINT(EM_DIAGRAM):   end;
70527     +end;
MPRINT(EM_DIAGRAM):   end;
70528     +
70529     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
70530     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
70531     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70532     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
70533     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
70534     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
70535     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
70536     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
70537     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
70538     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
70539     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
70540     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
70541     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70542     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70543     +end;
MPRINT(EM_DIAGRAM):   end;
70544     +else do;
MPRINT(EM_DIAGRAM):   else do;
70545     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
70546     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
70547     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70548     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
70549     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
70550     +   end;
MPRINT(EM_DIAGRAM):   end;
70551     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
70552     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
70553     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
70554     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
70555     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
70556     +   end;
MPRINT(EM_DIAGRAM):   end;
70557     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
70558     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
70559     +   end;
MPRINT(EM_DIAGRAM):   end;
70560     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
70561     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
70562     +   end;
MPRINT(EM_DIAGRAM):   end;
70563     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
70564     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
70565     +   end;
MPRINT(EM_DIAGRAM):   end;
70566     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70567     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
70568     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
70569     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
70570     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
70571     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70572     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70573     +   end;
MPRINT(EM_DIAGRAM):   end;
70574     +end;
MPRINT(EM_DIAGRAM):   end;
70575     +
70576     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
70577     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
70578     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
70579     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
70580     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
70581     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
70582     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
70583     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
70584     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
70585     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70586     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70587     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70588     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70589     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
70590     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70591     +end;
MPRINT(EM_DIAGRAM):   end;
70592     +else do;
MPRINT(EM_DIAGRAM):   else do;
70593     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
70594     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
70595     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70596     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
70597     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
70598     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
70599     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
70600     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
70601     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70602     +         end;
MPRINT(EM_DIAGRAM):   end;
70603     +         else do;
MPRINT(EM_DIAGRAM):   else do;
70604     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
70605     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
70606     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70607     +            end;
MPRINT(EM_DIAGRAM):   end;
70608     +         end;
MPRINT(EM_DIAGRAM):   end;
70609     +      end;
MPRINT(EM_DIAGRAM):   end;
70610     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70611     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
70612     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
70613     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70614     +         end;
MPRINT(EM_DIAGRAM):   end;
70615     +      end;
MPRINT(EM_DIAGRAM):   end;
70616     +   end;
MPRINT(EM_DIAGRAM):   end;
70617     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70618     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
70619     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
70620     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70621     +      end;
MPRINT(EM_DIAGRAM):   end;
70622     +      else do;
MPRINT(EM_DIAGRAM):   else do;
70623     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
70624     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
70625     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
70626     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
70627     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
70628     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
70629     +         end;
MPRINT(EM_DIAGRAM):   end;
70630     +      end;
MPRINT(EM_DIAGRAM):   end;
70631     +   end;
MPRINT(EM_DIAGRAM):   end;
70632     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
70633     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
70634     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
70635     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
70636     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
70637     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
70638     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70639     +   end;
MPRINT(EM_DIAGRAM):   end;
70640     +end;
MPRINT(EM_DIAGRAM):   end;
70641     +
70642     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70643     +*** Checking missing input Interval
70644     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
70645     +
70646     +IF NMISS(
70647     +   AcceptedCmpTotal ,
70648     +   Age ,
70649     +   Frq ,
70650     +   Income ,
70651     +   Kidhome ,
70652     +   MntFishProducts ,
70653     +   MntFruits ,
70654     +   MntGoldProds ,
70655     +   MntSweetProducts ,
70656     +   MonthsAsCustomer ,
70657     +   NumDealsPurchases ,
70658     +   NumWebVisitsMonth ,
70659     +   RFMstat ,
70660     +   RMntFrq ,
70661     +   Recency ,
70662     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
70663     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
70664     +
70665     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
70666     +END;
MPRINT(EM_DIAGRAM):   END;
70667     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70668     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
70669     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70670     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70671     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70672     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
70673     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
70674     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70675     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70676     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
70677     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
70678     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
70679     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
70680     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70681     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
70682     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
70683     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
70684     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
70685     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
70686     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70687     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
70688     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70689     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
70690     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70691     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
70692     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70693     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70694     +END;
MPRINT(EM_DIAGRAM):   END;
70695     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70696     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
70697     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
70698     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
70699     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
70700     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
70701     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
70702     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
70703     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
70704     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
70705     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
70706     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
70707     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
70708     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
70709     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
70710     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
70711     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
70712     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
70713     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
70714     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
70715     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
70716     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
70717     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
70718     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
70719     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
70720     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
70721     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
70722     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
70723     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
70724     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
70725     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
70726     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
70727     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
70728     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
70729     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
70730     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
70731     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
70732     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
70733     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
70734     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
70735     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
70736     +END;
MPRINT(EM_DIAGRAM):   END;
70737     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70738     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
70739     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70740     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70741     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
70742     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70743     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70744     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
70745     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70746     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70747     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
70748     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
70749     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
70750     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
70751     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
70752     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
70753     +          +     -0.6473961304074 * S_MonthsAsCustomer
70754     +          +     0.68960902951007 * S_NumDealsPurchases
70755     +          +    -0.03600585273268 * S_NumWebVisitsMonth
70756     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
70757     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
70758     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
70759     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
70760     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
70761     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
70762     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
70763     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
70764     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
70765     +          +    -0.70674764548268 * S_MonthsAsCustomer
70766     +          +     0.03761139203619 * S_NumDealsPurchases
70767     +          +    -0.69359662485747 * S_NumWebVisitsMonth
70768     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
70769     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
70770     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
70771     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
70772     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
70773     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
70774     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
70775     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
70776     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
70777     +          +    -0.47559913836984 * S_MonthsAsCustomer
70778     +          +    -0.26961781245749 * S_NumDealsPurchases
70779     +          +    -0.67017962977412 * S_NumWebVisitsMonth
70780     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
70781     +        S_RMntFrq  +     0.67120737584665 * S_Recency
70782     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
70783     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
70784     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
70785     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
70786     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
70787     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
70788     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
70789     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
70790     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
70791     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
70792     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
70793     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
70794     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
70795     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
70796     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
70797     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
70798     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
70799     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
70800     +        EducationGraduation  +     0.46172475127934 * EducationMaster
70801     +          +    -0.18858032329482 * Marital_StatusDivorced
70802     +          +     0.16067956508072 * Marital_StatusMarried
70803     +          +    -0.90926406046237 * Marital_StatusSingle
70804     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
70805     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
70806     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
70807     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
70808     +          +     0.71998738170149 * Marital_StatusDivorced
70809     +          +    -1.53543515752013 * Marital_StatusMarried
70810     +          +     0.44068743694663 * Marital_StatusSingle
70811     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
70812     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
70813     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
70814     +        EducationGraduation  +     0.11252156068047 * EducationMaster
70815     +          +    -0.31683932084863 * Marital_StatusDivorced
70816     +          +     0.17674162427585 * Marital_StatusMarried
70817     +          +    -0.67064017247711 * Marital_StatusSingle
70818     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
70819     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
70820     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
70821     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
70822     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
70823     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
70824     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
70825     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
70826     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
70827     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
70828     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
70829     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
70830     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
70831     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
70832     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
70833     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
70834     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
70835     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
70836     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
70837     +END;
MPRINT(EM_DIAGRAM):   END;
70838     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70839     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
70840     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
70841     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
70842     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
70843     +END;
MPRINT(EM_DIAGRAM):   END;
70844     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70845     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
70846     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70847     +
70848     +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
70849     +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
70850     +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
70851     +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
70852     +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
70853     +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
70854     +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
70855     +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
70856     +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
70857     +end;
MPRINT(EM_DIAGRAM):   end;
70858     +else do;
MPRINT(EM_DIAGRAM):   else do;
70859     +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
70860     +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
70861     +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
70862     +   end;
MPRINT(EM_DIAGRAM):   end;
70863     +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
70864     +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
70865     +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
70866     +   end;
MPRINT(EM_DIAGRAM):   end;
70867     +   else do;
MPRINT(EM_DIAGRAM):   else do;
70868     +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
70869     +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
70870     +   end;
MPRINT(EM_DIAGRAM):   end;
70871     +end;
MPRINT(EM_DIAGRAM):   end;
70872     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
70873     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
70874     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
70875     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
70876     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
70877     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
70878     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
70879     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
70880     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
70881     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
70882     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
70883     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
70884     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
70885     +END;
MPRINT(EM_DIAGRAM):   END;
70886     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
70887     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
70888     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
70889     +END;
MPRINT(EM_DIAGRAM):   END;
70890     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
70891     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
70892     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
70893     +END;
MPRINT(EM_DIAGRAM):   END;
70894     +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
70895     +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
70896     +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
70897     +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
70898     +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
70899     +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
70900     +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
70901     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70902     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
70903     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
70904     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
70905     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
70906     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
70907     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
70908     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
70909     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
70910     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
70911     +END;
MPRINT(EM_DIAGRAM):   END;
70912     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70913     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
70914     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
70915     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
70916     +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
70917     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70918     +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
70919     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70920     +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
70921     +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
70922     +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
70923     +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
70924     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70925     +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
70926     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70927     +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
70928     +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
70929     +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
70930     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70931     +* Ensmbl24: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Average Posteriors of 7 models;
70932     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70933     +P_DepVar1 = (
70934     +Neural40_P_DepVar1 +
70935     +AutoNeural39_P_DepVar1 +
70936     +AutoNeural38_P_DepVar1 +
70937     +Neural39_P_DepVar1 +
70938     +Neural41_P_DepVar1 +
70939     +AutoNeural37_P_DepVar1 +
70940     +AutoNeural40_P_DepVar1
70941     +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural39_P_DepVar1 + 
AutoNeural38_P_DepVar1 + Neural39_P_DepVar1 + Neural41_P_DepVar1 + AutoNeural37_P_DepVar1 + 
AutoNeural40_P_DepVar1 )/7;
70942     +P_DepVar0 = (
70943     +Neural40_P_DepVar0 +
70944     +AutoNeural39_P_DepVar0 +
70945     +AutoNeural38_P_DepVar0 +
70946     +Neural39_P_DepVar0 +
70947     +Neural41_P_DepVar0 +
70948     +AutoNeural37_P_DepVar0 +
70949     +AutoNeural40_P_DepVar0
70950     +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural39_P_DepVar0 + 
AutoNeural38_P_DepVar0 + Neural39_P_DepVar0 + Neural41_P_DepVar0 + AutoNeural37_P_DepVar0 + 
AutoNeural40_P_DepVar0 )/7;
70951     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70952     +* Ensmbl24: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Classification Vars;
70953     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70954     +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
70955     +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
70956     +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
70957     +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
70958     +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
70959     +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
70960     +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
70961     +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
70962     +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
70963     +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
70964     +end;
MPRINT(EM_DIAGRAM):   end;
70965     +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
70966     +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
70967     +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
70968     +end;
MPRINT(EM_DIAGRAM):   end;
70969     +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
70970     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70971     +* Ensmbl24: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Producing Unformatted variable;
70972     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70973     +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
70974     +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
70975     +else
70976     +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
70977     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70978     +* Ensmbl24: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing _WARN_ Variable;
70979     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
70980     +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
70981     +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
70982     +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
70983     +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
70983    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
70984     +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
70984    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
70985     +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
70985    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
70986     +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
70986    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
70987     +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
70987    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
70988     +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
70988    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
70989     +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
70989    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
70990     +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
70990    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
70991     +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
70991    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
70992     +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
70992    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
70993     +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
70993    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
70994     +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
70994    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
70995     +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
70995    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
70996     +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
70996    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
70997     +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
70997    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
70998     +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
70998    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
70999     +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
70999    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
71000     +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
71000    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
71001     +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
71001    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
71002     +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
71002    !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
71003     +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
71003    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
71004     +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
71004    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
71005     +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
71005    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
71006     +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
71006    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
71007     +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
71007    !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
71008     +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
71008    !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
71009     +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
71009    !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
71010     +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
71010    !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
71011     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71012     +* Ensmbl24: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Residual Vars;
71013     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71014     +if
71015     +F_DepVar NE '1'
71016     +AND F_DepVar NE '0'
71017     +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
71018     +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
71019     +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
71020     +end;
MPRINT(EM_DIAGRAM):   end;
71021     +else do;
MPRINT(EM_DIAGRAM):   else do;
71022     +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
71023     +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
71024     +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
71025     +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
71026     +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
71027     +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
71028     +END;
MPRINT(EM_DIAGRAM):   END;
71029     +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71030      run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL24_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71031      quit;
71032      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl24_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl24_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl24_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
71092      filename _pref
71092    ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
71093      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71094      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
71095     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71096     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
71097     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
71098     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
71099     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
71100     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
71101     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
71102     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
71103     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
71104     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
71105     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
71106     +LENGTH _WARN_ $4
71107     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
71108     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
71109     +
71110     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
71111     +
71112     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
71113     +
71114     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
71115     +
71116     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
71117     +
71118     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
71119     +
71120     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
71121     +
71122     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
71123     +
71124     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
71125     +
71126     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
71127     +
71128     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
71129     +
71130     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
71131     +
71132     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
71133     +
71134     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
71135     +
71136     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
71137     +
71138     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
71139     +
71140     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
71141     +
71142     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
71143     +
71144     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
71145     +
71146     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
71147     +
71148     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
71149     +
71150     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
71151     +
71152     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
71153     +
71154     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
71155     +
71156     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
71157     +
71158     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
71159     +
71160     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
71161     +
71162     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
71163     +
71164     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
71165     +
71166     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
71167     +
71168     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
71169     +
71170     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
71171     +
71172     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
71173     +
71174     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
71175     +
71176     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
71177     +
71178     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
71179     +
71180     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
71181     +
71182     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
71183     +
71184     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
71185     +
71186     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
71187     +
71188     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
71189     +
71190     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
71191     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
71192     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
71193     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
71194     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71195     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71196     +end;
MPRINT(EM_DIAGRAM):   end;
71197     +else do;
MPRINT(EM_DIAGRAM):   else do;
71198     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71199     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
71200     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71201     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71202     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
71203     +   end;
MPRINT(EM_DIAGRAM):   end;
71204     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71205     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
71206     +   end;
MPRINT(EM_DIAGRAM):   end;
71207     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71208     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
71209     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71210     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71211     +   end;
MPRINT(EM_DIAGRAM):   end;
71212     +end;
MPRINT(EM_DIAGRAM):   end;
71213     +
71214     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
71215     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
71216     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
71217     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
71218     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71219     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71220     +end;
MPRINT(EM_DIAGRAM):   end;
71221     +else do;
MPRINT(EM_DIAGRAM):   else do;
71222     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71223     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
71224     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71225     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71226     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
71227     +   end;
MPRINT(EM_DIAGRAM):   end;
71228     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71229     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
71230     +   end;
MPRINT(EM_DIAGRAM):   end;
71231     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71232     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
71233     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71234     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71235     +   end;
MPRINT(EM_DIAGRAM):   end;
71236     +end;
MPRINT(EM_DIAGRAM):   end;
71237     +
71238     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
71239     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
71240     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
71241     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
71242     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71243     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71244     +end;
MPRINT(EM_DIAGRAM):   end;
71245     +else do;
MPRINT(EM_DIAGRAM):   else do;
71246     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71247     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
71248     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71249     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71250     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
71251     +   end;
MPRINT(EM_DIAGRAM):   end;
71252     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71253     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
71254     +   end;
MPRINT(EM_DIAGRAM):   end;
71255     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71256     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
71257     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71258     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71259     +   end;
MPRINT(EM_DIAGRAM):   end;
71260     +end;
MPRINT(EM_DIAGRAM):   end;
71261     +
71262     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
71263     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
71264     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
71265     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
71266     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71267     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71268     +end;
MPRINT(EM_DIAGRAM):   end;
71269     +else do;
MPRINT(EM_DIAGRAM):   else do;
71270     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71271     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
71272     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71273     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71274     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
71275     +   end;
MPRINT(EM_DIAGRAM):   end;
71276     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71277     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
71278     +   end;
MPRINT(EM_DIAGRAM):   end;
71279     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71280     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
71281     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71282     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71283     +   end;
MPRINT(EM_DIAGRAM):   end;
71284     +end;
MPRINT(EM_DIAGRAM):   end;
71285     +
71286     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
71287     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
71288     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
71289     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
71290     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71291     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71292     +end;
MPRINT(EM_DIAGRAM):   end;
71293     +else do;
MPRINT(EM_DIAGRAM):   else do;
71294     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71295     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
71296     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71297     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71298     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
71299     +   end;
MPRINT(EM_DIAGRAM):   end;
71300     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71301     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
71302     +   end;
MPRINT(EM_DIAGRAM):   end;
71303     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71304     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
71305     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71306     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71307     +   end;
MPRINT(EM_DIAGRAM):   end;
71308     +end;
MPRINT(EM_DIAGRAM):   end;
71309     +
71310     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
71311     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
71312     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
71313     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
71314     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71315     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71316     +end;
MPRINT(EM_DIAGRAM):   end;
71317     +else do;
MPRINT(EM_DIAGRAM):   else do;
71318     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71319     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
71320     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71321     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
71322     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
71323     +   end;
MPRINT(EM_DIAGRAM):   end;
71324     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
71325     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
71326     +   end;
MPRINT(EM_DIAGRAM):   end;
71327     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71328     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
71329     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71330     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71331     +   end;
MPRINT(EM_DIAGRAM):   end;
71332     +end;
MPRINT(EM_DIAGRAM):   end;
71333     +
71334     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
71335     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
71336     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
71337     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
71338     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71339     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71340     +end;
MPRINT(EM_DIAGRAM):   end;
71341     +else do;
MPRINT(EM_DIAGRAM):   else do;
71342     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
71343     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
71344     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71345     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
71346     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
71347     +   end;
MPRINT(EM_DIAGRAM):   end;
71348     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
71349     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
71350     +   end;
MPRINT(EM_DIAGRAM):   end;
71351     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71352     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
71353     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71354     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71355     +   end;
MPRINT(EM_DIAGRAM):   end;
71356     +end;
MPRINT(EM_DIAGRAM):   end;
71357     +
71358     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
71359     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
71360     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71361     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
71362     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
71363     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
71364     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
71365     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
71366     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
71367     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
71368     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
71369     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
71370     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71371     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71372     +end;
MPRINT(EM_DIAGRAM):   end;
71373     +else do;
MPRINT(EM_DIAGRAM):   else do;
71374     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
71375     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
71376     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71377     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
71378     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
71379     +   end;
MPRINT(EM_DIAGRAM):   end;
71380     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
71381     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
71382     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
71383     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
71384     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
71385     +   end;
MPRINT(EM_DIAGRAM):   end;
71386     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
71387     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
71388     +   end;
MPRINT(EM_DIAGRAM):   end;
71389     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
71390     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
71391     +   end;
MPRINT(EM_DIAGRAM):   end;
71392     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
71393     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
71394     +   end;
MPRINT(EM_DIAGRAM):   end;
71395     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71396     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
71397     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
71398     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
71399     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
71400     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71401     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71402     +   end;
MPRINT(EM_DIAGRAM):   end;
71403     +end;
MPRINT(EM_DIAGRAM):   end;
71404     +
71405     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
71406     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
71407     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
71408     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
71409     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
71410     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
71411     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
71412     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
71413     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
71414     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71415     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71416     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71417     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71418     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
71419     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71420     +end;
MPRINT(EM_DIAGRAM):   end;
71421     +else do;
MPRINT(EM_DIAGRAM):   else do;
71422     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
71423     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
71424     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
71425     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
71426     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
71427     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
71428     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
71429     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
71430     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71431     +         end;
MPRINT(EM_DIAGRAM):   end;
71432     +         else do;
MPRINT(EM_DIAGRAM):   else do;
71433     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
71434     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
71435     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71436     +            end;
MPRINT(EM_DIAGRAM):   end;
71437     +         end;
MPRINT(EM_DIAGRAM):   end;
71438     +      end;
MPRINT(EM_DIAGRAM):   end;
71439     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71440     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
71441     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
71442     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71443     +         end;
MPRINT(EM_DIAGRAM):   end;
71444     +      end;
MPRINT(EM_DIAGRAM):   end;
71445     +   end;
MPRINT(EM_DIAGRAM):   end;
71446     +   else do;
MPRINT(EM_DIAGRAM):   else do;
71447     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
71448     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
71449     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71450     +      end;
MPRINT(EM_DIAGRAM):   end;
71451     +      else do;
MPRINT(EM_DIAGRAM):   else do;
71452     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
71453     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
71454     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
71455     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
71456     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
71457     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
71458     +         end;
MPRINT(EM_DIAGRAM):   end;
71459     +      end;
MPRINT(EM_DIAGRAM):   end;
71460     +   end;
MPRINT(EM_DIAGRAM):   end;
71461     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
71462     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
71463     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
71464     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
71465     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
71466     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
71467     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71468     +   end;
MPRINT(EM_DIAGRAM):   end;
71469     +end;
MPRINT(EM_DIAGRAM):   end;
71470     +
71471     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71472     +*** Checking missing input Interval
71473     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
71474     +
71475     +IF NMISS(
71476     +   AcceptedCmpTotal ,
71477     +   Age ,
71478     +   Frq ,
71479     +   Income ,
71480     +   Kidhome ,
71481     +   MntFishProducts ,
71482     +   MntFruits ,
71483     +   MntGoldProds ,
71484     +   MntSweetProducts ,
71485     +   MonthsAsCustomer ,
71486     +   NumDealsPurchases ,
71487     +   NumWebVisitsMonth ,
71488     +   RFMstat ,
71489     +   RMntFrq ,
71490     +   Recency ,
71491     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
71492     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
71493     +
71494     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
71495     +END;
MPRINT(EM_DIAGRAM):   END;
71496     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71497     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
71498     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71499     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71500     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71501     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
71502     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
71503     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71504     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71505     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
71506     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
71507     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
71508     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
71509     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71510     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
71511     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
71512     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
71513     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
71514     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
71515     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71516     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
71517     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71518     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
71519     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71520     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
71521     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71522     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71523     +END;
MPRINT(EM_DIAGRAM):   END;
71524     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71525     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
71526     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
71527     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
71528     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
71529     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
71530     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
71531     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
71532     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
71533     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
71534     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
71535     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
71536     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
71537     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
71538     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
71539     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
71540     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
71541     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
71542     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
71543     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
71544     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
71545     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
71546     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
71547     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
71548     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
71549     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
71550     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
71551     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
71552     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
71553     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
71554     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
71555     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
71556     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
71557     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
71558     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
71559     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
71560     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
71561     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
71562     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
71563     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
71564     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
71565     +END;
MPRINT(EM_DIAGRAM):   END;
71566     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71567     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
71568     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71569     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71570     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
71571     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71572     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71573     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
71574     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71575     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71576     +   H11  =     0.00871038651131 * S_AcceptedCmpTotal  +     0.04885111887799 *
71577     +        S_Age  +    -0.16081720955101 * S_Frq  +    -0.81673231415398 *
71578     +        S_Income  +     0.39760289149752 * S_Kidhome
71579     +          +     -0.0376693415484 * S_MntFishProducts
71580     +          +     0.01707556953741 * S_MntFruits  +     0.03640992016126 *
71581     +        S_MntGoldProds  +     0.18721014378487 * S_MntSweetProducts
71582     +          +    -0.13043754404228 * S_MonthsAsCustomer
71583     +          +     -0.0139146653349 * S_NumDealsPurchases
71584     +          +    -0.01539820220757 * S_NumWebVisitsMonth
71585     +          +     0.00494819481975 * S_RFMstat  +    -0.22517942530642 *
71586     +        S_RMntFrq  +     0.55149605442396 * S_Recency
71587     +          +     0.54614592562743 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00871038651131 * S_AcceptedCmpTotal + 0.04885111887799 * S_Age + 
-0.16081720955101 * S_Frq + -0.81673231415398 * S_Income + 0.39760289149752 * S_Kidhome + 
-0.0376693415484 * S_MntFishProducts + 0.01707556953741 * S_MntFruits + 0.03640992016126 * 
S_MntGoldProds + 0.18721014378487 * S_MntSweetProducts + -0.13043754404228 * 
S_MonthsAsCustomer + -0.0139146653349 * S_NumDealsPurchases + -0.01539820220757 * 
S_NumWebVisitsMonth + 0.00494819481975 * S_RFMstat + -0.22517942530642 * S_RMntFrq + 
0.55149605442396 * S_Recency + 0.54614592562743 * S_Teenhome ;
71588     +   H12  =    -0.31218916782956 * S_AcceptedCmpTotal  +    -0.13577174745207 *
71589     +        S_Age  +     -0.1133596721701 * S_Frq  +    -0.03250630326063 *
71590     +        S_Income  +     0.31208673256073 * S_Kidhome
71591     +          +    -0.04911763008195 * S_MntFishProducts
71592     +          +     0.04440357574827 * S_MntFruits  +     0.18064625439163 *
71593     +        S_MntGoldProds  +     0.34124097901137 * S_MntSweetProducts
71594     +          +    -0.48577934340503 * S_MonthsAsCustomer
71595     +          +     0.31218334237091 * S_NumDealsPurchases
71596     +          +     0.24212805498377 * S_NumWebVisitsMonth
71597     +          +     0.30439494800184 * S_RFMstat  +    -0.01845944589462 *
71598     +        S_RMntFrq  +    -0.48513476805321 * S_Recency
71599     +          +    -0.32721006241811 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31218916782956 * S_AcceptedCmpTotal + -0.13577174745207 * S_Age 
+ -0.1133596721701 * S_Frq + -0.03250630326063 * S_Income + 0.31208673256073 * S_Kidhome + 
-0.04911763008195 * S_MntFishProducts + 0.04440357574827 * S_MntFruits + 0.18064625439163 * 
S_MntGoldProds + 0.34124097901137 * S_MntSweetProducts + -0.48577934340503 * 
S_MonthsAsCustomer + 0.31218334237091 * S_NumDealsPurchases + 0.24212805498377 * 
S_NumWebVisitsMonth + 0.30439494800184 * S_RFMstat + -0.01845944589462 * S_RMntFrq + 
-0.48513476805321 * S_Recency + -0.32721006241811 * S_Teenhome ;
71600     +   H13  =    -0.68076549765273 * S_AcceptedCmpTotal  +    -0.14510411148941 *
71601     +        S_Age  +     -0.3233004374436 * S_Frq  +    -0.42499945066724 *
71602     +        S_Income  +    -0.48748003518551 * S_Kidhome
71603     +          +     0.15434683428908 * S_MntFishProducts
71604     +          +     0.06482294164983 * S_MntFruits  +    -0.54308686262134 *
71605     +        S_MntGoldProds  +    -0.03954494482452 * S_MntSweetProducts
71606     +          +    -0.07405705160744 * S_MonthsAsCustomer
71607     +          +    -0.44979778263337 * S_NumDealsPurchases
71608     +          +    -0.51422673599958 * S_NumWebVisitsMonth
71609     +          +    -0.31727878849334 * S_RFMstat  +    -0.49659927360573 *
71610     +        S_RMntFrq  +     0.79850779605341 * S_Recency
71611     +          +    -0.01021777395977 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.68076549765273 * S_AcceptedCmpTotal + -0.14510411148941 * S_Age 
+ -0.3233004374436 * S_Frq + -0.42499945066724 * S_Income + -0.48748003518551 * S_Kidhome + 
0.15434683428908 * S_MntFishProducts + 0.06482294164983 * S_MntFruits + -0.54308686262134 * 
S_MntGoldProds + -0.03954494482452 * S_MntSweetProducts + -0.07405705160744 * 
S_MonthsAsCustomer + -0.44979778263337 * S_NumDealsPurchases + -0.51422673599958 * 
S_NumWebVisitsMonth + -0.31727878849334 * S_RFMstat + -0.49659927360573 * S_RMntFrq + 
0.79850779605341 * S_Recency + -0.01021777395977 * S_Teenhome ;
71612     +   H14  =     0.38365136681667 * S_AcceptedCmpTotal  +     0.07084748712672 *
71613     +        S_Age  +     0.07185932608666 * S_Frq  +     0.14505870102604 *
71614     +        S_Income  +    -0.62401744170985 * S_Kidhome
71615     +          +    -0.08499883212951 * S_MntFishProducts
71616     +          +     -0.1648853454448 * S_MntFruits  +    -0.00355780886042 *
71617     +        S_MntGoldProds  +    -0.29925551636086 * S_MntSweetProducts
71618     +          +    -0.04051431518694 * S_MonthsAsCustomer
71619     +          +     0.00788125797776 * S_NumDealsPurchases
71620     +          +     0.59495434076477 * S_NumWebVisitsMonth
71621     +          +     0.24302483463729 * S_RFMstat  +    -0.16358266655642 *
71622     +        S_RMntFrq  +    -0.73053231334164 * S_Recency
71623     +          +    -0.33321827557738 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38365136681667 * S_AcceptedCmpTotal + 0.07084748712672 * S_Age + 
0.07185932608666 * S_Frq + 0.14505870102604 * S_Income + -0.62401744170985 * S_Kidhome + 
-0.08499883212951 * S_MntFishProducts + -0.1648853454448 * S_MntFruits + -0.00355780886042 * 
S_MntGoldProds + -0.29925551636086 * S_MntSweetProducts + -0.04051431518694 * 
S_MonthsAsCustomer + 0.00788125797776 * S_NumDealsPurchases + 0.59495434076477 * 
S_NumWebVisitsMonth + 0.24302483463729 * S_RFMstat + -0.16358266655642 * S_RMntFrq + 
-0.73053231334164 * S_Recency + -0.33321827557738 * S_Teenhome ;
71624     +   H15  =    -0.33763603932626 * S_AcceptedCmpTotal  +     0.16015390350682 *
71625     +        S_Age  +     0.93534536415494 * S_Frq  +     0.26932392970726 *
71626     +        S_Income  +     -0.0256051183156 * S_Kidhome
71627     +          +    -0.15661247042419 * S_MntFishProducts
71628     +          +     0.05583315238736 * S_MntFruits  +     0.02103897411055 *
71629     +        S_MntGoldProds  +     -0.1231125389085 * S_MntSweetProducts
71630     +          +     0.03994503424293 * S_MonthsAsCustomer
71631     +          +    -0.53734193208154 * S_NumDealsPurchases
71632     +          +    -0.58547802324835 * S_NumWebVisitsMonth
71633     +          +    -0.06088682875304 * S_RFMstat  +    -0.16953747051887 *
71634     +        S_RMntFrq  +     0.66048924026365 * S_Recency
71635     +          +    -0.18125808371879 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33763603932626 * S_AcceptedCmpTotal + 0.16015390350682 * S_Age 
+ 0.93534536415494 * S_Frq + 0.26932392970726 * S_Income + -0.0256051183156 * S_Kidhome + 
-0.15661247042419 * S_MntFishProducts + 0.05583315238736 * S_MntFruits + 0.02103897411055 * 
S_MntGoldProds + -0.1231125389085 * S_MntSweetProducts + 0.03994503424293 * S_MonthsAsCustomer 
+ -0.53734193208154 * S_NumDealsPurchases + -0.58547802324835 * S_NumWebVisitsMonth + 
-0.06088682875304 * S_RFMstat + -0.16953747051887 * S_RMntFrq + 0.66048924026365 * S_Recency + 
-0.18125808371879 * S_Teenhome ;
71636     +   H11  = H11  +     0.32214548124302 * AcceptedCmp10
71637     +          +     0.39647739988372 * AcceptedCmp20  +     0.31108042021128 *
71638     +        AcceptedCmp30  +     0.29806974935147 * AcceptedCmp40
71639     +          +     0.22776887209675 * AcceptedCmp50  +     0.15240663199135 *
71640     +        Complain0  +    -0.29371842867452 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.32214548124302 * AcceptedCmp10 + 0.39647739988372 * 
AcceptedCmp20 + 0.31108042021128 * AcceptedCmp30 + 0.29806974935147 * AcceptedCmp40 + 
0.22776887209675 * AcceptedCmp50 + 0.15240663199135 * Complain0 + -0.29371842867452 * 
HigherEducationBinary0 ;
71641     +   H12  = H12  +     0.16508910764131 * AcceptedCmp10
71642     +          +    -0.01591698903562 * AcceptedCmp20  +    -0.18749319390831 *
71643     +        AcceptedCmp30  +     0.10267845517937 * AcceptedCmp40
71644     +          +     0.26889478167941 * AcceptedCmp50  +     0.21127321497252 *
71645     +        Complain0  +     0.26244151632714 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.16508910764131 * AcceptedCmp10 + -0.01591698903562 * 
AcceptedCmp20 + -0.18749319390831 * AcceptedCmp30 + 0.10267845517937 * AcceptedCmp40 + 
0.26889478167941 * AcceptedCmp50 + 0.21127321497252 * Complain0 + 0.26244151632714 * 
HigherEducationBinary0 ;
71646     +   H13  = H13  +     -0.1188260559539 * AcceptedCmp10
71647     +          +    -0.14527518577208 * AcceptedCmp20  +     0.15234135364477 *
71648     +        AcceptedCmp30  +    -0.09444923232962 * AcceptedCmp40
71649     +          +     0.19708535923248 * AcceptedCmp50  +    -0.29618019247654 *
71650     +        Complain0  +     0.12575052691333 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1188260559539 * AcceptedCmp10 + -0.14527518577208 * 
AcceptedCmp20 + 0.15234135364477 * AcceptedCmp30 + -0.09444923232962 * AcceptedCmp40 + 
0.19708535923248 * AcceptedCmp50 + -0.29618019247654 * Complain0 + 0.12575052691333 * 
HigherEducationBinary0 ;
71651     +   H14  = H14  +     0.22744978434743 * AcceptedCmp10
71652     +          +    -0.01189686575388 * AcceptedCmp20  +    -0.32196819611195 *
71653     +        AcceptedCmp30  +     0.01600068421368 * AcceptedCmp40
71654     +          +     0.00556822856215 * AcceptedCmp50  +     0.18009079154413 *
71655     +        Complain0  +     0.03016266549641 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22744978434743 * AcceptedCmp10 + -0.01189686575388 * 
AcceptedCmp20 + -0.32196819611195 * AcceptedCmp30 + 0.01600068421368 * AcceptedCmp40 + 
0.00556822856215 * AcceptedCmp50 + 0.18009079154413 * Complain0 + 0.03016266549641 * 
HigherEducationBinary0 ;
71656     +   H15  = H15  +     0.52725777941338 * AcceptedCmp10
71657     +          +     0.01843467049946 * AcceptedCmp20  +     0.47168025621809 *
71658     +        AcceptedCmp30  +    -0.05224480469429 * AcceptedCmp40
71659     +          +     0.29146234318613 * AcceptedCmp50  +     0.05946217105031 *
71660     +        Complain0  +     0.16683238673979 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.52725777941338 * AcceptedCmp10 + 0.01843467049946 * 
AcceptedCmp20 + 0.47168025621809 * AcceptedCmp30 + -0.05224480469429 * AcceptedCmp40 + 
0.29146234318613 * AcceptedCmp50 + 0.05946217105031 * Complain0 + 0.16683238673979 * 
HigherEducationBinary0 ;
71661     +   H11  = H11  +     0.02840049264257 * Education2n_Cycle
71662     +          +    -0.12984345243569 * EducationBasic  +    -0.10299098163695 *
71663     +        EducationGraduation  +     0.23295390047952 * EducationMaster
71664     +          +    -0.41529808115031 * Marital_StatusDivorced
71665     +          +     0.65264978817749 * Marital_StatusMarried
71666     +          +    -0.52150453945732 * Marital_StatusSingle
71667     +          +     0.69963607397544 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02840049264257 * Education2n_Cycle + -0.12984345243569 * 
EducationBasic + -0.10299098163695 * EducationGraduation + 0.23295390047952 * EducationMaster 
+ -0.41529808115031 * Marital_StatusDivorced + 0.65264978817749 * Marital_StatusMarried + 
-0.52150453945732 * Marital_StatusSingle + 0.69963607397544 * Marital_StatusTogether ;
71668     +   H12  = H12  +    -0.18683184010407 * Education2n_Cycle
71669     +          +    -0.04325754530797 * EducationBasic  +     0.25926294135162 *
71670     +        EducationGraduation  +     0.04425534246646 * EducationMaster
71671     +          +    -0.32207382402099 * Marital_StatusDivorced
71672     +          +     0.16112567537413 * Marital_StatusMarried
71673     +          +     0.28859198712458 * Marital_StatusSingle
71674     +          +    -0.31707896724726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18683184010407 * Education2n_Cycle + -0.04325754530797 * 
EducationBasic + 0.25926294135162 * EducationGraduation + 0.04425534246646 * EducationMaster + 
-0.32207382402099 * Marital_StatusDivorced + 0.16112567537413 * Marital_StatusMarried + 
0.28859198712458 * Marital_StatusSingle + -0.31707896724726 * Marital_StatusTogether ;
71675     +   H13  = H13  +     0.03402340531236 * Education2n_Cycle
71676     +          +     0.17313991053917 * EducationBasic  +    -0.24806694961277 *
71677     +        EducationGraduation  +    -0.16283334360744 * EducationMaster
71678     +          +    -0.06823118087629 * Marital_StatusDivorced
71679     +          +    -0.01696675344176 * Marital_StatusMarried
71680     +          +    -0.04922830766868 * Marital_StatusSingle
71681     +          +    -0.15449558545998 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03402340531236 * Education2n_Cycle + 0.17313991053917 * 
EducationBasic + -0.24806694961277 * EducationGraduation + -0.16283334360744 * EducationMaster 
+ -0.06823118087629 * Marital_StatusDivorced + -0.01696675344176 * Marital_StatusMarried + 
-0.04922830766868 * Marital_StatusSingle + -0.15449558545998 * Marital_StatusTogether ;
71682     +   H14  = H14  +     0.04419529419265 * Education2n_Cycle
71683     +          +     0.10023190362026 * EducationBasic  +     0.23777777952905 *
71684     +        EducationGraduation  +     -0.1779877655909 * EducationMaster
71685     +          +     0.20346888384065 * Marital_StatusDivorced
71686     +          +     -0.5246097720646 * Marital_StatusMarried
71687     +          +     0.50991923175058 * Marital_StatusSingle
71688     +          +    -0.15346924309445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04419529419265 * Education2n_Cycle + 0.10023190362026 * 
EducationBasic + 0.23777777952905 * EducationGraduation + -0.1779877655909 * EducationMaster + 
0.20346888384065 * Marital_StatusDivorced + -0.5246097720646 * Marital_StatusMarried + 
0.50991923175058 * Marital_StatusSingle + -0.15346924309445 * Marital_StatusTogether ;
71689     +   H15  = H15  +     -0.0859109352002 * Education2n_Cycle
71690     +          +     0.23688872874499 * EducationBasic  +      0.0044459307881 *
71691     +        EducationGraduation  +     0.03117170136897 * EducationMaster
71692     +          +    -0.14128509643843 * Marital_StatusDivorced
71693     +          +    -0.17344467864829 * Marital_StatusMarried
71694     +          +     0.09201105049634 * Marital_StatusSingle
71695     +          +     0.03562553790735 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.0859109352002 * Education2n_Cycle + 0.23688872874499 * 
EducationBasic + 0.0044459307881 * EducationGraduation + 0.03117170136897 * EducationMaster + 
-0.14128509643843 * Marital_StatusDivorced + -0.17344467864829 * Marital_StatusMarried + 
0.09201105049634 * Marital_StatusSingle + 0.03562553790735 * Marital_StatusTogether ;
71696     +   H11  =     0.44460027749342 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.44460027749342 + H11 ;
71697     +   H12  =    -0.95819350927335 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95819350927335 + H12 ;
71698     +   H13  =    -0.44968673753742 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44968673753742 + H13 ;
71699     +   H14  =     0.53878131931255 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.53878131931255 + H14 ;
71700     +   H15  =     0.82891048270823 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82891048270823 + H15 ;
71701     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
71702     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
71703     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
71704     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
71705     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
71706     +END;
MPRINT(EM_DIAGRAM):   END;
71707     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71708     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
71709     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
71710     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
71711     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
71712     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
71713     +END;
MPRINT(EM_DIAGRAM):   END;
71714     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71715     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
71716     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71717     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
71718     +   P_DepVar1  =    -3.09211467027119 * H11  +      0.8780551921753 * H12
71719     +          +    -2.64280779387115 * H13  +     1.47258844960489 * H14
71720     +          +     -1.9161512747512 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.09211467027119 * H11 + 0.8780551921753 * H12 + 
-2.64280779387115 * H13 + 1.47258844960489 * H14 + -1.9161512747512 * H15 ;
71721     +   P_DepVar1  =    -1.84694532241195 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84694532241195 + P_DepVar1 ;
71722     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
71723     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
71724     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
71725     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
71726     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
71727     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
71728     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
71729     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
71730     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
71731     +END;
MPRINT(EM_DIAGRAM):   END;
71732     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
71733     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
71734     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
71735     +END;
MPRINT(EM_DIAGRAM):   END;
71736     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
71737     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
71738     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
71739     +END;
MPRINT(EM_DIAGRAM):   END;
71740     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71741     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
71742     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
71743     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
71744     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
71745     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
71746     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
71747     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
71748     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
71749     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
71750     +END;
MPRINT(EM_DIAGRAM):   END;
71751     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71752     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
71753     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
71754     +drop
71755     +H11
71756     +H12
71757     +H13
71758     +H14
71759     +H15
71760     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
71761     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71762      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71763      quit;
71764      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71765      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71766      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71767      retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
71768      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71769      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71770      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71771      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71772      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71773      proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
71774      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71775      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71776      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71777      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71778      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71779      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71780      proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
71781      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

71782      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71783      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71784      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71785      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71786      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71787      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71788      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71789      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71790      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71790    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.

71791      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71792      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
71793      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

71794      filename _pref
71794    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
71795      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71796      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
71797     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71798     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
71799     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
71800     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
71801     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
71802     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71803      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71804      quit;
71805      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71806      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71807      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71808      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
71809      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71810      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71811      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71812      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71813      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71814      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
71815      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71816      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71817      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71818      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71819      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71820      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71821      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
71822      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71823      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71824      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71825      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71826      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71827      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71828      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71829      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71830      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71831      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71831    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

71832      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71833      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
71834      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71835      filename _pref
71835    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
71836      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71837      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
71838     +
71839     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
71840     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
71840    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
71841     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
71842     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
71843     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
71844     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
71845     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71846      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71847      quit;
71848      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71849      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71850      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71851      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
71852      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71854      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71855      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71856      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71857      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
71858      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71859      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71860      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71861      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
71862      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
71863      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71864      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
71865      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71866      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
71867      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71868      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71869      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
71870      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
71871      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71872      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71873      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
71874      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
71874    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

71875      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71876      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
71877      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71878      filename _pref
71878    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
71879      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
71880      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
71881     +
71882     +
71883     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
71884     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
71885     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
71886     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
71887     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
71888     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71889     +
71890     +
71891     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
71892     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
71893     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
71894     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
71895     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
71896     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71897     +
71898     +
71899     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
71900     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
71901     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
71902     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
71903     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
71904     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71905     +
71906     +
71907     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
71908     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
71909     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
71910     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
71911     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
71912     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71913     +
71914     +
71915     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
71916     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
71917     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
71918     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
71919     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
71920     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71921     +
71922     +
71923     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
71924     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
71925     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
71926     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
71927     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
71928     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71929     +
71930     +
71931     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
71932     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
71933     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
71934     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
71935     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
71936     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71937     +
71938     +
71939     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
71940     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
71941     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
71942     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
71943     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
71944     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
71945     +if
71946     +_FILTERNORM1 not in ( '.')
71947     + and
71948     +_FILTERNORM2 not in ( '.')
71949     + and
71950     +_FILTERNORM3 not in ( '.')
71951     + and
71952     +_FILTERNORM4 not in ( '.')
71953     + and
71954     +_FILTERNORM5 not in ( '.')
71955     + and
71956     +_FILTERNORM6 not in ( '.')
71957     + and
71958     +_FILTERNORM7 not in ( ' ')
71959     + and
71960     +_FILTERNORM8 not in ( ' ')
71961     +and
71962     +( Dt_Customer ne .)
71963     +and ( Income ne . and (Income<=107000))
71964     +and ( Kidhome ne .)
71965     +and ( MntFishProducts ne .)
71966     +and ( MntFruits ne .)
71967     +and ( MntGoldProds ne .)
71968     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
71969     +and ( MntSweetProducts ne .)
71970     +and ( MntWines ne .)
71971     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
71972     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
71973     +and ( NumStorePurchases ne .)
71974     +and ( NumWebPurchases ne .)
71975     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
71976     +and ( Recency ne .)
71977     +and ( Teenhome ne .)
71978     +and ( Year_Birth ne .)
71979     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
71980     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
71981     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
71982     +end;
MPRINT(EM_DIAGRAM):   end;
71983     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
71984     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
71985      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
71986      quit;
71987      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
71988      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
71989      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
71990      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
71991      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
71992      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71993      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
71994      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71995      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

71996      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
71997      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
71998      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

71999      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72000      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72001      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72002      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72003      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
72004      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

72005      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72006      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72007      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72008      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72009      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72010      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72011      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72012      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72013      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72013    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

72014      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

72015      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
72016      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72017      %macro varDept(fcmpdata=,id=);
72018      %global nobs&id scoreFlag&id;
72019      %let scoreFlag&id = 0;
72020      %if &id=1 or ^&fcmpStart %then %do;
72021      proc sort data=&fcmpdata out=_temp&id nodupkey;
72022      by NAME;
72023      where id=&id and LHS in( %let j=1;
72024      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
72025      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
72026      "&var" %let j = %eval(&j+1);
72027      %end;
72028      );
72029      run;
72030      %let dsid = %sysfunc(open(_temp&id));
72031      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72032      %let dsid = %sysfunc(close(&dsid));
72033      %if &&nobs&id %then %do;
72034      %let scoreFlag&id = 1;
72035      %let fcmpStart = 1;
72036      %end;
72037      %else %let fcmpStart = 0;
72038      %end;
72039      %else %do;
72040      proc sort data=&fcmpdata out=_tempid;
72041      where id=&id;
72042      by LHS;
72043      run;
72044      %let dsid = %sysfunc(open(_tempid));
72045      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72046      %let dsid = %sysfunc(close(&dsid));
72047      %if ^&&nobs&id %then %do;
72048      proc datasets lib=work nolist;
72049      delete _tempid;
72050      run;
72051      quit;
72052      %end;
72053      %else %do;
72054      data _tempAll;
72055      set %let j=%eval(&id-1);
72056      %do x=1 %to &j;
72057      %if &&nobs&x %then %do;
72058      _temp&x %end;
72059      %end;
72060      ;
72061      run;
72062      proc sql;
72063      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
72063    ! work._tempid p2 where p.name=p2.lhs;
72064      quit;
72065      data _temp&id;
72066      set _temp&id;
72067      where LHS ne '' and NAME ne '' and Node ne '';
72068      run;
72069      proc datasets lib=work nolist;
72070      delete _tempAll;
72071      run;
72072      %let dsid = %sysfunc(open(_temp&id));
72073      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72074      %let dsid = %sysfunc(close(&dsid));
72075      %if ^&&nobs&id %then %do;
72076      proc datasets lib=work nolist;
72077      delete _temp&id;
72078      run;
72079      quit;
72080      %end;
72081      %else %do;
72082      %let scoreFlag&id = 1;
72083      data _temp&id;
72084      set _temp&id;
72085      where LHS ne NAME and node ne '';
72086      run;
72087      %let dsid = %sysfunc(open(_temp&id));
72088      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72089      %let dsid = %sysfunc(close(&dsid));
72090      %if ^&&nobs&id %then %do;
72091      proc datasets lib=work nolist;
72092      delete _temp&id;
72093      run;
72094      quit;
72095      %end;
72096      %else %do;
72097      proc sort data=_temp&id nodupkey;
72098      by LHS NAME;
72099      run;
72100      %end;
72101      %end;
72102      %end;
72103      %end;
72104      %mend varDept;
72105      %macro optCode(outdata=fcmpdata);
72106      %global fcmpStart;
72107      %let fcmpStart = 0;
72108      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
72109      %let NumNodes=9;
72110      %do k=1 %to &NumNodes;
72111      %vardept(fcmpdata=&outdata, id=&k);
72112      %end;
72113      %mend optCode;
72114      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
The SAS System

      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

72115      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
72116      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
72117      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
72118      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72119      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
72120      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
72121      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
72122      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72123      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72124      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
72124    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

72125      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72126      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
72127      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
72128      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72129      filename _pref
72129    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
72130      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72131      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
72132     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72133     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
72134     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
72135     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
72136     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
72137     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
72138     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
72139     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
72140     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
72141     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
72142     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
72143     +LENGTH _WARN_ $4
72144     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
72145     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
72146     +
72147     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
72148     +
72149     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
72150     +
72151     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
72152     +
72153     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
72154     +
72155     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
72156     +
72157     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
72158     +
72159     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
72160     +
72161     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
72162     +
72163     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
72164     +
72165     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
72166     +
72167     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
72168     +
72169     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
72170     +
72171     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
72172     +
72173     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
72174     +
72175     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
72176     +
72177     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
72178     +
72179     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
72180     +
72181     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
72182     +
72183     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
72184     +
72185     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
72186     +
72187     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
72188     +
72189     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
72190     +
72191     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
72192     +
72193     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
72194     +
72195     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
72196     +
72197     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
72198     +
72199     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
72200     +
72201     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
72202     +
72203     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
72204     +
72205     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
72206     +
72207     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
72208     +
72209     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
72210     +
72211     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
72212     +
72213     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
72214     +
72215     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
72216     +
72217     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
72218     +
72219     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
72220     +
72221     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
72222     +
72223     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
72224     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
72225     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
72226     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
72227     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72228     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72229     +end;
MPRINT(EM_DIAGRAM):   end;
72230     +else do;
MPRINT(EM_DIAGRAM):   else do;
72231     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72232     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
72233     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72234     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72235     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
72236     +   end;
MPRINT(EM_DIAGRAM):   end;
72237     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72238     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
72239     +   end;
MPRINT(EM_DIAGRAM):   end;
72240     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72241     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
72242     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72243     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72244     +   end;
MPRINT(EM_DIAGRAM):   end;
72245     +end;
MPRINT(EM_DIAGRAM):   end;
72246     +
72247     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
72248     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
72249     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
72250     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
72251     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72252     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72253     +end;
MPRINT(EM_DIAGRAM):   end;
72254     +else do;
MPRINT(EM_DIAGRAM):   else do;
72255     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72256     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
72257     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72258     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72259     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
72260     +   end;
MPRINT(EM_DIAGRAM):   end;
72261     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72262     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
72263     +   end;
MPRINT(EM_DIAGRAM):   end;
72264     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72265     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
72266     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72267     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72268     +   end;
MPRINT(EM_DIAGRAM):   end;
72269     +end;
MPRINT(EM_DIAGRAM):   end;
72270     +
72271     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
72272     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
72273     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
72274     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
72275     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72276     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72277     +end;
MPRINT(EM_DIAGRAM):   end;
72278     +else do;
MPRINT(EM_DIAGRAM):   else do;
72279     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72280     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
72281     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72282     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72283     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
72284     +   end;
MPRINT(EM_DIAGRAM):   end;
72285     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72286     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
72287     +   end;
MPRINT(EM_DIAGRAM):   end;
72288     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72289     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
72290     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72291     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72292     +   end;
MPRINT(EM_DIAGRAM):   end;
72293     +end;
MPRINT(EM_DIAGRAM):   end;
72294     +
72295     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
72296     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
72297     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
72298     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
72299     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72300     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72301     +end;
MPRINT(EM_DIAGRAM):   end;
72302     +else do;
MPRINT(EM_DIAGRAM):   else do;
72303     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72304     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
72305     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72306     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72307     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
72308     +   end;
MPRINT(EM_DIAGRAM):   end;
72309     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72310     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
72311     +   end;
MPRINT(EM_DIAGRAM):   end;
72312     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72313     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
72314     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72315     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72316     +   end;
MPRINT(EM_DIAGRAM):   end;
72317     +end;
MPRINT(EM_DIAGRAM):   end;
72318     +
72319     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
72320     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
72321     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
72322     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
72323     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72324     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72325     +end;
MPRINT(EM_DIAGRAM):   end;
72326     +else do;
MPRINT(EM_DIAGRAM):   else do;
72327     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72328     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
72329     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72330     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72331     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
72332     +   end;
MPRINT(EM_DIAGRAM):   end;
72333     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72334     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
72335     +   end;
MPRINT(EM_DIAGRAM):   end;
72336     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72337     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
72338     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72339     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72340     +   end;
MPRINT(EM_DIAGRAM):   end;
72341     +end;
MPRINT(EM_DIAGRAM):   end;
72342     +
72343     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
72344     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
72345     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
72346     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
72347     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72348     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72349     +end;
MPRINT(EM_DIAGRAM):   end;
72350     +else do;
MPRINT(EM_DIAGRAM):   else do;
72351     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72352     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
72353     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72354     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
72355     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
72356     +   end;
MPRINT(EM_DIAGRAM):   end;
72357     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
72358     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
72359     +   end;
MPRINT(EM_DIAGRAM):   end;
72360     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72361     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
72362     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72363     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72364     +   end;
MPRINT(EM_DIAGRAM):   end;
72365     +end;
MPRINT(EM_DIAGRAM):   end;
72366     +
72367     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
72368     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
72369     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
72370     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
72371     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72372     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72373     +end;
MPRINT(EM_DIAGRAM):   end;
72374     +else do;
MPRINT(EM_DIAGRAM):   else do;
72375     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
72376     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
72377     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72378     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
72379     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
72380     +   end;
MPRINT(EM_DIAGRAM):   end;
72381     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
72382     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
72383     +   end;
MPRINT(EM_DIAGRAM):   end;
72384     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72385     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
72386     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72387     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72388     +   end;
MPRINT(EM_DIAGRAM):   end;
72389     +end;
MPRINT(EM_DIAGRAM):   end;
72390     +
72391     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
72392     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
72393     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
72394     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
72395     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
72396     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
72397     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
72398     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
72399     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
72400     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
72401     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
72402     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
72403     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72404     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72405     +end;
MPRINT(EM_DIAGRAM):   end;
72406     +else do;
MPRINT(EM_DIAGRAM):   else do;
72407     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
72408     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
72409     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72410     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
72411     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
72412     +   end;
MPRINT(EM_DIAGRAM):   end;
72413     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
72414     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
72415     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
72416     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
72417     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
72418     +   end;
MPRINT(EM_DIAGRAM):   end;
72419     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
72420     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
72421     +   end;
MPRINT(EM_DIAGRAM):   end;
72422     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
72423     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
72424     +   end;
MPRINT(EM_DIAGRAM):   end;
72425     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
72426     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
72427     +   end;
MPRINT(EM_DIAGRAM):   end;
72428     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72429     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
72430     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
72431     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
72432     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
72433     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72434     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72435     +   end;
MPRINT(EM_DIAGRAM):   end;
72436     +end;
MPRINT(EM_DIAGRAM):   end;
72437     +
72438     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
72439     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
72440     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
72441     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
72442     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
72443     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
72444     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
72445     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
72446     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
72447     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72448     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72449     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72450     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72451     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
72452     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72453     +end;
MPRINT(EM_DIAGRAM):   end;
72454     +else do;
MPRINT(EM_DIAGRAM):   else do;
72455     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
72456     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
72457     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
72458     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
72459     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
72460     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
72461     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
72462     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
72463     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72464     +         end;
MPRINT(EM_DIAGRAM):   end;
72465     +         else do;
MPRINT(EM_DIAGRAM):   else do;
72466     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
72467     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
72468     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72469     +            end;
MPRINT(EM_DIAGRAM):   end;
72470     +         end;
MPRINT(EM_DIAGRAM):   end;
72471     +      end;
MPRINT(EM_DIAGRAM):   end;
72472     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72473     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
72474     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
72475     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72476     +         end;
MPRINT(EM_DIAGRAM):   end;
72477     +      end;
MPRINT(EM_DIAGRAM):   end;
72478     +   end;
MPRINT(EM_DIAGRAM):   end;
72479     +   else do;
MPRINT(EM_DIAGRAM):   else do;
72480     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
72481     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
72482     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72483     +      end;
MPRINT(EM_DIAGRAM):   end;
72484     +      else do;
MPRINT(EM_DIAGRAM):   else do;
72485     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
72486     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
72487     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
72488     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
72489     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
72490     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
72491     +         end;
MPRINT(EM_DIAGRAM):   end;
72492     +      end;
MPRINT(EM_DIAGRAM):   end;
72493     +   end;
MPRINT(EM_DIAGRAM):   end;
72494     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
72495     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
72496     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
72497     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
72498     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
72499     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
72500     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72501     +   end;
MPRINT(EM_DIAGRAM):   end;
72502     +end;
MPRINT(EM_DIAGRAM):   end;
72503     +
72504     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72505     +*** Checking missing input Interval
72506     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
72507     +
72508     +IF NMISS(
72509     +   AcceptedCmpTotal ,
72510     +   Age ,
72511     +   Frq ,
72512     +   Income ,
72513     +   Kidhome ,
72514     +   MntFishProducts ,
72515     +   MntFruits ,
72516     +   MntGoldProds ,
72517     +   MntSweetProducts ,
72518     +   MonthsAsCustomer ,
72519     +   NumDealsPurchases ,
72520     +   NumWebVisitsMonth ,
72521     +   RFMstat ,
72522     +   RMntFrq ,
72523     +   Recency ,
72524     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
72525     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
72526     +
72527     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
72528     +END;
MPRINT(EM_DIAGRAM):   END;
72529     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72530     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
72531     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72532     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72533     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72534     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
72535     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
72536     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72537     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72538     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
72539     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
72540     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
72541     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
72542     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72543     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
72544     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
72545     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
72546     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
72547     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
72548     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72549     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
72550     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72551     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
72552     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72553     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
72554     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72555     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72556     +END;
MPRINT(EM_DIAGRAM):   END;
72557     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72558     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
72559     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
72560     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
72561     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
72562     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
72563     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
72564     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
72565     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
72566     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
72567     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
72568     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
72569     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
72570     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
72571     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
72572     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
72573     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
72574     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
72575     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
72576     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
72577     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
72578     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
72579     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
72580     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
72581     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
72582     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
72583     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
72584     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
72585     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
72586     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
72587     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
72588     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
72589     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
72590     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
72591     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
72592     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
72593     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
72594     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
72595     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
72596     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
72597     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
72598     +END;
MPRINT(EM_DIAGRAM):   END;
72599     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72600     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
72601     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72602     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72603     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
72604     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72605     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72606     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
72607     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72608     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72609     +   H1x1_1  =    -0.59619526510279 * S_AcceptedCmpTotal
72610     +          +    -0.19567367757209 * S_Age  +    -1.87154193856682 * S_Frq
72611     +          +    -0.61220463973763 * S_Income  +     0.39435632091859 *
72612     +        S_Kidhome  +     0.27115687172661 * S_MntFishProducts
72613     +          +    -0.11978715045932 * S_MntFruits  +     0.29519469099756 *
72614     +        S_MntGoldProds  +     0.10278416295834 * S_MntSweetProducts
72615     +          +     -0.1740957673716 * S_MonthsAsCustomer
72616     +          +     0.66565026405117 * S_NumDealsPurchases
72617     +          +     0.43247206282836 * S_NumWebVisitsMonth
72618     +          +     0.36972451068821 * S_RFMstat  +     0.26260869862277 *
72619     +        S_RMntFrq  +    -0.28002323732518 * S_Recency
72620     +          +     0.44490818869588 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.59619526510279 * S_AcceptedCmpTotal + -0.19567367757209 * 
S_Age + -1.87154193856682 * S_Frq + -0.61220463973763 * S_Income + 0.39435632091859 * 
S_Kidhome + 0.27115687172661 * S_MntFishProducts + -0.11978715045932 * S_MntFruits + 
0.29519469099756 * S_MntGoldProds + 0.10278416295834 * S_MntSweetProducts + -0.1740957673716 * 
S_MonthsAsCustomer + 0.66565026405117 * S_NumDealsPurchases + 0.43247206282836 * 
S_NumWebVisitsMonth + 0.36972451068821 * S_RFMstat + 0.26260869862277 * S_RMntFrq + 
-0.28002323732518 * S_Recency + 0.44490818869588 * S_Teenhome ;
72621     +   H1x1_2  =    -0.18817303555602 * S_AcceptedCmpTotal
72622     +          +     0.02563068671435 * S_Age  +    -0.19671119906022 * S_Frq
72623     +          +    -0.57601068946749 * S_Income  +     0.32494160304894 *
72624     +        S_Kidhome  +     0.01652017751959 * S_MntFishProducts
72625     +          +     0.05773921061355 * S_MntFruits  +     0.02592530362424 *
72626     +        S_MntGoldProds  +     0.08946665597916 * S_MntSweetProducts
72627     +          +    -0.06176784990963 * S_MonthsAsCustomer
72628     +          +    -0.11740415005833 * S_NumDealsPurchases
72629     +          +    -0.17084845478672 * S_NumWebVisitsMonth
72630     +          +     0.00178400194387 * S_RFMstat  +    -0.13250191926905 *
72631     +        S_RMntFrq  +     0.54983271222574 * S_Recency
72632     +          +     0.42609230297633 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.18817303555602 * S_AcceptedCmpTotal + 0.02563068671435 * 
S_Age + -0.19671119906022 * S_Frq + -0.57601068946749 * S_Income + 0.32494160304894 * 
S_Kidhome + 0.01652017751959 * S_MntFishProducts + 0.05773921061355 * S_MntFruits + 
0.02592530362424 * S_MntGoldProds + 0.08946665597916 * S_MntSweetProducts + -0.06176784990963 
* S_MonthsAsCustomer + -0.11740415005833 * S_NumDealsPurchases + -0.17084845478672 * 
S_NumWebVisitsMonth + 0.00178400194387 * S_RFMstat + -0.13250191926905 * S_RMntFrq + 
0.54983271222574 * S_Recency + 0.42609230297633 * S_Teenhome ;
72633     +   H1x1_1  = H1x1_1  +    -0.73533354476059 * AcceptedCmp10
72634     +          +    -0.96410698969351 * AcceptedCmp20  +    -0.68713486641274 *
72635     +        AcceptedCmp30  +    -0.36566057748639 * AcceptedCmp40
72636     +          +     0.30630246801131 * AcceptedCmp50  +     0.35120823961025 *
72637     +        Complain0  +     -0.4767771812126 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.73533354476059 * AcceptedCmp10 + -0.96410698969351 
* AcceptedCmp20 + -0.68713486641274 * AcceptedCmp30 + -0.36566057748639 * AcceptedCmp40 + 
0.30630246801131 * AcceptedCmp50 + 0.35120823961025 * Complain0 + -0.4767771812126 * 
HigherEducationBinary0 ;
72638     +   H1x1_2  = H1x1_2  +     0.09341963945817 * AcceptedCmp10
72639     +          +     0.08648218396156 * AcceptedCmp20  +     0.20807620140826 *
72640     +        AcceptedCmp30  +     0.07826062169244 * AcceptedCmp40
72641     +          +     0.02564266279554 * AcceptedCmp50  +     0.04261102080378 *
72642     +        Complain0  +    -0.27229992860702 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.09341963945817 * AcceptedCmp10 + 0.08648218396156 * 
AcceptedCmp20 + 0.20807620140826 * AcceptedCmp30 + 0.07826062169244 * AcceptedCmp40 + 
0.02564266279554 * AcceptedCmp50 + 0.04261102080378 * Complain0 + -0.27229992860702 * 
HigherEducationBinary0 ;
72643     +   H1x1_1  = H1x1_1  +     0.21712849768666 * Education2n_Cycle
72644     +          +    -0.14027907370038 * EducationBasic  +    -0.11959455460972 *
72645     +        EducationGraduation  +     0.22632282500966 * EducationMaster
72646     +          +     -0.0800438380883 * Marital_StatusDivorced
72647     +          +     0.44505766937623 * Marital_StatusMarried
72648     +          +    -0.57546515626468 * Marital_StatusSingle
72649     +          +     0.38638180853046 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.21712849768666 * Education2n_Cycle + 
-0.14027907370038 * EducationBasic + -0.11959455460972 * EducationGraduation + 
0.22632282500966 * EducationMaster + -0.0800438380883 * Marital_StatusDivorced + 
0.44505766937623 * Marital_StatusMarried + -0.57546515626468 * Marital_StatusSingle + 
0.38638180853046 * Marital_StatusTogether ;
72650     +   H1x1_2  = H1x1_2  +     0.20241854612702 * Education2n_Cycle
72651     +          +    -0.02204834045555 * EducationBasic  +    -0.17229363591628 *
72652     +        EducationGraduation  +      0.0794165981215 * EducationMaster
72653     +          +    -0.20291653465543 * Marital_StatusDivorced
72654     +          +     0.39547414450617 * Marital_StatusMarried
72655     +          +    -0.37001331184001 * Marital_StatusSingle
72656     +          +     0.37889668606101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.20241854612702 * Education2n_Cycle + 
-0.02204834045555 * EducationBasic + -0.17229363591628 * EducationGraduation + 0.0794165981215 
* EducationMaster + -0.20291653465543 * Marital_StatusDivorced + 0.39547414450617 * 
Marital_StatusMarried + -0.37001331184001 * Marital_StatusSingle + 0.37889668606101 * 
Marital_StatusTogether ;
72657     +   H1x1_1  =     0.85218451823494 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.85218451823494 + H1x1_1 ;
72658     +   H1x1_2  =     1.25904481865206 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.25904481865206 + H1x1_2 ;
72659     +   H1x1_3  = 0;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0;
72660     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 );
72661     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72662     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
72663     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
72664     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
72665     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
72666     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
72667     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
72668     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
72669     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
72670     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
72671     +END;
MPRINT(EM_DIAGRAM):   END;
72672     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72673     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
72674     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
72675     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
72676     +END;
MPRINT(EM_DIAGRAM):   END;
72677     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72678     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
72679     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72680     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
72681     +   P_DepVar1  =     4.98178607983008 * H1x1_1  +    -8.34979505969025 * H1x1_2
72682     +          +     10.3301873876241 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.98178607983008 * H1x1_1 + -8.34979505969025 * H1x1_2 + 
10.3301873876241 * H1x1_3 ;
72683     +   P_DepVar1  =    -0.46201067268314 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.46201067268314 + P_DepVar1 ;
72684     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
72685     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
72686     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
72687     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
72688     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
72689     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
72690     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
72691     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
72692     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
72693     +END;
MPRINT(EM_DIAGRAM):   END;
72694     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
72695     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
72696     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
72697     +END;
MPRINT(EM_DIAGRAM):   END;
72698     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
72699     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
72700     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
72701     +END;
MPRINT(EM_DIAGRAM):   END;
72702     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72703     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
72704     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
72705     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
72706     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
72707     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
72708     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
72709     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
72710     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
72711     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
72712     +END;
MPRINT(EM_DIAGRAM):   END;
72713     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
72714     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
72715     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
72716     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72717      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72718      quit;
72719      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72720      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72721      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72722      retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
72723      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72724      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72725      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72726      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72727      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1811 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1811 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72728      proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
72729      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72730      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72731      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72732      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72733      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72734      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72735      proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
72736      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72737      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72738      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72739      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72740      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72741      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72742      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72743      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72744      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72745      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72745    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 997 rows and 5 columns.

72746      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72747      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
72748      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 997 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 997 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72749      filename _pref
72749    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
72750      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72751      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
72752     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72753     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
72754     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
72755     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
72756     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
72757     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72758      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72759      quit;
72760      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72761      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72762      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72763      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
72764      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72765      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72766      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72767      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72768      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72769      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
72770      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72771      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72772      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72773      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72774      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72775      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72776      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
72777      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

72778      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72779      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72780      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72781      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72782      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72783      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72784      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72785      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72786      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72786    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

72787      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72788      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
72789      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1001 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72790      filename _pref
72790    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
72791      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72792      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
72793     +
72794     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
72795     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
72795    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
72796     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
72797     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
72798     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
72799     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
72800     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72801      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72802      quit;
72803      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72804      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72805      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72806      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
72807      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72808      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72809      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72810      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72811      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72812      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
72813      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72814      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72815      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72816      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72817      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72818      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72819      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
72820      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72821      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72822      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72823      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72824      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72825      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72826      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72827      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72828      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72829      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72829    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

72830      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72831      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
72832      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1040 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72833      filename _pref
72833    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
72834      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
72835      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
72836     +
72837     +
72838     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
72839     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
72840     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
72841     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
72842     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
72843     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72844     +
72845     +
72846     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
72847     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
72848     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
72849     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
72850     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
72851     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72852     +
72853     +
72854     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
72855     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
72856     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
72857     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
72858     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
72859     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72860     +
72861     +
72862     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
72863     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
72864     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
72865     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
72866     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
72867     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72868     +
72869     +
72870     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
72871     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
72872     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
72873     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
72874     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
72875     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72876     +
72877     +
72878     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
72879     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
72880     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
72881     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
72882     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
72883     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72884     +
72885     +
72886     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
72887     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
72888     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
72889     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
72890     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
72891     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72892     +
72893     +
72894     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
72895     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
72896     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
72897     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
72898     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
72899     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
72900     +if
72901     +_FILTERNORM1 not in ( '.')
72902     + and
72903     +_FILTERNORM2 not in ( '.')
72904     + and
72905     +_FILTERNORM3 not in ( '.')
72906     + and
72907     +_FILTERNORM4 not in ( '.')
72908     + and
72909     +_FILTERNORM5 not in ( '.')
72910     + and
72911     +_FILTERNORM6 not in ( '.')
72912     + and
72913     +_FILTERNORM7 not in ( ' ')
72914     + and
72915     +_FILTERNORM8 not in ( ' ')
72916     +and
72917     +( Dt_Customer ne .)
72918     +and ( Income ne . and (Income<=107000))
72919     +and ( Kidhome ne .)
72920     +and ( MntFishProducts ne .)
72921     +and ( MntFruits ne .)
72922     +and ( MntGoldProds ne .)
72923     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
72924     +and ( MntSweetProducts ne .)
72925     +and ( MntWines ne .)
72926     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
72927     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
72928     +and ( NumStorePurchases ne .)
72929     +and ( NumWebPurchases ne .)
72930     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
72931     +and ( Recency ne .)
72932     +and ( Teenhome ne .)
72933     +and ( Year_Birth ne .)
72934     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
72935     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
72936     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
72937     +end;
MPRINT(EM_DIAGRAM):   end;
72938     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
72939     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
72940      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
72941      quit;
72942      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
72943      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
72944      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
72945      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
72946      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
72947      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72948      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
72949      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72950      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72951      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
72952      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72953      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72954      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72955      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
72956      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
72957      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72958      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
72959      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72960      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
72961      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72962      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72963      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
72964      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
72965      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
72966      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72967      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
72968      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
72968    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

72969      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

72970      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
72971      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1106 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

72972      %macro varDept(fcmpdata=,id=);
72973      %global nobs&id scoreFlag&id;
72974      %let scoreFlag&id = 0;
72975      %if &id=1 or ^&fcmpStart %then %do;
72976      proc sort data=&fcmpdata out=_temp&id nodupkey;
72977      by NAME;
72978      where id=&id and LHS in( %let j=1;
72979      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
72980      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
72981      "&var" %let j = %eval(&j+1);
72982      %end;
72983      );
72984      run;
72985      %let dsid = %sysfunc(open(_temp&id));
72986      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
72987      %let dsid = %sysfunc(close(&dsid));
72988      %if &&nobs&id %then %do;
72989      %let scoreFlag&id = 1;
72990      %let fcmpStart = 1;
72991      %end;
72992      %else %let fcmpStart = 0;
72993      %end;
72994      %else %do;
72995      proc sort data=&fcmpdata out=_tempid;
72996      where id=&id;
72997      by LHS;
72998      run;
72999      %let dsid = %sysfunc(open(_tempid));
73000      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73001      %let dsid = %sysfunc(close(&dsid));
73002      %if ^&&nobs&id %then %do;
73003      proc datasets lib=work nolist;
73004      delete _tempid;
73005      run;
73006      quit;
73007      %end;
73008      %else %do;
73009      data _tempAll;
73010      set %let j=%eval(&id-1);
73011      %do x=1 %to &j;
73012      %if &&nobs&x %then %do;
73013      _temp&x %end;
73014      %end;
73015      ;
73016      run;
73017      proc sql;
73018      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
73018    ! work._tempid p2 where p.name=p2.lhs;
73019      quit;
73020      data _temp&id;
73021      set _temp&id;
73022      where LHS ne '' and NAME ne '' and Node ne '';
73023      run;
73024      proc datasets lib=work nolist;
73025      delete _tempAll;
73026      run;
73027      %let dsid = %sysfunc(open(_temp&id));
73028      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73029      %let dsid = %sysfunc(close(&dsid));
73030      %if ^&&nobs&id %then %do;
73031      proc datasets lib=work nolist;
73032      delete _temp&id;
73033      run;
73034      quit;
73035      %end;
73036      %else %do;
73037      %let scoreFlag&id = 1;
73038      data _temp&id;
73039      set _temp&id;
73040      where LHS ne NAME and node ne '';
73041      run;
73042      %let dsid = %sysfunc(open(_temp&id));
73043      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73044      %let dsid = %sysfunc(close(&dsid));
73045      %if ^&&nobs&id %then %do;
73046      proc datasets lib=work nolist;
73047      delete _temp&id;
73048      run;
73049      quit;
73050      %end;
73051      %else %do;
73052      proc sort data=_temp&id nodupkey;
73053      by LHS NAME;
73054      run;
73055      %end;
73056      %end;
73057      %end;
73058      %end;
73059      %mend varDept;
73060      %macro optCode(outdata=fcmpdata);
73061      %global fcmpStart;
73062      %let fcmpStart = 0;
73063      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
73064      %let NumNodes=9;
73065      %do k=1 %to &NumNodes;
73066      %vardept(fcmpdata=&outdata, id=&k);
73067      %end;
73068      %mend optCode;
73069      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 115 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 85 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 30 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 30 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 32 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 30 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 65 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

73070      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
73071      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
73072      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
73073      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73074      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
73075      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
73076      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
73077      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73078      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73079      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
73079    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

73080      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73081      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
73082      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
73083      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73084      filename _pref
73084    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
73085      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73086      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
73087     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
73088     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
73089     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
73090     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
73091     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
73092     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
73093     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
73094     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
73095     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
73096     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
73097     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
73098     +LENGTH _WARN_ $4
73099     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
73100     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
73101     +
73102     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
73103     +
73104     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
73105     +
73106     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
73107     +
73108     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
73109     +
73110     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
73111     +
73112     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
73113     +
73114     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
73115     +
73116     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
73117     +
73118     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
73119     +
73120     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
73121     +
73122     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
73123     +
73124     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
73125     +
73126     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
73127     +
73128     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
73129     +
73130     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
73131     +
73132     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
73133     +
73134     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
73135     +
73136     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
73137     +
73138     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
73139     +
73140     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
73141     +
73142     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
73143     +
73144     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
73145     +
73146     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
73147     +
73148     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
73149     +
73150     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
73151     +
73152     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
73153     +
73154     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
73155     +
73156     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
73157     +
73158     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
73159     +
73160     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
73161     +
73162     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
73163     +
73164     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
73165     +
73166     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
73167     +
73168     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
73169     +
73170     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
73171     +
73172     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
73173     +
73174     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
73175     +
73176     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
73177     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
73178     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
73179     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
73180     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73181     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73182     +end;
MPRINT(EM_DIAGRAM):   end;
73183     +else do;
MPRINT(EM_DIAGRAM):   else do;
73184     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73185     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
73186     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73187     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73188     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
73189     +   end;
MPRINT(EM_DIAGRAM):   end;
73190     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73191     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
73192     +   end;
MPRINT(EM_DIAGRAM):   end;
73193     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73194     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
73195     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73196     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73197     +   end;
MPRINT(EM_DIAGRAM):   end;
73198     +end;
MPRINT(EM_DIAGRAM):   end;
73199     +
73200     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
73201     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
73202     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
73203     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
73204     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73205     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73206     +end;
MPRINT(EM_DIAGRAM):   end;
73207     +else do;
MPRINT(EM_DIAGRAM):   else do;
73208     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73209     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
73210     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73211     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73212     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
73213     +   end;
MPRINT(EM_DIAGRAM):   end;
73214     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73215     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
73216     +   end;
MPRINT(EM_DIAGRAM):   end;
73217     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73218     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
73219     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73220     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73221     +   end;
MPRINT(EM_DIAGRAM):   end;
73222     +end;
MPRINT(EM_DIAGRAM):   end;
73223     +
73224     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
73225     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
73226     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
73227     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
73228     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73229     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73230     +end;
MPRINT(EM_DIAGRAM):   end;
73231     +else do;
MPRINT(EM_DIAGRAM):   else do;
73232     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73233     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
73234     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73235     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73236     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
73237     +   end;
MPRINT(EM_DIAGRAM):   end;
73238     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73239     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
73240     +   end;
MPRINT(EM_DIAGRAM):   end;
73241     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73242     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
73243     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73244     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73245     +   end;
MPRINT(EM_DIAGRAM):   end;
73246     +end;
MPRINT(EM_DIAGRAM):   end;
73247     +
73248     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
73249     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
73250     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
73251     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
73252     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73253     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73254     +end;
MPRINT(EM_DIAGRAM):   end;
73255     +else do;
MPRINT(EM_DIAGRAM):   else do;
73256     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73257     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
73258     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73259     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73260     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
73261     +   end;
MPRINT(EM_DIAGRAM):   end;
73262     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73263     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
73264     +   end;
MPRINT(EM_DIAGRAM):   end;
73265     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73266     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
73267     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73268     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73269     +   end;
MPRINT(EM_DIAGRAM):   end;
73270     +end;
MPRINT(EM_DIAGRAM):   end;
73271     +
73272     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
73273     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
73274     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
73275     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
73276     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73277     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73278     +end;
MPRINT(EM_DIAGRAM):   end;
73279     +else do;
MPRINT(EM_DIAGRAM):   else do;
73280     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73281     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
73282     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73283     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73284     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
73285     +   end;
MPRINT(EM_DIAGRAM):   end;
73286     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73287     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
73288     +   end;
MPRINT(EM_DIAGRAM):   end;
73289     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73290     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
73291     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73292     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73293     +   end;
MPRINT(EM_DIAGRAM):   end;
73294     +end;
MPRINT(EM_DIAGRAM):   end;
73295     +
73296     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
73297     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
73298     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
73299     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
73300     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73301     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73302     +end;
MPRINT(EM_DIAGRAM):   end;
73303     +else do;
MPRINT(EM_DIAGRAM):   else do;
73304     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73305     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
73306     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73307     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
73308     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
73309     +   end;
MPRINT(EM_DIAGRAM):   end;
73310     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
73311     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
73312     +   end;
MPRINT(EM_DIAGRAM):   end;
73313     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73314     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
73315     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73316     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73317     +   end;
MPRINT(EM_DIAGRAM):   end;
73318     +end;
MPRINT(EM_DIAGRAM):   end;
73319     +
73320     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
73321     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
73322     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
73323     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
73324     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73325     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73326     +end;
MPRINT(EM_DIAGRAM):   end;
73327     +else do;
MPRINT(EM_DIAGRAM):   else do;
73328     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
73329     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
73330     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73331     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
73332     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
73333     +   end;
MPRINT(EM_DIAGRAM):   end;
73334     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
73335     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
73336     +   end;
MPRINT(EM_DIAGRAM):   end;
73337     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73338     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
73339     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73340     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73341     +   end;
MPRINT(EM_DIAGRAM):   end;
73342     +end;
MPRINT(EM_DIAGRAM):   end;
73343     +
73344     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
73345     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
73346     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
73347     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
73348     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
73349     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
73350     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
73351     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
73352     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
73353     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
73354     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
73355     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
73356     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73357     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73358     +end;
MPRINT(EM_DIAGRAM):   end;
73359     +else do;
MPRINT(EM_DIAGRAM):   else do;
73360     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
73361     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
73362     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73363     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
73364     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
73365     +   end;
MPRINT(EM_DIAGRAM):   end;
73366     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
73367     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
73368     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
73369     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
73370     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
73371     +   end;
MPRINT(EM_DIAGRAM):   end;
73372     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
73373     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
73374     +   end;
MPRINT(EM_DIAGRAM):   end;
73375     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
73376     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
73377     +   end;
MPRINT(EM_DIAGRAM):   end;
73378     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
73379     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
73380     +   end;
MPRINT(EM_DIAGRAM):   end;
73381     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73382     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
73383     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
73384     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
73385     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
73386     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73387     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73388     +   end;
MPRINT(EM_DIAGRAM):   end;
73389     +end;
MPRINT(EM_DIAGRAM):   end;
73390     +
73391     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
73392     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
73393     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
73394     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
73395     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
73396     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
73397     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
73398     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
73399     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
73400     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
73401     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
73402     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
73403     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
73404     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
73405     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73406     +end;
MPRINT(EM_DIAGRAM):   end;
73407     +else do;
MPRINT(EM_DIAGRAM):   else do;
73408     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
73409     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
73410     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
73411     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
73412     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
73413     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
73414     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
73415     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
73416     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73417     +         end;
MPRINT(EM_DIAGRAM):   end;
73418     +         else do;
MPRINT(EM_DIAGRAM):   else do;
73419     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
73420     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
73421     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73422     +            end;
MPRINT(EM_DIAGRAM):   end;
73423     +         end;
MPRINT(EM_DIAGRAM):   end;
73424     +      end;
MPRINT(EM_DIAGRAM):   end;
73425     +      else do;
MPRINT(EM_DIAGRAM):   else do;
73426     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
73427     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
73428     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73429     +         end;
MPRINT(EM_DIAGRAM):   end;
73430     +      end;
MPRINT(EM_DIAGRAM):   end;
73431     +   end;
MPRINT(EM_DIAGRAM):   end;
73432     +   else do;
MPRINT(EM_DIAGRAM):   else do;
73433     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
73434     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
73435     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73436     +      end;
MPRINT(EM_DIAGRAM):   end;
73437     +      else do;
MPRINT(EM_DIAGRAM):   else do;
73438     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
73439     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
73440     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
73441     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
73442     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
73443     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
73444     +         end;
MPRINT(EM_DIAGRAM):   end;
73445     +      end;
MPRINT(EM_DIAGRAM):   end;
73446     +   end;
MPRINT(EM_DIAGRAM):   end;
73447     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
73448     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
73449     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
73450     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
73451     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
73452     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
73453     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73454     +   end;
MPRINT(EM_DIAGRAM):   end;
73455     +end;
MPRINT(EM_DIAGRAM):   end;
73456     +
73457     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73458     +*** Checking missing input Interval
73459     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
73460     +
73461     +IF NMISS(
73462     +   AcceptedCmpTotal ,
73463     +   Age ,
73464     +   Frq ,
73465     +   Income ,
73466     +   Kidhome ,
73467     +   MntFishProducts ,
73468     +   MntFruits ,
73469     +   MntGoldProds ,
73470     +   MntSweetProducts ,
73471     +   MonthsAsCustomer ,
73472     +   NumDealsPurchases ,
73473     +   NumWebVisitsMonth ,
73474     +   RFMstat ,
73475     +   RMntFrq ,
73476     +   Recency ,
73477     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
73478     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
73479     +
73480     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
73481     +END;
MPRINT(EM_DIAGRAM):   END;
73482     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73483     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
73484     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73485     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73486     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
73487     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
73488     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
73489     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
73490     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
73491     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
73492     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
73493     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
73494     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
73495     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
73496     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
73497     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
73498     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
73499     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
73500     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
73501     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
73502     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
73503     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
73504     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
73505     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
73506     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
73507     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
73508     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
73509     +END;
MPRINT(EM_DIAGRAM):   END;
73510     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73511     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
73512     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
73513     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
73514     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
73515     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
73516     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
73517     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
73518     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
73519     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
73520     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
73521     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
73522     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
73523     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
73524     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
73525     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
73526     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
73527     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
73528     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
73529     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
73530     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
73531     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
73532     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
73533     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
73534     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
73535     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
73536     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
73537     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
73538     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
73539     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
73540     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
73541     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
73542     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
73543     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
73544     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
73545     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
73546     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
73547     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
73548     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
73549     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
73550     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
73551     +END;
MPRINT(EM_DIAGRAM):   END;
73552     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73553     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
73554     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73555     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73556     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
73557     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73558     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73559     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
73560     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73561     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73562     +   H1x1_1  =     0.14799095926144 * S_AcceptedCmpTotal
73563     +          +    -0.04647384466642 * S_Age  +     0.24999790039572 * S_Frq
73564     +          +     0.67193946760329 * S_Income  +    -0.42077272097029 *
73565     +        S_Kidhome  +    -0.02139676364759 * S_MntFishProducts
73566     +          +    -0.06309036790386 * S_MntFruits  +    -0.02579098391162 *
73567     +        S_MntGoldProds  +    -0.10360214785919 * S_MntSweetProducts
73568     +          +     0.07696704519183 * S_MonthsAsCustomer
73569     +          +     0.06885982009617 * S_NumDealsPurchases
73570     +          +     0.18284147478918 * S_NumWebVisitsMonth
73571     +          +    -0.00475791839806 * S_RFMstat  +     0.16731511643557 *
73572     +        S_RMntFrq  +    -0.65651411558717 * S_Recency
73573     +          +    -0.45659275487674 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.14799095926144 * S_AcceptedCmpTotal + -0.04647384466642 * 
S_Age + 0.24999790039572 * S_Frq + 0.67193946760329 * S_Income + -0.42077272097029 * S_Kidhome 
+ -0.02139676364759 * S_MntFishProducts + -0.06309036790386 * S_MntFruits + -0.02579098391162 
* S_MntGoldProds + -0.10360214785919 * S_MntSweetProducts + 0.07696704519183 * 
S_MonthsAsCustomer + 0.06885982009617 * S_NumDealsPurchases + 0.18284147478918 * 
S_NumWebVisitsMonth + -0.00475791839806 * S_RFMstat + 0.16731511643557 * S_RMntFrq + 
-0.65651411558717 * S_Recency + -0.45659275487674 * S_Teenhome ;
73574     +   H1x1_2  =      0.4505629421372 * S_AcceptedCmpTotal
73575     +          +     0.25939118491361 * S_Age  +     2.77688249418832 * S_Frq
73576     +          +     0.32697030303845 * S_Income  +    -0.37246867163551 *
73577     +        S_Kidhome  +    -0.61585865165341 * S_MntFishProducts
73578     +          +     0.48583904586511 * S_MntFruits  +    -0.38353134378746 *
73579     +        S_MntGoldProds  +     0.00655094628315 * S_MntSweetProducts
73580     +          +     0.19400730773464 * S_MonthsAsCustomer
73581     +          +    -1.36455521037197 * S_NumDealsPurchases
73582     +          +    -1.07068059346196 * S_NumWebVisitsMonth
73583     +          +     -0.4953702697801 * S_RFMstat  +    -0.73989265677449 *
73584     +        S_RMntFrq  +     1.36066079800227 * S_Recency
73585     +          +    -0.04271320094349 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.4505629421372 * S_AcceptedCmpTotal + 0.25939118491361 * S_Age 
+ 2.77688249418832 * S_Frq + 0.32697030303845 * S_Income + -0.37246867163551 * S_Kidhome + 
-0.61585865165341 * S_MntFishProducts + 0.48583904586511 * S_MntFruits + -0.38353134378746 * 
S_MntGoldProds + 0.00655094628315 * S_MntSweetProducts + 0.19400730773464 * S_MonthsAsCustomer 
+ -1.36455521037197 * S_NumDealsPurchases + -1.07068059346196 * S_NumWebVisitsMonth + 
-0.4953702697801 * S_RFMstat + -0.73989265677449 * S_RMntFrq + 1.36066079800227 * S_Recency + 
-0.04271320094349 * S_Teenhome ;
73586     +   H1x1_1  = H1x1_1  +    -0.15625358687394 * AcceptedCmp10
73587     +          +    -0.16004536933275 * AcceptedCmp20  +    -0.25016784155495 *
73588     +        AcceptedCmp30  +    -0.15585105085453 * AcceptedCmp40
73589     +          +    -0.06982247699471 * AcceptedCmp50  +    -0.11568047349098 *
73590     +        Complain0  +     0.36349047632504 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.15625358687394 * AcceptedCmp10 + -0.16004536933275 
* AcceptedCmp20 + -0.25016784155495 * AcceptedCmp30 + -0.15585105085453 * AcceptedCmp40 + 
-0.06982247699471 * AcceptedCmp50 + -0.11568047349098 * Complain0 + 0.36349047632504 * 
HigherEducationBinary0 ;
73591     +   H1x1_2  = H1x1_2  +     1.51765243597714 * AcceptedCmp10
73592     +          +     1.47001519525633 * AcceptedCmp20  +      1.4613337402064 *
73593     +        AcceptedCmp30  +     0.39175009738324 * AcceptedCmp40
73594     +          +    -0.35396325940732 * AcceptedCmp50  +     -0.8151538493653 *
73595     +        Complain0  +     0.47014175146609 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 1.51765243597714 * AcceptedCmp10 + 1.47001519525633 * 
AcceptedCmp20 + 1.4613337402064 * AcceptedCmp30 + 0.39175009738324 * AcceptedCmp40 + 
-0.35396325940732 * AcceptedCmp50 + -0.8151538493653 * Complain0 + 0.47014175146609 * 
HigherEducationBinary0 ;
73596     +   H1x1_1  = H1x1_1  +    -0.41546031612995 * Education2n_Cycle
73597     +          +     0.33474673936754 * EducationBasic  +     0.15788973153313 *
73598     +        EducationGraduation  +    -0.13796568916415 * EducationMaster
73599     +          +     0.23432241402098 * Marital_StatusDivorced
73600     +          +    -0.46302700269027 * Marital_StatusMarried
73601     +          +      0.4032168653504 * Marital_StatusSingle
73602     +          +    -0.44795341835702 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.41546031612995 * Education2n_Cycle + 
0.33474673936754 * EducationBasic + 0.15788973153313 * EducationGraduation + -0.13796568916415 
* EducationMaster + 0.23432241402098 * Marital_StatusDivorced + -0.46302700269027 * 
Marital_StatusMarried + 0.4032168653504 * Marital_StatusSingle + -0.44795341835702 * 
Marital_StatusTogether ;
73603     +   H1x1_2  = H1x1_2  +    -0.18958861902397 * Education2n_Cycle
73604     +          +     0.56593307913524 * EducationBasic  +    -0.16639049776163 *
73605     +        EducationGraduation  +     -0.3917553423088 * EducationMaster
73606     +          +    -0.31347503340603 * Marital_StatusDivorced
73607     +          +    -0.20319530959178 * Marital_StatusMarried
73608     +          +     0.48298350411196 * Marital_StatusSingle
73609     +          +      -0.252969507874 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.18958861902397 * Education2n_Cycle + 
0.56593307913524 * EducationBasic + -0.16639049776163 * EducationGraduation + -0.3917553423088 
* EducationMaster + -0.31347503340603 * Marital_StatusDivorced + -0.20319530959178 * 
Marital_StatusMarried + 0.48298350411196 * Marital_StatusSingle + -0.252969507874 * 
Marital_StatusTogether ;
73610     +   H1x1_1  =    -1.25768416618497 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.25768416618497 + H1x1_1 ;
73611     +   H1x1_2  =      1.4658519648796 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.4658519648796 + H1x1_2 ;
73612     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
73613     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
73614     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
73615     +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
73616     +END;
MPRINT(EM_DIAGRAM):   END;
73617     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73618     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
73619     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
73620     +END;
MPRINT(EM_DIAGRAM):   END;
73621     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73622     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
73623     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73624     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
73625     +   P_DepVar1  =     15.2788764824385 * H1x1_1  +    -7.37711503177617 * H1x1_2
73626     +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 15.2788764824385 * H1x1_1 + -7.37711503177617 * H1x1_2 ;
73627     +   P_DepVar1  =     0.37159160751318 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.37159160751318 + P_DepVar1 ;
73628     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
73629     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
73630     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
73631     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
73632     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
73633     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
73634     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
73635     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
73636     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
73637     +END;
MPRINT(EM_DIAGRAM):   END;
73638     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
73639     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
73640     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
73641     +END;
MPRINT(EM_DIAGRAM):   END;
73642     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
73643     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
73644     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
73645     +END;
MPRINT(EM_DIAGRAM):   END;
73646     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73647     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
73648     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
73649     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
73650     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
73651     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
73652     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
73653     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
73654     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
73655     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
73656     +END;
MPRINT(EM_DIAGRAM):   END;
73657     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
73658     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
73659     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
73660     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73661      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73662      quit;
73663      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73664      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73665      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73666      retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
73667      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73668      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73669      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73670      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73671      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1643 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1643 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73672      proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
73673      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73674      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73675      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73676      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73677      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73678      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73679      proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
73680      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73681      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73682      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73683      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 55 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 55 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73684      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73685      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73686      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73687      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 55 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 55 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73688      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73689      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73689    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 936 rows and 5 columns.

73690      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73691      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
73692      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 936 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 936 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73693      filename _pref
73693    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
73694      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73695      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
73696     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73697     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
73698     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
73699     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
73700     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
73701     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73702      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73703      quit;
73704      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73705      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73706      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73707      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
73708      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73709      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73710      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73711      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73712      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73713      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
73714      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73715      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73716      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73717      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73718      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73719      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73720      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
73721      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73722      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73723      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73724      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73725      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73726      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73727      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73728      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73729      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73730      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73730    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

73731      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73732      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
73733      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 940 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73734      filename _pref
73734    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
73735      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73736      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
73737     +
73738     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
73739     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
73739    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
73740     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
73741     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
73742     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
73743     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
73744     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73745      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73746      quit;
73747      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73748      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73749      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73750      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
73751      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73752      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73753      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73754      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73755      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73756      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
73757      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73758      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73759      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73760      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73761      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73762      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73763      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
73764      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73765      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73766      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73767      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73768      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73769      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73770      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73771      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73772      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73773      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73773    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

73774      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73775      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
73776      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 979 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73777      filename _pref
73777    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
73778      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
73779      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
73780     +
73781     +
73782     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
73783     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
73784     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
73785     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
73786     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
73787     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73788     +
73789     +
73790     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
73791     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
73792     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
73793     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
73794     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
73795     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73796     +
73797     +
73798     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
73799     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
73800     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
73801     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
73802     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
73803     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73804     +
73805     +
73806     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
73807     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
73808     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
73809     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
73810     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
73811     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73812     +
73813     +
73814     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
73815     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
73816     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
73817     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
73818     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
73819     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73820     +
73821     +
73822     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
73823     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
73824     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
73825     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
73826     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
73827     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73828     +
73829     +
73830     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
73831     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
73832     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
73833     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
73834     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
73835     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73836     +
73837     +
73838     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
73839     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
73840     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
73841     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
73842     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
73843     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
73844     +if
73845     +_FILTERNORM1 not in ( '.')
73846     + and
73847     +_FILTERNORM2 not in ( '.')
73848     + and
73849     +_FILTERNORM3 not in ( '.')
73850     + and
73851     +_FILTERNORM4 not in ( '.')
73852     + and
73853     +_FILTERNORM5 not in ( '.')
73854     + and
73855     +_FILTERNORM6 not in ( '.')
73856     + and
73857     +_FILTERNORM7 not in ( ' ')
73858     + and
73859     +_FILTERNORM8 not in ( ' ')
73860     +and
73861     +( Dt_Customer ne .)
73862     +and ( Income ne . and (Income<=107000))
73863     +and ( Kidhome ne .)
73864     +and ( MntFishProducts ne .)
73865     +and ( MntFruits ne .)
73866     +and ( MntGoldProds ne .)
73867     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
73868     +and ( MntSweetProducts ne .)
73869     +and ( MntWines ne .)
73870     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
73871     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
73872     +and ( NumStorePurchases ne .)
73873     +and ( NumWebPurchases ne .)
73874     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
73875     +and ( Recency ne .)
73876     +and ( Teenhome ne .)
73877     +and ( Year_Birth ne .)
73878     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
73879     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
73880     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
73881     +end;
MPRINT(EM_DIAGRAM):   end;
73882     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
73883     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
73884      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
73885      quit;
73886      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
73887      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
73888      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
73889      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
73890      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
73891      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73892      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
73893      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73894      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73895      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
73896      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73897      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73898      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73899      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
73900      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
73901      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73902      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
73903      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73904      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
73905      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73906      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73907      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
73908      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
73909      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
73910      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73911      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
73912      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
73912    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

73913      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

73914      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
73915      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1045 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

73916      %macro varDept(fcmpdata=,id=);
73917      %global nobs&id scoreFlag&id;
73918      %let scoreFlag&id = 0;
73919      %if &id=1 or ^&fcmpStart %then %do;
73920      proc sort data=&fcmpdata out=_temp&id nodupkey;
73921      by NAME;
73922      where id=&id and LHS in( %let j=1;
73923      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
73924      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
73925      "&var" %let j = %eval(&j+1);
73926      %end;
73927      );
73928      run;
73929      %let dsid = %sysfunc(open(_temp&id));
73930      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73931      %let dsid = %sysfunc(close(&dsid));
73932      %if &&nobs&id %then %do;
73933      %let scoreFlag&id = 1;
73934      %let fcmpStart = 1;
73935      %end;
73936      %else %let fcmpStart = 0;
73937      %end;
73938      %else %do;
73939      proc sort data=&fcmpdata out=_tempid;
73940      where id=&id;
73941      by LHS;
73942      run;
73943      %let dsid = %sysfunc(open(_tempid));
73944      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73945      %let dsid = %sysfunc(close(&dsid));
73946      %if ^&&nobs&id %then %do;
73947      proc datasets lib=work nolist;
73948      delete _tempid;
73949      run;
73950      quit;
73951      %end;
73952      %else %do;
73953      data _tempAll;
73954      set %let j=%eval(&id-1);
73955      %do x=1 %to &j;
73956      %if &&nobs&x %then %do;
73957      _temp&x %end;
73958      %end;
73959      ;
73960      run;
73961      proc sql;
73962      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
73962    ! work._tempid p2 where p.name=p2.lhs;
73963      quit;
73964      data _temp&id;
73965      set _temp&id;
73966      where LHS ne '' and NAME ne '' and Node ne '';
73967      run;
73968      proc datasets lib=work nolist;
73969      delete _tempAll;
73970      run;
73971      %let dsid = %sysfunc(open(_temp&id));
73972      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73973      %let dsid = %sysfunc(close(&dsid));
73974      %if ^&&nobs&id %then %do;
73975      proc datasets lib=work nolist;
73976      delete _temp&id;
73977      run;
73978      quit;
73979      %end;
73980      %else %do;
73981      %let scoreFlag&id = 1;
73982      data _temp&id;
73983      set _temp&id;
73984      where LHS ne NAME and node ne '';
73985      run;
73986      %let dsid = %sysfunc(open(_temp&id));
73987      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
73988      %let dsid = %sysfunc(close(&dsid));
73989      %if ^&&nobs&id %then %do;
73990      proc datasets lib=work nolist;
73991      delete _temp&id;
73992      run;
73993      quit;
73994      %end;
73995      %else %do;
73996      proc sort data=_temp&id nodupkey;
73997      by LHS NAME;
73998      run;
73999      %end;
74000      %end;
74001      %end;
74002      %end;
74003      %mend varDept;
74004      %macro optCode(outdata=fcmpdata);
74005      %global fcmpStart;
74006      %let fcmpStart = 0;
74007      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
74008      %let NumNodes=9;
74009      %do k=1 %to &NumNodes;
74010      %vardept(fcmpdata=&outdata, id=&k);
74011      %end;
74012      %mend optCode;
74013      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 112 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 83 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 29 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 29 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 64 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

74014      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
74015      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
74016      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
74017      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74018      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
74019      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
74020      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
74021      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74022      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
74023      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
74023    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

74024      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74025      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
74026      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
74027      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74028      filename _pref
74028    ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
74029      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
74030      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
74031     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
74032     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
74033     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
74034     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
74035     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
74036     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
74037     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
74038     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
74039     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
74040     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
74041     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
74042     +LENGTH _WARN_ $4
74043     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
74044     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
74045     +
74046     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
74047     +
74048     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
74049     +
74050     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
74051     +
74052     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
74053     +
74054     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
74055     +
74056     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
74057     +
74058     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
74059     +
74060     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
74061     +
74062     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
74063     +
74064     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
74065     +
74066     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
74067     +
74068     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
74069     +
74070     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
74071     +
74072     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
74073     +
74074     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
74075     +
74076     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
74077     +
74078     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
74079     +
74080     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
74081     +
74082     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
74083     +
74084     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
74085     +
74086     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
74087     +
74088     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
74089     +
74090     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
74091     +
74092     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
74093     +
74094     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
74095     +
74096     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
74097     +
74098     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
74099     +
74100     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
74101     +
74102     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
74103     +
74104     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
74105     +
74106     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
74107     +
74108     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
74109     +
74110     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
74111     +
74112     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
74113     +
74114     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
74115     +
74116     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
74117     +
74118     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
74119     +
74120     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
74121     +
74122     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
74123     +
74124     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
74125     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
74126     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
74127     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
74128     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74129     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74130     +end;
MPRINT(EM_DIAGRAM):   end;
74131     +else do;
MPRINT(EM_DIAGRAM):   else do;
74132     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74133     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
74134     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74135     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
74136     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
74137     +   end;
MPRINT(EM_DIAGRAM):   end;
74138     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
74139     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
74140     +   end;
MPRINT(EM_DIAGRAM):   end;
74141     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74142     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
74143     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74144     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74145     +   end;
MPRINT(EM_DIAGRAM):   end;
74146     +end;
MPRINT(EM_DIAGRAM):   end;
74147     +
74148     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
74149     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
74150     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
74151     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
74152     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74153     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74154     +end;
MPRINT(EM_DIAGRAM):   end;
74155     +else do;
MPRINT(EM_DIAGRAM):   else do;
74156     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74157     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
74158     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74159     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
74160     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
74161     +   end;
MPRINT(EM_DIAGRAM):   end;
74162     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
74163     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
74164     +   end;
MPRINT(EM_DIAGRAM):   end;
74165     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74166     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
74167     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74168     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74169     +   end;
MPRINT(EM_DIAGRAM):   end;
74170     +end;
MPRINT(EM_DIAGRAM):   end;
74171     +
74172     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
74173     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
74174     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
74175     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
74176     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74177     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74178     +end;
MPRINT(EM_DIAGRAM):   end;
74179     +else do;
MPRINT(EM_DIAGRAM):   else do;
74180     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74181     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
74182     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74183     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
74184     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
74185     +   end;
MPRINT(EM_DIAGRAM):   end;
74186     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
74187     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
74188     +   end;
MPRINT(EM_DIAGRAM):   end;
74189     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74190     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
74191     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74192     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74193     +   end;
MPRINT(EM_DIAGRAM):   end;
74194     +end;
MPRINT(EM_DIAGRAM):   end;
74195     +
74196     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
74197     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
74198     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
74199     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
74200     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74201     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74202     +end;
MPRINT(EM_DIAGRAM):   end;
74203     +else do;
MPRINT(EM_DIAGRAM):   else do;
74204     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74205     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
74206     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74207     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
74208     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
74209     +   end;
MPRINT(EM_DIAGRAM):   end;
74210     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
74211     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
74212     +   end;
MPRINT(EM_DIAGRAM):   end;
74213     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74214     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
74215     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74216     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74217     +   end;
MPRINT(EM_DIAGRAM):   end;
74218     +end;
MPRINT(EM_DIAGRAM):   end;
74219     +
74220     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
74221     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
74222     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
74223     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
74224     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74225     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74226     +end;
MPRINT(EM_DIAGRAM):   end;
74227     +else do;
MPRINT(EM_DIAGRAM):   else do;
74228     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74229     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
74230     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74231     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
74232     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
74233     +   end;
MPRINT(EM_DIAGRAM):   end;
74234     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
74235     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
74236     +   end;
MPRINT(EM_DIAGRAM):   end;
74237     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74238     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
74239     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74240     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74241     +   end;
MPRINT(EM_DIAGRAM):   end;
74242     +end;
MPRINT(EM_DIAGRAM):   end;
74243     +
74244     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
74245     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
74246     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
74247     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
74248     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74249     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74250     +end;
MPRINT(EM_DIAGRAM):   end;
74251     +else do;
MPRINT(EM_DIAGRAM):   else do;
74252     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74253     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
74254     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74255     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
74256     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
74257     +   end;
MPRINT(EM_DIAGRAM):   end;
74258     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
74259     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
74260     +   end;
MPRINT(EM_DIAGRAM):   end;
74261     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74262     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
74263     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74264     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74265     +   end;
MPRINT(EM_DIAGRAM):   end;
74266     +end;
MPRINT(EM_DIAGRAM):   end;
74267     +
74268     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
74269     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
74270     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
74271     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
74272     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74273     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74274     +end;
MPRINT(EM_DIAGRAM):   end;
74275     +else do;
MPRINT(EM_DIAGRAM):   else do;
74276     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
74277     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
74278     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74279     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
74280     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
74281     +   end;
MPRINT(EM_DIAGRAM):   end;
74282     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
74283     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
74284     +   end;
MPRINT(EM_DIAGRAM):   end;
74285     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74286     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
74287     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74288     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74289     +   end;
MPRINT(EM_DIAGRAM):   end;
74290     +end;
MPRINT(EM_DIAGRAM):   end;
74291     +
74292     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
74293     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
74294     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
74295     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
74296     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
74297     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
74298     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
74299     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
74300     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
74301     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
74302     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
74303     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
74304     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74305     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74306     +end;
MPRINT(EM_DIAGRAM):   end;
74307     +else do;
MPRINT(EM_DIAGRAM):   else do;
74308     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
74309     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
74310     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74311     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
74312     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
74313     +   end;
MPRINT(EM_DIAGRAM):   end;
74314     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
74315     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
74316     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
74317     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
74318     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
74319     +   end;
MPRINT(EM_DIAGRAM):   end;
74320     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
74321     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
74322     +   end;
MPRINT(EM_DIAGRAM):   end;
74323     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
74324     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
74325     +   end;
MPRINT(EM_DIAGRAM):   end;
74326     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
74327     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
74328     +   end;
MPRINT(EM_DIAGRAM):   end;
74329     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74330     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
74331     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
74332     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
74333     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
74334     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74335     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74336     +   end;
MPRINT(EM_DIAGRAM):   end;
74337     +end;
MPRINT(EM_DIAGRAM):   end;
74338     +
74339     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
74340     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
74341     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
74342     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
74343     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
74344     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
74345     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
74346     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
74347     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
74348     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
74349     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
74350     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
74351     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
74352     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
74353     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74354     +end;
MPRINT(EM_DIAGRAM):   end;
74355     +else do;
MPRINT(EM_DIAGRAM):   else do;
74356     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
74357     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
74358     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
74359     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
74360     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
74361     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
74362     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
74363     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
74364     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74365     +         end;
MPRINT(EM_DIAGRAM):   end;
74366     +         else do;
MPRINT(EM_DIAGRAM):   else do;
74367     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
74368     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
74369     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74370     +            end;
MPRINT(EM_DIAGRAM):   end;
74371     +         end;
MPRINT(EM_DIAGRAM):   end;
74372     +      end;
MPRINT(EM_DIAGRAM):   end;
74373     +      else do;
MPRINT(EM_DIAGRAM):   else do;
74374     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
74375     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
74376     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74377     +         end;
MPRINT(EM_DIAGRAM):   end;
74378     +      end;
MPRINT(EM_DIAGRAM):   end;
74379     +   end;
MPRINT(EM_DIAGRAM):   end;
74380     +   else do;
MPRINT(EM_DIAGRAM):   else do;
74381     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
74382     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
74383     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74384     +      end;
MPRINT(EM_DIAGRAM):   end;
74385     +      else do;
MPRINT(EM_DIAGRAM):   else do;
74386     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
74387     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
74388     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
74389     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
74390     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
74391     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
74392     +         end;
MPRINT(EM_DIAGRAM):   end;
74393     +      end;
MPRINT(EM_DIAGRAM):   end;
74394     +   end;
MPRINT(EM_DIAGRAM):   end;
74395     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
74396     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
74397     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
74398     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
74399     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
74400     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
74401     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74402     +   end;
MPRINT(EM_DIAGRAM):   end;
74403     +end;
MPRINT(EM_DIAGRAM):   end;
74404     +
74405     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74406     +*** Checking missing input Interval
74407     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
74408     +
74409     +IF NMISS(
74410     +   AcceptedCmpTotal ,
74411     +   Age ,
74412     +   Frq ,
74413     +   Income ,
74414     +   Kidhome ,
74415     +   MntFishProducts ,
74416     +   MntFruits ,
74417     +   MntGoldProds ,
74418     +   MntSweetProducts ,
74419     +   MonthsAsCustomer ,
74420     +   NumDealsPurchases ,
74421     +   NumWebVisitsMonth ,
74422     +   RFMstat ,
74423     +   RMntFrq ,
74424     +   Recency ,
74425     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
74426     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
74427     +
74428     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
74429     +END;
MPRINT(EM_DIAGRAM):   END;
74430     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74431     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
74432     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74433     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74434     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
74435     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
74436     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
74437     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
74438     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
74439     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
74440     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
74441     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
74442     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
74443     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
74444     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
74445     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
74446     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
74447     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
74448     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
74449     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
74450     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
74451     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
74452     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
74453     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
74454     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
74455     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
74456     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
74457     +END;
MPRINT(EM_DIAGRAM):   END;
74458     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74459     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
74460     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
74461     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
74462     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
74463     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
74464     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
74465     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
74466     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
74467     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
74468     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
74469     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
74470     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
74471     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
74472     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
74473     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
74474     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
74475     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
74476     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
74477     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
74478     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
74479     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
74480     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
74481     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
74482     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
74483     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
74484     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
74485     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
74486     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
74487     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
74488     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
74489     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
74490     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
74491     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
74492     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
74493     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
74494     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
74495     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
74496     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
74497     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
74498     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
74499     +END;
MPRINT(EM_DIAGRAM):   END;
74500     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74501     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
74502     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74503     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74504     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
74505     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74506     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74507     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
74508     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74509     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74510     +   H11  =    -0.64096829905108 * S_AcceptedCmpTotal  +    -0.11209535704145 *
74511     +        S_Age  +     0.38442347653056 * S_Frq  +     0.10191582051286 *
74512     +        S_Income  +     0.27663215475285 * S_Kidhome
74513     +          +    -0.02861873561507 * S_MntFishProducts
74514     +          +     0.20598948908915 * S_MntFruits  +     0.20804179479079 *
74515     +        S_MntGoldProds  +     0.19160035179466 * S_MntSweetProducts
74516     +          +    -0.30820227749029 * S_MonthsAsCustomer
74517     +          +    -0.64335583461867 * S_NumDealsPurchases
74518     +          +    -0.40339200335235 * S_NumWebVisitsMonth
74519     +          +    -0.05053414482512 * S_RFMstat  +     0.32736870225964 *
74520     +        S_RMntFrq  +     0.73297917115427 * S_Recency
74521     +          +     0.11670126537146 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.64096829905108 * S_AcceptedCmpTotal + -0.11209535704145 * S_Age 
+ 0.38442347653056 * S_Frq + 0.10191582051286 * S_Income + 0.27663215475285 * S_Kidhome + 
-0.02861873561507 * S_MntFishProducts + 0.20598948908915 * S_MntFruits + 0.20804179479079 * 
S_MntGoldProds + 0.19160035179466 * S_MntSweetProducts + -0.30820227749029 * 
S_MonthsAsCustomer + -0.64335583461867 * S_NumDealsPurchases + -0.40339200335235 * 
S_NumWebVisitsMonth + -0.05053414482512 * S_RFMstat + 0.32736870225964 * S_RMntFrq + 
0.73297917115427 * S_Recency + 0.11670126537146 * S_Teenhome ;
74522     +   H12  =     -0.1657091472212 * S_AcceptedCmpTotal  +     0.51956326282264 *
74523     +        S_Age  +     1.09230379920111 * S_Frq  +     0.41850245998114 *
74524     +        S_Income  +     0.04677082637593 * S_Kidhome
74525     +          +    -0.26310923797495 * S_MntFishProducts
74526     +          +     0.07068396793785 * S_MntFruits  +    -0.13614297077165 *
74527     +        S_MntGoldProds  +    -0.41288432261418 * S_MntSweetProducts
74528     +          +     0.31464974024806 * S_MonthsAsCustomer
74529     +          +    -0.51422897206707 * S_NumDealsPurchases
74530     +          +    -0.70210448968741 * S_NumWebVisitsMonth
74531     +          +    -0.20168285475248 * S_RFMstat  +    -0.52597031961785 *
74532     +        S_RMntFrq  +     1.12297422526954 * S_Recency
74533     +          +    -0.19583787100677 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.1657091472212 * S_AcceptedCmpTotal + 0.51956326282264 * S_Age + 
1.09230379920111 * S_Frq + 0.41850245998114 * S_Income + 0.04677082637593 * S_Kidhome + 
-0.26310923797495 * S_MntFishProducts + 0.07068396793785 * S_MntFruits + -0.13614297077165 * 
S_MntGoldProds + -0.41288432261418 * S_MntSweetProducts + 0.31464974024806 * 
S_MonthsAsCustomer + -0.51422897206707 * S_NumDealsPurchases + -0.70210448968741 * 
S_NumWebVisitsMonth + -0.20168285475248 * S_RFMstat + -0.52597031961785 * S_RMntFrq + 
1.12297422526954 * S_Recency + -0.19583787100677 * S_Teenhome ;
74534     +   H13  =    -0.52948883352014 * S_AcceptedCmpTotal  +    -0.12557829758966 *
74535     +        S_Age  +     -0.0390229319101 * S_Frq  +    -0.82750091245735 *
74536     +        S_Income  +    -0.76074905594112 * S_Kidhome
74537     +          +     0.28012200156756 * S_MntFishProducts
74538     +          +    -0.11859027002733 * S_MntFruits  +    -0.41772270940459 *
74539     +        S_MntGoldProds  +     0.02732432410202 * S_MntSweetProducts
74540     +          +    -0.02209353426555 * S_MonthsAsCustomer
74541     +          +    -0.30351716506195 * S_NumDealsPurchases
74542     +          +    -0.54961975756206 * S_NumWebVisitsMonth
74543     +          +    -0.10801362755152 * S_RFMstat  +    -0.18473836604054 *
74544     +        S_RMntFrq  +     0.84276565192556 * S_Recency
74545     +          +     0.30860891080893 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.52948883352014 * S_AcceptedCmpTotal + -0.12557829758966 * S_Age 
+ -0.0390229319101 * S_Frq + -0.82750091245735 * S_Income + -0.76074905594112 * S_Kidhome + 
0.28012200156756 * S_MntFishProducts + -0.11859027002733 * S_MntFruits + -0.41772270940459 * 
S_MntGoldProds + 0.02732432410202 * S_MntSweetProducts + -0.02209353426555 * 
S_MonthsAsCustomer + -0.30351716506195 * S_NumDealsPurchases + -0.54961975756206 * 
S_NumWebVisitsMonth + -0.10801362755152 * S_RFMstat + -0.18473836604054 * S_RMntFrq + 
0.84276565192556 * S_Recency + 0.30860891080893 * S_Teenhome ;
74546     +   H14  =    -0.07567218864184 * S_AcceptedCmpTotal  +     0.02462117827216 *
74547     +        S_Age  +    -0.64320970361048 * S_Frq  +     -1.0659518778449 *
74548     +        S_Income  +     0.68593841144377 * S_Kidhome
74549     +          +     -0.0587169446037 * S_MntFishProducts
74550     +          +     0.24365125001776 * S_MntFruits  +     0.04647719507405 *
74551     +        S_MntGoldProds  +     0.25871718590254 * S_MntSweetProducts
74552     +          +    -0.17220981900732 * S_MonthsAsCustomer
74553     +          +     0.27940162953795 * S_NumDealsPurchases
74554     +          +    -0.04761461934562 * S_NumWebVisitsMonth
74555     +          +    -0.11656397034939 * S_RFMstat  +    -0.30754235450488 *
74556     +        S_RMntFrq  +     0.68962447302378 * S_Recency
74557     +          +     0.73159731135815 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.07567218864184 * S_AcceptedCmpTotal + 0.02462117827216 * S_Age 
+ -0.64320970361048 * S_Frq + -1.0659518778449 * S_Income + 0.68593841144377 * S_Kidhome + 
-0.0587169446037 * S_MntFishProducts + 0.24365125001776 * S_MntFruits + 0.04647719507405 * 
S_MntGoldProds + 0.25871718590254 * S_MntSweetProducts + -0.17220981900732 * 
S_MonthsAsCustomer + 0.27940162953795 * S_NumDealsPurchases + -0.04761461934562 * 
S_NumWebVisitsMonth + -0.11656397034939 * S_RFMstat + -0.30754235450488 * S_RMntFrq + 
0.68962447302378 * S_Recency + 0.73159731135815 * S_Teenhome ;
74558     +   H11  = H11  +     0.25038776257796 * AcceptedCmp10
74559     +          +     0.04282733069599 * AcceptedCmp20  +     0.16936079906612 *
74560     +        AcceptedCmp30  +     0.05079498344461 * AcceptedCmp40
74561     +          +      0.6690889070972 * AcceptedCmp50  +    -0.11756177189054 *
74562     +        Complain0  +     0.00601034671987 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.25038776257796 * AcceptedCmp10 + 0.04282733069599 * 
AcceptedCmp20 + 0.16936079906612 * AcceptedCmp30 + 0.05079498344461 * AcceptedCmp40 + 
0.6690889070972 * AcceptedCmp50 + -0.11756177189054 * Complain0 + 0.00601034671987 * 
HigherEducationBinary0 ;
74563     +   H12  = H12  +     0.63638345806433 * AcceptedCmp10
74564     +          +      0.3453598097393 * AcceptedCmp20  +     0.49359811223374 *
74565     +        AcceptedCmp30  +     0.27581207611627 * AcceptedCmp40
74566     +          +     0.05866095623494 * AcceptedCmp50  +    -0.13005408285069 *
74567     +        Complain0  +      0.2160948352192 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.63638345806433 * AcceptedCmp10 + 0.3453598097393 * 
AcceptedCmp20 + 0.49359811223374 * AcceptedCmp30 + 0.27581207611627 * AcceptedCmp40 + 
0.05866095623494 * AcceptedCmp50 + -0.13005408285069 * Complain0 + 0.2160948352192 * 
HigherEducationBinary0 ;
74568     +   H13  = H13  +     0.09956549586905 * AcceptedCmp10
74569     +          +     0.03691883338772 * AcceptedCmp20  +     0.47736653446815 *
74570     +        AcceptedCmp30  +    -0.91581599271765 * AcceptedCmp40
74571     +          +     0.50560814473618 * AcceptedCmp50  +    -0.33308229467468 *
74572     +        Complain0  +     0.14672770960028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09956549586905 * AcceptedCmp10 + 0.03691883338772 * 
AcceptedCmp20 + 0.47736653446815 * AcceptedCmp30 + -0.91581599271765 * AcceptedCmp40 + 
0.50560814473618 * AcceptedCmp50 + -0.33308229467468 * Complain0 + 0.14672770960028 * 
HigherEducationBinary0 ;
74573     +   H14  = H14  +     0.22255149692461 * AcceptedCmp10
74574     +          +     0.13590153487525 * AcceptedCmp20  +     0.33124716818779 *
74575     +        AcceptedCmp30  +     0.53538971216451 * AcceptedCmp40
74576     +          +    -0.15288643860698 * AcceptedCmp50  +     0.30766742713062 *
74577     +        Complain0  +    -0.54379124310959 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.22255149692461 * AcceptedCmp10 + 0.13590153487525 * 
AcceptedCmp20 + 0.33124716818779 * AcceptedCmp30 + 0.53538971216451 * AcceptedCmp40 + 
-0.15288643860698 * AcceptedCmp50 + 0.30766742713062 * Complain0 + -0.54379124310959 * 
HigherEducationBinary0 ;
74578     +   H11  = H11  +    -0.16246752897554 * Education2n_Cycle
74579     +          +    -0.02018324007765 * EducationBasic  +    -0.01853488592136 *
74580     +        EducationGraduation  +    -0.09512206973791 * EducationMaster
74581     +          +     0.04284251520428 * Marital_StatusDivorced
74582     +          +    -0.08591343257218 * Marital_StatusMarried
74583     +          +     0.43667281622253 * Marital_StatusSingle
74584     +          +     0.35264409549804 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16246752897554 * Education2n_Cycle + -0.02018324007765 * 
EducationBasic + -0.01853488592136 * EducationGraduation + -0.09512206973791 * EducationMaster 
+ 0.04284251520428 * Marital_StatusDivorced + -0.08591343257218 * Marital_StatusMarried + 
0.43667281622253 * Marital_StatusSingle + 0.35264409549804 * Marital_StatusTogether ;
74585     +   H12  = H12  +     0.33728620033583 * Education2n_Cycle
74586     +          +    -0.00479023403414 * EducationBasic  +    -0.10257966569549 *
74587     +        EducationGraduation  +    -0.17955750532548 * EducationMaster
74588     +          +    -0.10823631131846 * Marital_StatusDivorced
74589     +          +     0.15344450170599 * Marital_StatusMarried
74590     +          +    -0.00222187507332 * Marital_StatusSingle
74591     +          +     0.12886702838116 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.33728620033583 * Education2n_Cycle + -0.00479023403414 * 
EducationBasic + -0.10257966569549 * EducationGraduation + -0.17955750532548 * EducationMaster 
+ -0.10823631131846 * Marital_StatusDivorced + 0.15344450170599 * Marital_StatusMarried + 
-0.00222187507332 * Marital_StatusSingle + 0.12886702838116 * Marital_StatusTogether ;
74592     +   H13  = H13  +     0.04434288585425 * Education2n_Cycle
74593     +          +     0.45393732517503 * EducationBasic  +    -0.30230166822748 *
74594     +        EducationGraduation  +     0.06012880669469 * EducationMaster
74595     +          +    -0.20523044713629 * Marital_StatusDivorced
74596     +          +     0.15779331320414 * Marital_StatusMarried
74597     +          +    -0.33273914160638 * Marital_StatusSingle
74598     +          +    -0.25472406769802 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.04434288585425 * Education2n_Cycle + 0.45393732517503 * 
EducationBasic + -0.30230166822748 * EducationGraduation + 0.06012880669469 * EducationMaster 
+ -0.20523044713629 * Marital_StatusDivorced + 0.15779331320414 * Marital_StatusMarried + 
-0.33273914160638 * Marital_StatusSingle + -0.25472406769802 * Marital_StatusTogether ;
74599     +   H14  = H14  +    -0.16441299564379 * Education2n_Cycle
74600     +          +     0.10809494068924 * EducationBasic  +    -0.23265316836427 *
74601     +        EducationGraduation  +      0.3018512119562 * EducationMaster
74602     +          +    -0.24973986133996 * Marital_StatusDivorced
74603     +          +     1.15862092191103 * Marital_StatusMarried
74604     +          +    -0.91451543179937 * Marital_StatusSingle
74605     +          +     0.98391013262071 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.16441299564379 * Education2n_Cycle + 0.10809494068924 * 
EducationBasic + -0.23265316836427 * EducationGraduation + 0.3018512119562 * EducationMaster + 
-0.24973986133996 * Marital_StatusDivorced + 1.15862092191103 * Marital_StatusMarried + 
-0.91451543179937 * Marital_StatusSingle + 0.98391013262071 * Marital_StatusTogether ;
74606     +   H11  =     0.70941478033358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.70941478033358 + H11 ;
74607     +   H12  =     0.91925226212025 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.91925226212025 + H12 ;
74608     +   H13  =    -0.26151947698166 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.26151947698166 + H13 ;
74609     +   H14  =     1.57965424463368 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.57965424463368 + H14 ;
74610     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
74611     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
74612     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
74613     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
74614     +END;
MPRINT(EM_DIAGRAM):   END;
74615     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74616     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
74617     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
74618     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
74619     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
74620     +END;
MPRINT(EM_DIAGRAM):   END;
74621     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74622     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
74623     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74624     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
74625     +   P_DepVar1  =    -1.20356257603969 * H11  +    -1.94296236893655 * H12
74626     +          +    -2.81737663487689 * H13  +    -2.69363833398263 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.20356257603969 * H11 + -1.94296236893655 * H12 + 
-2.81737663487689 * H13 + -2.69363833398263 * H14 ;
74627     +   P_DepVar1  =    -0.80241057184596 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.80241057184596 + P_DepVar1 ;
74628     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
74629     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
74630     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
74631     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
74632     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
74633     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
74634     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
74635     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
74636     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
74637     +END;
MPRINT(EM_DIAGRAM):   END;
74638     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
74639     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
74640     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
74641     +END;
MPRINT(EM_DIAGRAM):   END;
74642     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
74643     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
74644     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
74645     +END;
MPRINT(EM_DIAGRAM):   END;
74646     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74647     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
74648     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
74649     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
74650     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
74651     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
74652     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
74653     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
74654     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
74655     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
74656     +END;
MPRINT(EM_DIAGRAM):   END;
74657     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
74658     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
74659     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
74660     +drop
74661     +H11
74662     +H12
74663     +H13
74664     +H14
74665     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
74666     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
74667      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
74668      quit;
74669      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
74670      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
74671      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
74672      retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
74673      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
74674      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74675      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
74676      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74677      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74678      proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
74679      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74680      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74681      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74682      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
74683      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
74684      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74685      proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
74686      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74687      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
74688      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74689      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74690      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74691      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
74692      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74693      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74694      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
74695      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
74695    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.

74696      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74697      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
74698      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74699      filename _pref
74699    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
74700      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
74701      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
74702     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74703     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
74704     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
74705     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
74706     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
74707     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
74708      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
74709      quit;
74710      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
74711      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
74712      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
74713      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
74714      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
74715      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74716      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
74717      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74718      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74719      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
74720      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74721      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

74722      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74723      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
74724      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
74725      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74726      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
74727      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

74728      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
74729      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74730      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74731      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74732      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
74733      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74734      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74735      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
74736      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
74736    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

74737      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74738      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
74739      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74740      filename _pref
74740    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
74741      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
74742      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
74743     +
74744     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
74745     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
74745    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
74746     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
74747     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
74748     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
74749     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
74750     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
74751      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
74752      quit;
74753      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
74754      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
74755      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
74756      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
74757      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
74758      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

74759      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
74760      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74761      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74762      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
74763      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74764      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74765      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74766      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
74767      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
74768      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74769      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
74770      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74771      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
74772      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74773      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74774      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74775      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
74776      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74777      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74778      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
74779      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
74779    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

74780      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

74781      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
74782      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74783      filename _pref
74783    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
74784      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
74785      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
74786     +
74787     +
74788     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
74789     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
74790     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
74791     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
74792     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
74793     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74794     +
74795     +
74796     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
74797     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
74798     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
74799     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
74800     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
74801     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74802     +
74803     +
74804     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
74805     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
74806     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
74807     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
74808     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
74809     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74810     +
74811     +
74812     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
74813     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
74814     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
74815     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
74816     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
74817     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74818     +
74819     +
74820     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
74821     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
74822     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
74823     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
74824     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
74825     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74826     +
74827     +
74828     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
74829     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
74830     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
74831     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
74832     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
74833     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74834     +
74835     +
74836     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
74837     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
74838     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
74839     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
74840     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
74841     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74842     +
74843     +
74844     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
74845     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
74846     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
74847     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
74848     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
74849     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
74850     +if
74851     +_FILTERNORM1 not in ( '.')
74852     + and
74853     +_FILTERNORM2 not in ( '.')
74854     + and
74855     +_FILTERNORM3 not in ( '.')
74856     + and
74857     +_FILTERNORM4 not in ( '.')
74858     + and
74859     +_FILTERNORM5 not in ( '.')
74860     + and
74861     +_FILTERNORM6 not in ( '.')
74862     + and
74863     +_FILTERNORM7 not in ( ' ')
74864     + and
74865     +_FILTERNORM8 not in ( ' ')
74866     +and
74867     +( Dt_Customer ne .)
74868     +and ( Income ne . and (Income<=107000))
74869     +and ( Kidhome ne .)
74870     +and ( MntFishProducts ne .)
74871     +and ( MntFruits ne .)
74872     +and ( MntGoldProds ne .)
74873     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
74874     +and ( MntSweetProducts ne .)
74875     +and ( MntWines ne .)
74876     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
74877     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
74878     +and ( NumStorePurchases ne .)
74879     +and ( NumWebPurchases ne .)
74880     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
74881     +and ( Recency ne .)
74882     +and ( Teenhome ne .)
74883     +and ( Year_Birth ne .)
74884     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
74885     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
74886     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
74887     +end;
MPRINT(EM_DIAGRAM):   end;
74888     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
74889     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
74890      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
74891      quit;
74892      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
74893      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
74894      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
74895      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
74896      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
74897      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74898      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
74899      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74900      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

74901      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
74902      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74903      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74904      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74905      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
74906      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
74907      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74908      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
74909      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

74910      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
74911      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74912      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74913      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
74914      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
74915      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
74916      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74917      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
74918      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
74918    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

74919      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74920      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
74921      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

74922      %macro varDept(fcmpdata=,id=);
74923      %global nobs&id scoreFlag&id;
74924      %let scoreFlag&id = 0;
74925      %if &id=1 or ^&fcmpStart %then %do;
74926      proc sort data=&fcmpdata out=_temp&id nodupkey;
74927      by NAME;
74928      where id=&id and LHS in( %let j=1;
74929      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
74930      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
74931      "&var" %let j = %eval(&j+1);
74932      %end;
74933      );
74934      run;
74935      %let dsid = %sysfunc(open(_temp&id));
74936      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
74937      %let dsid = %sysfunc(close(&dsid));
74938      %if &&nobs&id %then %do;
74939      %let scoreFlag&id = 1;
74940      %let fcmpStart = 1;
74941      %end;
74942      %else %let fcmpStart = 0;
74943      %end;
74944      %else %do;
74945      proc sort data=&fcmpdata out=_tempid;
74946      where id=&id;
74947      by LHS;
74948      run;
74949      %let dsid = %sysfunc(open(_tempid));
74950      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
74951      %let dsid = %sysfunc(close(&dsid));
74952      %if ^&&nobs&id %then %do;
74953      proc datasets lib=work nolist;
74954      delete _tempid;
74955      run;
74956      quit;
74957      %end;
74958      %else %do;
74959      data _tempAll;
74960      set %let j=%eval(&id-1);
74961      %do x=1 %to &j;
74962      %if &&nobs&x %then %do;
74963      _temp&x %end;
74964      %end;
74965      ;
74966      run;
74967      proc sql;
74968      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
74968    ! work._tempid p2 where p.name=p2.lhs;
74969      quit;
74970      data _temp&id;
74971      set _temp&id;
74972      where LHS ne '' and NAME ne '' and Node ne '';
74973      run;
74974      proc datasets lib=work nolist;
74975      delete _tempAll;
74976      run;
74977      %let dsid = %sysfunc(open(_temp&id));
74978      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
74979      %let dsid = %sysfunc(close(&dsid));
74980      %if ^&&nobs&id %then %do;
74981      proc datasets lib=work nolist;
74982      delete _temp&id;
74983      run;
74984      quit;
74985      %end;
74986      %else %do;
74987      %let scoreFlag&id = 1;
74988      data _temp&id;
74989      set _temp&id;
74990      where LHS ne NAME and node ne '';
74991      run;
74992      %let dsid = %sysfunc(open(_temp&id));
74993      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
74994      %let dsid = %sysfunc(close(&dsid));
74995      %if ^&&nobs&id %then %do;
74996      proc datasets lib=work nolist;
74997      delete _temp&id;
74998      run;
74999      quit;
75000      %end;
75001      %else %do;
75002      proc sort data=_temp&id nodupkey;
75003      by LHS NAME;
75004      run;
75005      %end;
75006      %end;
75007      %end;
75008      %end;
75009      %mend varDept;
75010      %macro optCode(outdata=fcmpdata);
75011      %global fcmpStart;
75012      %let fcmpStart = 0;
75013      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
75014      %let NumNodes=9;
75015      %do k=1 %to &NumNodes;
75016      %vardept(fcmpdata=&outdata, id=&k);
75017      %end;
75018      %mend optCode;
75019      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

75020      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
75021      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
75022      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
75023      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75024      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
75025      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
75026      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
75027      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75028      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
75029      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
75029    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

75030      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75031      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
75032      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
75033      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75034      filename _pref
75034    ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
75035      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
75036      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
75037     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75038     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
75039     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
75040     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
75041     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
75042     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
75043     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
75044     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
75045     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
75046     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
75047     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
75048     +LENGTH _WARN_ $4
75049     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
75050     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
75051     +
75052     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
75053     +
75054     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
75055     +
75056     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
75057     +
75058     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
75059     +
75060     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
75061     +
75062     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
75063     +
75064     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
75065     +
75066     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
75067     +
75068     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
75069     +
75070     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
75071     +
75072     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
75073     +
75074     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
75075     +
75076     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
75077     +
75078     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
75079     +
75080     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
75081     +
75082     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
75083     +
75084     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
75085     +
75086     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
75087     +
75088     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
75089     +
75090     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
75091     +
75092     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
75093     +
75094     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
75095     +
75096     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
75097     +
75098     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
75099     +
75100     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
75101     +
75102     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
75103     +
75104     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
75105     +
75106     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
75107     +
75108     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
75109     +
75110     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
75111     +
75112     +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
75113     +
75114     +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
75115     +
75116     +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
75117     +
75118     +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
75119     +
75120     +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
75121     +
75122     +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
75123     +
75124     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
75125     +
75126     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
75127     +
75128     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
75129     +
75130     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
75131     +
75132     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
75133     +
75134     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
75135     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
75136     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
75137     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
75138     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75139     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75140     +end;
MPRINT(EM_DIAGRAM):   end;
75141     +else do;
MPRINT(EM_DIAGRAM):   else do;
75142     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75143     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
75144     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75145     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
75146     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
75147     +   end;
MPRINT(EM_DIAGRAM):   end;
75148     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
75149     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
75150     +   end;
MPRINT(EM_DIAGRAM):   end;
75151     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75152     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
75153     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75154     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75155     +   end;
MPRINT(EM_DIAGRAM):   end;
75156     +end;
MPRINT(EM_DIAGRAM):   end;
75157     +
75158     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
75159     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
75160     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
75161     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
75162     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75163     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75164     +end;
MPRINT(EM_DIAGRAM):   end;
75165     +else do;
MPRINT(EM_DIAGRAM):   else do;
75166     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75167     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
75168     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75169     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
75170     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
75171     +   end;
MPRINT(EM_DIAGRAM):   end;
75172     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
75173     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
75174     +   end;
MPRINT(EM_DIAGRAM):   end;
75175     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75176     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
75177     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75178     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75179     +   end;
MPRINT(EM_DIAGRAM):   end;
75180     +end;
MPRINT(EM_DIAGRAM):   end;
75181     +
75182     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
75183     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
75184     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
75185     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
75186     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75187     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75188     +end;
MPRINT(EM_DIAGRAM):   end;
75189     +else do;
MPRINT(EM_DIAGRAM):   else do;
75190     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75191     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
75192     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75193     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
75194     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
75195     +   end;
MPRINT(EM_DIAGRAM):   end;
75196     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
75197     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
75198     +   end;
MPRINT(EM_DIAGRAM):   end;
75199     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75200     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
75201     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75202     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75203     +   end;
MPRINT(EM_DIAGRAM):   end;
75204     +end;
MPRINT(EM_DIAGRAM):   end;
75205     +
75206     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
75207     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
75208     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
75209     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
75210     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75211     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75212     +end;
MPRINT(EM_DIAGRAM):   end;
75213     +else do;
MPRINT(EM_DIAGRAM):   else do;
75214     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75215     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
75216     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75217     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
75218     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
75219     +   end;
MPRINT(EM_DIAGRAM):   end;
75220     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
75221     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
75222     +   end;
MPRINT(EM_DIAGRAM):   end;
75223     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75224     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
75225     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75226     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75227     +   end;
MPRINT(EM_DIAGRAM):   end;
75228     +end;
MPRINT(EM_DIAGRAM):   end;
75229     +
75230     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
75231     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
75232     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
75233     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
75234     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75235     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75236     +end;
MPRINT(EM_DIAGRAM):   end;
75237     +else do;
MPRINT(EM_DIAGRAM):   else do;
75238     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75239     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
75240     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75241     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
75242     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
75243     +   end;
MPRINT(EM_DIAGRAM):   end;
75244     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
75245     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
75246     +   end;
MPRINT(EM_DIAGRAM):   end;
75247     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75248     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
75249     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75250     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75251     +   end;
MPRINT(EM_DIAGRAM):   end;
75252     +end;
MPRINT(EM_DIAGRAM):   end;
75253     +
75254     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
75255     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
75256     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
75257     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
75258     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75259     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75260     +end;
MPRINT(EM_DIAGRAM):   end;
75261     +else do;
MPRINT(EM_DIAGRAM):   else do;
75262     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75263     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
75264     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75265     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
75266     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
75267     +   end;
MPRINT(EM_DIAGRAM):   end;
75268     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
75269     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
75270     +   end;
MPRINT(EM_DIAGRAM):   end;
75271     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75272     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
75273     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75274     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75275     +   end;
MPRINT(EM_DIAGRAM):   end;
75276     +end;
MPRINT(EM_DIAGRAM):   end;
75277     +
75278     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
75279     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
75280     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
75281     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
75282     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75283     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75284     +end;
MPRINT(EM_DIAGRAM):   end;
75285     +else do;
MPRINT(EM_DIAGRAM):   else do;
75286     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
75287     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
75288     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75289     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
75290     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
75291     +   end;
MPRINT(EM_DIAGRAM):   end;
75292     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
75293     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
75294     +   end;
MPRINT(EM_DIAGRAM):   end;
75295     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75296     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
75297     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75298     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75299     +   end;
MPRINT(EM_DIAGRAM):   end;
75300     +end;
MPRINT(EM_DIAGRAM):   end;
75301     +
75302     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
75303     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
75304     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
75305     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
75306     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
75307     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
75308     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
75309     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
75310     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
75311     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
75312     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
75313     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
75314     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75315     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75316     +end;
MPRINT(EM_DIAGRAM):   end;
75317     +else do;
MPRINT(EM_DIAGRAM):   else do;
75318     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
75319     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
75320     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75321     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
75322     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
75323     +   end;
MPRINT(EM_DIAGRAM):   end;
75324     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
75325     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
75326     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
75327     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
75328     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
75329     +   end;
MPRINT(EM_DIAGRAM):   end;
75330     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
75331     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
75332     +   end;
MPRINT(EM_DIAGRAM):   end;
75333     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
75334     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
75335     +   end;
MPRINT(EM_DIAGRAM):   end;
75336     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
75337     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
75338     +   end;
MPRINT(EM_DIAGRAM):   end;
75339     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75340     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
75341     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
75342     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
75343     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
75344     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75345     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75346     +   end;
MPRINT(EM_DIAGRAM):   end;
75347     +end;
MPRINT(EM_DIAGRAM):   end;
75348     +
75349     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
75350     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
75351     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
75352     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
75353     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
75354     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
75355     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
75356     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
75357     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
75358     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
75359     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
75360     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
75361     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
75362     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
75363     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75364     +end;
MPRINT(EM_DIAGRAM):   end;
75365     +else do;
MPRINT(EM_DIAGRAM):   else do;
75366     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
75367     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
75368     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
75369     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
75370     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
75371     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
75372     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
75373     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
75374     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75375     +         end;
MPRINT(EM_DIAGRAM):   end;
75376     +         else do;
MPRINT(EM_DIAGRAM):   else do;
75377     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
75378     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
75379     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75380     +            end;
MPRINT(EM_DIAGRAM):   end;
75381     +         end;
MPRINT(EM_DIAGRAM):   end;
75382     +      end;
MPRINT(EM_DIAGRAM):   end;
75383     +      else do;
MPRINT(EM_DIAGRAM):   else do;
75384     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
75385     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
75386     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75387     +         end;
MPRINT(EM_DIAGRAM):   end;
75388     +      end;
MPRINT(EM_DIAGRAM):   end;
75389     +   end;
MPRINT(EM_DIAGRAM):   end;
75390     +   else do;
MPRINT(EM_DIAGRAM):   else do;
75391     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
75392     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
75393     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75394     +      end;
MPRINT(EM_DIAGRAM):   end;
75395     +      else do;
MPRINT(EM_DIAGRAM):   else do;
75396     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
75397     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
75398     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
75399     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
75400     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
75401     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
75402     +         end;
MPRINT(EM_DIAGRAM):   end;
75403     +      end;
MPRINT(EM_DIAGRAM):   end;
75404     +   end;
MPRINT(EM_DIAGRAM):   end;
75405     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
75406     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
75407     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
75408     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
75409     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
75410     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
75411     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75412     +   end;
MPRINT(EM_DIAGRAM):   end;
75413     +end;
MPRINT(EM_DIAGRAM):   end;
75414     +
75415     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75416     +*** Checking missing input Interval
75417     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
75418     +
75419     +IF NMISS(
75420     +   AcceptedCmpTotal ,
75421     +   Age ,
75422     +   Frq ,
75423     +   Income ,
75424     +   Kidhome ,
75425     +   MntFishProducts ,
75426     +   MntFruits ,
75427     +   MntGoldProds ,
75428     +   MntSweetProducts ,
75429     +   MonthsAsCustomer ,
75430     +   NumDealsPurchases ,
75431     +   NumWebVisitsMonth ,
75432     +   RFMstat ,
75433     +   RMntFrq ,
75434     +   Recency ,
75435     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
75436     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
75437     +
75438     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
75439     +END;
MPRINT(EM_DIAGRAM):   END;
75440     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75441     +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
75442     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75443     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75444     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
75445     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
75446     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
75447     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
75448     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
75449     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
75450     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
75451     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
75452     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
75453     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
75454     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
75455     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
75456     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
75457     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
75458     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
75459     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
75460     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
75461     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
75462     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
75463     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
75464     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
75465     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
75466     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
75467     +END;
MPRINT(EM_DIAGRAM):   END;
75468     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75469     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
75470     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
75471     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
75472     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
75473     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
75474     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
75475     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
75476     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
75477     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
75478     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
75479     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
75480     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
75481     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
75482     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
75483     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
75484     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
75485     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
75486     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
75487     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
75488     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
75489     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
75490     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
75491     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
75492     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
75493     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
75494     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
75495     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
75496     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
75497     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
75498     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
75499     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
75500     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
75501     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
75502     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
75503     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
75504     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
75505     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
75506     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
75507     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
75508     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
75509     +END;
MPRINT(EM_DIAGRAM):   END;
75510     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75511     +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
75512     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75513     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75514     +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
75515     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75517     +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
75518     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75519     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75520     +   H11  =    -0.50311574684963 * S_AcceptedCmpTotal  +    -0.18985055644549 *
75521     +        S_Age  +     0.44828804873659 * S_Frq  +    -0.51280008296346 *
75522     +        S_Income  +    -0.07468461691846 * S_Kidhome
75523     +          +    -0.02817334981603 * S_MntFishProducts
75524     +          +    -0.23674836972041 * S_MntFruits  +     0.09571592531833 *
75525     +        S_MntGoldProds  +    -0.09676918994417 * S_MntSweetProducts
75526     +          +     0.11832246824115 * S_MonthsAsCustomer
75527     +          +    -0.06605281991661 * S_NumDealsPurchases
75528     +          +    -0.48924564446119 * S_NumWebVisitsMonth
75529     +          +    -0.46878579854964 * S_RFMstat  +    -0.08286830724047 *
75530     +        S_RMntFrq  +     0.72493722489034 * S_Recency
75531     +          +     0.54759769648457 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.50311574684963 * S_AcceptedCmpTotal + -0.18985055644549 * S_Age 
+ 0.44828804873659 * S_Frq + -0.51280008296346 * S_Income + -0.07468461691846 * S_Kidhome + 
-0.02817334981603 * S_MntFishProducts + -0.23674836972041 * S_MntFruits + 0.09571592531833 * 
S_MntGoldProds + -0.09676918994417 * S_MntSweetProducts + 0.11832246824115 * 
S_MonthsAsCustomer + -0.06605281991661 * S_NumDealsPurchases + -0.48924564446119 * 
S_NumWebVisitsMonth + -0.46878579854964 * S_RFMstat + -0.08286830724047 * S_RMntFrq + 
0.72493722489034 * S_Recency + 0.54759769648457 * S_Teenhome ;
75532     +   H12  =     0.27433541795855 * S_AcceptedCmpTotal  +    -0.13239293741829 *
75533     +        S_Age  +       0.297440346075 * S_Frq  +     0.60301641350325 *
75534     +        S_Income  +    -0.52629295860426 * S_Kidhome
75535     +          +    -0.09281934074994 * S_MntFishProducts
75536     +          +    -0.01139552037387 * S_MntFruits  +    -0.01724648803464 *
75537     +        S_MntGoldProds  +    -0.11213003865462 * S_MntSweetProducts
75538     +          +     0.01420877288416 * S_MonthsAsCustomer
75539     +          +     0.15753030263585 * S_NumDealsPurchases
75540     +          +     0.12839062787468 * S_NumWebVisitsMonth
75541     +          +     0.09918681531437 * S_RFMstat  +     0.28128581499392 *
75542     +        S_RMntFrq  +    -0.77555854798433 * S_Recency
75543     +          +    -0.39696436898966 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.27433541795855 * S_AcceptedCmpTotal + -0.13239293741829 * S_Age 
+ 0.297440346075 * S_Frq + 0.60301641350325 * S_Income + -0.52629295860426 * S_Kidhome + 
-0.09281934074994 * S_MntFishProducts + -0.01139552037387 * S_MntFruits + -0.01724648803464 * 
S_MntGoldProds + -0.11213003865462 * S_MntSweetProducts + 0.01420877288416 * 
S_MonthsAsCustomer + 0.15753030263585 * S_NumDealsPurchases + 0.12839062787468 * 
S_NumWebVisitsMonth + 0.09918681531437 * S_RFMstat + 0.28128581499392 * S_RMntFrq + 
-0.77555854798433 * S_Recency + -0.39696436898966 * S_Teenhome ;
75544     +   H13  =     0.03123358805476 * S_AcceptedCmpTotal  +    -0.11998608363847 *
75545     +        S_Age  +     0.08338729365626 * S_Frq  +     0.36926635699098 *
75546     +        S_Income  +     0.00460024601501 * S_Kidhome
75547     +          +    -0.02200799678674 * S_MntFishProducts
75548     +          +     0.17038795346592 * S_MntFruits  +    -0.01191054270128 *
75549     +        S_MntGoldProds  +     0.09461198228745 * S_MntSweetProducts
75550     +          +     0.11175639451728 * S_MonthsAsCustomer
75551     +          +    -0.14915044300238 * S_NumDealsPurchases
75552     +          +     -0.0217132622877 * S_NumWebVisitsMonth
75553     +          +     0.19209945631632 * S_RFMstat  +     0.27685327218371 *
75554     +        S_RMntFrq  +     -0.1114202547513 * S_Recency
75555     +          +    -0.07677627375613 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.03123358805476 * S_AcceptedCmpTotal + -0.11998608363847 * S_Age 
+ 0.08338729365626 * S_Frq + 0.36926635699098 * S_Income + 0.00460024601501 * S_Kidhome + 
-0.02200799678674 * S_MntFishProducts + 0.17038795346592 * S_MntFruits + -0.01191054270128 * 
S_MntGoldProds + 0.09461198228745 * S_MntSweetProducts + 0.11175639451728 * S_MonthsAsCustomer 
+ -0.14915044300238 * S_NumDealsPurchases + -0.0217132622877 * S_NumWebVisitsMonth + 
0.19209945631632 * S_RFMstat + 0.27685327218371 * S_RMntFrq + -0.1114202547513 * S_Recency + 
-0.07677627375613 * S_Teenhome ;
75556     +   H14  =      -0.510052563552 * S_AcceptedCmpTotal  +    -0.12652051241051 *
75557     +        S_Age  +    -0.42250950524778 * S_Frq  +    -0.66291360306733 *
75558     +        S_Income  +    -0.50120074528145 * S_Kidhome
75559     +          +     0.44715945861433 * S_MntFishProducts
75560     +          +     0.23552533999892 * S_MntFruits  +    -0.60812570135419 *
75561     +        S_MntGoldProds  +    -0.29436997886251 * S_MntSweetProducts
75562     +          +    -0.16226459240838 * S_MonthsAsCustomer
75563     +          +    -0.66300674579813 * S_NumDealsPurchases
75564     +          +    -0.46113723081205 * S_NumWebVisitsMonth
75565     +          +    -0.28741955047351 * S_RFMstat  +    -0.51342973736897 *
75566     +        S_RMntFrq  +     0.32948062104596 * S_Recency
75567     +          +     0.04630647814801 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.510052563552 * S_AcceptedCmpTotal + -0.12652051241051 * S_Age + 
-0.42250950524778 * S_Frq + -0.66291360306733 * S_Income + -0.50120074528145 * S_Kidhome + 
0.44715945861433 * S_MntFishProducts + 0.23552533999892 * S_MntFruits + -0.60812570135419 * 
S_MntGoldProds + -0.29436997886251 * S_MntSweetProducts + -0.16226459240838 * 
S_MonthsAsCustomer + -0.66300674579813 * S_NumDealsPurchases + -0.46113723081205 * 
S_NumWebVisitsMonth + -0.28741955047351 * S_RFMstat + -0.51342973736897 * S_RMntFrq + 
0.32948062104596 * S_Recency + 0.04630647814801 * S_Teenhome ;
75568     +   H15  =    -0.05552489181258 * S_AcceptedCmpTotal  +      0.3358097664399 *
75569     +        S_Age  +     0.99860330572057 * S_Frq  +     0.33672529961967 *
75570     +        S_Income  +     0.16969714205994 * S_Kidhome
75571     +          +     0.04976308170854 * S_MntFishProducts
75572     +          +     0.17074705999537 * S_MntFruits  +    -0.14669916972196 *
75573     +        S_MntGoldProds  +    -0.09562051744533 * S_MntSweetProducts
75574     +          +     0.17484703075203 * S_MonthsAsCustomer
75575     +          +    -0.55173591551358 * S_NumDealsPurchases
75576     +          +    -0.43823357997032 * S_NumWebVisitsMonth
75577     +          +     0.35315919586696 * S_RFMstat  +    -0.19785503093343 *
75578     +        S_RMntFrq  +     0.71670167585868 * S_Recency
75579     +          +    -0.28983189748238 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.05552489181258 * S_AcceptedCmpTotal + 0.3358097664399 * S_Age + 
0.99860330572057 * S_Frq + 0.33672529961967 * S_Income + 0.16969714205994 * S_Kidhome + 
0.04976308170854 * S_MntFishProducts + 0.17074705999537 * S_MntFruits + -0.14669916972196 * 
S_MntGoldProds + -0.09562051744533 * S_MntSweetProducts + 0.17484703075203 * 
S_MonthsAsCustomer + -0.55173591551358 * S_NumDealsPurchases + -0.43823357997032 * 
S_NumWebVisitsMonth + 0.35315919586696 * S_RFMstat + -0.19785503093343 * S_RMntFrq + 
0.71670167585868 * S_Recency + -0.28983189748238 * S_Teenhome ;
75580     +   H16  =     0.13586107601616 * S_AcceptedCmpTotal  +    -0.03004972131524 *
75581     +        S_Age  +     0.34607777972893 * S_Frq  +     0.04594045147698 *
75582     +        S_Income  +    -0.02355089102951 * S_Kidhome
75583     +          +     0.17666646340328 * S_MntFishProducts
75584     +          +    -0.42460885844972 * S_MntFruits  +      0.1419729562767 *
75585     +        S_MntGoldProds  +    -0.37586377717812 * S_MntSweetProducts
75586     +          +     0.13355805650034 * S_MonthsAsCustomer
75587     +          +     0.14924024487443 * S_NumDealsPurchases
75588     +          +     0.34848278731511 * S_NumWebVisitsMonth
75589     +          +     0.19641659129802 * S_RFMstat  +    -0.04454828782133 *
75590     +        S_RMntFrq  +    -0.80210797166772 * S_Recency
75591     +          +    -0.42106674037771 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.13586107601616 * S_AcceptedCmpTotal + -0.03004972131524 * S_Age 
+ 0.34607777972893 * S_Frq + 0.04594045147698 * S_Income + -0.02355089102951 * S_Kidhome + 
0.17666646340328 * S_MntFishProducts + -0.42460885844972 * S_MntFruits + 0.1419729562767 * 
S_MntGoldProds + -0.37586377717812 * S_MntSweetProducts + 0.13355805650034 * 
S_MonthsAsCustomer + 0.14924024487443 * S_NumDealsPurchases + 0.34848278731511 * 
S_NumWebVisitsMonth + 0.19641659129802 * S_RFMstat + -0.04454828782133 * S_RMntFrq + 
-0.80210797166772 * S_Recency + -0.42106674037771 * S_Teenhome ;
75592     +   H11  = H11  +     0.23614129020735 * AcceptedCmp10
75593     +          +    -0.02084878775169 * AcceptedCmp20  +     0.37466381839371 *
75594     +        AcceptedCmp30  +    -0.73407018983175 * AcceptedCmp40
75595     +          +     0.56003163460043 * AcceptedCmp50  +      0.2232704545414 *
75596     +        Complain0  +    -0.47480864689786 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23614129020735 * AcceptedCmp10 + -0.02084878775169 * 
AcceptedCmp20 + 0.37466381839371 * AcceptedCmp30 + -0.73407018983175 * AcceptedCmp40 + 
0.56003163460043 * AcceptedCmp50 + 0.2232704545414 * Complain0 + -0.47480864689786 * 
HigherEducationBinary0 ;
75597     +   H12  = H12  +    -0.27353744753102 * AcceptedCmp10
75598     +          +    -0.28444143977421 * AcceptedCmp20  +    -0.31024205224044 *
75599     +        AcceptedCmp30  +     -0.3066557522304 * AcceptedCmp40
75600     +          +      0.0549579852636 * AcceptedCmp50  +    -0.14741752806404 *
75601     +        Complain0  +     0.28934485954948 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27353744753102 * AcceptedCmp10 + -0.28444143977421 * 
AcceptedCmp20 + -0.31024205224044 * AcceptedCmp30 + -0.3066557522304 * AcceptedCmp40 + 
0.0549579852636 * AcceptedCmp50 + -0.14741752806404 * Complain0 + 0.28934485954948 * 
HigherEducationBinary0 ;
75602     +   H13  = H13  +    -0.04693289193242 * AcceptedCmp10
75603     +          +     0.14083843787444 * AcceptedCmp20  +     0.35339306333755 *
75604     +        AcceptedCmp30  +     0.18353806616447 * AcceptedCmp40
75605     +          +      0.1789056537211 * AcceptedCmp50  +     -0.0778376167893 *
75606     +        Complain0  +    -0.42804187853556 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.04693289193242 * AcceptedCmp10 + 0.14083843787444 * 
AcceptedCmp20 + 0.35339306333755 * AcceptedCmp30 + 0.18353806616447 * AcceptedCmp40 + 
0.1789056537211 * AcceptedCmp50 + -0.0778376167893 * Complain0 + -0.42804187853556 * 
HigherEducationBinary0 ;
75607     +   H14  = H14  +     -0.1827583424217 * AcceptedCmp10
75608     +          +     -0.1489832073407 * AcceptedCmp20  +     0.19258598777521 *
75609     +        AcceptedCmp30  +    -0.09050532815681 * AcceptedCmp40
75610     +          +     0.31883627486144 * AcceptedCmp50  +    -0.45377259681397 *
75611     +        Complain0  +     0.15391344192243 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.1827583424217 * AcceptedCmp10 + -0.1489832073407 * 
AcceptedCmp20 + 0.19258598777521 * AcceptedCmp30 + -0.09050532815681 * AcceptedCmp40 + 
0.31883627486144 * AcceptedCmp50 + -0.45377259681397 * Complain0 + 0.15391344192243 * 
HigherEducationBinary0 ;
75612     +   H15  = H15  +     0.27865852917942 * AcceptedCmp10
75613     +          +       0.138287927284 * AcceptedCmp20  +     0.16317472998408 *
75614     +        AcceptedCmp30  +    -0.05372991123771 * AcceptedCmp40
75615     +          +     0.10581002090735 * AcceptedCmp50  +     -0.1352393114395 *
75616     +        Complain0  +    -0.01276168923951 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.27865852917942 * AcceptedCmp10 + 0.138287927284 * 
AcceptedCmp20 + 0.16317472998408 * AcceptedCmp30 + -0.05372991123771 * AcceptedCmp40 + 
0.10581002090735 * AcceptedCmp50 + -0.1352393114395 * Complain0 + -0.01276168923951 * 
HigherEducationBinary0 ;
75617     +   H16  = H16  +     0.54923092188785 * AcceptedCmp10
75618     +          +     0.06197589967314 * AcceptedCmp20  +    -0.16384237649268 *
75619     +        AcceptedCmp30  +     0.19164251659143 * AcceptedCmp40
75620     +          +     -0.0276972319359 * AcceptedCmp50  +     0.24239824406043 *
75621     +        Complain0  +    -0.10846507318888 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.54923092188785 * AcceptedCmp10 + 0.06197589967314 * 
AcceptedCmp20 + -0.16384237649268 * AcceptedCmp30 + 0.19164251659143 * AcceptedCmp40 + 
-0.0276972319359 * AcceptedCmp50 + 0.24239824406043 * Complain0 + -0.10846507318888 * 
HigherEducationBinary0 ;
75622     +   H11  = H11  +     0.04065157802519 * Education2n_Cycle
75623     +          +     0.07405354529938 * EducationBasic  +    -0.27041205259916 *
75624     +        EducationGraduation  +     0.19305680604676 * EducationMaster
75625     +          +    -0.26816495704747 * Marital_StatusDivorced
75626     +          +     0.29673114151649 * Marital_StatusMarried
75627     +          +    -0.41626876543099 * Marital_StatusSingle
75628     +          +     0.09243411924301 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.04065157802519 * Education2n_Cycle + 0.07405354529938 * 
EducationBasic + -0.27041205259916 * EducationGraduation + 0.19305680604676 * EducationMaster 
+ -0.26816495704747 * Marital_StatusDivorced + 0.29673114151649 * Marital_StatusMarried + 
-0.41626876543099 * Marital_StatusSingle + 0.09243411924301 * Marital_StatusTogether ;
75629     +   H12  = H12  +     0.01524024349677 * Education2n_Cycle
75630     +          +     0.15070908916981 * EducationBasic  +     0.08422316601088 *
75631     +        EducationGraduation  +     -0.1896291301388 * EducationMaster
75632     +          +     0.11744127787391 * Marital_StatusDivorced
75633     +          +    -0.63703361207291 * Marital_StatusMarried
75634     +          +     0.57071735977739 * Marital_StatusSingle
75635     +          +    -0.68611342778218 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.01524024349677 * Education2n_Cycle + 0.15070908916981 * 
EducationBasic + 0.08422316601088 * EducationGraduation + -0.1896291301388 * EducationMaster + 
0.11744127787391 * Marital_StatusDivorced + -0.63703361207291 * Marital_StatusMarried + 
0.57071735977739 * Marital_StatusSingle + -0.68611342778218 * Marital_StatusTogether ;
75636     +   H13  = H13  +     0.09605604995794 * Education2n_Cycle
75637     +          +    -0.04349642322783 * EducationBasic  +    -0.11196808839685 *
75638     +        EducationGraduation  +    -0.01261925630364 * EducationMaster
75639     +          +     -0.1701911327485 * Marital_StatusDivorced
75640     +          +     0.22770672854155 * Marital_StatusMarried
75641     +          +    -0.00691671702288 * Marital_StatusSingle
75642     +          +       0.236686912143 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09605604995794 * Education2n_Cycle + -0.04349642322783 * 
EducationBasic + -0.11196808839685 * EducationGraduation + -0.01261925630364 * EducationMaster 
+ -0.1701911327485 * Marital_StatusDivorced + 0.22770672854155 * Marital_StatusMarried + 
-0.00691671702288 * Marital_StatusSingle + 0.236686912143 * Marital_StatusTogether ;
75643     +   H14  = H14  +     0.10857873061564 * Education2n_Cycle
75644     +          +     0.16814453951395 * EducationBasic  +    -0.34874327957426 *
75645     +        EducationGraduation  +    -0.25193270521624 * EducationMaster
75646     +          +    -0.15403542879027 * Marital_StatusDivorced
75647     +          +     0.02652360752468 * Marital_StatusMarried
75648     +          +    -0.10723298292119 * Marital_StatusSingle
75649     +          +     0.11548543150405 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.10857873061564 * Education2n_Cycle + 0.16814453951395 * 
EducationBasic + -0.34874327957426 * EducationGraduation + -0.25193270521624 * EducationMaster 
+ -0.15403542879027 * Marital_StatusDivorced + 0.02652360752468 * Marital_StatusMarried + 
-0.10723298292119 * Marital_StatusSingle + 0.11548543150405 * Marital_StatusTogether ;
75650     +   H15  = H15  +     0.15880112810083 * Education2n_Cycle
75651     +          +     0.24466813535709 * EducationBasic  +    -0.03905452635368 *
75652     +        EducationGraduation  +    -0.24152136481937 * EducationMaster
75653     +          +    -0.00204417192532 * Marital_StatusDivorced
75654     +          +    -0.16973417192262 * Marital_StatusMarried
75655     +          +     0.23027366297507 * Marital_StatusSingle
75656     +          +     0.08101453661219 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.15880112810083 * Education2n_Cycle + 0.24466813535709 * 
EducationBasic + -0.03905452635368 * EducationGraduation + -0.24152136481937 * EducationMaster 
+ -0.00204417192532 * Marital_StatusDivorced + -0.16973417192262 * Marital_StatusMarried + 
0.23027366297507 * Marital_StatusSingle + 0.08101453661219 * Marital_StatusTogether ;
75657     +   H16  = H16  +     0.06080074855433 * Education2n_Cycle
75658     +          +     0.05712541606796 * EducationBasic  +     0.08565135130429 *
75659     +        EducationGraduation  +    -0.35693831321015 * EducationMaster
75660     +          +     0.23360275712164 * Marital_StatusDivorced
75661     +          +    -0.12276379115508 * Marital_StatusMarried
75662     +          +     0.25482197877469 * Marital_StatusSingle
75663     +          +    -0.38122499701658 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.06080074855433 * Education2n_Cycle + 0.05712541606796 * 
EducationBasic + 0.08565135130429 * EducationGraduation + -0.35693831321015 * EducationMaster 
+ 0.23360275712164 * Marital_StatusDivorced + -0.12276379115508 * Marital_StatusMarried + 
0.25482197877469 * Marital_StatusSingle + -0.38122499701658 * Marital_StatusTogether ;
75664     +   H11  =    -1.45785613717334 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.45785613717334 + H11 ;
75665     +   H12  =    -1.39199534011753 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -1.39199534011753 + H12 ;
75666     +   H13  =     2.43348807391253 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.43348807391253 + H13 ;
75667     +   H14  =    -0.82674437249292 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.82674437249292 + H14 ;
75668     +   H15  =     1.84262829639962 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.84262829639962 + H15 ;
75669     +   H16  =     1.40892711992493 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.40892711992493 + H16 ;
75670     +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
75671     +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
75672     +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
75673     +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
75674     +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
75675     +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
75676     +END;
MPRINT(EM_DIAGRAM):   END;
75677     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75678     +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
75679     +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
75680     +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
75681     +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
75682     +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
75683     +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
75684     +END;
MPRINT(EM_DIAGRAM):   END;
75685     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75686     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
75687     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75688     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
75689     +   P_DepVar1  =    -2.98548396417337 * H11  +     3.55440982243177 * H12
75690     +          +    -1.98442501061115 * H13  +    -2.67879549563082 * H14
75691     +          +    -2.68634609959794 * H15  +     3.13238014605319 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.98548396417337 * H11 + 3.55440982243177 * H12 + 
-1.98442501061115 * H13 + -2.67879549563082 * H14 + -2.68634609959794 * H15 + 3.13238014605319 
* H16 ;
75692     +   P_DepVar1  =    -2.49443575387204 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49443575387204 + P_DepVar1 ;
75693     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
75694     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
75695     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
75696     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
75697     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
75698     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
75699     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
75700     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
75701     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
75702     +END;
MPRINT(EM_DIAGRAM):   END;
75703     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
75704     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
75705     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
75706     +END;
MPRINT(EM_DIAGRAM):   END;
75707     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
75708     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
75709     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
75710     +END;
MPRINT(EM_DIAGRAM):   END;
75711     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75712     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
75713     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
75714     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
75715     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
75716     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
75717     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
75718     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
75719     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
75720     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
75721     +END;
MPRINT(EM_DIAGRAM):   END;
75722     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75723     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
75724     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
75725     +drop
75726     +H11
75727     +H12
75728     +H13
75729     +H14
75730     +H15
75731     +H16
75732     +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
75733     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
75734      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
75735      quit;
75736      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
75737      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
75738      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
75739      retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
75740      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
75741      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75742      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
75743      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75744      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75745      proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
75746      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75747      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75748      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75749      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
75750      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
75751      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75752      proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
75753      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

75754      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
75755      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75756      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75757      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75758      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
75759      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75760      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75761      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
75762      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
75762    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.

75763      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75764      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
75765      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75766      filename _pref
75766    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
75767      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
75768      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
75769     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75770     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
75771     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
75772     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
75773     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
75774     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
75775      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
75776      quit;
75777      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
75778      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
75779      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
75780      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
75781      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
75782      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75783      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
75784      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75785      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75786      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
75787      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75788      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75789      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75790      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
75791      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
75792      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75793      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
75794      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

75795      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
75796      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75797      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75798      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75799      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
75800      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75801      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75802      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
75803      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
75803    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

75804      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75805      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
75806      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75807      filename _pref
75807    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
75808      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
75809      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
75810     +
75811     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
75812     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
75812    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
75813     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
75814     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
75815     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
75816     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
75817     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
75818      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
75819      quit;
75820      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
75821      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
75822      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
75823      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
75824      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
75825      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75826      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
75827      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75828      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75829      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
75830      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75831      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75832      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75833      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
75834      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
75835      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75836      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
75837      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75838      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
75839      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75840      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75841      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75842      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
75843      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75844      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75845      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
75846      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
75846    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

75847      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75848      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
75849      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75850      filename _pref
75850    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
75851      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
75852      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
75853     +
75854     +
75855     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
75856     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
75857     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
75858     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
75859     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
75860     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75861     +
75862     +
75863     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
75864     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
75865     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
75866     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
75867     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
75868     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75869     +
75870     +
75871     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
75872     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
75873     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
75874     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
75875     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
75876     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75877     +
75878     +
75879     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
75880     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
75881     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
75882     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
75883     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
75884     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75885     +
75886     +
75887     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
75888     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
75889     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
75890     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
75891     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
75892     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75893     +
75894     +
75895     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
75896     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
75897     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
75898     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
75899     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
75900     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75901     +
75902     +
75903     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
75904     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
75905     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
75906     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
75907     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
75908     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75909     +
75910     +
75911     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
The SAS System

75912     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
75913     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
75914     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
75915     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
75916     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
75917     +if
75918     +_FILTERNORM1 not in ( '.')
75919     + and
75920     +_FILTERNORM2 not in ( '.')
75921     + and
75922     +_FILTERNORM3 not in ( '.')
75923     + and
75924     +_FILTERNORM4 not in ( '.')
75925     + and
75926     +_FILTERNORM5 not in ( '.')
75927     + and
75928     +_FILTERNORM6 not in ( '.')
75929     + and
75930     +_FILTERNORM7 not in ( ' ')
75931     + and
75932     +_FILTERNORM8 not in ( ' ')
75933     +and
75934     +( Dt_Customer ne .)
75935     +and ( Income ne . and (Income<=107000))
75936     +and ( Kidhome ne .)
75937     +and ( MntFishProducts ne .)
75938     +and ( MntFruits ne .)
75939     +and ( MntGoldProds ne .)
75940     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
75941     +and ( MntSweetProducts ne .)
75942     +and ( MntWines ne .)
75943     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
75944     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
75945     +and ( NumStorePurchases ne .)
75946     +and ( NumWebPurchases ne .)
75947     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
75948     +and ( Recency ne .)
75949     +and ( Teenhome ne .)
75950     +and ( Year_Birth ne .)
75951     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
75952     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
75953     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
75954     +end;
MPRINT(EM_DIAGRAM):   end;
75955     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
75956     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
75957      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
75958      quit;
75959      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
75960      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
75961      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
75962      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
75963      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
75964      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75965      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
75966      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75967      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75968      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
75969      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75970      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75971      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75972      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
75973      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
75974      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75975      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
75976      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75977      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
75978      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75979      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75980      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
75981      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
75982      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
75983      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75984      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
75985      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
75985    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

75986      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

75987      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
75988      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

75989      %macro varDept(fcmpdata=,id=);
75990      %global nobs&id scoreFlag&id;
75991      %let scoreFlag&id = 0;
75992      %if &id=1 or ^&fcmpStart %then %do;
75993      proc sort data=&fcmpdata out=_temp&id nodupkey;
75994      by NAME;
75995      where id=&id and LHS in( %let j=1;
75996      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
75997      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
75998      "&var" %let j = %eval(&j+1);
75999      %end;
76000      );
76001      run;
76002      %let dsid = %sysfunc(open(_temp&id));
76003      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
76004      %let dsid = %sysfunc(close(&dsid));
76005      %if &&nobs&id %then %do;
76006      %let scoreFlag&id = 1;
76007      %let fcmpStart = 1;
76008      %end;
76009      %else %let fcmpStart = 0;
76010      %end;
76011      %else %do;
76012      proc sort data=&fcmpdata out=_tempid;
76013      where id=&id;
76014      by LHS;
76015      run;
76016      %let dsid = %sysfunc(open(_tempid));
76017      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
76018      %let dsid = %sysfunc(close(&dsid));
76019      %if ^&&nobs&id %then %do;
76020      proc datasets lib=work nolist;
76021      delete _tempid;
76022      run;
76023      quit;
76024      %end;
76025      %else %do;
76026      data _tempAll;
76027      set %let j=%eval(&id-1);
76028      %do x=1 %to &j;
76029      %if &&nobs&x %then %do;
76030      _temp&x %end;
76031      %end;
76032      ;
76033      run;
76034      proc sql;
76035      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
76035    ! work._tempid p2 where p.name=p2.lhs;
76036      quit;
76037      data _temp&id;
76038      set _temp&id;
76039      where LHS ne '' and NAME ne '' and Node ne '';
76040      run;
76041      proc datasets lib=work nolist;
76042      delete _tempAll;
76043      run;
76044      %let dsid = %sysfunc(open(_temp&id));
76045      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
76046      %let dsid = %sysfunc(close(&dsid));
76047      %if ^&&nobs&id %then %do;
76048      proc datasets lib=work nolist;
76049      delete _temp&id;
76050      run;
76051      quit;
76052      %end;
76053      %else %do;
76054      %let scoreFlag&id = 1;
76055      data _temp&id;
76056      set _temp&id;
76057      where LHS ne NAME and node ne '';
76058      run;
76059      %let dsid = %sysfunc(open(_temp&id));
76060      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
76061      %let dsid = %sysfunc(close(&dsid));
76062      %if ^&&nobs&id %then %do;
76063      proc datasets lib=work nolist;
76064      delete _temp&id;
76065      run;
76066      quit;
76067      %end;
76068      %else %do;
76069      proc sort data=_temp&id nodupkey;
76070      by LHS NAME;
76071      run;
76072      %end;
76073      %end;
76074      %end;
76075      %end;
76076      %mend varDept;
76077      %macro optCode(outdata=fcmpdata);
76078      %global fcmpStart;
76079      %let fcmpStart = 0;
76080      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
76081      %let NumNodes=9;
76082      %do k=1 %to &NumNodes;
76083      %vardept(fcmpdata=&outdata, id=&k);
76084      %end;
76085      %mend optCode;
76086      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

76087      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
76088      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
76089      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
76090      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76091      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
76092      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
76093      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
76094      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76095      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
76096      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
76096    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

76097      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

76098      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
76099      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
76100      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76101      filename _pref
76101    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
76102      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
76103      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
76104     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
76105     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
76106     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
76107     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
76108     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
76109     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
76110     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
76111     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
76112     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
76113     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
76114     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
76115     +LENGTH _WARN_ $4
76116     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
76117     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
76118     +
76119     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
76120     +
76121     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
76122     +
76123     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
76124     +
76125     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
76126     +
76127     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
76128     +
76129     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
76130     +
76131     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
76132     +
76133     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
76134     +
76135     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
76136     +
76137     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
76138     +
76139     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
76140     +
76141     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
76142     +
76143     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
76144     +
76145     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
76146     +
76147     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
76148     +
76149     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
76150     +
76151     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
76152     +
76153     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
76154     +
76155     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
76156     +
76157     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
76158     +
76159     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
76160     +
76161     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
76162     +
76163     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
76164     +
76165     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
76166     +
76167     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
76168     +
76169     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
76170     +
76171     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
76172     +
76173     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
76174     +
76175     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
76176     +
76177     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
76178     +
76179     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
76180     +
76181     +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
76182     +
76183     +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
76184     +
76185     +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
76186     +
76187     +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
76188     +
76189     +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
76190     +
76191     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
76192     +
76193     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
76194     +
76195     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
76196     +
76197     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
76198     +
76199     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
76200     +
76201     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
76202     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
76203     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
76204     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
76205     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76206     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76207     +end;
MPRINT(EM_DIAGRAM):   end;
76208     +else do;
MPRINT(EM_DIAGRAM):   else do;
76209     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76210     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
76211     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76212     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
76213     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
76214     +   end;
MPRINT(EM_DIAGRAM):   end;
76215     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
76216     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
76217     +   end;
MPRINT(EM_DIAGRAM):   end;
76218     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76219     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
76220     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76221     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76222     +   end;
MPRINT(EM_DIAGRAM):   end;
76223     +end;
MPRINT(EM_DIAGRAM):   end;
76224     +
76225     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
76226     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
76227     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
76228     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
76229     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76230     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76231     +end;
MPRINT(EM_DIAGRAM):   end;
76232     +else do;
MPRINT(EM_DIAGRAM):   else do;
76233     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76234     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
76235     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76236     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
76237     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
76238     +   end;
MPRINT(EM_DIAGRAM):   end;
76239     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
76240     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
76241     +   end;
MPRINT(EM_DIAGRAM):   end;
76242     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76243     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
76244     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76245     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76246     +   end;
MPRINT(EM_DIAGRAM):   end;
76247     +end;
MPRINT(EM_DIAGRAM):   end;
76248     +
76249     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
76250     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
76251     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
76252     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
76253     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76254     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76255     +end;
MPRINT(EM_DIAGRAM):   end;
76256     +else do;
MPRINT(EM_DIAGRAM):   else do;
76257     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76258     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
76259     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76260     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
76261     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
76262     +   end;
MPRINT(EM_DIAGRAM):   end;
76263     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
76264     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
76265     +   end;
MPRINT(EM_DIAGRAM):   end;
76266     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76267     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
76268     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76269     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76270     +   end;
MPRINT(EM_DIAGRAM):   end;
76271     +end;
MPRINT(EM_DIAGRAM):   end;
76272     +
76273     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
76274     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
76275     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
76276     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
76277     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76278     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76279     +end;
MPRINT(EM_DIAGRAM):   end;
76280     +else do;
MPRINT(EM_DIAGRAM):   else do;
76281     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76282     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
76283     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76284     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
76285     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
76286     +   end;
MPRINT(EM_DIAGRAM):   end;
76287     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
76288     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
76289     +   end;
MPRINT(EM_DIAGRAM):   end;
76290     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76291     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
76292     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76293     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76294     +   end;
MPRINT(EM_DIAGRAM):   end;
76295     +end;
MPRINT(EM_DIAGRAM):   end;
76296     +
76297     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
76298     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
76299     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
76300     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
76301     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76302     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76303     +end;
MPRINT(EM_DIAGRAM):   end;
76304     +else do;
MPRINT(EM_DIAGRAM):   else do;
76305     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76306     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
76307     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76308     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
76309     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
76310     +   end;
MPRINT(EM_DIAGRAM):   end;
76311     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
76312     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
76313     +   end;
MPRINT(EM_DIAGRAM):   end;
76314     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76315     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
76316     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76317     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76318     +   end;
MPRINT(EM_DIAGRAM):   end;
76319     +end;
MPRINT(EM_DIAGRAM):   end;
76320     +
76321     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
76322     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
76323     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
76324     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
76325     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76326     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76327     +end;
MPRINT(EM_DIAGRAM):   end;
76328     +else do;
MPRINT(EM_DIAGRAM):   else do;
76329     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76330     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
76331     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76332     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
76333     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
76334     +   end;
MPRINT(EM_DIAGRAM):   end;
76335     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
76336     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
76337     +   end;
MPRINT(EM_DIAGRAM):   end;
76338     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76339     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
76340     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76341     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76342     +   end;
MPRINT(EM_DIAGRAM):   end;
76343     +end;
MPRINT(EM_DIAGRAM):   end;
76344     +
76345     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
76346     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
76347     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
76348     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
76349     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76350     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76351     +end;
MPRINT(EM_DIAGRAM):   end;
76352     +else do;
MPRINT(EM_DIAGRAM):   else do;
76353     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
76354     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
76355     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76356     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
76357     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
76358     +   end;
MPRINT(EM_DIAGRAM):   end;
76359     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
76360     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
76361     +   end;
MPRINT(EM_DIAGRAM):   end;
76362     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76363     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
76364     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76365     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76366     +   end;
MPRINT(EM_DIAGRAM):   end;
76367     +end;
MPRINT(EM_DIAGRAM):   end;
76368     +
76369     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
76370     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
76371     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
76372     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
76373     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
76374     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
76375     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
76376     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
76377     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
76378     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
76379     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
76380     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
76381     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76382     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76383     +end;
MPRINT(EM_DIAGRAM):   end;
76384     +else do;
MPRINT(EM_DIAGRAM):   else do;
76385     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
76386     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
76387     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76388     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
76389     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
76390     +   end;
MPRINT(EM_DIAGRAM):   end;
76391     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
76392     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
76393     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
76394     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
76395     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
76396     +   end;
MPRINT(EM_DIAGRAM):   end;
76397     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
76398     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
76399     +   end;
MPRINT(EM_DIAGRAM):   end;
76400     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
76401     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
76402     +   end;
MPRINT(EM_DIAGRAM):   end;
76403     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
76404     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
76405     +   end;
MPRINT(EM_DIAGRAM):   end;
76406     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76407     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
76408     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
76409     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
76410     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
76411     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76412     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76413     +   end;
MPRINT(EM_DIAGRAM):   end;
76414     +end;
MPRINT(EM_DIAGRAM):   end;
76415     +
76416     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
76417     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
76418     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
76419     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
76420     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
76421     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
76422     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
76423     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
76424     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
76425     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
76426     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
76427     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
76428     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
76429     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
76430     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76431     +end;
MPRINT(EM_DIAGRAM):   end;
76432     +else do;
MPRINT(EM_DIAGRAM):   else do;
76433     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
76434     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
76435     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
76436     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
76437     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
76438     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
76439     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
76440     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
76441     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76442     +         end;
MPRINT(EM_DIAGRAM):   end;
76443     +         else do;
MPRINT(EM_DIAGRAM):   else do;
76444     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
76445     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
76446     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76447     +            end;
MPRINT(EM_DIAGRAM):   end;
76448     +         end;
MPRINT(EM_DIAGRAM):   end;
76449     +      end;
MPRINT(EM_DIAGRAM):   end;
76450     +      else do;
MPRINT(EM_DIAGRAM):   else do;
76451     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
76452     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
76453     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76454     +         end;
MPRINT(EM_DIAGRAM):   end;
76455     +      end;
MPRINT(EM_DIAGRAM):   end;
76456     +   end;
MPRINT(EM_DIAGRAM):   end;
76457     +   else do;
MPRINT(EM_DIAGRAM):   else do;
76458     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
76459     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
76460     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76461     +      end;
MPRINT(EM_DIAGRAM):   end;
76462     +      else do;
MPRINT(EM_DIAGRAM):   else do;
76463     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
76464     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
76465     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
76466     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
76467     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
76468     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
76469     +         end;
MPRINT(EM_DIAGRAM):   end;
76470     +      end;
MPRINT(EM_DIAGRAM):   end;
76471     +   end;
MPRINT(EM_DIAGRAM):   end;
76472     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
76473     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
76474     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
76475     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
76476     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
76477     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
76478     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76479     +   end;
MPRINT(EM_DIAGRAM):   end;
76480     +end;
MPRINT(EM_DIAGRAM):   end;
76481     +
76482     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76483     +*** Checking missing input Interval
76484     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
76485     +
76486     +IF NMISS(
76487     +   AcceptedCmpTotal ,
76488     +   Age ,
76489     +   Frq ,
76490     +   Income ,
76491     +   Kidhome ,
76492     +   MntFishProducts ,
76493     +   MntFruits ,
76494     +   MntGoldProds ,
76495     +   MntSweetProducts ,
76496     +   MonthsAsCustomer ,
76497     +   NumDealsPurchases ,
76498     +   NumWebVisitsMonth ,
76499     +   RFMstat ,
76500     +   RMntFrq ,
76501     +   Recency ,
76502     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
76503     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
76504     +
76505     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
76506     +END;
MPRINT(EM_DIAGRAM):   END;
76507     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76508     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
76509     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76510     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76511     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
76512     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
76513     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
76514     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
76515     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
76516     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
76517     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
76518     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
76519     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
76520     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
76521     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
76522     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
76523     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
76524     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
76525     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
76526     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
76527     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
76528     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
76529     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
76530     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
76531     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
76532     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
76533     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
76534     +END;
MPRINT(EM_DIAGRAM):   END;
76535     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76536     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
76537     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
76538     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
76539     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
76540     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
76541     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
76542     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
76543     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
76544     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
76545     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
76546     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
76547     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
76548     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
76549     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
76550     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
76551     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
76552     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
76553     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
76554     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
76555     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
76556     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
76557     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
76558     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
76559     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
76560     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
76561     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
76562     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
76563     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
76564     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
76565     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
76566     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
76567     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
76568     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
76569     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
76570     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
76571     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
76572     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
76573     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
76574     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
76575     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
76576     +END;
MPRINT(EM_DIAGRAM):   END;
76577     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76578     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
76579     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76580     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76581     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
76582     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76583     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76584     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
76585     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76586     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76587     +   H1x1_1  =    -0.16752750958623 * S_AcceptedCmpTotal
76588     +          +     0.06403041073662 * S_Age  +     0.37887435203175 * S_Frq
76589     +          +    -0.06488471849106 * S_Income  +     0.02927960705587 *
76590     +        S_Kidhome  +     -0.0153182718754 * S_MntFishProducts
76591     +          +      0.0592803373375 * S_MntFruits  +     -0.1059983645705 *
76592     +        S_MntGoldProds  +     0.08839399409229 * S_MntSweetProducts
76593     +          +    -0.01191239814261 * S_MonthsAsCustomer
76594     +          +      -0.307259983666 * S_NumDealsPurchases
76595     +          +    -0.23972300101674 * S_NumWebVisitsMonth
76596     +          +    -0.30556185778423 * S_RFMstat  +    -0.08105827641093 *
76597     +        S_RMntFrq  +     0.32671320165482 * S_Recency
76598     +          +      0.0130097267127 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.16752750958623 * S_AcceptedCmpTotal + 0.06403041073662 * 
S_Age + 0.37887435203175 * S_Frq + -0.06488471849106 * S_Income + 0.02927960705587 * S_Kidhome 
+ -0.0153182718754 * S_MntFishProducts + 0.0592803373375 * S_MntFruits + -0.1059983645705 * 
S_MntGoldProds + 0.08839399409229 * S_MntSweetProducts + -0.01191239814261 * 
S_MonthsAsCustomer + -0.307259983666 * S_NumDealsPurchases + -0.23972300101674 * 
S_NumWebVisitsMonth + -0.30556185778423 * S_RFMstat + -0.08105827641093 * S_RMntFrq + 
0.32671320165482 * S_Recency + 0.0130097267127 * S_Teenhome ;
76599     +   H1x1_1  = H1x1_1  +     0.04957160124382 * AcceptedCmp10
76600     +          +    -0.05376340328215 * AcceptedCmp20  +     0.11970832567932 *
76601     +        AcceptedCmp30  +    -0.20257152181059 * AcceptedCmp40
76602     +          +     0.19055537475137 * AcceptedCmp50  +    -0.16409517539938 *
76603     +        Complain0  +    -0.05757658272561 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.04957160124382 * AcceptedCmp10 + -0.05376340328215 * 
AcceptedCmp20 + 0.11970832567932 * AcceptedCmp30 + -0.20257152181059 * AcceptedCmp40 + 
0.19055537475137 * AcceptedCmp50 + -0.16409517539938 * Complain0 + -0.05757658272561 * 
HigherEducationBinary0 ;
76604     +   H1x1_1  = H1x1_1  +     0.14272714853962 * Education2n_Cycle
76605     +          +     0.17151280502053 * EducationBasic  +    -0.11549721715363 *
76606     +        EducationGraduation  +    -0.14651231631393 * EducationMaster
76607     +          +     -0.0692762335753 * Marital_StatusDivorced
76608     +          +     0.02472293911071 * Marital_StatusMarried
76609     +          +     0.04038393550437 * Marital_StatusSingle
76610     +          +     0.04243299259503 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.14272714853962 * Education2n_Cycle + 
0.17151280502053 * EducationBasic + -0.11549721715363 * EducationGraduation + 
-0.14651231631393 * EducationMaster + -0.0692762335753 * Marital_StatusDivorced + 
0.02472293911071 * Marital_StatusMarried + 0.04038393550437 * Marital_StatusSingle + 
0.04243299259503 * Marital_StatusTogether ;
76611     +   H1x1_1  =     0.23154562419649 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.23154562419649 + H1x1_1 ;
76612     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
76613     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
76614     +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
76615     +END;
MPRINT(EM_DIAGRAM):   END;
76616     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76617     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
76618     +END;
MPRINT(EM_DIAGRAM):   END;
76619     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76620     +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
76621     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76622     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76623     +   H1x2_1  =    -0.31529057180483 * S_AcceptedCmpTotal
76624     +          +      0.2513504223928 * S_Age  +     1.31369907469092 * S_Frq
76625     +          +     1.18208440103935 * S_Income  +    -0.63035218994975 *
76626     +        S_Kidhome  +     0.06794324522555 * S_MntFishProducts
76627     +          +    -0.02910005341604 * S_MntFruits  +     -0.2809281327009 *
76628     +        S_MntGoldProds  +     0.03300083755879 * S_MntSweetProducts
76629     +          +     0.14524334187971 * S_MonthsAsCustomer
76630     +          +    -0.58464031025411 * S_NumDealsPurchases
76631     +          +    -0.10768856151333 * S_NumWebVisitsMonth
76632     +          +    -0.54602308682658 * S_RFMstat  +    -0.07771897681693 *
76633     +        S_RMntFrq  +    -0.04430281297191 * S_Recency
76634     +          +    -0.75550113104618 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.31529057180483 * S_AcceptedCmpTotal + 0.2513504223928 * 
S_Age + 1.31369907469092 * S_Frq + 1.18208440103935 * S_Income + -0.63035218994975 * S_Kidhome 
+ 0.06794324522555 * S_MntFishProducts + -0.02910005341604 * S_MntFruits + -0.2809281327009 * 
S_MntGoldProds + 0.03300083755879 * S_MntSweetProducts + 0.14524334187971 * S_MonthsAsCustomer 
+ -0.58464031025411 * S_NumDealsPurchases + -0.10768856151333 * S_NumWebVisitsMonth + 
-0.54602308682658 * S_RFMstat + -0.07771897681693 * S_RMntFrq + -0.04430281297191 * S_Recency 
+ -0.75550113104618 * S_Teenhome ;
76635     +   H1x2_1  = H1x2_1  +    -0.32989699322067 * AcceptedCmp10
76636     +          +    -0.49194930861593 * AcceptedCmp20  +    -0.29685081372508 *
76637     +        AcceptedCmp30  +    -1.09268493953815 * AcceptedCmp40
76638     +          +     0.19253596686854 * AcceptedCmp50  +    -0.52740837757185 *
76639     +        Complain0  +     0.92701971187717 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.32989699322067 * AcceptedCmp10 + -0.49194930861593 
* AcceptedCmp20 + -0.29685081372508 * AcceptedCmp30 + -1.09268493953815 * AcceptedCmp40 + 
0.19253596686854 * AcceptedCmp50 + -0.52740837757185 * Complain0 + 0.92701971187717 * 
HigherEducationBinary0 ;
76640     +   H1x2_1  = H1x2_1  +    -0.67905848838903 * Education2n_Cycle
76641     +          +     0.18443463984889 * EducationBasic  +     0.41283576419495 *
76642     +        EducationGraduation  +    -0.37768027773032 * EducationMaster
76643     +          +     0.07007941100006 * Marital_StatusDivorced
76644     +          +     -0.7850554528889 * Marital_StatusMarried
76645     +          +     1.17661634109847 * Marital_StatusSingle
76646     +          +    -0.55785837414708 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.67905848838903 * Education2n_Cycle + 
0.18443463984889 * EducationBasic + 0.41283576419495 * EducationGraduation + -0.37768027773032 
* EducationMaster + 0.07007941100006 * Marital_StatusDivorced + -0.7850554528889 * 
Marital_StatusMarried + 1.17661634109847 * Marital_StatusSingle + -0.55785837414708 * 
Marital_StatusTogether ;
76647     +   H1x2_1  =    -0.47254621873132 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = -0.47254621873132 + H1x2_1 ;
76648     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
76649     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
76650     +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
76651     +END;
MPRINT(EM_DIAGRAM):   END;
76652     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76653     +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
76654     +END;
MPRINT(EM_DIAGRAM):   END;
76655     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76656     +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
76657     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76658     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76659     +   H1x3_1  =    -1.82667161026613 * S_AcceptedCmpTotal
76660     +          +    -1.37253292193256 * S_Age  +    -2.75518607832551 * S_Frq
76661     +          +    -0.79839250431153 * S_Income  +     1.11821147878382 *
76662     +        S_Kidhome  +    -0.44513342757321 * S_MntFishProducts
76663     +          +     0.87700219878037 * S_MntFruits  +    -0.11016064598169 *
76664     +        S_MntGoldProds  +    -0.01609032798943 * S_MntSweetProducts
76665     +          +    -2.17154324602167 * S_MonthsAsCustomer
76666     +          +    -1.39930460918007 * S_NumDealsPurchases
76667     +          +    -0.16044576482901 * S_NumWebVisitsMonth
76668     +          +    -0.41327898874555 * S_RFMstat  +     0.52147960287475 *
76669     +        S_RMntFrq  +    -0.73252715992964 * S_Recency
76670     +          +    -0.30335608719088 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.82667161026613 * S_AcceptedCmpTotal + -1.37253292193256 * 
S_Age + -2.75518607832551 * S_Frq + -0.79839250431153 * S_Income + 1.11821147878382 * 
S_Kidhome + -0.44513342757321 * S_MntFishProducts + 0.87700219878037 * S_MntFruits + 
-0.11016064598169 * S_MntGoldProds + -0.01609032798943 * S_MntSweetProducts + 
-2.17154324602167 * S_MonthsAsCustomer + -1.39930460918007 * S_NumDealsPurchases + 
-0.16044576482901 * S_NumWebVisitsMonth + -0.41327898874555 * S_RFMstat + 0.52147960287475 * 
S_RMntFrq + -0.73252715992964 * S_Recency + -0.30335608719088 * S_Teenhome ;
76671     +   H1x3_1  = H1x3_1  +     -1.0325678563582 * AcceptedCmp10
76672     +          +     0.25951825842624 * AcceptedCmp20  +    -0.75269528776274 *
76673     +        AcceptedCmp30  +    -1.09208637335913 * AcceptedCmp40
76674     +          +     0.94597602278581 * AcceptedCmp50  +     0.73782287956403 *
76675     +        Complain0  +     0.48147273740028 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + -1.0325678563582 * AcceptedCmp10 + 0.25951825842624 * 
AcceptedCmp20 + -0.75269528776274 * AcceptedCmp30 + -1.09208637335913 * AcceptedCmp40 + 
0.94597602278581 * AcceptedCmp50 + 0.73782287956403 * Complain0 + 0.48147273740028 * 
HigherEducationBinary0 ;
76676     +   H1x3_1  = H1x3_1  +     0.75114718211842 * Education2n_Cycle
76677     +          +     0.08709759722742 * EducationBasic  +     0.25555397082161 *
76678     +        EducationGraduation  +    -0.35403398893388 * EducationMaster
76679     +          +     0.83271778325587 * Marital_StatusDivorced
76680     +          +     0.79137899511518 * Marital_StatusMarried
76681     +          +    -0.51320080030576 * Marital_StatusSingle
76682     +          +    -0.48315893978838 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.75114718211842 * Education2n_Cycle + 
0.08709759722742 * EducationBasic + 0.25555397082161 * EducationGraduation + -0.35403398893388 
* EducationMaster + 0.83271778325587 * Marital_StatusDivorced + 0.79137899511518 * 
Marital_StatusMarried + -0.51320080030576 * Marital_StatusSingle + -0.48315893978838 * 
Marital_StatusTogether ;
76683     +   H1x3_1  =     1.23763256110337 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.23763256110337 + H1x3_1 ;
76684     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
76685     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
76686     +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
76687     +END;
MPRINT(EM_DIAGRAM):   END;
76688     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76689     +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
76690     +END;
MPRINT(EM_DIAGRAM):   END;
76691     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76692     +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
76693     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76694     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76695     +   H2x1_1  =     4.77126766160389 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 4.77126766160389 * H1x1_1 ;
76696     +   H2x1_1  = H2x1_1  +       -2.06136482688 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.06136482688 * H1x2_1 ;
76697     +   H2x1_1  = H2x1_1  +    -0.66088716356598 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.66088716356598 * H1x3_1 ;
76698     +   H2x1_1  =    -1.42497113284005 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.42497113284005 + H2x1_1 ;
76699     +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
76700     +END;
MPRINT(EM_DIAGRAM):   END;
76701     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76702     +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
76703     +END;
MPRINT(EM_DIAGRAM):   END;
76704     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76705     +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
76706     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76707     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76708     +   H2x2_1  =     1.50159856860224 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 1.50159856860224 * H1x1_1 ;
76709     +   H2x2_1  = H2x2_1  +    -1.21325055599412 * H1x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + -1.21325055599412 * H1x2_1 ;
76710     +   H2x2_1  = H2x2_1  +      0.4926229652129 * H1x3_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.4926229652129 * H1x3_1 ;
76711     +   H2x2_1  =    -0.30658924042786 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = -0.30658924042786 + H2x2_1 ;
76712     +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
76713     +END;
MPRINT(EM_DIAGRAM):   END;
76714     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76715     +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
76716     +END;
MPRINT(EM_DIAGRAM):   END;
76717     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76718     +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
76719     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76720     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76721     +   H3x1_1  =     4.83751882303338 * H2x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.83751882303338 * H2x1_1 ;
76722     +   H3x1_1  = H3x1_1  +     2.12677516906018 * H2x2_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.12677516906018 * H2x2_1 ;
76723     +   H3x1_1  =     0.02705273717187 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 0.02705273717187 + H3x1_1 ;
76724     +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
76725     +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
76726     +   H3x1_1  = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H3x1_1 = 1.0 / (1.0 + EXP(MIN( - H3x1_1 , _EXP_BAR)));
76727     +END;
MPRINT(EM_DIAGRAM):   END;
76728     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76729     +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
76730     +END;
MPRINT(EM_DIAGRAM):   END;
76731     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76732     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
76733     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76734     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
76735     +   P_DepVar1  =     -6.6798185012723 * H3x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -6.6798185012723 * H3x1_1 ;
76736     +   P_DepVar1  =     2.10208029317576 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.10208029317576 + P_DepVar1 ;
76737     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
76738     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
76739     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
76740     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
76741     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
76742     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
76743     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
76744     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
76745     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
76746     +END;
MPRINT(EM_DIAGRAM):   END;
76747     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
76748     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
76749     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
76750     +END;
MPRINT(EM_DIAGRAM):   END;
76751     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
76752     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
76753     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
76754     +END;
MPRINT(EM_DIAGRAM):   END;
76755     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76756     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
76757     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
76758     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
76759     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
76760     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
76761     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
76762     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
76763     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
76764     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
76765     +END;
MPRINT(EM_DIAGRAM):   END;
76766     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
76767     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
76768     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
76769     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
76770      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
76771      quit;
76772      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
76773      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
76774      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
76775      retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
76776      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
76777      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

76778      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
76779      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76780      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2279 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2279 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

76781      proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME 
CREATOR);
76782      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76783      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76784      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
76785      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
76786      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
76787      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76788      proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
76789      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

76790      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
76791      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76792      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

76793      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
76794      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
76795      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76796      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76797      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
76798      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
76798    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1206 rows and 5 columns.

76799      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76800      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
76801      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1206 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

76802      filename _pref
76802    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
76803      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
76804      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
76805     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76806     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
76807     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
76808     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
76809     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
76810     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
76811      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
76812      quit;
76813      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
76814      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
76815      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
76816      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
76817      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
76818      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76819      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
76820      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76821      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76822      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
76823      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76824      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

76825      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
76826      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
76827      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
76828      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76829      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
76830      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

76831      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
76832      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76833      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76834      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
76835      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
76836      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76837      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76838      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
76839      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
76839    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

76840      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76841      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
76842      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1210 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76843      filename _pref
76843    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
76844      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
76845      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
76846     +
76847     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
76848     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
76848    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
76849     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
76850     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
76851     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
76852     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
76853     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
76854      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
76855      quit;
76856      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
76857      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
76858      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
76859      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
76860      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
76861      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76862      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
76863      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76864      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76865      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
76866      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76867      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

76868      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
76869      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
76870      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
76871      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76872      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
76873      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76874      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
76875      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76876      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

76877      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
76878      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
76879      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
76880      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76881      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
76882      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
76882    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

76883      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76884      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
76885      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

76886      filename _pref
76886    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
76887      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
76888      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
76889     +
76890     +
76891     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
76892     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
76893     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
76894     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
76895     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
76896     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76897     +
76898     +
76899     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
76900     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
76901     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
76902     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
76903     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
76904     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76905     +
76906     +
76907     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
76908     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
76909     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
76910     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
76911     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
76912     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76913     +
76914     +
76915     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
76916     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
76917     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
76918     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
76919     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
76920     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76921     +
76922     +
76923     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
76924     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
76925     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
76926     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
76927     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
76928     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76929     +
76930     +
76931     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
76932     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
76933     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
76934     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
76935     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
76936     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76937     +
76938     +
76939     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
76940     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
76941     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
76942     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
76943     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
76944     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76945     +
76946     +
76947     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
76948     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
76949     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
76950     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
76951     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
76952     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
76953     +if
76954     +_FILTERNORM1 not in ( '.')
76955     + and
76956     +_FILTERNORM2 not in ( '.')
76957     + and
76958     +_FILTERNORM3 not in ( '.')
76959     + and
76960     +_FILTERNORM4 not in ( '.')
76961     + and
76962     +_FILTERNORM5 not in ( '.')
76963     + and
76964     +_FILTERNORM6 not in ( '.')
76965     + and
76966     +_FILTERNORM7 not in ( ' ')
76967     + and
76968     +_FILTERNORM8 not in ( ' ')
76969     +and
76970     +( Dt_Customer ne .)
76971     +and ( Income ne . and (Income<=107000))
76972     +and ( Kidhome ne .)
76973     +and ( MntFishProducts ne .)
76974     +and ( MntFruits ne .)
76975     +and ( MntGoldProds ne .)
76976     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
76977     +and ( MntSweetProducts ne .)
76978     +and ( MntWines ne .)
76979     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
76980     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
76981     +and ( NumStorePurchases ne .)
76982     +and ( NumWebPurchases ne .)
76983     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
76984     +and ( Recency ne .)
76985     +and ( Teenhome ne .)
76986     +and ( Year_Birth ne .)
76987     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
76988     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
76989     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
76990     +end;
MPRINT(EM_DIAGRAM):   end;
76991     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
76992     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
76993      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
76994      quit;
76995      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
76996      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
76997      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
76998      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
76999      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
77000      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77001      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
77002      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77003      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77004      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
77005      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77006      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77007      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77008      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
77009      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
77010      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77011      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
77012      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77013      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
77014      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77015      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77016      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77017      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
77018      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77019      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77020      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
77021      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
77021    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

77022      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77023      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
77024      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1315 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77025      %macro varDept(fcmpdata=,id=);
77026      %global nobs&id scoreFlag&id;
77027      %let scoreFlag&id = 0;
77028      %if &id=1 or ^&fcmpStart %then %do;
77029      proc sort data=&fcmpdata out=_temp&id nodupkey;
77030      by NAME;
77031      where id=&id and LHS in( %let j=1;
77032      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
77033      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
77034      "&var" %let j = %eval(&j+1);
77035      %end;
77036      );
77037      run;
77038      %let dsid = %sysfunc(open(_temp&id));
77039      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
77040      %let dsid = %sysfunc(close(&dsid));
77041      %if &&nobs&id %then %do;
77042      %let scoreFlag&id = 1;
77043      %let fcmpStart = 1;
77044      %end;
77045      %else %let fcmpStart = 0;
77046      %end;
77047      %else %do;
77048      proc sort data=&fcmpdata out=_tempid;
77049      where id=&id;
77050      by LHS;
77051      run;
77052      %let dsid = %sysfunc(open(_tempid));
77053      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
77054      %let dsid = %sysfunc(close(&dsid));
77055      %if ^&&nobs&id %then %do;
77056      proc datasets lib=work nolist;
77057      delete _tempid;
77058      run;
77059      quit;
77060      %end;
77061      %else %do;
77062      data _tempAll;
77063      set %let j=%eval(&id-1);
77064      %do x=1 %to &j;
77065      %if &&nobs&x %then %do;
77066      _temp&x %end;
77067      %end;
77068      ;
77069      run;
77070      proc sql;
77071      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
77071    ! work._tempid p2 where p.name=p2.lhs;
77072      quit;
77073      data _temp&id;
77074      set _temp&id;
77075      where LHS ne '' and NAME ne '' and Node ne '';
77076      run;
77077      proc datasets lib=work nolist;
77078      delete _tempAll;
77079      run;
77080      %let dsid = %sysfunc(open(_temp&id));
77081      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
77082      %let dsid = %sysfunc(close(&dsid));
77083      %if ^&&nobs&id %then %do;
77084      proc datasets lib=work nolist;
77085      delete _temp&id;
77086      run;
77087      quit;
77088      %end;
77089      %else %do;
77090      %let scoreFlag&id = 1;
77091      data _temp&id;
77092      set _temp&id;
77093      where LHS ne NAME and node ne '';
77094      run;
77095      %let dsid = %sysfunc(open(_temp&id));
77096      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
77097      %let dsid = %sysfunc(close(&dsid));
77098      %if ^&&nobs&id %then %do;
77099      proc datasets lib=work nolist;
77100      delete _temp&id;
77101      run;
77102      quit;
77103      %end;
77104      %else %do;
77105      proc sort data=_temp&id nodupkey;
77106      by LHS NAME;
77107      run;
77108      %end;
77109      %end;
77110      %end;
77111      %end;
77112      %mend varDept;
77113      %macro optCode(outdata=fcmpdata);
77114      %global fcmpStart;
77115      %let fcmpStart = 0;
77116      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
77117      %let NumNodes=9;
77118      %do k=1 %to &NumNodes;
77119      %vardept(fcmpdata=&outdata, id=&k);
77120      %end;
77121      %mend optCode;
77122      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 124 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 91 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 33 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 35 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 68 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

77123      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
77124      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
77125      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
77126      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77127      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
77128      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
77129      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
77130      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77131      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
77132      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
77132    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

77133      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77134      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
77135      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
77136      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77137      filename _pref
77137    ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
77138      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
77139      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
77140     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
77141     +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
77142     +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
77143     +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
77144     + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
77145     + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
77146     + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
77147     + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
77148     + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
77149     + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
77150     + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
77151     +LENGTH _WARN_ $4
77152     +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
77153     +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
77154     +
77155     +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
77156     +
77157     +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
77158     +
77159     +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
77160     +
77161     +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
77162     +
77163     +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
77164     +
77165     +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
77166     +
77167     +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
77168     +
77169     +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
77170     +
77171     +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
77172     +
77173     +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
77174     +
77175     +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
77176     +
77177     +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
77178     +
77179     +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
77180     +
77181     +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
77182     +
77183     +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
77184     +
77185     +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
77186     +
77187     +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
77188     +
77189     +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
77190     +
77191     +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
77192     +
77193     +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
77194     +
77195     +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
77196     +
77197     +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
77198     +
77199     +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
77200     +
77201     +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
77202     +
77203     +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
77204     +
77205     +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
77206     +
77207     +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
77208     +
77209     +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
77210     +
77211     +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
77212     +
77213     +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
77214     +
77215     +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
77216     +
77217     +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
77218     +
77219     +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
77220     +
77221     +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
77222     +
77223     +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
77224     +
77225     +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
77226     +
77227     +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
77228     +
77229     +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
77230     +
77231     +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
77232     +
77233     +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
77234     +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
77235     +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
77236     +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
77237     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77238     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77239     +end;
MPRINT(EM_DIAGRAM):   end;
77240     +else do;
MPRINT(EM_DIAGRAM):   else do;
77241     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77242     +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
77243     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77244     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
77245     +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
77246     +   end;
MPRINT(EM_DIAGRAM):   end;
77247     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
77248     +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
77249     +   end;
MPRINT(EM_DIAGRAM):   end;
77250     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77251     +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
77252     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77253     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77254     +   end;
MPRINT(EM_DIAGRAM):   end;
77255     +end;
MPRINT(EM_DIAGRAM):   end;
77256     +
77257     +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
77258     +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
77259     +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
77260     +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
77261     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77262     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77263     +end;
MPRINT(EM_DIAGRAM):   end;
77264     +else do;
MPRINT(EM_DIAGRAM):   else do;
77265     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77266     +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
77267     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77268     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
77269     +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
77270     +   end;
MPRINT(EM_DIAGRAM):   end;
77271     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
77272     +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
77273     +   end;
MPRINT(EM_DIAGRAM):   end;
77274     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77275     +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
77276     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77277     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77278     +   end;
MPRINT(EM_DIAGRAM):   end;
77279     +end;
MPRINT(EM_DIAGRAM):   end;
77280     +
77281     +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
77282     +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
77283     +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
77284     +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
77285     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77286     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77287     +end;
MPRINT(EM_DIAGRAM):   end;
77288     +else do;
MPRINT(EM_DIAGRAM):   else do;
77289     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77290     +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
77291     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77292     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
77293     +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
77294     +   end;
MPRINT(EM_DIAGRAM):   end;
77295     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
77296     +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
77297     +   end;
MPRINT(EM_DIAGRAM):   end;
77298     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77299     +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
77300     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77301     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77302     +   end;
MPRINT(EM_DIAGRAM):   end;
77303     +end;
MPRINT(EM_DIAGRAM):   end;
77304     +
77305     +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
77306     +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
77307     +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
77308     +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
77309     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77310     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77311     +end;
MPRINT(EM_DIAGRAM):   end;
77312     +else do;
MPRINT(EM_DIAGRAM):   else do;
77313     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77314     +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
77315     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77316     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
77317     +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
77318     +   end;
MPRINT(EM_DIAGRAM):   end;
77319     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
77320     +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
77321     +   end;
MPRINT(EM_DIAGRAM):   end;
77322     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77323     +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
77324     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77325     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77326     +   end;
MPRINT(EM_DIAGRAM):   end;
77327     +end;
MPRINT(EM_DIAGRAM):   end;
77328     +
77329     +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
77330     +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
77331     +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
77332     +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
77333     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77334     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77335     +end;
MPRINT(EM_DIAGRAM):   end;
77336     +else do;
MPRINT(EM_DIAGRAM):   else do;
77337     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77338     +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
77339     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77340     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
77341     +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
77342     +   end;
MPRINT(EM_DIAGRAM):   end;
77343     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
77344     +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
77345     +   end;
MPRINT(EM_DIAGRAM):   end;
77346     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77347     +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
77348     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77349     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77350     +   end;
MPRINT(EM_DIAGRAM):   end;
77351     +end;
MPRINT(EM_DIAGRAM):   end;
77352     +
77353     +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
77354     +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
77355     +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
77356     +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
77357     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77358     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77359     +end;
MPRINT(EM_DIAGRAM):   end;
77360     +else do;
MPRINT(EM_DIAGRAM):   else do;
77361     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77362     +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
77363     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77364     +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
77365     +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
77366     +   end;
MPRINT(EM_DIAGRAM):   end;
77367     +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
77368     +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
77369     +   end;
MPRINT(EM_DIAGRAM):   end;
77370     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77371     +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
77372     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77373     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77374     +   end;
MPRINT(EM_DIAGRAM):   end;
77375     +end;
MPRINT(EM_DIAGRAM):   end;
77376     +
77377     +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
77378     +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
77379     +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
77380     +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
77381     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77382     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77383     +end;
MPRINT(EM_DIAGRAM):   end;
77384     +else do;
MPRINT(EM_DIAGRAM):   else do;
77385     +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
77386     +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
77387     +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77388     +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
77389     +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
77390     +   end;
MPRINT(EM_DIAGRAM):   end;
77391     +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
77392     +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
77393     +   end;
MPRINT(EM_DIAGRAM):   end;
77394     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77395     +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
77396     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77397     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77398     +   end;
MPRINT(EM_DIAGRAM):   end;
77399     +end;
MPRINT(EM_DIAGRAM):   end;
77400     +
77401     +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
77402     +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
77403     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
77404     +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
77405     +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
77406     +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
77407     +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
77408     +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
77409     +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
77410     +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
77411     +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
77412     +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
77413     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77414     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77415     +end;
MPRINT(EM_DIAGRAM):   end;
77416     +else do;
MPRINT(EM_DIAGRAM):   else do;
77417     +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
77418     +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
77419     +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77420     +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
77421     +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
77422     +   end;
MPRINT(EM_DIAGRAM):   end;
77423     +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
77424     +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
77425     +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
77426     +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
77427     +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
77428     +   end;
MPRINT(EM_DIAGRAM):   end;
77429     +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
77430     +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
77431     +   end;
MPRINT(EM_DIAGRAM):   end;
77432     +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
77433     +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
77434     +   end;
MPRINT(EM_DIAGRAM):   end;
77435     +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
77436     +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
77437     +   end;
MPRINT(EM_DIAGRAM):   end;
77438     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77439     +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
77440     +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
77441     +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
77442     +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
77443     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77444     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77445     +   end;
MPRINT(EM_DIAGRAM):   end;
77446     +end;
MPRINT(EM_DIAGRAM):   end;
77447     +
77448     +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
77449     +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
77450     +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
77451     +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
77452     +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
77453     +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
77454     +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
77455     +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
77456     +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
77457     +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
77458     +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
77459     +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
77460     +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
77461     +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
77462     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77463     +end;
MPRINT(EM_DIAGRAM):   end;
77464     +else do;
MPRINT(EM_DIAGRAM):   else do;
77465     +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
77466     +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
77467     +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
77468     +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
77469     +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
77470     +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
77471     +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
77472     +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
77473     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77474     +         end;
MPRINT(EM_DIAGRAM):   end;
77475     +         else do;
MPRINT(EM_DIAGRAM):   else do;
77476     +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
77477     +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
77478     +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77479     +            end;
MPRINT(EM_DIAGRAM):   end;
77480     +         end;
MPRINT(EM_DIAGRAM):   end;
77481     +      end;
MPRINT(EM_DIAGRAM):   end;
77482     +      else do;
MPRINT(EM_DIAGRAM):   else do;
77483     +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
77484     +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
77485     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77486     +         end;
MPRINT(EM_DIAGRAM):   end;
77487     +      end;
MPRINT(EM_DIAGRAM):   end;
77488     +   end;
MPRINT(EM_DIAGRAM):   end;
77489     +   else do;
MPRINT(EM_DIAGRAM):   else do;
77490     +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
77491     +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
77492     +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77493     +      end;
MPRINT(EM_DIAGRAM):   end;
77494     +      else do;
MPRINT(EM_DIAGRAM):   else do;
77495     +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
77496     +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
77497     +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
77498     +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
77499     +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
77500     +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
77501     +         end;
MPRINT(EM_DIAGRAM):   end;
77502     +      end;
MPRINT(EM_DIAGRAM):   end;
77503     +   end;
MPRINT(EM_DIAGRAM):   end;
77504     +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
77505     +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
77506     +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
77507     +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
77508     +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
77509     +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
77510     +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77511     +   end;
MPRINT(EM_DIAGRAM):   end;
77512     +end;
MPRINT(EM_DIAGRAM):   end;
77513     +
77514     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77515     +*** Checking missing input Interval
77516     +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
77517     +
77518     +IF NMISS(
77519     +   AcceptedCmpTotal ,
77520     +   Age ,
77521     +   Frq ,
77522     +   Income ,
77523     +   Kidhome ,
77524     +   MntFishProducts ,
77525     +   MntFruits ,
77526     +   MntGoldProds ,
77527     +   MntSweetProducts ,
77528     +   MonthsAsCustomer ,
77529     +   NumDealsPurchases ,
77530     +   NumWebVisitsMonth ,
77531     +   RFMstat ,
77532     +   RMntFrq ,
77533     +   Recency ,
77534     +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
77535     +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
77536     +
77537     +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
77538     +END;
MPRINT(EM_DIAGRAM):   END;
77539     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77540     +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
77541     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77542     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77543     +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
77544     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
77545     +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
77546     +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
77547     +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
77548     +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
77549     +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
77550     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
77551     +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
77552     +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
77553     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
77554     +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
77555     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
77556     +   S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
77557     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
77558     +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
77559     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
77560     +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
77561     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
77562     +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
77563     +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
77564     +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
77565     +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
77566     +END;
MPRINT(EM_DIAGRAM):   END;
77567     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77568     +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
77569     +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
77570     +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
77571     +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
77572     +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
77573     +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
77574     +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
77575     +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
77576     +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
77577     +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
77578     +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
77579     +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
77580     +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
77581     +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
77582     +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
77583     +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
77584     +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
77585     +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
77586     +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
77587     +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
77588     +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
77589     +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
77590     +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
77591     +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
77592     +   ELSE S_MonthsAsCustomer  =    -4.97258711890416 +     0.05902460910139 *
77593     +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.97258711890416 + 0.05902460910139 * 
MonthsAsCustomer ;
77594     +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
77595     +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
77596     +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
77597     +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
77598     +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
77599     +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
77600     +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
77601     +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
77602     +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
77603     +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
77604     +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
77605     +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
77606     +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
77607     +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
77608     +END;
MPRINT(EM_DIAGRAM):   END;
77609     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77610     +*** Writing the Node binary ;
MPRINT(EM_DIAGRAM):   *** Writing the Node binary ;
77611     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77612     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77613     +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
77614     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77615     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77616     +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
77617     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77618     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77619     +   H1x1_1  =    -0.39808302545964 * S_AcceptedCmpTotal
77620     +          +     -0.5932682979333 * S_Age  +    -2.09362067413126 * S_Frq
77621     +          +    -1.20621515343251 * S_Income  +       0.363305751087 *
77622     +        S_Kidhome  +     0.02736315573831 * S_MntFishProducts
77623     +          +     0.62551809528748 * S_MntFruits  +      0.6815005748355 *
77624     +        S_MntGoldProds  +    -0.14819082706475 * S_MntSweetProducts
77625     +          +     -0.6473961304074 * S_MonthsAsCustomer
77626     +          +     0.68960902951007 * S_NumDealsPurchases
77627     +          +    -0.03600585273268 * S_NumWebVisitsMonth
77628     +          +     0.45228404113456 * S_RFMstat  +     0.44947640704726 *
77629     +        S_RMntFrq  +    -0.37413569649471 * S_Recency
77630     +          +     0.84898068728085 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.39808302545964 * S_AcceptedCmpTotal + -0.5932682979333 * 
S_Age + -2.09362067413126 * S_Frq + -1.20621515343251 * S_Income + 0.363305751087 * S_Kidhome 
+ 0.02736315573831 * S_MntFishProducts + 0.62551809528748 * S_MntFruits + 0.6815005748355 * 
S_MntGoldProds + -0.14819082706475 * S_MntSweetProducts + -0.6473961304074 * 
S_MonthsAsCustomer + 0.68960902951007 * S_NumDealsPurchases + -0.03600585273268 * 
S_NumWebVisitsMonth + 0.45228404113456 * S_RFMstat + 0.44947640704726 * S_RMntFrq + 
-0.37413569649471 * S_Recency + 0.84898068728085 * S_Teenhome ;
77631     +   H1x1_2  =     0.27496114501753 * S_AcceptedCmpTotal
77632     +          +    -0.73313147330708 * S_Age  +     1.07757803287667 * S_Frq
77633     +          +     -0.4059441670097 * S_Income  +    -1.63907729859394 *
77634     +        S_Kidhome  +    -0.36081853150156 * S_MntFishProducts
77635     +          +     0.77724266147719 * S_MntFruits  +     0.42430298772992 *
77636     +        S_MntGoldProds  +    -0.23864099272279 * S_MntSweetProducts
77637     +          +    -0.70674764548268 * S_MonthsAsCustomer
77638     +          +     0.03761139203619 * S_NumDealsPurchases
77639     +          +    -0.69359662485747 * S_NumWebVisitsMonth
77640     +          +    -0.15158956986745 * S_RFMstat  +     0.85514526899451 *
77641     +        S_RMntFrq  +    -1.62720417424557 * S_Recency
77642     +          +    -0.36643380686105 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.27496114501753 * S_AcceptedCmpTotal + -0.73313147330708 * 
S_Age + 1.07757803287667 * S_Frq + -0.4059441670097 * S_Income + -1.63907729859394 * S_Kidhome 
+ -0.36081853150156 * S_MntFishProducts + 0.77724266147719 * S_MntFruits + 0.42430298772992 * 
S_MntGoldProds + -0.23864099272279 * S_MntSweetProducts + -0.70674764548268 * 
S_MonthsAsCustomer + 0.03761139203619 * S_NumDealsPurchases + -0.69359662485747 * 
S_NumWebVisitsMonth + -0.15158956986745 * S_RFMstat + 0.85514526899451 * S_RMntFrq + 
-1.62720417424557 * S_Recency + -0.36643380686105 * S_Teenhome ;
77643     +   H1x1_3  =    -0.16507220222111 * S_AcceptedCmpTotal
77644     +          +    -0.26012819806252 * S_Age  +     -0.0019823410557 * S_Frq
77645     +          +    -1.21735801839643 * S_Income  +     0.32645311615861 *
77646     +        S_Kidhome  +    -0.13429965223768 * S_MntFishProducts
77647     +          +     0.59132541762114 * S_MntFruits  +     0.23741184063267 *
77648     +        S_MntGoldProds  +    -0.01067575877498 * S_MntSweetProducts
77649     +          +    -0.47559913836984 * S_MonthsAsCustomer
77650     +          +    -0.26961781245749 * S_NumDealsPurchases
77651     +          +    -0.67017962977412 * S_NumWebVisitsMonth
77652     +          +    -0.04160330560857 * S_RFMstat  +     0.00788680751491 *
77653     +        S_RMntFrq  +     0.67120737584665 * S_Recency
77654     +          +     0.82745650921998 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.16507220222111 * S_AcceptedCmpTotal + -0.26012819806252 * 
S_Age + -0.0019823410557 * S_Frq + -1.21735801839643 * S_Income + 0.32645311615861 * S_Kidhome 
+ -0.13429965223768 * S_MntFishProducts + 0.59132541762114 * S_MntFruits + 0.23741184063267 * 
S_MntGoldProds + -0.01067575877498 * S_MntSweetProducts + -0.47559913836984 * 
S_MonthsAsCustomer + -0.26961781245749 * S_NumDealsPurchases + -0.67017962977412 * 
S_NumWebVisitsMonth + -0.04160330560857 * S_RFMstat + 0.00788680751491 * S_RMntFrq + 
0.67120737584665 * S_Recency + 0.82745650921998 * S_Teenhome ;
77655     +   H1x1_1  = H1x1_1  +     -0.8271029788913 * AcceptedCmp10
77656     +          +    -1.01090465942885 * AcceptedCmp20  +     0.03605950075563 *
77657     +        AcceptedCmp30  +    -0.09307341142556 * AcceptedCmp40
77658     +          +     0.62610050256806 * AcceptedCmp50  +     0.41010233889465 *
77659     +        Complain0  +     0.12756081707274 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.8271029788913 * AcceptedCmp10 + -1.01090465942885 * 
AcceptedCmp20 + 0.03605950075563 * AcceptedCmp30 + -0.09307341142556 * AcceptedCmp40 + 
0.62610050256806 * AcceptedCmp50 + 0.41010233889465 * Complain0 + 0.12756081707274 * 
HigherEducationBinary0 ;
77660     +   H1x1_2  = H1x1_2  +    -0.67784636659395 * AcceptedCmp10
77661     +          +    -0.41778348792892 * AcceptedCmp20  +     0.48982660230515 *
77662     +        AcceptedCmp30  +    -0.12586206274558 * AcceptedCmp40
77663     +          +     0.63440584081354 * AcceptedCmp50  +    -0.87232626288272 *
77664     +        Complain0  +     0.72412034576012 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.67784636659395 * AcceptedCmp10 + -0.41778348792892 
* AcceptedCmp20 + 0.48982660230515 * AcceptedCmp30 + -0.12586206274558 * AcceptedCmp40 + 
0.63440584081354 * AcceptedCmp50 + -0.87232626288272 * Complain0 + 0.72412034576012 * 
HigherEducationBinary0 ;
77665     +   H1x1_3  = H1x1_3  +     0.02909648889579 * AcceptedCmp10
77666     +          +     0.03783859252636 * AcceptedCmp20  +     0.79777546308675 *
77667     +        AcceptedCmp30  +     0.30802577452279 * AcceptedCmp40
77668     +          +     0.49362015992329 * AcceptedCmp50  +     0.01441743512493 *
77669     +        Complain0  +     0.07324232009067 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.02909648889579 * AcceptedCmp10 + 0.03783859252636 * 
AcceptedCmp20 + 0.79777546308675 * AcceptedCmp30 + 0.30802577452279 * AcceptedCmp40 + 
0.49362015992329 * AcceptedCmp50 + 0.01441743512493 * Complain0 + 0.07324232009067 * 
HigherEducationBinary0 ;
77670     +   H1x1_1  = H1x1_1  +    -0.34545867357294 * Education2n_Cycle
77671     +          +    -0.33162716240606 * EducationBasic  +    -0.53276067461426 *
77672     +        EducationGraduation  +     0.46172475127934 * EducationMaster
77673     +          +    -0.18858032329482 * Marital_StatusDivorced
77674     +          +     0.16067956508072 * Marital_StatusMarried
77675     +          +    -0.90926406046237 * Marital_StatusSingle
77676     +          +     0.39582771938147 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.34545867357294 * Education2n_Cycle + 
-0.33162716240606 * EducationBasic + -0.53276067461426 * EducationGraduation + 
0.46172475127934 * EducationMaster + -0.18858032329482 * Marital_StatusDivorced + 
0.16067956508072 * Marital_StatusMarried + -0.90926406046237 * Marital_StatusSingle + 
0.39582771938147 * Marital_StatusTogether ;
77677     +   H1x1_2  = H1x1_2  +     0.26570241340865 * Education2n_Cycle
77678     +          +     0.12600765069726 * EducationBasic  +      -0.847209942338 *
77679     +        EducationGraduation  +    -0.74629011053947 * EducationMaster
77680     +          +     0.71998738170149 * Marital_StatusDivorced
77681     +          +    -1.53543515752013 * Marital_StatusMarried
77682     +          +     0.44068743694663 * Marital_StatusSingle
77683     +          +    -1.12841512916404 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + 0.26570241340865 * Education2n_Cycle + 
0.12600765069726 * EducationBasic + -0.847209942338 * EducationGraduation + -0.74629011053947 
* EducationMaster + 0.71998738170149 * Marital_StatusDivorced + -1.53543515752013 * 
Marital_StatusMarried + 0.44068743694663 * Marital_StatusSingle + -1.12841512916404 * 
Marital_StatusTogether ;
77684     +   H1x1_3  = H1x1_3  +    -0.01340630624265 * Education2n_Cycle
77685     +          +    -0.00246599258364 * EducationBasic  +     -0.6512097106248 *
77686     +        EducationGraduation  +     0.11252156068047 * EducationMaster
77687     +          +    -0.31683932084863 * Marital_StatusDivorced
77688     +          +     0.17674162427585 * Marital_StatusMarried
77689     +          +    -0.67064017247711 * Marital_StatusSingle
77690     +          +     0.45179875802441 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + -0.01340630624265 * Education2n_Cycle + 
-0.00246599258364 * EducationBasic + -0.6512097106248 * EducationGraduation + 0.11252156068047 
* EducationMaster + -0.31683932084863 * Marital_StatusDivorced + 0.17674162427585 * 
Marital_StatusMarried + -0.67064017247711 * Marital_StatusSingle + 0.45179875802441 * 
Marital_StatusTogether ;
77691     +   H1x1_1  =     0.41282679514875 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.41282679514875 + H1x1_1 ;
77692     +   H1x1_2  =     -2.3217450621203 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -2.3217450621203 + H1x1_2 ;
77693     +   H1x1_3  =     1.54125537540943 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.54125537540943 + H1x1_3 ;
77694     +   H1x1_4  = 0;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0;
77695     +   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H1x1_1 , H1x1_2 , H1x1_3 , H1x1_4 );
77696     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77697     +   H1x1_1  = EXP(H1x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_1 = EXP(H1x1_1 - _MAX_);
77698     +   _SUM_ = _SUM_ + H1x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_1 ;
77699     +   H1x1_2  = EXP(H1x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_2 = EXP(H1x1_2 - _MAX_);
77700     +   _SUM_ = _SUM_ + H1x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_2 ;
77701     +   H1x1_3  = EXP(H1x1_3  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_3 = EXP(H1x1_3 - _MAX_);
77702     +   _SUM_ = _SUM_ + H1x1_3 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_3 ;
77703     +   H1x1_4  = EXP(H1x1_4  - _MAX_);
MPRINT(EM_DIAGRAM):   H1x1_4 = EXP(H1x1_4 - _MAX_);
77704     +   _SUM_ = _SUM_ + H1x1_4 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H1x1_4 ;
77705     +   H1x1_1  = H1x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 / _SUM_;
77706     +   H1x1_2  = H1x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 / _SUM_;
77707     +   H1x1_3  = H1x1_3  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 / _SUM_;
77708     +   H1x1_4  = H1x1_4  / _SUM_;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 / _SUM_;
77709     +END;
MPRINT(EM_DIAGRAM):   END;
77710     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77711     +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
77712     +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
77713     +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
77714     +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
77715     +END;
MPRINT(EM_DIAGRAM):   END;
77716     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77717     +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
77718     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77719     +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
77720     +   P_DepVar1  =      4.5760049074953 * H1x1_1  +     3.17609897996504 * H1x1_2
77721     +          +    -7.59788826096155 * H1x1_3  +      2.3561834107573 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.5760049074953 * H1x1_1 + 3.17609897996504 * H1x1_2 + 
-7.59788826096155 * H1x1_3 + 2.3561834107573 * H1x1_4 ;
77722     +   P_DepVar1  =     0.78534695136367 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.78534695136367 + P_DepVar1 ;
77723     +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
77724     +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
77725     +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
77726     +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
77727     +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
77728     +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
77729     +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
77730     +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
77731     +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
77732     +END;
MPRINT(EM_DIAGRAM):   END;
77733     +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
77734     +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
77735     +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
77736     +END;
MPRINT(EM_DIAGRAM):   END;
77737     +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
77738     +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
77739     +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
77740     +END;
MPRINT(EM_DIAGRAM):   END;
77741     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77742     +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
77743     +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
77744     +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
77745     +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
77746     +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
77747     +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
77748     +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
77749     +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
77750     +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
77751     +END;
MPRINT(EM_DIAGRAM):   END;
77752     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
77753     +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
77754     +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
77755     +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
77756      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
77757      quit;
77758      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
77759      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
77760      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
77761      retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
77762      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
77763      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77764      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
77765      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77766      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77767      proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME 
CREATOR);
77768      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77769      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77770      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77771      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
77772      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
77773      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77774      proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
77775      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

77776      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
77777      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77778      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77779      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77780      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
77781      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77782      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77783      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
77784      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
77784    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1075 rows and 5 columns.

77785      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77786      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
77787      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1075 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1075 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77788      filename _pref
77788    ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
77789      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
77790      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
77791     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77792     +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
77793     +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
77794     +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
77795     +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
77796     +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
77797      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
77798      quit;
77799      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
77800      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
77801      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
77802      retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
77803      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
77804      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77805      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
77806      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77807      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77808      proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
77809      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77810      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77811      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77812      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
77813      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
77814      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77815      proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
77816      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

77817      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
77818      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77819      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77820      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77821      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
77822      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77823      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77824      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
77825      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
77825    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

77826      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77827      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
77828      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77829      filename _pref
77829    ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
77830      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
77831      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
77832     +
77833     +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
77834     +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
77834    !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
77835     +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
77836     +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
77837     +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
77838     +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
77839     +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
77840      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
77841      quit;
77842      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
77843      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
77844      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
77845      retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
77846      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
77847      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77848      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
77849      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77850      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77851      proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
77852      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77853      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77854      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77855      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
77856      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
77857      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77858      proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
77859      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77860      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
77861      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77862      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77863      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77864      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
77865      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77866      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77867      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
77868      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
77868    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

77869      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77870      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
77871      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1118 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77872      filename _pref
77872    ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
77873      proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
77874      %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
77875     +
77876     +
77877     +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
77878     +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
77879     +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
77880     +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
77881     +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
77882     +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77883     +
77884     +
77885     +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
77886     +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
77887     +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
77888     +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
77889     +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
77890     +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77891     +
77892     +
77893     +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
77894     +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
77895     +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
77896     +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
77897     +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
77898     +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77899     +
77900     +
77901     +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
77902     +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
77903     +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
77904     +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
77905     +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
77906     +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77907     +
77908     +
77909     +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
77910     +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
77911     +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
77912     +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
77913     +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
77914     +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77915     +
77916     +
77917     +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
77918     +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
77919     +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
77920     +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
77921     +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
77922     +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77923     +
77924     +
77925     +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
77926     +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
77927     +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
77928     +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
77929     +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
77930     +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77931     +
77932     +
77933     +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
77934     +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
77935     +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
77936     +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
77937     +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
77938     +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
77939     +if
77940     +_FILTERNORM1 not in ( '.')
77941     + and
77942     +_FILTERNORM2 not in ( '.')
77943     + and
77944     +_FILTERNORM3 not in ( '.')
77945     + and
77946     +_FILTERNORM4 not in ( '.')
77947     + and
77948     +_FILTERNORM5 not in ( '.')
77949     + and
77950     +_FILTERNORM6 not in ( '.')
77951     + and
77952     +_FILTERNORM7 not in ( ' ')
77953     + and
77954     +_FILTERNORM8 not in ( ' ')
77955     +and
77956     +( Dt_Customer ne .)
77957     +and ( Income ne . and (Income<=107000))
77958     +and ( Kidhome ne .)
77959     +and ( MntFishProducts ne .)
77960     +and ( MntFruits ne .)
77961     +and ( MntGoldProds ne .)
77962     +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
77963     +and ( MntSweetProducts ne .)
77964     +and ( MntWines ne .)
77965     +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
77966     +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
77967     +and ( NumStorePurchases ne .)
77968     +and ( NumWebPurchases ne .)
77969     +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
77970     +and ( Recency ne .)
77971     +and ( Teenhome ne .)
77972     +and ( Year_Birth ne .)
77973     +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
77974     +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
77975     +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
77976     +end;
MPRINT(EM_DIAGRAM):   end;
77977     +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
77978     +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
77979      run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
77980      quit;
77981      filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
77982      data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
77983      length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
77984      retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
77985      set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
77986      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77987      proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
77988      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77989      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77990      proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
77991      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
77992      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

77993      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
77994      length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
77995      set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
77996      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

77997      proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
77998      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.36 seconds
      cpu time            0.04 seconds
      

77999      proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
78000      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78001      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78002      data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
78003      merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
78004      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
78005      run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78006      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
78007      create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
78007    ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

78008      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

78009      proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
78010      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1184 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78011      %macro varDept(fcmpdata=,id=);
78012      %global nobs&id scoreFlag&id;
78013      %let scoreFlag&id = 0;
78014      %if &id=1 or ^&fcmpStart %then %do;
78015      proc sort data=&fcmpdata out=_temp&id nodupkey;
78016      by NAME;
78017      where id=&id and LHS in( %let j=1;
78018      %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
78019      %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
78020      "&var" %let j = %eval(&j+1);
78021      %end;
78022      );
78023      run;
78024      %let dsid = %sysfunc(open(_temp&id));
78025      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78026      %let dsid = %sysfunc(close(&dsid));
78027      %if &&nobs&id %then %do;
78028      %let scoreFlag&id = 1;
78029      %let fcmpStart = 1;
78030      %end;
78031      %else %let fcmpStart = 0;
78032      %end;
78033      %else %do;
78034      proc sort data=&fcmpdata out=_tempid;
78035      where id=&id;
78036      by LHS;
78037      run;
78038      %let dsid = %sysfunc(open(_tempid));
78039      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78040      %let dsid = %sysfunc(close(&dsid));
78041      %if ^&&nobs&id %then %do;
78042      proc datasets lib=work nolist;
78043      delete _tempid;
78044      run;
78045      quit;
78046      %end;
78047      %else %do;
78048      data _tempAll;
78049      set %let j=%eval(&id-1);
78050      %do x=1 %to &j;
78051      %if &&nobs&x %then %do;
78052      _temp&x %end;
78053      %end;
78054      ;
78055      run;
78056      proc sql;
78057      create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
78057    ! work._tempid p2 where p.name=p2.lhs;
78058      quit;
78059      data _temp&id;
78060      set _temp&id;
78061      where LHS ne '' and NAME ne '' and Node ne '';
78062      run;
78063      proc datasets lib=work nolist;
78064      delete _tempAll;
78065      run;
78066      %let dsid = %sysfunc(open(_temp&id));
78067      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78068      %let dsid = %sysfunc(close(&dsid));
78069      %if ^&&nobs&id %then %do;
78070      proc datasets lib=work nolist;
78071      delete _temp&id;
78072      run;
78073      quit;
78074      %end;
78075      %else %do;
78076      %let scoreFlag&id = 1;
78077      data _temp&id;
78078      set _temp&id;
78079      where LHS ne NAME and node ne '';
78080      run;
78081      %let dsid = %sysfunc(open(_temp&id));
78082      %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
78083      %let dsid = %sysfunc(close(&dsid));
78084      %if ^&&nobs&id %then %do;
78085      proc datasets lib=work nolist;
78086      delete _temp&id;
78087      run;
78088      quit;
78089      %end;
78090      %else %do;
78091      proc sort data=_temp&id nodupkey;
78092      by LHS NAME;
78093      run;
78094      %end;
78095      %end;
78096      %end;
78097      %end;
78098      %mend varDept;
78099      %macro optCode(outdata=fcmpdata);
78100      %global fcmpStart;
78101      %let fcmpStart = 0;
78102      %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
78103      %let NumNodes=9;
78104      %do k=1 %to &NumNodes;
78105      %vardept(fcmpdata=&outdata, id=&k);
78106      %end;
78107      %mend optCode;
78108      %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 118 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 87 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 33 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 66 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

78109      data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
78110      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
78111      where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
78112      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78113      data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
78114      set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
78115      where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
78116      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78117      proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
78118      create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
78118    ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

78119      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

78120      data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
78121      set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
78122      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78123      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
78124      * Ensmbl24: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing metadata for TRAIN data;
78125      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL24_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl24_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl24_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl24_TRAIN out=WORK.M3WYZIDX noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WYZIDX;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WYZIDX(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WYZIDX;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WYZIDX;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0VCU8ZW NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1XHZM6_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   set WORK.M0VCU8ZW;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl24";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl24";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
78445      data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
78446      set EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl24_EMINFO;
78447      where DATA='Ensmbl24' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl24' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
78448      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_EMINFO.
      WHERE (DATA='Ensmbl24') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78449      data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl24_EMINFO;
78450      length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
78451      input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
78452      cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
78456      run;
78457      data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMINFO;
78458      set EMWS8.Ensmbl24_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl24_EMINFO WORK.MODELTEMP_INFO;
78459      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

78460      proc sort data = EMWS8.Ensmbl24_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl24_EMINFO NOTHREADS;
78461      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78462      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78463      proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
78464      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78465      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78466      proc sort data = EMWS8.Ensmbl24_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl24_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
78467      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78468      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

78469      data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMINFO;
78470      merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
78471      by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
78472      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

78473      proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
78474      delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
78475      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
78476      quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL24_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL24_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
