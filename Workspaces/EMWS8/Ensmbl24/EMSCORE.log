MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21.11 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                21.11 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0PXYFKC 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0PXYFKC new;
MPRINT(EM_DIAGRAM):   run;
256654     filename emflow
256654   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring NEURAL40_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256655     *------------------------------------------------------------*;
256656     * Ensmbl24: Scoring NEURAL40_TRAIN data;
256657     *------------------------------------------------------------*;
256658     data EMWS8.Ensmbl24_TRAIN
256659     / view=EMWS8.Ensmbl24_TRAIN
256660     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_TRAIN / view=EMWS8.Ensmbl24_TRAIN ;
256661     set EMWS8.Neural40_TRAIN
256662     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_TRAIN ;
256663     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas.
256664    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256665    +* Ensmbl24: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Combine model for DepVar;
256666    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256667    +* Ensmbl24: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 1 of 7;
256668    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256669    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256670    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
256671    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
256672    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
256673    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256674    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256675    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
256676    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
256677    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
256678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256679    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256680    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
256681    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
256682    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
256683    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256684    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256685    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
256686    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
256687    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
256688    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256689    +
256690    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
256691    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
256691   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
256692    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
256693    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
256694    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
256695    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
256696    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
256697    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256698    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
256699    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
256700    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
256701    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256702    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256703    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
256704    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256705    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
256706    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
256707    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
256708    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256709    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
256710    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
256711    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
256712    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256713    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256714    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
256715    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
256716    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
256717    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256718    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256719    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
256720    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
256721    +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
256722    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
256723    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
256724    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
256725    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
256726    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
256727    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
256728    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
256729    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
256730    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
256731    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
256732    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
256733    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
256734    +LENGTH _WARN_ $4
256735    +      F_DepVar  $ 12
256736    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
256737    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
256738    +
256739    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
256740    +
256741    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
256742    +
256743    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
256744    +
256745    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
256746    +
256747    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
256748    +
256749    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
256750    +
256751    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
256752    +
256753    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
256754    +
256755    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
256756    +
256757    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
256758    +
256759    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
256760    +
256761    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
256762    +
256763    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
256764    +
256765    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
256766    +
256767    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
256768    +
256769    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
256770    +
256771    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
256772    +
256773    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
256774    +
256775    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
256776    +
256777    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
256778    +
256779    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
256780    +
256781    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
256782    +
256783    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
256784    +
256785    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
256786    +
256787    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
256788    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
256789    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
256790    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
256791    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
256792    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
256793    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
256794    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
256795    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
256796    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
256797    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
256798    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
256799    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
256800    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
256801    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
256802    +end;
MPRINT(EM_DIAGRAM):   end;
256803    +else do;
MPRINT(EM_DIAGRAM):   else do;
256804    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
256805    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
256806    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
256807    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
256808    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
256809    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
256810    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
256811    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
256812    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
256813    +         end;
MPRINT(EM_DIAGRAM):   end;
256814    +         else do;
MPRINT(EM_DIAGRAM):   else do;
256815    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
256816    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
256817    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
256818    +            end;
MPRINT(EM_DIAGRAM):   end;
256819    +         end;
MPRINT(EM_DIAGRAM):   end;
256820    +      end;
MPRINT(EM_DIAGRAM):   end;
256821    +      else do;
MPRINT(EM_DIAGRAM):   else do;
256822    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
256823    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
256824    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
256825    +         end;
MPRINT(EM_DIAGRAM):   end;
256826    +      end;
MPRINT(EM_DIAGRAM):   end;
256827    +   end;
MPRINT(EM_DIAGRAM):   end;
256828    +   else do;
MPRINT(EM_DIAGRAM):   else do;
256829    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
256830    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
256831    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
256832    +      end;
MPRINT(EM_DIAGRAM):   end;
256833    +      else do;
MPRINT(EM_DIAGRAM):   else do;
256834    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
256835    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
256836    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
256837    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
256838    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
256839    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
256840    +         end;
MPRINT(EM_DIAGRAM):   end;
256841    +      end;
MPRINT(EM_DIAGRAM):   end;
256842    +   end;
MPRINT(EM_DIAGRAM):   end;
256843    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
256844    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
256845    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
256846    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
256847    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
256848    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
256849    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
256850    +   end;
MPRINT(EM_DIAGRAM):   end;
256851    +end;
MPRINT(EM_DIAGRAM):   end;
256852    +
256853    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256854    +*** Checking missing input Interval
256855    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
256856    +
256857    +IF NMISS(
256858    +   AcceptedCmpTotal ,
256859    +   Frq ,
256860    +   Mnt ,
256861    +   MntMeatProducts ,
256862    +   NumCatalogPurchases ,
256863    +   NumDealsPurchases ,
256864    +   NumWebVisitsMonth ,
256865    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
256866    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
256867    +
256868    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
256869    +END;
MPRINT(EM_DIAGRAM):   END;
256870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256871    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
256872    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256873    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
256874    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
256875    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
256876    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
256877    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
256878    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
256879    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
256880    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
256881    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
256882    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
256883    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
256884    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
256885    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
256886    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
256887    +END;
MPRINT(EM_DIAGRAM):   END;
256888    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
256889    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
256890    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
256891    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
256892    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
256893    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
256894    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
256895    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
256896    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
256897    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
256898    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
256899    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
256900    +   ELSE S_NumCatalogPurchases
256901    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
256902    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
256903    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
256904    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
256905    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
256906    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
256907    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
256908    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
256909    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
256910    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
256911    +END;
MPRINT(EM_DIAGRAM):   END;
256912    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256913    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
256914    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256915    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256916    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
256917    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256918    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
256919    +   H11  =    -0.50937067326512 * S_AcceptedCmpTotal  +     0.59153604997173 *
256920    +        S_Frq  +     0.35109708191283 * S_Mnt  +    -0.54183123684873 *
256921    +        S_MntMeatProducts  +    -0.50968421326068 * S_NumCatalogPurchases
256922    +          +    -0.19046126117019 * S_NumDealsPurchases
256923    +          +    -0.51033119597715 * S_NumWebVisitsMonth
256924    +          +     0.81837864997249 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.50937067326512 * S_AcceptedCmpTotal + 0.59153604997173 * S_Frq 
+ 0.35109708191283 * S_Mnt + -0.54183123684873 * S_MntMeatProducts + -0.50968421326068 * 
S_NumCatalogPurchases + -0.19046126117019 * S_NumDealsPurchases + -0.51033119597715 * 
S_NumWebVisitsMonth + 0.81837864997249 * S_Recency ;
256925    +   H12  =     0.02025228046339 * S_AcceptedCmpTotal  +     0.99930163787509 *
256926    +        S_Frq  +     1.71070447604488 * S_Mnt  +     0.00262288180651 *
256927    +        S_MntMeatProducts  +    -0.26040107336488 * S_NumCatalogPurchases
256928    +          +     1.79245188553632 * S_NumDealsPurchases
256929    +          +     0.26061762777338 * S_NumWebVisitsMonth
256930    +          +     0.08976701277133 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.02025228046339 * S_AcceptedCmpTotal + 0.99930163787509 * S_Frq + 
1.71070447604488 * S_Mnt + 0.00262288180651 * S_MntMeatProducts + -0.26040107336488 * 
S_NumCatalogPurchases + 1.79245188553632 * S_NumDealsPurchases + 0.26061762777338 * 
S_NumWebVisitsMonth + 0.08976701277133 * S_Recency ;
256931    +   H13  =       0.104381332746 * S_AcceptedCmpTotal  +    -1.51764539772771 *
256932    +        S_Frq  +     0.93148616742855 * S_Mnt  +     2.93767108708116 *
256933    +        S_MntMeatProducts  +     0.79051284359814 * S_NumCatalogPurchases
256934    +          +     0.49339750797451 * S_NumDealsPurchases
256935    +          +    -0.25657630888957 * S_NumWebVisitsMonth
256936    +          +    -0.02783592802322 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.104381332746 * S_AcceptedCmpTotal + -1.51764539772771 * S_Frq + 
0.93148616742855 * S_Mnt + 2.93767108708116 * S_MntMeatProducts + 0.79051284359814 * 
S_NumCatalogPurchases + 0.49339750797451 * S_NumDealsPurchases + -0.25657630888957 * 
S_NumWebVisitsMonth + -0.02783592802322 * S_Recency ;
256937    +   H14  =     0.54135833698612 * S_AcceptedCmpTotal  +     1.35730431022222 *
256938    +        S_Frq  +     0.77200942468842 * S_Mnt  +    -1.51698500454254 *
256939    +        S_MntMeatProducts  +    -0.62605649177998 * S_NumCatalogPurchases
256940    +          +    -0.20841011025614 * S_NumDealsPurchases
256941    +          +    -0.95976462163535 * S_NumWebVisitsMonth
256942    +          +    -0.85153512604579 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.54135833698612 * S_AcceptedCmpTotal + 1.35730431022222 * S_Frq + 
0.77200942468842 * S_Mnt + -1.51698500454254 * S_MntMeatProducts + -0.62605649177998 * 
S_NumCatalogPurchases + -0.20841011025614 * S_NumDealsPurchases + -0.95976462163535 * 
S_NumWebVisitsMonth + -0.85153512604579 * S_Recency ;
256943    +   H15  =     0.45598292592982 * S_AcceptedCmpTotal  +     0.62149856604856 *
256944    +        S_Frq  +    -0.19094507833451 * S_Mnt  +     0.31024365368678 *
256945    +        S_MntMeatProducts  +     0.43336537836455 * S_NumCatalogPurchases
256946    +          +    -0.79330545518211 * S_NumDealsPurchases
256947    +          +     0.31692653945914 * S_NumWebVisitsMonth
256948    +          +    -0.82721510615104 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.45598292592982 * S_AcceptedCmpTotal + 0.62149856604856 * S_Frq + 
-0.19094507833451 * S_Mnt + 0.31024365368678 * S_MntMeatProducts + 0.43336537836455 * 
S_NumCatalogPurchases + -0.79330545518211 * S_NumDealsPurchases + 0.31692653945914 * 
S_NumWebVisitsMonth + -0.82721510615104 * S_Recency ;
256949    +   H11  = H11  +    -0.25100863467838 * Marital_StatusDivorced
256950    +          +     0.15562142019257 * Marital_StatusMarried
256951    +          +    -0.11924929825992 * Marital_StatusSingle
256952    +          +     0.19445161712576 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25100863467838 * Marital_StatusDivorced + 
0.15562142019257 * Marital_StatusMarried + -0.11924929825992 * Marital_StatusSingle + 
0.19445161712576 * Marital_StatusTogether ;
256953    +   H12  = H12  +     0.58193215591516 * Marital_StatusDivorced
256954    +          +     0.27485963958922 * Marital_StatusMarried
256955    +          +    -0.46136322561544 * Marital_StatusSingle
256956    +          +     1.17785849262888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58193215591516 * Marital_StatusDivorced + 0.27485963958922 
* Marital_StatusMarried + -0.46136322561544 * Marital_StatusSingle + 1.17785849262888 * 
Marital_StatusTogether ;
256957    +   H13  = H13  +    -0.55576156297846 * Marital_StatusDivorced
256958    +          +     0.18663773247842 * Marital_StatusMarried
256959    +          +    -0.14692184711639 * Marital_StatusSingle
256960    +          +     0.40795003682635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.55576156297846 * Marital_StatusDivorced + 
0.18663773247842 * Marital_StatusMarried + -0.14692184711639 * Marital_StatusSingle + 
0.40795003682635 * Marital_StatusTogether ;
256961    +   H14  = H14  +    -1.70154958647134 * Marital_StatusDivorced
256962    +          +     -0.0143065674831 * Marital_StatusMarried
256963    +          +     0.13491720981006 * Marital_StatusSingle
256964    +          +     0.65058537454476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.70154958647134 * Marital_StatusDivorced + 
-0.0143065674831 * Marital_StatusMarried + 0.13491720981006 * Marital_StatusSingle + 
0.65058537454476 * Marital_StatusTogether ;
256965    +   H15  = H15  +    -0.57735977480465 * Marital_StatusDivorced
256966    +          +    -1.18521635425485 * Marital_StatusMarried
256967    +          +     1.27858890561049 * Marital_StatusSingle
256968    +          +    -0.68308863502606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.57735977480465 * Marital_StatusDivorced + 
-1.18521635425485 * Marital_StatusMarried + 1.27858890561049 * Marital_StatusSingle + 
-0.68308863502606 * Marital_StatusTogether ;
256969    +   H11  =     0.91898399777449 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91898399777449 + H11 ;
256970    +   H12  =    -0.65172531168643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.65172531168643 + H12 ;
256971    +   H13  =     2.21950020718323 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.21950020718323 + H13 ;
256972    +   H14  =     0.94167989308741 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.94167989308741 + H14 ;
256973    +   H15  =    -2.75049414690283 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.75049414690283 + H15 ;
256974    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
256975    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
256976    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
256977    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
256978    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
256979    +END;
MPRINT(EM_DIAGRAM):   END;
256980    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
256981    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
256982    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
256983    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
256984    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
256985    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
256986    +END;
MPRINT(EM_DIAGRAM):   END;
256987    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256988    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
256989    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
256990    +
256991    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
256992    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
256993    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
256994    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
256995    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
256996    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
256997    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
256998    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
256999    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
257000    +end;
MPRINT(EM_DIAGRAM):   end;
257001    +else do;
MPRINT(EM_DIAGRAM):   else do;
257002    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
257003    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
257004    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
257005    +   end;
MPRINT(EM_DIAGRAM):   end;
257006    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
257007    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
257008    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
257009    +   end;
MPRINT(EM_DIAGRAM):   end;
257010    +   else do;
MPRINT(EM_DIAGRAM):   else do;
257011    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
257012    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
257013    +   end;
MPRINT(EM_DIAGRAM):   end;
257014    +end;
MPRINT(EM_DIAGRAM):   end;
257015    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257016    +   P_DepVar1  =    -7.73278760171706 * H11  +    -1.81420899061277 * H12
257017    +          +      7.8974780725891 * H13  +    -2.47430312661533 * H14
257018    +          +       3.637554312671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.73278760171706 * H11 + -1.81420899061277 * H12 + 
7.8974780725891 * H13 + -2.47430312661533 * H14 + 3.637554312671 * H15 ;
257019    +   P_DepVar1  =    -2.27177312353398 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.27177312353398 + P_DepVar1 ;
257020    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
257021    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
257022    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
257023    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
257024    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
257025    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
257026    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
257027    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
257028    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
257029    +END;
MPRINT(EM_DIAGRAM):   END;
257030    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257031    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
257032    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
257033    +END;
MPRINT(EM_DIAGRAM):   END;
257034    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
257035    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
257036    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
257037    +END;
MPRINT(EM_DIAGRAM):   END;
257038    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
257039    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
257040    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
257041    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
257042    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
257043    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
257044    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
257045    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257046    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
257047    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257048    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
257049    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
257050    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
257051    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
257052    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
257053    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
257054    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
257055    +END;
MPRINT(EM_DIAGRAM):   END;
257056    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
257057    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
257058    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
257059    +drop
257060    +H11
257061    +H12
257062    +H13
257063    +H14
257064    +H15
257065    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
257066    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
257067    +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
257068    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257069    +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
257070    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257071    +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
257072    +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
257073    +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
257074    +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
257075    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257076    +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
257077    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257078    +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
257079    +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
257080    +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
257081    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257082    +* Ensmbl24: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 2 of 7;
257083    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257084    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257085    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
257086    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
257087    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
257088    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257089    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
257090    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
257091    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
257092    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
257093    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
257094    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
257095    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
257096    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
257097    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
257098    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
257099    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
257100    +LENGTH _WARN_ $4
257101    +      F_DepVar  $ 12
257102    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
257103    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
257104    +
257105    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
257106    +
257107    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
257108    +
257109    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
257110    +
257111    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
257112    +
257113    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
257114    +
257115    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
257116    +
257117    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
257118    +
257119    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
257120    +
257121    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
257122    +
257123    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
257124    +
257125    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
257126    +
257127    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
257128    +
257129    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
257130    +
257131    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
257132    +
257133    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
257134    +
257135    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
257136    +
257137    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
257138    +
257139    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
257140    +
257141    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
257142    +
257143    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
257144    +
257145    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
257146    +
257147    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
257148    +
257149    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
257150    +
257151    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
257152    +
257153    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
257154    +
257155    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
257156    +
257157    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
257158    +
257159    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
257160    +
257161    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
257162    +
257163    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
257164    +
257165    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
257166    +
257167    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
257168    +
257169    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
257170    +
257171    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
257172    +
257173    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
257174    +
257175    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
257176    +
257177    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
257178    +
257179    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
257180    +
257181    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
257182    +
257183    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
257184    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
257185    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
257186    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
257187    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
257188    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
257189    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
257190    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
257191    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
257192    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
257193    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
257194    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
257195    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
257196    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
257197    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
257198    +end;
MPRINT(EM_DIAGRAM):   end;
257199    +else do;
MPRINT(EM_DIAGRAM):   else do;
257200    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
257201    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
257202    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
257203    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
257204    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
257205    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
257206    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
257207    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
257208    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257209    +         end;
MPRINT(EM_DIAGRAM):   end;
257210    +         else do;
MPRINT(EM_DIAGRAM):   else do;
257211    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
257212    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
257213    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257214    +            end;
MPRINT(EM_DIAGRAM):   end;
257215    +         end;
MPRINT(EM_DIAGRAM):   end;
257216    +      end;
MPRINT(EM_DIAGRAM):   end;
257217    +      else do;
MPRINT(EM_DIAGRAM):   else do;
257218    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
257219    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
257220    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257221    +         end;
MPRINT(EM_DIAGRAM):   end;
257222    +      end;
MPRINT(EM_DIAGRAM):   end;
257223    +   end;
MPRINT(EM_DIAGRAM):   end;
257224    +   else do;
MPRINT(EM_DIAGRAM):   else do;
257225    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
257226    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
257227    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257228    +      end;
MPRINT(EM_DIAGRAM):   end;
257229    +      else do;
MPRINT(EM_DIAGRAM):   else do;
257230    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
257231    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
257232    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
257233    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
257234    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
257235    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257236    +         end;
MPRINT(EM_DIAGRAM):   end;
257237    +      end;
MPRINT(EM_DIAGRAM):   end;
257238    +   end;
MPRINT(EM_DIAGRAM):   end;
257239    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
257240    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
257241    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
257242    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
257243    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
257244    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
257245    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
257246    +   end;
MPRINT(EM_DIAGRAM):   end;
257247    +end;
MPRINT(EM_DIAGRAM):   end;
257248    +
257249    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257250    +*** Checking missing input Interval
257251    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
257252    +
257253    +IF NMISS(
257254    +   AcceptedCmpTotal ,
257255    +   Frq ,
257256    +   Mnt ,
257257    +   MntMeatProducts ,
257258    +   NumCatalogPurchases ,
257259    +   NumDealsPurchases ,
257260    +   NumWebVisitsMonth ,
257261    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
257262    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
257263    +
257264    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
257265    +END;
MPRINT(EM_DIAGRAM):   END;
257266    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257267    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
257268    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257269    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257270    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
257271    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
257272    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
257273    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
257274    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
257275    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
257276    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
257277    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
257278    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
257279    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
257280    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
257281    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
257282    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
257283    +END;
MPRINT(EM_DIAGRAM):   END;
257284    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257285    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
257286    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
257287    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
257288    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
257289    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
257290    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
257291    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
257292    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
257293    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
257294    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
257295    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
257296    +   ELSE S_NumCatalogPurchases
257297    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
257298    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
257299    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
257300    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
257301    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
257302    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
257303    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
257304    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
257305    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
257306    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
257307    +END;
MPRINT(EM_DIAGRAM):   END;
257308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257309    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
257310    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257311    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257312    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
257313    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257314    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257315    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
257316    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
257317    +          +     3.02405267314398 * S_MntMeatProducts
257318    +          +     0.25422172488707 * S_NumCatalogPurchases
257319    +          +     0.25977266371328 * S_NumDealsPurchases
257320    +          +    -0.26865365728773 * S_NumWebVisitsMonth
257321    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
257322    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
257323    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
257324    +          +    -0.64419071408502 * S_MntMeatProducts
257325    +          +    -0.49060224303044 * S_NumCatalogPurchases
257326    +          +    -0.04840762943457 * S_NumDealsPurchases
257327    +          +     -0.7656247386051 * S_NumWebVisitsMonth
257328    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
257329    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
257330    +          +    -0.05888536499281 * Marital_StatusMarried
257331    +          +    -0.22627441829205 * Marital_StatusSingle
257332    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
257333    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
257334    +          +     0.82536605771339 * Marital_StatusMarried
257335    +          +    -0.97196770004098 * Marital_StatusSingle
257336    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
257337    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
257338    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
257339    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
257340    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
257341    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
257342    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
257343    +END;
MPRINT(EM_DIAGRAM):   END;
257344    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257345    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
257346    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
257347    +END;
MPRINT(EM_DIAGRAM):   END;
257348    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257349    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
257350    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257351    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257352    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
257353    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
257354    +          +    -1.52187144029368 * S_MntMeatProducts
257355    +          +    -0.17233011764417 * S_NumCatalogPurchases
257356    +          +     0.08681674245114 * S_NumDealsPurchases
257357    +          +     0.13308256651831 * S_NumWebVisitsMonth
257358    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
257359    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
257360    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
257361    +          +     0.66187267823731 * S_MntMeatProducts
257362    +          +     1.52530454111654 * S_NumCatalogPurchases
257363    +          +     0.73982889008686 * S_NumDealsPurchases
257364    +          +     1.03760708665776 * S_NumWebVisitsMonth
257365    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
257366    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
257367    +          +    -0.57121500191985 * Marital_StatusMarried
257368    +          +     0.00575301863466 * Marital_StatusSingle
257369    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
257370    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
257371    +          +     0.68382990555761 * Marital_StatusMarried
257372    +          +    -0.40241665873988 * Marital_StatusSingle
257373    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
257374    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
257375    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
257376    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
257377    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
257378    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
257379    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
257380    +END;
MPRINT(EM_DIAGRAM):   END;
257381    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257382    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
257383    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
257384    +END;
MPRINT(EM_DIAGRAM):   END;
257385    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257386    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
257387    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257388    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257389    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
257390    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
257391    +          +    -2.40830591527574 * S_MntMeatProducts
257392    +          +    -0.89296864866675 * S_NumCatalogPurchases
257393    +          +     1.79889409325514 * S_NumDealsPurchases
257394    +          +    -0.33765715793031 * S_NumWebVisitsMonth
257395    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
257396    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
257397    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
257398    +          +     0.04224245417831 * S_MntMeatProducts
257399    +          +     0.25836861794607 * S_NumCatalogPurchases
257400    +          +     2.47909264202917 * S_NumDealsPurchases
257401    +          +     0.14790226792406 * S_NumWebVisitsMonth
257402    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
257403    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
257404    +          +     0.39103795234666 * Marital_StatusMarried
257405    +          +    -0.52822284221545 * Marital_StatusSingle
257406    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
257407    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
257408    +          +       1.975579060233 * Marital_StatusMarried
257409    +          +     0.15028521746762 * Marital_StatusSingle
257410    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
257411    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
257412    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
257413    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
257414    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
257415    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
257416    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
257417    +END;
MPRINT(EM_DIAGRAM):   END;
257418    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257419    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
257420    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
257421    +END;
MPRINT(EM_DIAGRAM):   END;
257422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257423    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
257424    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257425    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257426    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
257427    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
257428    +          +     0.16060225059391 * S_MntMeatProducts
257429    +          +     1.53093292630033 * S_NumCatalogPurchases
257430    +          +     0.39573641806699 * S_NumDealsPurchases
257431    +          +    -0.95387142126649 * S_NumWebVisitsMonth
257432    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
257433    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
257434    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
257435    +          +     0.71628478327205 * S_MntMeatProducts
257436    +          +     0.15890352363556 * S_NumCatalogPurchases
257437    +          +    -1.12928875468011 * S_NumDealsPurchases
257438    +          +    -0.30108145274307 * S_NumWebVisitsMonth
257439    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
257440    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
257441    +          +     0.91966160839643 * Marital_StatusMarried
257442    +          +    -0.63411090570397 * Marital_StatusSingle
257443    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
257444    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
257445    +          +     0.77230489026504 * Marital_StatusMarried
257446    +          +     0.20456495503812 * Marital_StatusSingle
257447    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
257448    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
257449    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
257450    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
257451    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
257452    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
257453    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
257454    +END;
MPRINT(EM_DIAGRAM):   END;
257455    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257456    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
257457    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
257458    +END;
MPRINT(EM_DIAGRAM):   END;
257459    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257460    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
257461    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257462    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257463    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
257464    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
257465    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
257466    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
257467    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
257468    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
257469    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
257470    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
257471    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
257472    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
257473    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
257474    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
257475    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
257476    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
257477    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
257478    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
257479    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
257480    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
257481    +END;
MPRINT(EM_DIAGRAM):   END;
257482    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257483    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
257484    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
257485    +END;
MPRINT(EM_DIAGRAM):   END;
257486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257487    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
257488    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257489    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257490    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
257491    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
257492    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
257493    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
257494    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
257495    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
257496    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
257497    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
257498    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
257499    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
257500    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
257501    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
257502    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
257503    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
257504    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
257505    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
257506    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
257507    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
257508    +END;
MPRINT(EM_DIAGRAM):   END;
257509    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257510    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
257511    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
257512    +END;
MPRINT(EM_DIAGRAM):   END;
257513    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257514    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
257515    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257516    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257517    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
257518    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
257519    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
257520    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
257521    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
257522    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
257523    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
257524    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
257525    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
257526    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
257527    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
257528    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
257529    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
257530    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
257531    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
257532    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
257533    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
257534    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
257535    +END;
MPRINT(EM_DIAGRAM):   END;
257536    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257537    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
257538    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
257539    +END;
MPRINT(EM_DIAGRAM):   END;
257540    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257541    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
257542    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257543    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257544    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
257545    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
257546    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
257547    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
257548    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
257549    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
257550    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
257551    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
257552    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
257553    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
257554    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
257555    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
257556    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
257557    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
257558    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
257559    +END;
MPRINT(EM_DIAGRAM):   END;
257560    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257561    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
257562    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
257563    +END;
MPRINT(EM_DIAGRAM):   END;
257564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257565    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
257566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257567    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257568    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
257569    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
257570    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
257571    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
257572    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
257573    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
257574    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
257575    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
257576    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
257577    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
257578    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
257579    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
257580    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
257581    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
257582    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
257583    +END;
MPRINT(EM_DIAGRAM):   END;
257584    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257585    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
257586    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
257587    +END;
MPRINT(EM_DIAGRAM):   END;
257588    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257589    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
257590    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257591    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257592    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
257593    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
257594    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
257595    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
257596    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
257597    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
257598    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
257599    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
257600    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
257601    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
257602    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
257603    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
257604    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
257605    +END;
MPRINT(EM_DIAGRAM):   END;
257606    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257607    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
257608    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
257609    +END;
MPRINT(EM_DIAGRAM):   END;
257610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257611    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
257612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257613    +
257614    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
257615    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
257616    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
257617    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
257618    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
257619    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
257620    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
257621    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
257622    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
257623    +end;
MPRINT(EM_DIAGRAM):   end;
257624    +else do;
MPRINT(EM_DIAGRAM):   else do;
257625    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
257626    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
257627    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
257628    +   end;
MPRINT(EM_DIAGRAM):   end;
257629    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
257630    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
257631    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
257632    +   end;
MPRINT(EM_DIAGRAM):   end;
257633    +   else do;
MPRINT(EM_DIAGRAM):   else do;
257634    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
257635    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
257636    +   end;
MPRINT(EM_DIAGRAM):   end;
257637    +end;
MPRINT(EM_DIAGRAM):   end;
257638    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257639    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
257640    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
257641    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
257642    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
257643    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
257644    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
257645    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
257646    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
257647    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
257648    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
257649    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
257650    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
257651    +END;
MPRINT(EM_DIAGRAM):   END;
257652    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257653    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
257654    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
257655    +END;
MPRINT(EM_DIAGRAM):   END;
257656    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
257657    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
257658    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
257659    +END;
MPRINT(EM_DIAGRAM):   END;
257660    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
257661    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
257662    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
257663    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
257664    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
257665    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
257666    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
257667    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257668    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
257669    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257670    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
257671    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
257672    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
257673    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
257674    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
257675    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
257676    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
257677    +END;
MPRINT(EM_DIAGRAM):   END;
257678    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
257679    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
257680    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
257681    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
257682    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
257683    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257684    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
257685    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257686    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
257687    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
257688    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
257689    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
257690    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257691    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
257692    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257693    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
257694    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
257695    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
257696    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257697    +* Ensmbl24: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 3 of 7;
257698    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257699    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257700    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
257701    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
257702    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
257703    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
257704    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
257705    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
257706    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
257707    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
257708    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
257709    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
257710    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
257711    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
257712    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
257713    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
257714    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
257715    +LENGTH _WARN_ $4
257716    +      F_DepVar  $ 12
257717    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
257718    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
257719    +
257720    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
257721    +
257722    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
257723    +
257724    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
257725    +
257726    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
257727    +
257728    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
257729    +
257730    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
257731    +
257732    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
257733    +
257734    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
257735    +
257736    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
257737    +
257738    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
257739    +
257740    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
257741    +
257742    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
257743    +
257744    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
257745    +
257746    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
257747    +
257748    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
257749    +
257750    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
257751    +
257752    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
257753    +
257754    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
257755    +
257756    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
257757    +
257758    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
257759    +
257760    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
257761    +
257762    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
257763    +
257764    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
257765    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
257766    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
257767    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
257768    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
257769    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
257770    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
257771    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
257772    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
257773    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
257774    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
257775    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
257776    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
257777    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
257778    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
257779    +end;
MPRINT(EM_DIAGRAM):   end;
257780    +else do;
MPRINT(EM_DIAGRAM):   else do;
257781    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
257782    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
257783    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
257784    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
257785    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
257786    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
257787    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
257788    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
257789    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257790    +         end;
MPRINT(EM_DIAGRAM):   end;
257791    +         else do;
MPRINT(EM_DIAGRAM):   else do;
257792    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
257793    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
257794    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257795    +            end;
MPRINT(EM_DIAGRAM):   end;
257796    +         end;
MPRINT(EM_DIAGRAM):   end;
257797    +      end;
MPRINT(EM_DIAGRAM):   end;
257798    +      else do;
MPRINT(EM_DIAGRAM):   else do;
257799    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
257800    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
257801    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257802    +         end;
MPRINT(EM_DIAGRAM):   end;
257803    +      end;
MPRINT(EM_DIAGRAM):   end;
257804    +   end;
MPRINT(EM_DIAGRAM):   end;
257805    +   else do;
MPRINT(EM_DIAGRAM):   else do;
257806    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
257807    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
257808    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257809    +      end;
MPRINT(EM_DIAGRAM):   end;
257810    +      else do;
MPRINT(EM_DIAGRAM):   else do;
257811    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
257812    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
257813    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
257814    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
257815    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
257816    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
257817    +         end;
MPRINT(EM_DIAGRAM):   end;
257818    +      end;
MPRINT(EM_DIAGRAM):   end;
257819    +   end;
MPRINT(EM_DIAGRAM):   end;
257820    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
257821    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
257822    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
257823    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
257824    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
257825    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
257826    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
257827    +   end;
MPRINT(EM_DIAGRAM):   end;
257828    +end;
MPRINT(EM_DIAGRAM):   end;
257829    +
257830    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257831    +*** Checking missing input Interval
257832    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
257833    +
257834    +IF NMISS(
257835    +   AcceptedCmpTotal ,
257836    +   Frq ,
257837    +   Mnt ,
257838    +   MntMeatProducts ,
257839    +   NumCatalogPurchases ,
257840    +   NumDealsPurchases ,
257841    +   NumWebVisitsMonth ,
257842    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
257843    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
257844    +
257845    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
257846    +END;
MPRINT(EM_DIAGRAM):   END;
257847    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257848    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
257849    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257850    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257851    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
257852    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
257853    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
257854    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
257855    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
257856    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
257857    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
257858    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
257859    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
257860    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
257861    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
257862    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
257863    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
257864    +END;
MPRINT(EM_DIAGRAM):   END;
257865    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257866    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
257867    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
257868    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
257869    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
257870    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
257871    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
257872    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
257873    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
257874    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
257875    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
257876    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
257877    +   ELSE S_NumCatalogPurchases
257878    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
257879    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
257880    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
257881    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
257882    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
257883    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
257884    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
257885    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
257886    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
257887    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
257888    +END;
MPRINT(EM_DIAGRAM):   END;
257889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257890    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
257891    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257893    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
257894    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257895    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257896    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
257897    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
257898    +          +     0.02561809182055 * S_MntMeatProducts
257899    +          +     -0.1793288912734 * S_NumCatalogPurchases
257900    +          +    -0.37563080213093 * S_NumDealsPurchases
257901    +          +    -0.48858578777845 * S_NumWebVisitsMonth
257902    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
257903    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
257904    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
257905    +          +     1.94302986779634 * S_MntMeatProducts
257906    +          +      0.2669037763846 * S_NumCatalogPurchases
257907    +          +     0.29313104233947 * S_NumDealsPurchases
257908    +          +    -0.30591479309812 * S_NumWebVisitsMonth
257909    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
257910    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
257911    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
257912    +          +    -0.76055629383789 * S_MntMeatProducts
257913    +          +    -0.40114802991127 * S_NumCatalogPurchases
257914    +          +    -1.12215966034372 * S_NumDealsPurchases
257915    +          +    -0.30978133586417 * S_NumWebVisitsMonth
257916    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
257917    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
257918    +          +     0.20445663414925 * Marital_StatusMarried
257919    +          +     0.16369117386202 * Marital_StatusSingle
257920    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
257921    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
257922    +          +     0.09645374599508 * Marital_StatusMarried
257923    +          +     -0.0816282741981 * Marital_StatusSingle
257924    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
257925    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
257926    +          +     -3.9031880089591 * Marital_StatusMarried
257927    +          +      1.6995748309328 * Marital_StatusSingle
257928    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
257929    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
257930    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
257931    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
257932    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
257933    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
257934    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
257935    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
257936    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
257937    +END;
MPRINT(EM_DIAGRAM):   END;
257938    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257939    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
257940    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
257941    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
257942    +END;
MPRINT(EM_DIAGRAM):   END;
257943    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257944    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
257945    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
257946    +
257947    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
257948    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
257949    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
257950    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
257951    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
257952    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
257953    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
257954    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
257955    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
257956    +end;
MPRINT(EM_DIAGRAM):   end;
257957    +else do;
MPRINT(EM_DIAGRAM):   else do;
257958    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
257959    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
257960    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
257961    +   end;
MPRINT(EM_DIAGRAM):   end;
257962    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
257963    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
257964    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
257965    +   end;
MPRINT(EM_DIAGRAM):   end;
257966    +   else do;
MPRINT(EM_DIAGRAM):   else do;
257967    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
257968    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
257969    +   end;
MPRINT(EM_DIAGRAM):   end;
257970    +end;
MPRINT(EM_DIAGRAM):   end;
257971    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
257972    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
257973    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
257974    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
257975    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
257976    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
257977    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
257978    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
257979    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
257980    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
257981    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
257982    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
257983    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
257984    +END;
MPRINT(EM_DIAGRAM):   END;
257985    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
257986    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
257987    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
257988    +END;
MPRINT(EM_DIAGRAM):   END;
257989    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
257990    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
257991    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
257992    +END;
MPRINT(EM_DIAGRAM):   END;
257993    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
257994    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
257995    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
257996    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
257997    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
257998    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
257999    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
258000    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258001    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
258002    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258003    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
258004    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
258005    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
258006    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
258007    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
258008    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
258009    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
258010    +END;
MPRINT(EM_DIAGRAM):   END;
258011    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
258012    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
258013    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
258014    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
258015    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
258016    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258017    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
258018    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258019    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
258020    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
258021    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
258022    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
258023    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258024    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
258025    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258026    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
258027    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
258028    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
258029    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258030    +* Ensmbl24: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 4 of 7;
258031    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258032    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258033    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
258034    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
258035    +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
258036    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258037    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
258038    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
258039    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
258040    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
258041    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
258042    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
258043    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
258044    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
258045    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
258046    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
258047    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
258048    +LENGTH _WARN_ $4
258049    +      F_DepVar  $ 12
258050    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
258051    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
258052    +
258053    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
258054    +
258055    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
258056    +
258057    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
258058    +
258059    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
258060    +
258061    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
258062    +
258063    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
258064    +
258065    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
258066    +
258067    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
258068    +
258069    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
258070    +
258071    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
258072    +
258073    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
258074    +
258075    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
258076    +
258077    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
258078    +
258079    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
258080    +
258081    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
258082    +
258083    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
258084    +
258085    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
258086    +
258087    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
258088    +
258089    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
258090    +
258091    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
258092    +
258093    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
258094    +
258095    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
258096    +
258097    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
258098    +
258099    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
258100    +
258101    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
258102    +
258103    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
258104    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
258105    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
258106    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
258107    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
258108    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
258109    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
258110    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
258111    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
258112    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
258113    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
258114    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
258115    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
258116    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
258117    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258118    +end;
MPRINT(EM_DIAGRAM):   end;
258119    +else do;
MPRINT(EM_DIAGRAM):   else do;
258120    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
258121    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
258122    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
258123    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
258124    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
258125    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
258126    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
258127    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
258128    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258129    +         end;
MPRINT(EM_DIAGRAM):   end;
258130    +         else do;
MPRINT(EM_DIAGRAM):   else do;
258131    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
258132    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
258133    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258134    +            end;
MPRINT(EM_DIAGRAM):   end;
258135    +         end;
MPRINT(EM_DIAGRAM):   end;
258136    +      end;
MPRINT(EM_DIAGRAM):   end;
258137    +      else do;
MPRINT(EM_DIAGRAM):   else do;
258138    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
258139    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
258140    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258141    +         end;
MPRINT(EM_DIAGRAM):   end;
258142    +      end;
MPRINT(EM_DIAGRAM):   end;
258143    +   end;
MPRINT(EM_DIAGRAM):   end;
258144    +   else do;
MPRINT(EM_DIAGRAM):   else do;
258145    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
258146    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
258147    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258148    +      end;
MPRINT(EM_DIAGRAM):   end;
258149    +      else do;
MPRINT(EM_DIAGRAM):   else do;
258150    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
258151    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
258152    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
258153    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
258154    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
258155    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258156    +         end;
MPRINT(EM_DIAGRAM):   end;
258157    +      end;
MPRINT(EM_DIAGRAM):   end;
258158    +   end;
MPRINT(EM_DIAGRAM):   end;
258159    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
258160    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
258161    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
258162    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
258163    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
258164    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
258165    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258166    +   end;
MPRINT(EM_DIAGRAM):   end;
258167    +end;
MPRINT(EM_DIAGRAM):   end;
258168    +
258169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258170    +*** Checking missing input Interval
258171    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
258172    +
258173    +IF NMISS(
258174    +   AcceptedCmpTotal ,
258175    +   Frq ,
258176    +   Mnt ,
258177    +   MntMeatProducts ,
258178    +   NumCatalogPurchases ,
258179    +   NumDealsPurchases ,
258180    +   NumWebVisitsMonth ,
258181    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
258182    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
258183    +
258184    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258185    +END;
MPRINT(EM_DIAGRAM):   END;
258186    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258187    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
258188    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258189    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258190    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
258191    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
258192    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
258193    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
258194    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
258195    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
258196    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
258197    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
258198    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
258199    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
258200    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
258201    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
258202    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
258203    +END;
MPRINT(EM_DIAGRAM):   END;
258204    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258205    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
258206    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
258207    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
258208    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
258209    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
258210    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
258211    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
258212    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
258213    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
258214    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
258215    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
258216    +   ELSE S_NumCatalogPurchases
258217    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
258218    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
258219    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
258220    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
258221    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
258222    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
258223    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
258224    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
258225    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
258226    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
258227    +END;
MPRINT(EM_DIAGRAM):   END;
258228    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258229    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
258230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258232    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
258233    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258234    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258235    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
258236    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
258237    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
258238    +          +    -0.06020302160033 * S_NumDealsPurchases
258239    +          +    -0.72187271327886 * S_NumWebVisitsMonth
258240    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
258241    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
258242    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
258243    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
258244    +          +     0.44023370306786 * S_NumDealsPurchases
258245    +          +     0.14437092902564 * S_NumWebVisitsMonth
258246    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
258247    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
258248    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
258249    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
258250    +          +     0.36494720404815 * S_NumDealsPurchases
258251    +          +     0.03877838723538 * S_NumWebVisitsMonth
258252    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
258253    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
258254    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
258255    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
258256    +          +    -0.87171784420951 * S_NumDealsPurchases
258257    +          +     0.27077171192055 * S_NumWebVisitsMonth
258258    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
258259    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
258260    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
258261    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
258262    +          +    -0.02694744085713 * S_NumDealsPurchases
258263    +          +     0.42930866809604 * S_NumWebVisitsMonth
258264    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
258265    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
258266    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
258267    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
258268    +          +     1.91827561352967 * S_NumDealsPurchases
258269    +          +    -0.65112089304736 * S_NumWebVisitsMonth
258270    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
258271    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
258272    +          +     0.19571272479408 * Marital_StatusMarried
258273    +          +    -0.16061908960963 * Marital_StatusSingle
258274    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
258275    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
258276    +          +    -0.64968872046859 * Marital_StatusMarried
258277    +          +     1.81995301340231 * Marital_StatusSingle
258278    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
258279    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
258280    +          +     0.19296467458933 * Marital_StatusMarried
258281    +          +     -0.2295693568996 * Marital_StatusSingle
258282    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
258283    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
258284    +          +    -0.12318541826308 * Marital_StatusMarried
258285    +          +    -0.02882902763243 * Marital_StatusSingle
258286    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
258287    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
258288    +          +    -0.65544681605691 * Marital_StatusMarried
258289    +          +     0.31269236164873 * Marital_StatusSingle
258290    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
258291    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
258292    +          +     0.12269709457787 * Marital_StatusMarried
258293    +          +     0.37106402586008 * Marital_StatusSingle
258294    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
258295    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
258296    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
258297    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
258298    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
258299    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
258300    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
258301    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
258302    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
258303    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
258304    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
258305    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
258306    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
258307    +END;
MPRINT(EM_DIAGRAM):   END;
258308    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258309    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
258310    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
258311    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
258312    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
258313    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
258314    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
258315    +END;
MPRINT(EM_DIAGRAM):   END;
258316    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258317    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
258318    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258319    +
258320    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
258321    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
258322    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
258323    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
258324    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
258325    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
258326    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
258327    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
258328    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
258329    +end;
MPRINT(EM_DIAGRAM):   end;
258330    +else do;
MPRINT(EM_DIAGRAM):   else do;
258331    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
258332    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
258333    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
258334    +   end;
MPRINT(EM_DIAGRAM):   end;
258335    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
258336    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
258337    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
258338    +   end;
MPRINT(EM_DIAGRAM):   end;
258339    +   else do;
MPRINT(EM_DIAGRAM):   else do;
258340    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
258341    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
258342    +   end;
MPRINT(EM_DIAGRAM):   end;
258343    +end;
MPRINT(EM_DIAGRAM):   end;
258344    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258345    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
258346    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
258347    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
258348    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
258349    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
258350    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
258351    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
258352    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
258353    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
258354    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
258355    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
258356    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
258357    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
258358    +END;
MPRINT(EM_DIAGRAM):   END;
258359    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258360    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
258361    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
258362    +END;
MPRINT(EM_DIAGRAM):   END;
258363    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
258364    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
258365    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
258366    +END;
MPRINT(EM_DIAGRAM):   END;
258367    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
258368    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
258369    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
258370    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
258371    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
258372    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
258373    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
258374    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258375    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
258376    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258377    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
258378    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
258379    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
258380    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
258381    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
258382    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
258383    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
258384    +END;
MPRINT(EM_DIAGRAM):   END;
258385    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
258386    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
258387    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
258388    +drop
258389    +H11
258390    +H12
258391    +H13
258392    +H14
258393    +H15
258394    +H16
258395    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
258396    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
258397    +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
258398    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258399    +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
258400    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258401    +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
258402    +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
258403    +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
258404    +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
258405    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258406    +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
258407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258408    +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
258409    +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
258410    +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
258411    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258412    +* Ensmbl24: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 5 of 7;
258413    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258414    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258415    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
258416    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
258417    +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
258418    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258419    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
258420    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
258421    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
258422    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
258423    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
258424    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
258425    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
258426    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
258427    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
258428    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
258429    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
258430    +LENGTH _WARN_ $4
258431    +      F_DepVar  $ 12
258432    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
258433    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
258434    +
258435    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
258436    +
258437    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
258438    +
258439    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
258440    +
258441    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
258442    +
258443    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
258444    +
258445    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
258446    +
258447    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
258448    +
258449    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
258450    +
258451    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
258452    +
258453    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
258454    +
258455    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
258456    +
258457    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
258458    +
258459    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
258460    +
258461    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
258462    +
258463    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
258464    +
258465    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
258466    +
258467    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
258468    +
258469    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
258470    +
258471    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
258472    +
258473    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
258474    +
258475    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
258476    +
258477    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
258478    +
258479    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
258480    +
258481    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
258482    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
258483    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
258484    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
258485    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
258486    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
258487    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
258488    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
258489    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
258490    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
258491    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
258492    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
258493    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
258494    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
258495    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258496    +end;
MPRINT(EM_DIAGRAM):   end;
258497    +else do;
MPRINT(EM_DIAGRAM):   else do;
258498    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
258499    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
258500    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
258501    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
258502    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
258503    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
258504    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
258505    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
258506    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258507    +         end;
MPRINT(EM_DIAGRAM):   end;
258508    +         else do;
MPRINT(EM_DIAGRAM):   else do;
258509    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
258510    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
258511    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258512    +            end;
MPRINT(EM_DIAGRAM):   end;
258513    +         end;
MPRINT(EM_DIAGRAM):   end;
258514    +      end;
MPRINT(EM_DIAGRAM):   end;
258515    +      else do;
MPRINT(EM_DIAGRAM):   else do;
258516    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
258517    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
258518    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258519    +         end;
MPRINT(EM_DIAGRAM):   end;
258520    +      end;
MPRINT(EM_DIAGRAM):   end;
258521    +   end;
MPRINT(EM_DIAGRAM):   end;
258522    +   else do;
MPRINT(EM_DIAGRAM):   else do;
258523    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
258524    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
258525    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258526    +      end;
MPRINT(EM_DIAGRAM):   end;
258527    +      else do;
MPRINT(EM_DIAGRAM):   else do;
258528    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
258529    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
258530    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
258531    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
258532    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
258533    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258534    +         end;
MPRINT(EM_DIAGRAM):   end;
258535    +      end;
MPRINT(EM_DIAGRAM):   end;
258536    +   end;
MPRINT(EM_DIAGRAM):   end;
258537    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
258538    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
258539    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
258540    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
258541    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
258542    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
258543    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258544    +   end;
MPRINT(EM_DIAGRAM):   end;
258545    +end;
MPRINT(EM_DIAGRAM):   end;
258546    +
258547    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258548    +*** Checking missing input Interval
258549    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
258550    +
258551    +IF NMISS(
258552    +   AcceptedCmpTotal ,
258553    +   Frq ,
258554    +   Mnt ,
258555    +   MntMeatProducts ,
258556    +   NumCatalogPurchases ,
258557    +   NumDealsPurchases ,
258558    +   NumWebVisitsMonth ,
258559    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
258560    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
258561    +
258562    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258563    +END;
MPRINT(EM_DIAGRAM):   END;
258564    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258565    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
258566    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258567    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258568    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
258569    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
258570    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
258571    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
258572    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
258573    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
258574    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
258575    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
258576    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
258577    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
258578    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
258579    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
258580    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
258581    +END;
MPRINT(EM_DIAGRAM):   END;
258582    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258583    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
258584    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
258585    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
258586    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
258587    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
258588    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
258589    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
258590    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
258591    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
258592    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
258593    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
258594    +   ELSE S_NumCatalogPurchases
258595    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
258596    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
258597    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
258598    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
258599    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
258600    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
258601    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
258602    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
258603    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
258604    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
258605    +END;
MPRINT(EM_DIAGRAM):   END;
258606    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258607    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
258608    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258609    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258610    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
258611    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258612    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258613    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
258614    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
258615    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
258616    +          +       0.868651674737 * S_NumDealsPurchases
258617    +          +     0.56519310644826 * S_NumWebVisitsMonth
258618    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
258619    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
258620    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
258621    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
258622    +          +     0.22588169231784 * S_NumDealsPurchases
258623    +          +    -0.50349429270665 * S_NumWebVisitsMonth
258624    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
258625    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
258626    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
258627    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
258628    +          +     0.38270609344543 * S_NumDealsPurchases
258629    +          +    -0.67911374483005 * S_NumWebVisitsMonth
258630    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
258631    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
258632    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
258633    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
258634    +          +    -0.27211575710638 * S_NumDealsPurchases
258635    +          +    -0.27365412530976 * S_NumWebVisitsMonth
258636    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
258637    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
258638    +          +     0.26671394907331 * Marital_StatusMarried
258639    +          +    -0.21412689047791 * Marital_StatusSingle
258640    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
258641    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
258642    +          +      0.8828544386185 * Marital_StatusMarried
258643    +          +    -0.82952673399486 * Marital_StatusSingle
258644    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
258645    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
258646    +          +     0.43581055671108 * Marital_StatusMarried
258647    +          +    -0.37028703904727 * Marital_StatusSingle
258648    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
258649    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
258650    +          +     -0.1219875250835 * Marital_StatusMarried
258651    +          +    -0.01813173038471 * Marital_StatusSingle
258652    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
258653    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
258654    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
258655    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
258656    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
258657    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
258658    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
258659    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
258660    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
258661    +END;
MPRINT(EM_DIAGRAM):   END;
258662    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258663    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
258664    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
258665    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
258666    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
258667    +END;
MPRINT(EM_DIAGRAM):   END;
258668    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258669    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
258670    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258671    +
258672    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
258673    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
258674    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
258675    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
258676    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
258677    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
258678    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
258679    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
258680    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
258681    +end;
MPRINT(EM_DIAGRAM):   end;
258682    +else do;
MPRINT(EM_DIAGRAM):   else do;
258683    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
258684    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
258685    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
258686    +   end;
MPRINT(EM_DIAGRAM):   end;
258687    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
258688    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
258689    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
258690    +   end;
MPRINT(EM_DIAGRAM):   end;
258691    +   else do;
MPRINT(EM_DIAGRAM):   else do;
258692    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
258693    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
258694    +   end;
MPRINT(EM_DIAGRAM):   end;
258695    +end;
MPRINT(EM_DIAGRAM):   end;
258696    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258697    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
258698    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
258699    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
258700    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
258701    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
258702    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
258703    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
258704    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
258705    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
258706    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
258707    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
258708    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
258709    +END;
MPRINT(EM_DIAGRAM):   END;
258710    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258711    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
258712    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
258713    +END;
MPRINT(EM_DIAGRAM):   END;
258714    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
258715    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
258716    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
258717    +END;
MPRINT(EM_DIAGRAM):   END;
258718    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
258719    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
258720    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
258721    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
258722    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
258723    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
258724    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
258725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258726    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
258727    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258728    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
258729    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
258730    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
258731    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
258732    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
258733    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
258734    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
258735    +END;
MPRINT(EM_DIAGRAM):   END;
258736    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
258737    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
258738    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
258739    +drop
258740    +H11
258741    +H12
258742    +H13
258743    +H14
258744    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
258745    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
258746    +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
258747    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258748    +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
258749    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258750    +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
258751    +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
258752    +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
258753    +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
258754    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258755    +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
258756    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258757    +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
258758    +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
258759    +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
258760    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258761    +* Ensmbl24: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 6 of 7;
258762    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258763    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258764    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
258765    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
258766    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
258767    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
258768    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
258769    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
258770    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
258771    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
258772    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
258773    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
258774    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
258775    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
258776    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
258777    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
258778    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
258779    +LENGTH _WARN_ $4
258780    +      F_DepVar  $ 12
258781    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
258782    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
258783    +
258784    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
258785    +
258786    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
258787    +
258788    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
258789    +
258790    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
258791    +
258792    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
258793    +
258794    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
258795    +
258796    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
258797    +
258798    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
258799    +
258800    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
258801    +
258802    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
258803    +
258804    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
258805    +
258806    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
258807    +
258808    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
258809    +
258810    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
258811    +
258812    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
258813    +
258814    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
258815    +
258816    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
258817    +
258818    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
258819    +
258820    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
258821    +
258822    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
258823    +
258824    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
258825    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
258826    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
258827    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
258828    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
258829    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
258830    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
258831    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
258832    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
258833    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
258834    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
258835    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
258836    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
258837    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
258838    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258839    +end;
MPRINT(EM_DIAGRAM):   end;
258840    +else do;
MPRINT(EM_DIAGRAM):   else do;
258841    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
258842    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
258843    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
258844    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
258845    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
258846    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
258847    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
258848    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
258849    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258850    +         end;
MPRINT(EM_DIAGRAM):   end;
258851    +         else do;
MPRINT(EM_DIAGRAM):   else do;
258852    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
258853    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
258854    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258855    +            end;
MPRINT(EM_DIAGRAM):   end;
258856    +         end;
MPRINT(EM_DIAGRAM):   end;
258857    +      end;
MPRINT(EM_DIAGRAM):   end;
258858    +      else do;
MPRINT(EM_DIAGRAM):   else do;
258859    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
258860    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
258861    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258862    +         end;
MPRINT(EM_DIAGRAM):   end;
258863    +      end;
MPRINT(EM_DIAGRAM):   end;
258864    +   end;
MPRINT(EM_DIAGRAM):   end;
258865    +   else do;
MPRINT(EM_DIAGRAM):   else do;
258866    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
258867    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
258868    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258869    +      end;
MPRINT(EM_DIAGRAM):   end;
258870    +      else do;
MPRINT(EM_DIAGRAM):   else do;
258871    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
258872    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
258873    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
258874    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
258875    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
258876    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
258877    +         end;
MPRINT(EM_DIAGRAM):   end;
258878    +      end;
MPRINT(EM_DIAGRAM):   end;
258879    +   end;
MPRINT(EM_DIAGRAM):   end;
258880    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
258881    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
258882    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
258883    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
258884    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
258885    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
258886    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258887    +   end;
MPRINT(EM_DIAGRAM):   end;
258888    +end;
MPRINT(EM_DIAGRAM):   end;
258889    +
258890    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258891    +*** Checking missing input Interval
258892    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
258893    +
258894    +IF NMISS(
258895    +   AcceptedCmpTotal ,
258896    +   Frq ,
258897    +   Mnt ,
258898    +   MntMeatProducts ,
258899    +   NumCatalogPurchases ,
258900    +   NumDealsPurchases ,
258901    +   NumWebVisitsMonth ,
258902    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
258903    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
258904    +
258905    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
258906    +END;
MPRINT(EM_DIAGRAM):   END;
258907    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258908    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
258909    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258910    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258911    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
258912    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
258913    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
258914    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
258915    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
258916    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
258917    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
258918    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
258919    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
258920    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
258921    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
258922    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
258923    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
258924    +END;
MPRINT(EM_DIAGRAM):   END;
258925    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258926    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
258927    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
258928    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
258929    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
258930    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
258931    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
258932    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
258933    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
258934    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
258935    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
258936    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
258937    +   ELSE S_NumCatalogPurchases
258938    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
258939    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
258940    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
258941    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
258942    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
258943    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
258944    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
258945    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
258946    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
258947    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
258948    +END;
MPRINT(EM_DIAGRAM):   END;
258949    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258950    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
258951    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258952    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258953    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
258954    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258955    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
258956    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
258957    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
258958    +          +     6.08901143667375 * S_MntMeatProducts
258959    +          +     2.21464286693249 * S_NumCatalogPurchases
258960    +          +     0.88693497635794 * S_NumDealsPurchases
258961    +          +    -0.16352347343851 * S_NumWebVisitsMonth
258962    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 * 
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 * 
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 * 
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
258963    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
258964    +          +     0.97693281807676 * Marital_StatusMarried
258965    +          +    -0.47353913752833 * Marital_StatusSingle
258966    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced + 
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle + 
0.72993998289048 * Marital_StatusTogether ;
258967    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
258968    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
258969    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
258970    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
258971    +END;
MPRINT(EM_DIAGRAM):   END;
258972    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
258973    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
258974    +END;
MPRINT(EM_DIAGRAM):   END;
258975    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258976    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
258977    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
258978    +
258979    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
258980    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
258981    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
258982    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
258983    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
258984    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
258985    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
258986    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
258987    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
258988    +end;
MPRINT(EM_DIAGRAM):   end;
258989    +else do;
MPRINT(EM_DIAGRAM):   else do;
258990    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
258991    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
258992    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
258993    +   end;
MPRINT(EM_DIAGRAM):   end;
258994    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
258995    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
The SAS System

258996    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
258997    +   end;
MPRINT(EM_DIAGRAM):   end;
258998    +   else do;
MPRINT(EM_DIAGRAM):   else do;
258999    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
259000    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
259001    +   end;
MPRINT(EM_DIAGRAM):   end;
259002    +end;
MPRINT(EM_DIAGRAM):   end;
259003    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259004    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
259005    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
259006    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
259007    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
259008    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
259009    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
259010    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
259011    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
259012    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
259013    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
259014    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
259015    +END;
MPRINT(EM_DIAGRAM):   END;
259016    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259017    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
259018    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
259019    +END;
MPRINT(EM_DIAGRAM):   END;
259020    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
259021    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
259022    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
259023    +END;
MPRINT(EM_DIAGRAM):   END;
259024    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
259025    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
259026    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
259027    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
259028    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
259029    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
259030    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
259031    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259032    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
259033    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259034    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
259035    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
259036    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
259037    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
259038    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
259039    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
259040    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
259041    +END;
MPRINT(EM_DIAGRAM):   END;
259042    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
259043    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
259044    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
259045    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
259046    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
259047    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259048    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
259049    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259050    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
259051    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
259052    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
259053    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
259054    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259055    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
259056    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259057    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
259058    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
259059    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
259060    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259061    +* Ensmbl24: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 7 of 7;
259062    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259063    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259064    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
259065    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
259066    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
259067    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259068    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
259069    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
259070    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
259071    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
259072    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
259073    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
259074    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
259075    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
259076    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
259077    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
259078    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
259079    +LENGTH _WARN_ $4
259080    +      F_DepVar  $ 12
259081    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
259082    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
259083    +
259084    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
259085    +
259086    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
259087    +
259088    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
259089    +
259090    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
259091    +
259092    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
259093    +
259094    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
259095    +
259096    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
259097    +
259098    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
259099    +
259100    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
259101    +
259102    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
259103    +
259104    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
259105    +
259106    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
259107    +
259108    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
259109    +
259110    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
259111    +
259112    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
259113    +
259114    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
259115    +
259116    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
259117    +
259118    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
259119    +
259120    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
259121    +
259122    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
259123    +
259124    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
259125    +
259126    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
259127    +
259128    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
259129    +
259130    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
259131    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
259132    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
259133    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
259134    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
259135    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
259136    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
259137    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
259138    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
259139    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
259140    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
259141    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
259142    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
259143    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
259144    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
259145    +end;
MPRINT(EM_DIAGRAM):   end;
259146    +else do;
MPRINT(EM_DIAGRAM):   else do;
259147    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
259148    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
259149    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
259150    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
259151    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
259152    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
259153    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
259154    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
259155    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259156    +         end;
MPRINT(EM_DIAGRAM):   end;
259157    +         else do;
MPRINT(EM_DIAGRAM):   else do;
259158    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
259159    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
259160    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259161    +            end;
MPRINT(EM_DIAGRAM):   end;
259162    +         end;
MPRINT(EM_DIAGRAM):   end;
259163    +      end;
MPRINT(EM_DIAGRAM):   end;
259164    +      else do;
MPRINT(EM_DIAGRAM):   else do;
259165    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
259166    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
259167    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259168    +         end;
MPRINT(EM_DIAGRAM):   end;
259169    +      end;
MPRINT(EM_DIAGRAM):   end;
259170    +   end;
MPRINT(EM_DIAGRAM):   end;
259171    +   else do;
MPRINT(EM_DIAGRAM):   else do;
259172    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
259173    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
259174    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259175    +      end;
MPRINT(EM_DIAGRAM):   end;
259176    +      else do;
MPRINT(EM_DIAGRAM):   else do;
259177    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
259178    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
259179    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
259180    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
259181    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
259182    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259183    +         end;
MPRINT(EM_DIAGRAM):   end;
259184    +      end;
MPRINT(EM_DIAGRAM):   end;
259185    +   end;
MPRINT(EM_DIAGRAM):   end;
259186    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
259187    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
259188    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
259189    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
259190    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
259191    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
259192    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
259193    +   end;
MPRINT(EM_DIAGRAM):   end;
259194    +end;
MPRINT(EM_DIAGRAM):   end;
259195    +
259196    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259197    +*** Checking missing input Interval
259198    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
259199    +
259200    +IF NMISS(
259201    +   AcceptedCmpTotal ,
259202    +   Frq ,
259203    +   Mnt ,
259204    +   MntMeatProducts ,
259205    +   NumCatalogPurchases ,
259206    +   NumDealsPurchases ,
259207    +   NumWebVisitsMonth ,
259208    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
259209    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
259210    +
259211    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
259212    +END;
MPRINT(EM_DIAGRAM):   END;
259213    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259214    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
259215    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259216    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259217    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
259218    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
259219    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
259220    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
259221    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
259222    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
259223    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
259224    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
259225    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
259226    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
259227    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
259228    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
259229    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
259230    +END;
MPRINT(EM_DIAGRAM):   END;
259231    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259232    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
259233    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
259234    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
259235    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
259236    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
259237    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
259238    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
259239    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
259240    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
259241    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
259242    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
259243    +   ELSE S_NumCatalogPurchases
259244    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
259245    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
259246    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
259247    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
259248    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
259249    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
259250    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
259251    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
259252    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
259253    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
259254    +END;
MPRINT(EM_DIAGRAM):   END;
259255    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259256    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
259257    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259259    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
259260    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259261    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259262    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
259263    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
259264    +          +      0.2338265945616 * S_MntMeatProducts
259265    +          +     0.01564313414142 * S_NumCatalogPurchases
259266    +          +    -0.07464304384577 * S_NumDealsPurchases
259267    +          +    -0.08299095200051 * S_NumWebVisitsMonth
259268    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 * 
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 * 
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 * 
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
259269    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
259270    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
259271    +          +     -0.3893643428589 * S_MntMeatProducts
259272    +          +    -0.11487225011852 * S_NumCatalogPurchases
259273    +          +       0.001237145136 * S_NumDealsPurchases
259274    +          +    -0.04234500703321 * S_NumWebVisitsMonth
259275    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 * 
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 * 
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 * 
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
259276    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
259277    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
259278    +          +    -0.27963474874984 * S_MntMeatProducts
259279    +          +     0.01939450840376 * S_NumCatalogPurchases
259280    +          +    -0.03907394757592 * S_NumDealsPurchases
259281    +          +     0.06752842740103 * S_NumWebVisitsMonth
259282    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 * 
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 * 
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 * 
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
259283    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
259284    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
259285    +          +     0.09842717305515 * S_MntMeatProducts
259286    +          +     0.48040050668836 * S_NumCatalogPurchases
259287    +          +     0.55911507039756 * S_NumDealsPurchases
259288    +          +     0.35441361757916 * S_NumWebVisitsMonth
259289    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 * 
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 * 
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 * 
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
259290    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
259291    +          +     0.13423943689575 * Marital_StatusMarried
259292    +          +    -0.01496857872487 * Marital_StatusSingle
259293    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced + 
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle + 
0.09065620914015 * Marital_StatusTogether ;
259294    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
259295    +          +     0.03005244373637 * Marital_StatusMarried
259296    +          +    -0.06891231360799 * Marital_StatusSingle
259297    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced + 
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle + 
0.03916911436548 * Marital_StatusTogether ;
259298    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
259299    +          +     0.01694145364157 * Marital_StatusMarried
259300    +          +    -0.05183794192194 * Marital_StatusSingle
259301    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced + 
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle + 
0.03543146366331 * Marital_StatusTogether ;
259302    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
259303    +          +     0.44185773223966 * Marital_StatusMarried
259304    +          +     -0.6351733171702 * Marital_StatusSingle
259305    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced + 
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle + 
0.63280583005707 * Marital_StatusTogether ;
259306    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
259307    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
259308    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
259309    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
259310    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
259311    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
259312    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
259313    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
259314    +END;
MPRINT(EM_DIAGRAM):   END;
259315    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259316    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
259317    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
259318    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
259319    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
259320    +END;
MPRINT(EM_DIAGRAM):   END;
259321    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259322    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
259323    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259324    +
259325    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
259326    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
259327    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
259328    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
259329    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
259330    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
259331    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
259332    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
259333    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
259334    +end;
MPRINT(EM_DIAGRAM):   end;
259335    +else do;
MPRINT(EM_DIAGRAM):   else do;
259336    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
259337    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
259338    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
259339    +   end;
MPRINT(EM_DIAGRAM):   end;
259340    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
259341    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
259342    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
259343    +   end;
MPRINT(EM_DIAGRAM):   end;
259344    +   else do;
MPRINT(EM_DIAGRAM):   else do;
259345    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
259346    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
259347    +   end;
MPRINT(EM_DIAGRAM):   end;
259348    +end;
MPRINT(EM_DIAGRAM):   end;
259349    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259350    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
259351    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 + 
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
259352    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
259353    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
259354    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
259355    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
259356    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
259357    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
259358    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
259359    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
259360    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
259361    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
259362    +END;
MPRINT(EM_DIAGRAM):   END;
259363    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259364    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
259365    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
259366    +END;
MPRINT(EM_DIAGRAM):   END;
259367    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
259368    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
259369    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
259370    +END;
MPRINT(EM_DIAGRAM):   END;
259371    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
259372    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
259373    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
259374    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
259375    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
259376    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
259377    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
259378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259379    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
259380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259381    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
259382    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
259383    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
259384    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
259385    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
259386    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
259387    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
259388    +END;
MPRINT(EM_DIAGRAM):   END;
259389    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
259390    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
259391    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
259392    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
259393    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
259394    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259395    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
259396    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259397    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
259398    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
259399    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
259400    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
259401    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259402    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
259403    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259404    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
259405    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
259406    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
259407    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259408    +* Ensmbl24: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Average Posteriors of 7 models;
259409    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259410    +P_DepVar1 = (
259411    +Neural40_P_DepVar1 +
259412    +AutoNeural38_P_DepVar1 +
259413    +AutoNeural39_P_DepVar1 +
259414    +Neural41_P_DepVar1 +
259415    +Neural39_P_DepVar1 +
259416    +AutoNeural37_P_DepVar1 +
259417    +AutoNeural40_P_DepVar1
259418    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural38_P_DepVar1 + 
AutoNeural39_P_DepVar1 + Neural41_P_DepVar1 + Neural39_P_DepVar1 + AutoNeural37_P_DepVar1 + 
AutoNeural40_P_DepVar1 )/7;
259419    +P_DepVar0 = (
259420    +Neural40_P_DepVar0 +
259421    +AutoNeural38_P_DepVar0 +
259422    +AutoNeural39_P_DepVar0 +
259423    +Neural41_P_DepVar0 +
259424    +Neural39_P_DepVar0 +
259425    +AutoNeural37_P_DepVar0 +
259426    +AutoNeural40_P_DepVar0
259427    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural38_P_DepVar0 + 
AutoNeural39_P_DepVar0 + Neural41_P_DepVar0 + Neural39_P_DepVar0 + AutoNeural37_P_DepVar0 + 
AutoNeural40_P_DepVar0 )/7;
259428    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259429    +* Ensmbl24: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Classification Vars;
259430    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259431    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
259432    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
259433    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
259434    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
259435    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
259436    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
259437    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
259438    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
259439    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
259440    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
259441    +end;
MPRINT(EM_DIAGRAM):   end;
259442    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
259443    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
259444    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
259445    +end;
MPRINT(EM_DIAGRAM):   end;
259446    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
259447    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259448    +* Ensmbl24: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Producing Unformatted variable;
259449    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259450    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
259451    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
259452    +else
259453    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
259454    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259455    +* Ensmbl24: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing _WARN_ Variable;
259456    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259457    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
259458    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
259459    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
259460    +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
259460   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259461    +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
259461   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259462    +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
259462   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259463    +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
259463   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259464    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
259464   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259465    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
259465   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259466    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
259466   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259467    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
259467   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259468    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
259468   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259469    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
259469   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259470    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
259470   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259471    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
259471   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259472    +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
259472   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259473    +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
259473   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259474    +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
259474   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259475    +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
259475   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259476    +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
259476   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259477    +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
259477   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259478    +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
259478   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259479    +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
259479   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259480    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
259480   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259481    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
259481   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259482    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
259482   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259483    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
259483   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259484    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
259484   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
259485    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
259485   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
259486    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
259486   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
259487    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
259487   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
259488    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259489    +* Ensmbl24: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Residual Vars;
259490    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259491    +if
259492    +F_DepVar NE '1'
259493    +AND F_DepVar NE '0'
259494    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
259495    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
259496    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
259497    +end;
MPRINT(EM_DIAGRAM):   end;
259498    +else do;
MPRINT(EM_DIAGRAM):   else do;
259499    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
259500    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
259501    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
259502    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
259503    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
259504    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
259505    +END;
MPRINT(EM_DIAGRAM):   END;
259506    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
259507     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL24_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
259508     quit;
259509     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
259510     filename emflow
259510   ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring NEURAL40_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259511     *------------------------------------------------------------*;
259512     * Ensmbl24: Scoring NEURAL40_VALIDATE data;
259513     *------------------------------------------------------------*;
259514     data EMWS8.Ensmbl24_VALIDATE
259515     / view=EMWS8.Ensmbl24_VALIDATE
259516     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_VALIDATE / view=EMWS8.Ensmbl24_VALIDATE ;
259517     set EMWS8.Neural40_VALIDATE
259518     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural40_VALIDATE ;
259519     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas.
259520    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259521    +* Ensmbl24: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Combine model for DepVar;
259522    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259523    +* Ensmbl24: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 1 of 7;
259524    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259525    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259526    +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
259527    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
259528    +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
259529    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259530    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259531    +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
259532    +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
259533    +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
259534    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259535    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259536    +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
259537    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
259538    +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
259539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259540    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259541    +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
259542    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
259543    +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
259544    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259545    +
259546    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
259547    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
259547   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
259548    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
259549    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
259550    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
259551    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
259552    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
259553    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259554    +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
259555    +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
259556    +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
259557    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259558    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259559    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
259560    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259561    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
259562    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
259563    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
259564    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259565    +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
259566    +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
259567    +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
259568    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259569    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259570    +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
259571    +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
259572    +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
259573    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259574    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259575    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
259576    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
259577    +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
259578    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259579    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
259580    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
259581    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
259582    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
259583    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
259584    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
259585    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
259586    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
259587    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
259588    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
259589    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
259590    +LENGTH _WARN_ $4
259591    +      F_DepVar  $ 12
259592    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
259593    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
259594    +
259595    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
259596    +
259597    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
259598    +
259599    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
259600    +
259601    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
259602    +
259603    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
259604    +
259605    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
259606    +
259607    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
259608    +
259609    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
259610    +
259611    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
259612    +
259613    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
259614    +
259615    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
259616    +
259617    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
259618    +
259619    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
259620    +
259621    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
259622    +
259623    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
259624    +
259625    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
259626    +
259627    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
259628    +
259629    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
259630    +
259631    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
259632    +
259633    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
259634    +
259635    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
259636    +
259637    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
259638    +
259639    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
259640    +
259641    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
259642    +
259643    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
259644    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
259645    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
259646    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
259647    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
259648    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
259649    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
259650    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
259651    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
259652    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
259653    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
259654    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
259655    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
259656    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
259657    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
259658    +end;
MPRINT(EM_DIAGRAM):   end;
259659    +else do;
MPRINT(EM_DIAGRAM):   else do;
259660    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
259661    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
259662    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
259663    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
259664    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
259665    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
259666    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
259667    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
259668    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259669    +         end;
MPRINT(EM_DIAGRAM):   end;
259670    +         else do;
MPRINT(EM_DIAGRAM):   else do;
259671    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
259672    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
259673    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259674    +            end;
MPRINT(EM_DIAGRAM):   end;
259675    +         end;
MPRINT(EM_DIAGRAM):   end;
259676    +      end;
MPRINT(EM_DIAGRAM):   end;
259677    +      else do;
MPRINT(EM_DIAGRAM):   else do;
259678    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
259679    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
259680    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259681    +         end;
MPRINT(EM_DIAGRAM):   end;
259682    +      end;
MPRINT(EM_DIAGRAM):   end;
259683    +   end;
MPRINT(EM_DIAGRAM):   end;
259684    +   else do;
MPRINT(EM_DIAGRAM):   else do;
259685    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
259686    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
259687    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259688    +      end;
MPRINT(EM_DIAGRAM):   end;
259689    +      else do;
MPRINT(EM_DIAGRAM):   else do;
259690    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
259691    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
259692    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
259693    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
259694    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
259695    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
259696    +         end;
MPRINT(EM_DIAGRAM):   end;
259697    +      end;
MPRINT(EM_DIAGRAM):   end;
259698    +   end;
MPRINT(EM_DIAGRAM):   end;
259699    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
259700    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
259701    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
259702    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
259703    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
259704    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
259705    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
259706    +   end;
MPRINT(EM_DIAGRAM):   end;
259707    +end;
MPRINT(EM_DIAGRAM):   end;
259708    +
259709    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259710    +*** Checking missing input Interval
259711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
259712    +
259713    +IF NMISS(
259714    +   AcceptedCmpTotal ,
259715    +   Frq ,
259716    +   Mnt ,
259717    +   MntMeatProducts ,
259718    +   NumCatalogPurchases ,
259719    +   NumDealsPurchases ,
259720    +   NumWebVisitsMonth ,
259721    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
259722    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
259723    +
259724    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
259725    +END;
MPRINT(EM_DIAGRAM):   END;
259726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259727    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
259728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259729    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259730    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
259731    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
259732    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
259733    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
259734    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
259735    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
259736    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
259737    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
259738    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
259739    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
259740    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
259741    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
259742    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
259743    +END;
MPRINT(EM_DIAGRAM):   END;
259744    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259745    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
259746    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
259747    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
259748    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
259749    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
259750    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
259751    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
259752    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
259753    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
259754    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
259755    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
259756    +   ELSE S_NumCatalogPurchases
259757    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
259758    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
259759    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
259760    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
259761    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
259762    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
259763    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
259764    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
259765    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
259766    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
259767    +END;
MPRINT(EM_DIAGRAM):   END;
259768    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259769    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
259770    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259772    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
259773    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259774    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259775    +   H11  =    -0.50937067326512 * S_AcceptedCmpTotal  +     0.59153604997173 *
259776    +        S_Frq  +     0.35109708191283 * S_Mnt  +    -0.54183123684873 *
259777    +        S_MntMeatProducts  +    -0.50968421326068 * S_NumCatalogPurchases
259778    +          +    -0.19046126117019 * S_NumDealsPurchases
259779    +          +    -0.51033119597715 * S_NumWebVisitsMonth
259780    +          +     0.81837864997249 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.50937067326512 * S_AcceptedCmpTotal + 0.59153604997173 * S_Frq 
+ 0.35109708191283 * S_Mnt + -0.54183123684873 * S_MntMeatProducts + -0.50968421326068 * 
S_NumCatalogPurchases + -0.19046126117019 * S_NumDealsPurchases + -0.51033119597715 * 
S_NumWebVisitsMonth + 0.81837864997249 * S_Recency ;
259781    +   H12  =     0.02025228046339 * S_AcceptedCmpTotal  +     0.99930163787509 *
259782    +        S_Frq  +     1.71070447604488 * S_Mnt  +     0.00262288180651 *
259783    +        S_MntMeatProducts  +    -0.26040107336488 * S_NumCatalogPurchases
259784    +          +     1.79245188553632 * S_NumDealsPurchases
259785    +          +     0.26061762777338 * S_NumWebVisitsMonth
259786    +          +     0.08976701277133 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.02025228046339 * S_AcceptedCmpTotal + 0.99930163787509 * S_Frq + 
1.71070447604488 * S_Mnt + 0.00262288180651 * S_MntMeatProducts + -0.26040107336488 * 
S_NumCatalogPurchases + 1.79245188553632 * S_NumDealsPurchases + 0.26061762777338 * 
S_NumWebVisitsMonth + 0.08976701277133 * S_Recency ;
259787    +   H13  =       0.104381332746 * S_AcceptedCmpTotal  +    -1.51764539772771 *
259788    +        S_Frq  +     0.93148616742855 * S_Mnt  +     2.93767108708116 *
259789    +        S_MntMeatProducts  +     0.79051284359814 * S_NumCatalogPurchases
259790    +          +     0.49339750797451 * S_NumDealsPurchases
259791    +          +    -0.25657630888957 * S_NumWebVisitsMonth
259792    +          +    -0.02783592802322 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.104381332746 * S_AcceptedCmpTotal + -1.51764539772771 * S_Frq + 
0.93148616742855 * S_Mnt + 2.93767108708116 * S_MntMeatProducts + 0.79051284359814 * 
S_NumCatalogPurchases + 0.49339750797451 * S_NumDealsPurchases + -0.25657630888957 * 
S_NumWebVisitsMonth + -0.02783592802322 * S_Recency ;
259793    +   H14  =     0.54135833698612 * S_AcceptedCmpTotal  +     1.35730431022222 *
259794    +        S_Frq  +     0.77200942468842 * S_Mnt  +    -1.51698500454254 *
259795    +        S_MntMeatProducts  +    -0.62605649177998 * S_NumCatalogPurchases
259796    +          +    -0.20841011025614 * S_NumDealsPurchases
259797    +          +    -0.95976462163535 * S_NumWebVisitsMonth
259798    +          +    -0.85153512604579 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.54135833698612 * S_AcceptedCmpTotal + 1.35730431022222 * S_Frq + 
0.77200942468842 * S_Mnt + -1.51698500454254 * S_MntMeatProducts + -0.62605649177998 * 
S_NumCatalogPurchases + -0.20841011025614 * S_NumDealsPurchases + -0.95976462163535 * 
S_NumWebVisitsMonth + -0.85153512604579 * S_Recency ;
259799    +   H15  =     0.45598292592982 * S_AcceptedCmpTotal  +     0.62149856604856 *
259800    +        S_Frq  +    -0.19094507833451 * S_Mnt  +     0.31024365368678 *
259801    +        S_MntMeatProducts  +     0.43336537836455 * S_NumCatalogPurchases
259802    +          +    -0.79330545518211 * S_NumDealsPurchases
259803    +          +     0.31692653945914 * S_NumWebVisitsMonth
259804    +          +    -0.82721510615104 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.45598292592982 * S_AcceptedCmpTotal + 0.62149856604856 * S_Frq + 
-0.19094507833451 * S_Mnt + 0.31024365368678 * S_MntMeatProducts + 0.43336537836455 * 
S_NumCatalogPurchases + -0.79330545518211 * S_NumDealsPurchases + 0.31692653945914 * 
S_NumWebVisitsMonth + -0.82721510615104 * S_Recency ;
259805    +   H11  = H11  +    -0.25100863467838 * Marital_StatusDivorced
259806    +          +     0.15562142019257 * Marital_StatusMarried
259807    +          +    -0.11924929825992 * Marital_StatusSingle
259808    +          +     0.19445161712576 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25100863467838 * Marital_StatusDivorced + 
0.15562142019257 * Marital_StatusMarried + -0.11924929825992 * Marital_StatusSingle + 
0.19445161712576 * Marital_StatusTogether ;
259809    +   H12  = H12  +     0.58193215591516 * Marital_StatusDivorced
259810    +          +     0.27485963958922 * Marital_StatusMarried
259811    +          +    -0.46136322561544 * Marital_StatusSingle
259812    +          +     1.17785849262888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58193215591516 * Marital_StatusDivorced + 0.27485963958922 
* Marital_StatusMarried + -0.46136322561544 * Marital_StatusSingle + 1.17785849262888 * 
Marital_StatusTogether ;
259813    +   H13  = H13  +    -0.55576156297846 * Marital_StatusDivorced
259814    +          +     0.18663773247842 * Marital_StatusMarried
259815    +          +    -0.14692184711639 * Marital_StatusSingle
259816    +          +     0.40795003682635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.55576156297846 * Marital_StatusDivorced + 
0.18663773247842 * Marital_StatusMarried + -0.14692184711639 * Marital_StatusSingle + 
0.40795003682635 * Marital_StatusTogether ;
259817    +   H14  = H14  +    -1.70154958647134 * Marital_StatusDivorced
259818    +          +     -0.0143065674831 * Marital_StatusMarried
259819    +          +     0.13491720981006 * Marital_StatusSingle
259820    +          +     0.65058537454476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.70154958647134 * Marital_StatusDivorced + 
-0.0143065674831 * Marital_StatusMarried + 0.13491720981006 * Marital_StatusSingle + 
0.65058537454476 * Marital_StatusTogether ;
259821    +   H15  = H15  +    -0.57735977480465 * Marital_StatusDivorced
259822    +          +    -1.18521635425485 * Marital_StatusMarried
259823    +          +     1.27858890561049 * Marital_StatusSingle
259824    +          +    -0.68308863502606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.57735977480465 * Marital_StatusDivorced + 
-1.18521635425485 * Marital_StatusMarried + 1.27858890561049 * Marital_StatusSingle + 
-0.68308863502606 * Marital_StatusTogether ;
259825    +   H11  =     0.91898399777449 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91898399777449 + H11 ;
259826    +   H12  =    -0.65172531168643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.65172531168643 + H12 ;
259827    +   H13  =     2.21950020718323 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.21950020718323 + H13 ;
259828    +   H14  =     0.94167989308741 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.94167989308741 + H14 ;
259829    +   H15  =    -2.75049414690283 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.75049414690283 + H15 ;
259830    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
259831    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
259832    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
259833    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
259834    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
259835    +END;
MPRINT(EM_DIAGRAM):   END;
259836    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259837    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
259838    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
259839    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
259840    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
259841    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
259842    +END;
MPRINT(EM_DIAGRAM):   END;
259843    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259844    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
259845    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259846    +
259847    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
259848    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
259849    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
259850    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
259851    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
259852    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
259853    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
259854    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
259855    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
259856    +end;
MPRINT(EM_DIAGRAM):   end;
259857    +else do;
MPRINT(EM_DIAGRAM):   else do;
259858    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
259859    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
259860    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
259861    +   end;
MPRINT(EM_DIAGRAM):   end;
259862    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
259863    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
259864    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
259865    +   end;
MPRINT(EM_DIAGRAM):   end;
259866    +   else do;
MPRINT(EM_DIAGRAM):   else do;
259867    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
259868    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
259869    +   end;
MPRINT(EM_DIAGRAM):   end;
259870    +end;
MPRINT(EM_DIAGRAM):   end;
259871    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
259872    +   P_DepVar1  =    -7.73278760171706 * H11  +    -1.81420899061277 * H12
259873    +          +      7.8974780725891 * H13  +    -2.47430312661533 * H14
259874    +          +       3.637554312671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.73278760171706 * H11 + -1.81420899061277 * H12 + 
7.8974780725891 * H13 + -2.47430312661533 * H14 + 3.637554312671 * H15 ;
259875    +   P_DepVar1  =    -2.27177312353398 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.27177312353398 + P_DepVar1 ;
259876    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
259877    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
259878    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
259879    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
259880    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
259881    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
259882    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
259883    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
259884    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
259885    +END;
MPRINT(EM_DIAGRAM):   END;
259886    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
259887    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
259888    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
259889    +END;
MPRINT(EM_DIAGRAM):   END;
259890    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
259891    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
259892    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
259893    +END;
MPRINT(EM_DIAGRAM):   END;
259894    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
259895    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
259896    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
259897    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
259898    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
259899    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
259900    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
259901    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259902    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
259903    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
259904    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
259905    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
259906    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
259907    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
259908    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
259909    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
259910    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
259911    +END;
MPRINT(EM_DIAGRAM):   END;
259912    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
259913    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
259914    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
259915    +drop
259916    +H11
259917    +H12
259918    +H13
259919    +H14
259920    +H15
259921    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
259922    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
259923    +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
259924    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259925    +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
259926    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259927    +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
259928    +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
259929    +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
259930    +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
259931    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259932    +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
259933    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259934    +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
259935    +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
259936    +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
259937    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259938    +* Ensmbl24: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 2 of 7;
259939    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259940    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259941    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
259942    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
259943    +* NODE: AutoNeural38;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural38;
259944    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
259945    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
259946    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
259947    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
259948    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
259949    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
259950    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
259951    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
259952    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
259953    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
259954    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
259955    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
259956    +LENGTH _WARN_ $4
259957    +      F_DepVar  $ 12
259958    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
259959    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
259960    +
259961    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
259962    +
259963    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
259964    +
259965    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
259966    +
259967    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
259968    +
259969    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
259970    +
259971    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
259972    +
259973    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
259974    +
259975    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
259976    +
259977    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
259978    +
259979    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
259980    +
259981    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
259982    +
259983    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
259984    +
259985    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
259986    +
259987    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
259988    +
259989    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
259990    +
259991    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
259992    +
259993    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
259994    +
259995    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
259996    +
259997    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
259998    +
259999    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
260000    +
260001    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
260002    +
260003    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
260004    +
260005    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
260006    +
260007    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
260008    +
260009    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
260010    +
260011    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
260012    +
260013    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
260014    +
260015    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
260016    +
260017    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
260018    +
260019    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
260020    +
260021    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
260022    +
260023    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
260024    +
260025    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
260026    +
260027    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
260028    +
260029    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
260030    +
260031    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
260032    +
260033    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
260034    +
260035    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
260036    +
260037    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
260038    +
260039    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
260040    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
260041    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
260042    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
260043    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
260044    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
260045    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
260046    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
260047    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
260048    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
260049    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
260050    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
260051    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
260052    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
260053    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260054    +end;
MPRINT(EM_DIAGRAM):   end;
260055    +else do;
MPRINT(EM_DIAGRAM):   else do;
260056    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
260057    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
260058    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
260059    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
260060    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
260061    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
260062    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
260063    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
260064    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260065    +         end;
MPRINT(EM_DIAGRAM):   end;
260066    +         else do;
MPRINT(EM_DIAGRAM):   else do;
260067    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
260068    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
260069    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260070    +            end;
MPRINT(EM_DIAGRAM):   end;
260071    +         end;
MPRINT(EM_DIAGRAM):   end;
260072    +      end;
MPRINT(EM_DIAGRAM):   end;
260073    +      else do;
MPRINT(EM_DIAGRAM):   else do;
260074    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
260075    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
260076    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260077    +         end;
MPRINT(EM_DIAGRAM):   end;
260078    +      end;
MPRINT(EM_DIAGRAM):   end;
260079    +   end;
MPRINT(EM_DIAGRAM):   end;
260080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
260081    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
260082    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
260083    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260084    +      end;
MPRINT(EM_DIAGRAM):   end;
260085    +      else do;
MPRINT(EM_DIAGRAM):   else do;
260086    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
260087    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
260088    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
260089    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
260090    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
260091    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260092    +         end;
MPRINT(EM_DIAGRAM):   end;
260093    +      end;
MPRINT(EM_DIAGRAM):   end;
260094    +   end;
MPRINT(EM_DIAGRAM):   end;
260095    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
260096    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
260097    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
260098    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
260099    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
260100    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
260101    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260102    +   end;
MPRINT(EM_DIAGRAM):   end;
260103    +end;
MPRINT(EM_DIAGRAM):   end;
260104    +
260105    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260106    +*** Checking missing input Interval
260107    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
260108    +
260109    +IF NMISS(
260110    +   AcceptedCmpTotal ,
260111    +   Frq ,
260112    +   Mnt ,
260113    +   MntMeatProducts ,
260114    +   NumCatalogPurchases ,
260115    +   NumDealsPurchases ,
260116    +   NumWebVisitsMonth ,
260117    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
260118    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
260119    +
260120    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260121    +END;
MPRINT(EM_DIAGRAM):   END;
260122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260123    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
260124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260125    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260126    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
260127    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
260128    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
260129    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
260130    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
260131    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
260132    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
260133    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
260134    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
260135    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
260136    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
260137    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
260138    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
260139    +END;
MPRINT(EM_DIAGRAM):   END;
260140    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260141    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
260142    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
260143    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
260144    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
260145    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
260146    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
260147    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
260148    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
260149    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
260150    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
260151    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
260152    +   ELSE S_NumCatalogPurchases
260153    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
260154    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
260155    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
260156    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
260157    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
260158    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
260159    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
260160    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
260161    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
260162    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
260163    +END;
MPRINT(EM_DIAGRAM):   END;
260164    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260165    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
260166    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260167    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260168    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
260169    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260170    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260171    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
260172    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
260173    +          +     3.02405267314398 * S_MntMeatProducts
260174    +          +     0.25422172488707 * S_NumCatalogPurchases
260175    +          +     0.25977266371328 * S_NumDealsPurchases
260176    +          +    -0.26865365728773 * S_NumWebVisitsMonth
260177    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
260178    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
260179    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
260180    +          +    -0.64419071408502 * S_MntMeatProducts
260181    +          +    -0.49060224303044 * S_NumCatalogPurchases
260182    +          +    -0.04840762943457 * S_NumDealsPurchases
260183    +          +     -0.7656247386051 * S_NumWebVisitsMonth
260184    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
260185    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
260186    +          +    -0.05888536499281 * Marital_StatusMarried
260187    +          +    -0.22627441829205 * Marital_StatusSingle
260188    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
260189    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
260190    +          +     0.82536605771339 * Marital_StatusMarried
260191    +          +    -0.97196770004098 * Marital_StatusSingle
260192    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
260193    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
260194    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
260195    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
260196    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
260197    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
260198    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
260199    +END;
MPRINT(EM_DIAGRAM):   END;
260200    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260201    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
260202    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
260203    +END;
MPRINT(EM_DIAGRAM):   END;
260204    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260205    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
260206    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260207    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260208    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
260209    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
260210    +          +    -1.52187144029368 * S_MntMeatProducts
260211    +          +    -0.17233011764417 * S_NumCatalogPurchases
260212    +          +     0.08681674245114 * S_NumDealsPurchases
260213    +          +     0.13308256651831 * S_NumWebVisitsMonth
260214    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
260215    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
260216    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
260217    +          +     0.66187267823731 * S_MntMeatProducts
260218    +          +     1.52530454111654 * S_NumCatalogPurchases
260219    +          +     0.73982889008686 * S_NumDealsPurchases
260220    +          +     1.03760708665776 * S_NumWebVisitsMonth
260221    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
260222    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
260223    +          +    -0.57121500191985 * Marital_StatusMarried
260224    +          +     0.00575301863466 * Marital_StatusSingle
260225    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
260226    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
260227    +          +     0.68382990555761 * Marital_StatusMarried
260228    +          +    -0.40241665873988 * Marital_StatusSingle
260229    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
260230    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
260231    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
260232    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
260233    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
260234    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
260235    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
260236    +END;
MPRINT(EM_DIAGRAM):   END;
260237    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260238    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
260239    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
260240    +END;
MPRINT(EM_DIAGRAM):   END;
260241    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260242    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
260243    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260244    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260245    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
260246    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
260247    +          +    -2.40830591527574 * S_MntMeatProducts
260248    +          +    -0.89296864866675 * S_NumCatalogPurchases
260249    +          +     1.79889409325514 * S_NumDealsPurchases
260250    +          +    -0.33765715793031 * S_NumWebVisitsMonth
260251    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
260252    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
260253    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
260254    +          +     0.04224245417831 * S_MntMeatProducts
260255    +          +     0.25836861794607 * S_NumCatalogPurchases
260256    +          +     2.47909264202917 * S_NumDealsPurchases
260257    +          +     0.14790226792406 * S_NumWebVisitsMonth
260258    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
260259    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
260260    +          +     0.39103795234666 * Marital_StatusMarried
260261    +          +    -0.52822284221545 * Marital_StatusSingle
260262    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
260263    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
260264    +          +       1.975579060233 * Marital_StatusMarried
260265    +          +     0.15028521746762 * Marital_StatusSingle
260266    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
260267    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
260268    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
260269    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
260270    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
260271    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
260272    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
260273    +END;
MPRINT(EM_DIAGRAM):   END;
260274    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260275    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
260276    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
260277    +END;
MPRINT(EM_DIAGRAM):   END;
260278    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260279    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
260280    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260281    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260282    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
260283    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
260284    +          +     0.16060225059391 * S_MntMeatProducts
260285    +          +     1.53093292630033 * S_NumCatalogPurchases
260286    +          +     0.39573641806699 * S_NumDealsPurchases
260287    +          +    -0.95387142126649 * S_NumWebVisitsMonth
260288    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
260289    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
260290    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
260291    +          +     0.71628478327205 * S_MntMeatProducts
260292    +          +     0.15890352363556 * S_NumCatalogPurchases
260293    +          +    -1.12928875468011 * S_NumDealsPurchases
260294    +          +    -0.30108145274307 * S_NumWebVisitsMonth
260295    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
260296    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
260297    +          +     0.91966160839643 * Marital_StatusMarried
260298    +          +    -0.63411090570397 * Marital_StatusSingle
260299    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
260300    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
260301    +          +     0.77230489026504 * Marital_StatusMarried
260302    +          +     0.20456495503812 * Marital_StatusSingle
260303    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
260304    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
260305    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
260306    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
260307    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
260308    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
260309    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
260310    +END;
MPRINT(EM_DIAGRAM):   END;
260311    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260312    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
260313    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
260314    +END;
MPRINT(EM_DIAGRAM):   END;
260315    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260316    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
260317    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260318    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260319    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
260320    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
260321    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
260322    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
260323    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
260324    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
260325    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
260326    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
260327    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
260328    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
260329    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
260330    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
260331    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
260332    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
260333    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
260334    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
260335    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
260336    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
260337    +END;
MPRINT(EM_DIAGRAM):   END;
260338    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260339    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
260340    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
260341    +END;
MPRINT(EM_DIAGRAM):   END;
260342    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260343    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
260344    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260345    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260346    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
260347    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
260348    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
260349    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
260350    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
260351    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
260352    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
260353    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
260354    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
260355    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
260356    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
260357    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
260358    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
260359    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
260360    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
260361    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
260362    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
260363    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
260364    +END;
MPRINT(EM_DIAGRAM):   END;
260365    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260366    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
260367    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
260368    +END;
MPRINT(EM_DIAGRAM):   END;
260369    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260370    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
260371    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260372    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260373    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
260374    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
260375    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
260376    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
260377    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
260378    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
260379    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
260380    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
260381    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
260382    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
260383    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
260384    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
260385    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
260386    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
260387    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
260388    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
260389    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
260390    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
260391    +END;
MPRINT(EM_DIAGRAM):   END;
260392    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260393    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
260394    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
260395    +END;
MPRINT(EM_DIAGRAM):   END;
260396    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260397    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
260398    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260399    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260400    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
260401    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
260402    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
260403    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
260404    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
260405    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
260406    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
260407    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
260408    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
260409    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
260410    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
260411    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
260412    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
260413    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
260414    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
260415    +END;
MPRINT(EM_DIAGRAM):   END;
260416    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260417    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
260418    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
260419    +END;
MPRINT(EM_DIAGRAM):   END;
260420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260421    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
260422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260423    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260424    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
260425    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
260426    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
260427    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
260428    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
260429    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
260430    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
260431    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
260432    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
260433    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
260434    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
260435    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
260436    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
260437    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
260438    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
260439    +END;
MPRINT(EM_DIAGRAM):   END;
260440    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260441    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
260442    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
260443    +END;
MPRINT(EM_DIAGRAM):   END;
260444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260445    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
260446    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260447    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260448    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
260449    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
260450    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
260451    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
260452    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
260453    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
260454    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
260455    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
260456    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
260457    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
260458    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
260459    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
260460    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
260461    +END;
MPRINT(EM_DIAGRAM):   END;
260462    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260463    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
260464    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
260465    +END;
MPRINT(EM_DIAGRAM):   END;
260466    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260467    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
260468    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260469    +
260470    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
260471    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
260472    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
260473    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
260474    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
260475    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
260476    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
260477    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
260478    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
260479    +end;
MPRINT(EM_DIAGRAM):   end;
260480    +else do;
MPRINT(EM_DIAGRAM):   else do;
260481    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
260482    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
260483    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
260484    +   end;
MPRINT(EM_DIAGRAM):   end;
260485    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
260486    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
260487    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
260488    +   end;
MPRINT(EM_DIAGRAM):   end;
260489    +   else do;
MPRINT(EM_DIAGRAM):   else do;
260490    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
260491    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
260492    +   end;
MPRINT(EM_DIAGRAM):   end;
260493    +end;
MPRINT(EM_DIAGRAM):   end;
260494    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260495    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
260496    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
260497    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
260498    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
260499    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
260500    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
260501    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
260502    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
260503    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
260504    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
260505    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
260506    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
260507    +END;
MPRINT(EM_DIAGRAM):   END;
260508    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260509    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
260510    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
260511    +END;
MPRINT(EM_DIAGRAM):   END;
260512    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
260513    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
260514    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
260515    +END;
MPRINT(EM_DIAGRAM):   END;
260516    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
260517    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
260518    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
260519    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
260520    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
260521    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
260522    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
260523    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260524    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
260525    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260526    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
260527    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
260528    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
260529    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
260530    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
260531    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
260532    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
260533    +END;
MPRINT(EM_DIAGRAM):   END;
260534    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
260535    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
260536    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
260537    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
260538    +* Renaming variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural38;
260539    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260540    +* Renaming Posterior variables for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural38;
260541    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260542    +drop AutoNeural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar1;
260543    +AutoNeural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar1 = P_DepVar1;
260544    +drop AutoNeural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_P_DepVar0;
260545    +AutoNeural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural38_P_DepVar0 = P_DepVar0;
260546    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260547    +* Renaming _WARN_ variable for AutoNeural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural38;
260548    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260549    +length AutoNeural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural38_WARN_ $4;
260550    +drop AutoNeural38_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural38_WARN_;
260551    +AutoNeural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural38_WARN_ = _WARN_;
260552    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260553    +* Ensmbl24: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 3 of 7;
260554    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260555    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260556    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
260557    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
260558    +* NODE: AutoNeural39;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural39;
260559    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260560    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
260561    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
260562    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
260563    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
260564    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
260565    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
260566    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
260567    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
260568    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
260569    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
260570    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
260571    +LENGTH _WARN_ $4
260572    +      F_DepVar  $ 12
260573    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
260574    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
260575    +
260576    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
260577    +
260578    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
260579    +
260580    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
260581    +
260582    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
260583    +
260584    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
260585    +
260586    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
260587    +
260588    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
260589    +
260590    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
260591    +
260592    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
260593    +
260594    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
260595    +
260596    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
260597    +
260598    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
260599    +
260600    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
260601    +
260602    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
260603    +
260604    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
260605    +
260606    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
260607    +
260608    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
260609    +
260610    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
260611    +
260612    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
260613    +
260614    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
260615    +
260616    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
260617    +
260618    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
260619    +
260620    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
260621    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
260622    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
260623    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
260624    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
260625    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
260626    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
260627    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
260628    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
260629    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
260630    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
260631    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
260632    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
260633    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
260634    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260635    +end;
MPRINT(EM_DIAGRAM):   end;
260636    +else do;
MPRINT(EM_DIAGRAM):   else do;
260637    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
260638    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
260639    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
260640    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
260641    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
260642    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
260643    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
260644    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
260645    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260646    +         end;
MPRINT(EM_DIAGRAM):   end;
260647    +         else do;
MPRINT(EM_DIAGRAM):   else do;
260648    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
260649    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
260650    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260651    +            end;
MPRINT(EM_DIAGRAM):   end;
260652    +         end;
MPRINT(EM_DIAGRAM):   end;
260653    +      end;
MPRINT(EM_DIAGRAM):   end;
260654    +      else do;
MPRINT(EM_DIAGRAM):   else do;
260655    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
260656    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
260657    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260658    +         end;
MPRINT(EM_DIAGRAM):   end;
260659    +      end;
MPRINT(EM_DIAGRAM):   end;
260660    +   end;
MPRINT(EM_DIAGRAM):   end;
260661    +   else do;
MPRINT(EM_DIAGRAM):   else do;
260662    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
260663    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
260664    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260665    +      end;
MPRINT(EM_DIAGRAM):   end;
260666    +      else do;
MPRINT(EM_DIAGRAM):   else do;
260667    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
260668    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
260669    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
260670    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
260671    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
260672    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260673    +         end;
MPRINT(EM_DIAGRAM):   end;
260674    +      end;
MPRINT(EM_DIAGRAM):   end;
260675    +   end;
MPRINT(EM_DIAGRAM):   end;
260676    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
260677    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
260678    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
260679    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
260680    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
260681    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
260682    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260683    +   end;
MPRINT(EM_DIAGRAM):   end;
260684    +end;
MPRINT(EM_DIAGRAM):   end;
260685    +
260686    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260687    +*** Checking missing input Interval
260688    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
260689    +
260690    +IF NMISS(
260691    +   AcceptedCmpTotal ,
260692    +   Frq ,
260693    +   Mnt ,
260694    +   MntMeatProducts ,
260695    +   NumCatalogPurchases ,
260696    +   NumDealsPurchases ,
260697    +   NumWebVisitsMonth ,
260698    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
260699    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
260700    +
260701    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260702    +END;
MPRINT(EM_DIAGRAM):   END;
260703    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260704    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
260705    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260706    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260707    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
260708    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
260709    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
260710    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
260711    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
260712    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
260713    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
260714    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
260715    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
260716    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
260717    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
260718    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
260719    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
260720    +END;
MPRINT(EM_DIAGRAM):   END;
260721    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260722    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
260723    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
260724    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
260725    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
260726    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
260727    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
260728    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
260729    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
260730    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
260731    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
260732    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
260733    +   ELSE S_NumCatalogPurchases
260734    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
260735    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
260736    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
260737    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
260738    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
260739    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
260740    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
260741    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
260742    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
260743    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
260744    +END;
MPRINT(EM_DIAGRAM):   END;
260745    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260746    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
260747    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260749    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
260750    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260751    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260752    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
260753    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
260754    +          +     0.02561809182055 * S_MntMeatProducts
260755    +          +     -0.1793288912734 * S_NumCatalogPurchases
260756    +          +    -0.37563080213093 * S_NumDealsPurchases
260757    +          +    -0.48858578777845 * S_NumWebVisitsMonth
260758    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
260759    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
260760    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
260761    +          +     1.94302986779634 * S_MntMeatProducts
260762    +          +      0.2669037763846 * S_NumCatalogPurchases
260763    +          +     0.29313104233947 * S_NumDealsPurchases
260764    +          +    -0.30591479309812 * S_NumWebVisitsMonth
260765    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
260766    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
260767    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
260768    +          +    -0.76055629383789 * S_MntMeatProducts
260769    +          +    -0.40114802991127 * S_NumCatalogPurchases
260770    +          +    -1.12215966034372 * S_NumDealsPurchases
260771    +          +    -0.30978133586417 * S_NumWebVisitsMonth
260772    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
260773    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
260774    +          +     0.20445663414925 * Marital_StatusMarried
260775    +          +     0.16369117386202 * Marital_StatusSingle
260776    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
260777    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
260778    +          +     0.09645374599508 * Marital_StatusMarried
260779    +          +     -0.0816282741981 * Marital_StatusSingle
260780    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
260781    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
260782    +          +     -3.9031880089591 * Marital_StatusMarried
260783    +          +      1.6995748309328 * Marital_StatusSingle
260784    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
260785    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
260786    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
260787    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
260788    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
260789    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
260790    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
260791    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
260792    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
260793    +END;
MPRINT(EM_DIAGRAM):   END;
260794    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260795    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
260796    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
260797    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
260798    +END;
MPRINT(EM_DIAGRAM):   END;
260799    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260800    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
260801    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260802    +
260803    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
260804    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
260805    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
260806    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
260807    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
260808    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
260809    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
260810    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
260811    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
260812    +end;
MPRINT(EM_DIAGRAM):   end;
260813    +else do;
MPRINT(EM_DIAGRAM):   else do;
260814    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
260815    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
260816    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
260817    +   end;
MPRINT(EM_DIAGRAM):   end;
260818    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
260819    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
260820    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
260821    +   end;
MPRINT(EM_DIAGRAM):   end;
260822    +   else do;
MPRINT(EM_DIAGRAM):   else do;
260823    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
260824    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
260825    +   end;
MPRINT(EM_DIAGRAM):   end;
260826    +end;
MPRINT(EM_DIAGRAM):   end;
260827    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
260828    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
260829    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
260830    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
260831    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
260832    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
260833    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
260834    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
260835    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
260836    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
260837    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
260838    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
260839    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
260840    +END;
MPRINT(EM_DIAGRAM):   END;
260841    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
260842    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
260843    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
260844    +END;
MPRINT(EM_DIAGRAM):   END;
260845    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
260846    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
260847    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
260848    +END;
MPRINT(EM_DIAGRAM):   END;
260849    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
260850    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
260851    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
260852    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
260853    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
260854    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
260855    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
260856    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260857    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
260858    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
260859    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
260860    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
260861    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
260862    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
260863    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
260864    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
260865    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
260866    +END;
MPRINT(EM_DIAGRAM):   END;
260867    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
260868    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
260869    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
260870    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
260871    +* Renaming variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural39;
260872    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260873    +* Renaming Posterior variables for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural39;
260874    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260875    +drop AutoNeural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar1;
260876    +AutoNeural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar1 = P_DepVar1;
260877    +drop AutoNeural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_P_DepVar0;
260878    +AutoNeural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural39_P_DepVar0 = P_DepVar0;
260879    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260880    +* Renaming _WARN_ variable for AutoNeural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural39;
260881    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260882    +length AutoNeural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural39_WARN_ $4;
260883    +drop AutoNeural39_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural39_WARN_;
260884    +AutoNeural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural39_WARN_ = _WARN_;
260885    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260886    +* Ensmbl24: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 4 of 7;
260887    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260888    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260889    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
260890    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
260891    +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
260892    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
260893    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
260894    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
260895    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
260896    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
260897    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
260898    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
260899    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
260900    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
260901    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
260902    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
260903    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
260904    +LENGTH _WARN_ $4
260905    +      F_DepVar  $ 12
260906    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
260907    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
260908    +
260909    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
260910    +
260911    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
260912    +
260913    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
260914    +
260915    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
260916    +
260917    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
260918    +
260919    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
260920    +
260921    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
260922    +
260923    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
260924    +
260925    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
260926    +
260927    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
260928    +
260929    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
260930    +
260931    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
260932    +
260933    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
260934    +
260935    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
260936    +
260937    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
260938    +
260939    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
260940    +
260941    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
260942    +
260943    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
260944    +
260945    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
260946    +
260947    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
260948    +
260949    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
260950    +
260951    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
260952    +
260953    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
260954    +
260955    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
260956    +
260957    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
260958    +
260959    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
260960    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
260961    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
260962    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
260963    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
260964    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
260965    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
260966    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
260967    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
260968    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
260969    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
260970    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
260971    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
260972    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
260973    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
260974    +end;
MPRINT(EM_DIAGRAM):   end;
260975    +else do;
MPRINT(EM_DIAGRAM):   else do;
260976    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
260977    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
260978    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
260979    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
260980    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
260981    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
260982    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
260983    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
260984    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260985    +         end;
MPRINT(EM_DIAGRAM):   end;
260986    +         else do;
MPRINT(EM_DIAGRAM):   else do;
260987    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
260988    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
260989    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260990    +            end;
MPRINT(EM_DIAGRAM):   end;
260991    +         end;
MPRINT(EM_DIAGRAM):   end;
260992    +      end;
MPRINT(EM_DIAGRAM):   end;
260993    +      else do;
MPRINT(EM_DIAGRAM):   else do;
260994    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
260995    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
260996    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
260997    +         end;
MPRINT(EM_DIAGRAM):   end;
260998    +      end;
MPRINT(EM_DIAGRAM):   end;
260999    +   end;
MPRINT(EM_DIAGRAM):   end;
261000    +   else do;
MPRINT(EM_DIAGRAM):   else do;
261001    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
261002    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
261003    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261004    +      end;
MPRINT(EM_DIAGRAM):   end;
261005    +      else do;
MPRINT(EM_DIAGRAM):   else do;
261006    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
261007    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
261008    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
261009    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
261010    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
261011    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261012    +         end;
MPRINT(EM_DIAGRAM):   end;
261013    +      end;
MPRINT(EM_DIAGRAM):   end;
261014    +   end;
MPRINT(EM_DIAGRAM):   end;
261015    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
261016    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
261017    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
261018    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
261019    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
261020    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
261021    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261022    +   end;
MPRINT(EM_DIAGRAM):   end;
261023    +end;
MPRINT(EM_DIAGRAM):   end;
261024    +
261025    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261026    +*** Checking missing input Interval
261027    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
261028    +
261029    +IF NMISS(
261030    +   AcceptedCmpTotal ,
261031    +   Frq ,
261032    +   Mnt ,
261033    +   MntMeatProducts ,
261034    +   NumCatalogPurchases ,
261035    +   NumDealsPurchases ,
261036    +   NumWebVisitsMonth ,
261037    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
261038    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
261039    +
261040    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261041    +END;
MPRINT(EM_DIAGRAM):   END;
261042    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261043    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
261044    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261045    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261046    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
261047    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
261048    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
261049    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
261050    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
261051    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
261052    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
261053    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
261054    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
261055    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
261056    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
261057    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
261058    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
261059    +END;
MPRINT(EM_DIAGRAM):   END;
261060    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261061    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
261062    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
261063    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
261064    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
261065    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
261066    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
261067    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
261068    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
261069    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
261070    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
261071    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
261072    +   ELSE S_NumCatalogPurchases
261073    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
261074    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
261075    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
261076    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
261077    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
261078    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
261079    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
261080    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
261081    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
261082    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
261083    +END;
MPRINT(EM_DIAGRAM):   END;
261084    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261085    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
261086    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261087    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261088    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
261089    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261090    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261091    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
261092    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
261093    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
261094    +          +    -0.06020302160033 * S_NumDealsPurchases
261095    +          +    -0.72187271327886 * S_NumWebVisitsMonth
261096    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
261097    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
261098    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
261099    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
261100    +          +     0.44023370306786 * S_NumDealsPurchases
261101    +          +     0.14437092902564 * S_NumWebVisitsMonth
261102    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
261103    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
261104    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
261105    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
261106    +          +     0.36494720404815 * S_NumDealsPurchases
261107    +          +     0.03877838723538 * S_NumWebVisitsMonth
261108    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
261109    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
261110    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
261111    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
261112    +          +    -0.87171784420951 * S_NumDealsPurchases
261113    +          +     0.27077171192055 * S_NumWebVisitsMonth
261114    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
261115    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
261116    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
261117    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
261118    +          +    -0.02694744085713 * S_NumDealsPurchases
261119    +          +     0.42930866809604 * S_NumWebVisitsMonth
261120    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
261121    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
261122    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
261123    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
261124    +          +     1.91827561352967 * S_NumDealsPurchases
261125    +          +    -0.65112089304736 * S_NumWebVisitsMonth
261126    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
261127    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
261128    +          +     0.19571272479408 * Marital_StatusMarried
261129    +          +    -0.16061908960963 * Marital_StatusSingle
261130    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
261131    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
261132    +          +    -0.64968872046859 * Marital_StatusMarried
261133    +          +     1.81995301340231 * Marital_StatusSingle
261134    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
261135    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
261136    +          +     0.19296467458933 * Marital_StatusMarried
261137    +          +     -0.2295693568996 * Marital_StatusSingle
261138    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
261139    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
261140    +          +    -0.12318541826308 * Marital_StatusMarried
261141    +          +    -0.02882902763243 * Marital_StatusSingle
261142    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
261143    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
261144    +          +    -0.65544681605691 * Marital_StatusMarried
261145    +          +     0.31269236164873 * Marital_StatusSingle
261146    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
261147    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
261148    +          +     0.12269709457787 * Marital_StatusMarried
261149    +          +     0.37106402586008 * Marital_StatusSingle
261150    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
261151    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
261152    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
261153    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
261154    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
261155    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
261156    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
261157    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
261158    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
261159    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
261160    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
261161    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
261162    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
261163    +END;
MPRINT(EM_DIAGRAM):   END;
261164    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261165    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
261166    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
261167    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
261168    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
261169    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
261170    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
261171    +END;
MPRINT(EM_DIAGRAM):   END;
261172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261173    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
261174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261175    +
261176    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
261177    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
261178    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
261179    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
261180    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
261181    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
261182    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
261183    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
261184    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
261185    +end;
MPRINT(EM_DIAGRAM):   end;
261186    +else do;
MPRINT(EM_DIAGRAM):   else do;
261187    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
261188    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
261189    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
261190    +   end;
MPRINT(EM_DIAGRAM):   end;
261191    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
261192    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
261193    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
261194    +   end;
MPRINT(EM_DIAGRAM):   end;
261195    +   else do;
MPRINT(EM_DIAGRAM):   else do;
261196    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
261197    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
261198    +   end;
MPRINT(EM_DIAGRAM):   end;
261199    +end;
MPRINT(EM_DIAGRAM):   end;
261200    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261201    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
261202    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
261203    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
261204    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
261205    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
261206    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
261207    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
261208    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
261209    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
261210    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
261211    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
261212    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
261213    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
261214    +END;
MPRINT(EM_DIAGRAM):   END;
261215    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261216    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
261217    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
261218    +END;
MPRINT(EM_DIAGRAM):   END;
261219    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
261220    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
261221    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
261222    +END;
MPRINT(EM_DIAGRAM):   END;
261223    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
261224    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
261225    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
261226    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
261227    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
261228    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
261229    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
261230    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261231    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
261232    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261233    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
261234    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
261235    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
261236    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
261237    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
261238    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
261239    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
261240    +END;
MPRINT(EM_DIAGRAM):   END;
261241    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
261242    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
261243    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
261244    +drop
261245    +H11
261246    +H12
261247    +H13
261248    +H14
261249    +H15
261250    +H16
261251    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
261252    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
261253    +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
261254    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261255    +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
261256    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261257    +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
261258    +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
261259    +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
261260    +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
261261    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261262    +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
261263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261264    +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
261265    +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
261266    +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
261267    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261268    +* Ensmbl24: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 5 of 7;
261269    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261270    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261271    +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
261272    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
261273    +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
261274    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261275    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
261276    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
261277    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
261278    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
261279    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
261280    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
261281    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
261282    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
261283    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
261284    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
261285    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
261286    +LENGTH _WARN_ $4
261287    +      F_DepVar  $ 12
261288    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
261289    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
261290    +
261291    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
261292    +
261293    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
261294    +
261295    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
261296    +
261297    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
261298    +
261299    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
261300    +
261301    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
261302    +
261303    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
261304    +
261305    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
261306    +
261307    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
261308    +
261309    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
261310    +
261311    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
261312    +
261313    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
261314    +
261315    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
261316    +
261317    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
261318    +
261319    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
261320    +
261321    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
261322    +
261323    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
261324    +
261325    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
261326    +
261327    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
261328    +
261329    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
261330    +
261331    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
261332    +
261333    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
261334    +
261335    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
261336    +
261337    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
261338    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
261339    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
261340    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
261341    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
261342    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
261343    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
261344    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
261345    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
261346    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
261347    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
261348    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
261349    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
261350    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
261351    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261352    +end;
MPRINT(EM_DIAGRAM):   end;
261353    +else do;
MPRINT(EM_DIAGRAM):   else do;
261354    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
261355    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
261356    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
261357    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
261358    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
261359    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
261360    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
261361    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
261362    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261363    +         end;
MPRINT(EM_DIAGRAM):   end;
261364    +         else do;
MPRINT(EM_DIAGRAM):   else do;
261365    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
261366    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
261367    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261368    +            end;
MPRINT(EM_DIAGRAM):   end;
261369    +         end;
MPRINT(EM_DIAGRAM):   end;
261370    +      end;
MPRINT(EM_DIAGRAM):   end;
261371    +      else do;
MPRINT(EM_DIAGRAM):   else do;
261372    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
261373    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
261374    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261375    +         end;
MPRINT(EM_DIAGRAM):   end;
261376    +      end;
MPRINT(EM_DIAGRAM):   end;
261377    +   end;
MPRINT(EM_DIAGRAM):   end;
261378    +   else do;
MPRINT(EM_DIAGRAM):   else do;
261379    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
261380    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
261381    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261382    +      end;
MPRINT(EM_DIAGRAM):   end;
261383    +      else do;
MPRINT(EM_DIAGRAM):   else do;
261384    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
261385    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
261386    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
261387    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
261388    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
261389    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261390    +         end;
MPRINT(EM_DIAGRAM):   end;
261391    +      end;
MPRINT(EM_DIAGRAM):   end;
261392    +   end;
MPRINT(EM_DIAGRAM):   end;
261393    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
261394    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
261395    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
261396    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
261397    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
261398    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
261399    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261400    +   end;
MPRINT(EM_DIAGRAM):   end;
261401    +end;
MPRINT(EM_DIAGRAM):   end;
261402    +
261403    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261404    +*** Checking missing input Interval
261405    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
261406    +
261407    +IF NMISS(
261408    +   AcceptedCmpTotal ,
261409    +   Frq ,
261410    +   Mnt ,
261411    +   MntMeatProducts ,
261412    +   NumCatalogPurchases ,
261413    +   NumDealsPurchases ,
261414    +   NumWebVisitsMonth ,
261415    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
261416    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
261417    +
261418    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261419    +END;
MPRINT(EM_DIAGRAM):   END;
261420    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261421    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
261422    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261423    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261424    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
261425    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
261426    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
261427    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
261428    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
261429    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
261430    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
261431    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
261432    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
261433    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
261434    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
261435    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
261436    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
261437    +END;
MPRINT(EM_DIAGRAM):   END;
261438    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261439    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
261440    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
261441    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
261442    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
261443    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
261444    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
261445    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
261446    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
261447    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
261448    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
261449    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
261450    +   ELSE S_NumCatalogPurchases
261451    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
261452    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
261453    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
261454    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
261455    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
261456    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
261457    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
261458    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
261459    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
261460    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
261461    +END;
MPRINT(EM_DIAGRAM):   END;
261462    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261463    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
261464    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261465    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261466    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
261467    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261468    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261469    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
261470    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
261471    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
261472    +          +       0.868651674737 * S_NumDealsPurchases
261473    +          +     0.56519310644826 * S_NumWebVisitsMonth
261474    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
261475    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
261476    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
261477    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
261478    +          +     0.22588169231784 * S_NumDealsPurchases
261479    +          +    -0.50349429270665 * S_NumWebVisitsMonth
261480    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
261481    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
261482    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
261483    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
261484    +          +     0.38270609344543 * S_NumDealsPurchases
261485    +          +    -0.67911374483005 * S_NumWebVisitsMonth
261486    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
261487    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
261488    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
261489    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
261490    +          +    -0.27211575710638 * S_NumDealsPurchases
261491    +          +    -0.27365412530976 * S_NumWebVisitsMonth
261492    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
261493    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
261494    +          +     0.26671394907331 * Marital_StatusMarried
261495    +          +    -0.21412689047791 * Marital_StatusSingle
261496    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
261497    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
261498    +          +      0.8828544386185 * Marital_StatusMarried
261499    +          +    -0.82952673399486 * Marital_StatusSingle
261500    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
261501    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
261502    +          +     0.43581055671108 * Marital_StatusMarried
261503    +          +    -0.37028703904727 * Marital_StatusSingle
261504    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
261505    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
261506    +          +     -0.1219875250835 * Marital_StatusMarried
261507    +          +    -0.01813173038471 * Marital_StatusSingle
261508    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
261509    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
261510    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
261511    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
261512    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
261513    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
261514    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
261515    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
261516    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
261517    +END;
MPRINT(EM_DIAGRAM):   END;
261518    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261519    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
261520    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
261521    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
261522    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
261523    +END;
MPRINT(EM_DIAGRAM):   END;
261524    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261525    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
261526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261527    +
261528    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
261529    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
261530    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
261531    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
261532    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
261533    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
261534    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
261535    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
261536    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
261537    +end;
MPRINT(EM_DIAGRAM):   end;
261538    +else do;
MPRINT(EM_DIAGRAM):   else do;
261539    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
261540    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
261541    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
261542    +   end;
MPRINT(EM_DIAGRAM):   end;
261543    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
261544    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
261545    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
261546    +   end;
MPRINT(EM_DIAGRAM):   end;
261547    +   else do;
MPRINT(EM_DIAGRAM):   else do;
261548    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
261549    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
261550    +   end;
MPRINT(EM_DIAGRAM):   end;
261551    +end;
MPRINT(EM_DIAGRAM):   end;
261552    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261553    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
261554    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
261555    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
261556    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
261557    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
261558    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
261559    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
261560    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
261561    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
261562    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
261563    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
261564    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
261565    +END;
MPRINT(EM_DIAGRAM):   END;
261566    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261567    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
261568    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
261569    +END;
MPRINT(EM_DIAGRAM):   END;
261570    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
261571    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
261572    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
261573    +END;
MPRINT(EM_DIAGRAM):   END;
261574    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
261575    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
261576    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
261577    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
261578    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
261579    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
261580    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
261581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261582    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
261583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261584    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
261585    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
261586    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
261587    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
261588    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
261589    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
261590    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
261591    +END;
MPRINT(EM_DIAGRAM):   END;
261592    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
261593    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
261594    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
261595    +drop
261596    +H11
261597    +H12
261598    +H13
261599    +H14
261600    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
261601    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
261602    +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
261603    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261604    +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
261605    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261606    +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
261607    +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
261608    +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
261609    +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
261610    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261611    +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
261612    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261613    +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
261614    +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
261615    +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
261616    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261617    +* Ensmbl24: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 6 of 7;
261618    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261619    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261620    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
261621    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
261622    +* NODE: AutoNeural37;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural37;
261623    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261624    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
261625    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
261626    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
261627    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
261628    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
261629    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
261630    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
261631    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
261632    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
261633    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
261634    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
261635    +LENGTH _WARN_ $4
261636    +      F_DepVar  $ 12
261637    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
261638    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
261639    +
261640    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
261641    +
261642    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
261643    +
261644    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
261645    +
261646    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
261647    +
261648    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
261649    +
261650    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
261651    +
261652    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
261653    +
261654    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
261655    +
261656    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
261657    +
261658    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
261659    +
261660    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
261661    +
261662    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
261663    +
261664    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
261665    +
261666    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
261667    +
261668    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
261669    +
261670    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
261671    +
261672    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
261673    +
261674    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
261675    +
261676    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
261677    +
261678    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
261679    +
261680    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
261681    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
261682    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
261683    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
261684    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
261685    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
261686    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
261687    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
261688    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
261689    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
261690    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
261691    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
261692    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
261693    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
261694    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261695    +end;
MPRINT(EM_DIAGRAM):   end;
261696    +else do;
MPRINT(EM_DIAGRAM):   else do;
261697    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
261698    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
261699    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
261700    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
261701    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
261702    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
261703    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
261704    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
261705    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261706    +         end;
MPRINT(EM_DIAGRAM):   end;
261707    +         else do;
MPRINT(EM_DIAGRAM):   else do;
261708    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
261709    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
261710    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261711    +            end;
MPRINT(EM_DIAGRAM):   end;
261712    +         end;
MPRINT(EM_DIAGRAM):   end;
261713    +      end;
MPRINT(EM_DIAGRAM):   end;
261714    +      else do;
MPRINT(EM_DIAGRAM):   else do;
261715    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
261716    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
261717    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261718    +         end;
MPRINT(EM_DIAGRAM):   end;
261719    +      end;
MPRINT(EM_DIAGRAM):   end;
261720    +   end;
MPRINT(EM_DIAGRAM):   end;
261721    +   else do;
MPRINT(EM_DIAGRAM):   else do;
261722    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
261723    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
261724    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261725    +      end;
MPRINT(EM_DIAGRAM):   end;
261726    +      else do;
MPRINT(EM_DIAGRAM):   else do;
261727    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
261728    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
261729    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
261730    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
261731    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
261732    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
261733    +         end;
MPRINT(EM_DIAGRAM):   end;
261734    +      end;
MPRINT(EM_DIAGRAM):   end;
261735    +   end;
MPRINT(EM_DIAGRAM):   end;
261736    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
261737    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
261738    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
261739    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
261740    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
261741    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
261742    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261743    +   end;
MPRINT(EM_DIAGRAM):   end;
261744    +end;
MPRINT(EM_DIAGRAM):   end;
261745    +
261746    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261747    +*** Checking missing input Interval
261748    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
261749    +
261750    +IF NMISS(
261751    +   AcceptedCmpTotal ,
261752    +   Frq ,
261753    +   Mnt ,
261754    +   MntMeatProducts ,
261755    +   NumCatalogPurchases ,
261756    +   NumDealsPurchases ,
261757    +   NumWebVisitsMonth ,
261758    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
261759    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
261760    +
261761    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
261762    +END;
MPRINT(EM_DIAGRAM):   END;
261763    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261764    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
261765    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261766    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261767    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
261768    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
261769    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
261770    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
261771    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
261772    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
261773    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
261774    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
261775    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
261776    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
261777    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
261778    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
261779    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
261780    +END;
MPRINT(EM_DIAGRAM):   END;
261781    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261782    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
261783    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
261784    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
261785    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
261786    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
261787    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
261788    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
261789    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
261790    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
261791    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
261792    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
261793    +   ELSE S_NumCatalogPurchases
261794    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
261795    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
261796    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
261797    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
261798    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
261799    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
261800    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
261801    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
261802    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
261803    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
261804    +END;
MPRINT(EM_DIAGRAM):   END;
261805    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261806    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
261807    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261808    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261809    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
261810    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261811    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261812    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
261813    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
261814    +          +     6.08901143667375 * S_MntMeatProducts
261815    +          +     2.21464286693249 * S_NumCatalogPurchases
261816    +          +     0.88693497635794 * S_NumDealsPurchases
261817    +          +    -0.16352347343851 * S_NumWebVisitsMonth
261818    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 * 
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 * 
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 * 
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
261819    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
261820    +          +     0.97693281807676 * Marital_StatusMarried
261821    +          +    -0.47353913752833 * Marital_StatusSingle
261822    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced + 
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle + 
0.72993998289048 * Marital_StatusTogether ;
261823    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
261824    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
261825    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
261826    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
261827    +END;
MPRINT(EM_DIAGRAM):   END;
261828    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261829    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
261830    +END;
MPRINT(EM_DIAGRAM):   END;
261831    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261832    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
261833    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261834    +
261835    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
261836    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
261837    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
261838    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
261839    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
261840    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
261841    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
261842    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
261843    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
261844    +end;
MPRINT(EM_DIAGRAM):   end;
261845    +else do;
MPRINT(EM_DIAGRAM):   else do;
261846    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
261847    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
261848    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
261849    +   end;
MPRINT(EM_DIAGRAM):   end;
261850    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
261851    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
261852    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
261853    +   end;
MPRINT(EM_DIAGRAM):   end;
261854    +   else do;
MPRINT(EM_DIAGRAM):   else do;
261855    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
261856    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
261857    +   end;
MPRINT(EM_DIAGRAM):   end;
261858    +end;
MPRINT(EM_DIAGRAM):   end;
261859    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
261860    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
261861    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
261862    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
261863    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
261864    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
261865    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
261866    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
261867    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
261868    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
261869    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
261870    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
261871    +END;
MPRINT(EM_DIAGRAM):   END;
261872    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
261873    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
261874    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
261875    +END;
MPRINT(EM_DIAGRAM):   END;
261876    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
261877    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
261878    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
261879    +END;
MPRINT(EM_DIAGRAM):   END;
261880    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
261881    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
261882    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
261883    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
261884    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
261885    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
261886    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
261887    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261888    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
261889    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
261890    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
261891    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
261892    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
261893    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
261894    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
261895    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
261896    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
261897    +END;
MPRINT(EM_DIAGRAM):   END;
261898    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
261899    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
261900    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
261901    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
261902    +* Renaming variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural37;
261903    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261904    +* Renaming Posterior variables for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural37;
261905    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261906    +drop AutoNeural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar1;
261907    +AutoNeural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar1 = P_DepVar1;
261908    +drop AutoNeural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_P_DepVar0;
261909    +AutoNeural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural37_P_DepVar0 = P_DepVar0;
261910    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261911    +* Renaming _WARN_ variable for AutoNeural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural37;
261912    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261913    +length AutoNeural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural37_WARN_ $4;
261914    +drop AutoNeural37_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural37_WARN_;
261915    +AutoNeural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural37_WARN_ = _WARN_;
261916    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261917    +* Ensmbl24: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 7 of 7;
261918    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261919    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261920    +* TOOL: AutoNeural;
MPRINT(EM_DIAGRAM):   * TOOL: AutoNeural;
261921    +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
261922    +* NODE: AutoNeural40;
MPRINT(EM_DIAGRAM):   * NODE: AutoNeural40;
261923    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
261924    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
261925    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
261926    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
261927    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
261928    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
261929    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
261930    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
261931    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
261932    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
261933    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
261934    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
261935    +LENGTH _WARN_ $4
261936    +      F_DepVar  $ 12
261937    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
261938    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
261939    +
261940    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
261941    +
261942    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
261943    +
261944    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
261945    +
261946    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
261947    +
261948    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
261949    +
261950    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
261951    +
261952    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
261953    +
261954    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
261955    +
261956    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
261957    +
261958    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
261959    +
261960    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
261961    +
261962    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
261963    +
261964    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
261965    +
261966    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
261967    +
261968    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
261969    +
261970    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
261971    +
261972    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
261973    +
261974    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
261975    +
261976    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
261977    +
261978    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
261979    +
261980    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
261981    +
261982    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
261983    +
261984    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
261985    +
261986    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
261987    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
261988    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
261989    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
261990    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
261991    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
261992    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
261993    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
261994    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
261995    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
261996    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
261997    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
261998    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
261999    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
262000    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
262001    +end;
MPRINT(EM_DIAGRAM):   end;
262002    +else do;
MPRINT(EM_DIAGRAM):   else do;
262003    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
262004    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
262005    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
262006    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
262007    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
262008    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
262009    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
262010    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
262011    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262012    +         end;
MPRINT(EM_DIAGRAM):   end;
262013    +         else do;
MPRINT(EM_DIAGRAM):   else do;
262014    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
262015    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
262016    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262017    +            end;
MPRINT(EM_DIAGRAM):   end;
262018    +         end;
MPRINT(EM_DIAGRAM):   end;
262019    +      end;
MPRINT(EM_DIAGRAM):   end;
262020    +      else do;
MPRINT(EM_DIAGRAM):   else do;
262021    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
262022    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
262023    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262024    +         end;
MPRINT(EM_DIAGRAM):   end;
262025    +      end;
MPRINT(EM_DIAGRAM):   end;
262026    +   end;
MPRINT(EM_DIAGRAM):   end;
262027    +   else do;
MPRINT(EM_DIAGRAM):   else do;
262028    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
262029    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
262030    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262031    +      end;
MPRINT(EM_DIAGRAM):   end;
262032    +      else do;
MPRINT(EM_DIAGRAM):   else do;
262033    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
262034    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
262035    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
262036    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
262037    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
262038    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262039    +         end;
MPRINT(EM_DIAGRAM):   end;
262040    +      end;
MPRINT(EM_DIAGRAM):   end;
262041    +   end;
MPRINT(EM_DIAGRAM):   end;
262042    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
262043    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
262044    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
262045    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
262046    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
262047    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
262048    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
262049    +   end;
MPRINT(EM_DIAGRAM):   end;
262050    +end;
MPRINT(EM_DIAGRAM):   end;
262051    +
262052    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262053    +*** Checking missing input Interval
262054    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
262055    +
262056    +IF NMISS(
262057    +   AcceptedCmpTotal ,
262058    +   Frq ,
262059    +   Mnt ,
262060    +   MntMeatProducts ,
262061    +   NumCatalogPurchases ,
262062    +   NumDealsPurchases ,
262063    +   NumWebVisitsMonth ,
262064    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
262065    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
262066    +
262067    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
262068    +END;
MPRINT(EM_DIAGRAM):   END;
262069    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262070    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
262071    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262072    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
262073    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
262074    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
262075    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
262076    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
262077    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
262078    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
262079    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
262080    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
262081    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
262082    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
262083    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
262084    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
262085    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
262086    +END;
MPRINT(EM_DIAGRAM):   END;
262087    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
262088    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
262089    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
262090    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
262091    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
262092    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
262093    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
262094    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
262095    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
262096    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
262097    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
262098    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
262099    +   ELSE S_NumCatalogPurchases
262100    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
262101    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
262102    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
262103    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
262104    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
262105    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
262106    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
262107    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
262108    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
262109    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
262110    +END;
MPRINT(EM_DIAGRAM):   END;
262111    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262112    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
262113    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262115    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
262116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262117    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
262118    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
262119    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
262120    +          +      0.2338265945616 * S_MntMeatProducts
262121    +          +     0.01564313414142 * S_NumCatalogPurchases
262122    +          +    -0.07464304384577 * S_NumDealsPurchases
262123    +          +    -0.08299095200051 * S_NumWebVisitsMonth
262124    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 * 
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 * 
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 * 
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
262125    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
262126    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
262127    +          +     -0.3893643428589 * S_MntMeatProducts
262128    +          +    -0.11487225011852 * S_NumCatalogPurchases
262129    +          +       0.001237145136 * S_NumDealsPurchases
262130    +          +    -0.04234500703321 * S_NumWebVisitsMonth
262131    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 * 
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 * 
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 * 
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
262132    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
262133    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
262134    +          +    -0.27963474874984 * S_MntMeatProducts
262135    +          +     0.01939450840376 * S_NumCatalogPurchases
262136    +          +    -0.03907394757592 * S_NumDealsPurchases
262137    +          +     0.06752842740103 * S_NumWebVisitsMonth
262138    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 * 
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 * 
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 * 
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
262139    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
262140    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
262141    +          +     0.09842717305515 * S_MntMeatProducts
262142    +          +     0.48040050668836 * S_NumCatalogPurchases
262143    +          +     0.55911507039756 * S_NumDealsPurchases
262144    +          +     0.35441361757916 * S_NumWebVisitsMonth
262145    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 * 
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 * 
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 * 
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
262146    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
262147    +          +     0.13423943689575 * Marital_StatusMarried
262148    +          +    -0.01496857872487 * Marital_StatusSingle
262149    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced + 
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle + 
0.09065620914015 * Marital_StatusTogether ;
262150    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
262151    +          +     0.03005244373637 * Marital_StatusMarried
262152    +          +    -0.06891231360799 * Marital_StatusSingle
262153    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced + 
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle + 
0.03916911436548 * Marital_StatusTogether ;
262154    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
262155    +          +     0.01694145364157 * Marital_StatusMarried
262156    +          +    -0.05183794192194 * Marital_StatusSingle
262157    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced + 
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle + 
0.03543146366331 * Marital_StatusTogether ;
262158    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
262159    +          +     0.44185773223966 * Marital_StatusMarried
262160    +          +     -0.6351733171702 * Marital_StatusSingle
262161    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced + 
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle + 
0.63280583005707 * Marital_StatusTogether ;
262162    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
262163    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
262164    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
262165    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
262166    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
262167    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
262168    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
262169    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
262170    +END;
MPRINT(EM_DIAGRAM):   END;
262171    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
262172    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
262173    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
262174    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
262175    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
262176    +END;
MPRINT(EM_DIAGRAM):   END;
262177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262178    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
262179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262180    +
262181    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
262182    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
262183    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
262184    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
262185    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
262186    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
262187    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
262188    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
262189    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
262190    +end;
MPRINT(EM_DIAGRAM):   end;
262191    +else do;
MPRINT(EM_DIAGRAM):   else do;
262192    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
262193    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
262194    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
262195    +   end;
MPRINT(EM_DIAGRAM):   end;
262196    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
262197    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
262198    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
262199    +   end;
MPRINT(EM_DIAGRAM):   end;
262200    +   else do;
MPRINT(EM_DIAGRAM):   else do;
262201    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
262202    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
262203    +   end;
MPRINT(EM_DIAGRAM):   end;
262204    +end;
MPRINT(EM_DIAGRAM):   end;
262205    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
262206    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
262207    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 + 
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
262208    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
262209    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
262210    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
262211    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
262212    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
262213    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
262214    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
262215    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
262216    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
262217    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
262218    +END;
MPRINT(EM_DIAGRAM):   END;
262219    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
262220    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
262221    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
262222    +END;
MPRINT(EM_DIAGRAM):   END;
262223    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
262224    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
262225    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
262226    +END;
MPRINT(EM_DIAGRAM):   END;
262227    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
262228    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
262229    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
262230    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
262231    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
262232    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
262233    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
262234    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262235    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
262236    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262237    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
262238    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
262239    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
262240    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
262241    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
262242    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
262243    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
262244    +END;
MPRINT(EM_DIAGRAM):   END;
262245    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
262246    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
262247    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
262248    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
262249    +* Renaming variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for AutoNeural40;
262250    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262251    +* Renaming Posterior variables for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for AutoNeural40;
262252    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262253    +drop AutoNeural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar1;
262254    +AutoNeural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar1 = P_DepVar1;
262255    +drop AutoNeural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_P_DepVar0;
262256    +AutoNeural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   AutoNeural40_P_DepVar0 = P_DepVar0;
262257    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262258    +* Renaming _WARN_ variable for AutoNeural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for AutoNeural40;
262259    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262260    +length AutoNeural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length AutoNeural40_WARN_ $4;
262261    +drop AutoNeural40_WARN_;
MPRINT(EM_DIAGRAM):   drop AutoNeural40_WARN_;
262262    +AutoNeural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   AutoNeural40_WARN_ = _WARN_;
262263    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262264    +* Ensmbl24: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Average Posteriors of 7 models;
262265    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262266    +P_DepVar1 = (
262267    +Neural40_P_DepVar1 +
262268    +AutoNeural38_P_DepVar1 +
262269    +AutoNeural39_P_DepVar1 +
262270    +Neural41_P_DepVar1 +
262271    +Neural39_P_DepVar1 +
262272    +AutoNeural37_P_DepVar1 +
262273    +AutoNeural40_P_DepVar1
262274    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural40_P_DepVar1 + AutoNeural38_P_DepVar1 + 
AutoNeural39_P_DepVar1 + Neural41_P_DepVar1 + Neural39_P_DepVar1 + AutoNeural37_P_DepVar1 + 
AutoNeural40_P_DepVar1 )/7;
262275    +P_DepVar0 = (
262276    +Neural40_P_DepVar0 +
262277    +AutoNeural38_P_DepVar0 +
262278    +AutoNeural39_P_DepVar0 +
262279    +Neural41_P_DepVar0 +
262280    +Neural39_P_DepVar0 +
262281    +AutoNeural37_P_DepVar0 +
262282    +AutoNeural40_P_DepVar0
262283    +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural40_P_DepVar0 + AutoNeural38_P_DepVar0 + 
AutoNeural39_P_DepVar0 + Neural41_P_DepVar0 + Neural39_P_DepVar0 + AutoNeural37_P_DepVar0 + 
AutoNeural40_P_DepVar0 )/7;
262284    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262285    +* Ensmbl24: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Classification Vars;
262286    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262287    +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
262288    +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
262289    +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
262290    +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
262291    +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
262292    +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
262293    +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
262294    +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
262295    +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
262296    +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
262297    +end;
MPRINT(EM_DIAGRAM):   end;
262298    +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
262299    +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
262300    +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
262301    +end;
MPRINT(EM_DIAGRAM):   end;
262302    +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262303    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262304    +* Ensmbl24: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Producing Unformatted variable;
262305    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262306    +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
262307    +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
262308    +else
262309    +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
262310    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262311    +* Ensmbl24: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing _WARN_ Variable;
262312    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262313    +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
262314    +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
262315    +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
262316    +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
262316   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262317    +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
262317   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262318    +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
262318   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262319    +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
262319   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262320    +if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
262320   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262321    +if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
262321   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262322    +if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
262322   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262323    +if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
262323   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262324    +if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
262324   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262325    +if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
262325   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262326    +if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
262326   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262327    +if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
262327   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262328    +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
262328   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262329    +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
262329   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262330    +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
262330   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262331    +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
262331   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262332    +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
262332   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262333    +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
262333   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262334    +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
262334   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262335    +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
262335   !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262336    +if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
262336   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262337    +if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
262337   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262338    +if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
262338   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262339    +if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
262339   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262340    +if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1)
262340   !+='M';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
262341    +if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1)
262341   !+='U';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
262342    +if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1)
262342   !+='P';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
262343    +if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1)
262343   !+='C';
MPRINT(EM_DIAGRAM):   if index(AUTONEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
262344    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262345    +* Ensmbl24: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Residual Vars;
262346    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262347    +if
262348    +F_DepVar NE '1'
262349    +AND F_DepVar NE '0'
262350    +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
262351    +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
262352    +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
262353    +end;
MPRINT(EM_DIAGRAM):   end;
262354    +else do;
MPRINT(EM_DIAGRAM):   else do;
262355    +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
262356    +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
262357    +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
262358    +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
262359    +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
262360    +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
262361    +END;
MPRINT(EM_DIAGRAM):   END;
262362    +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
262363     run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL24_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL40_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
262364     quit;
262365     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl24_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl24_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl24_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
262425     filename _pref
262425   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
262426     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
262427     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
262428    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
262429    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
262430    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
262431    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
262432    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
262433    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
262434    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
262435    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
262436    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
262437    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
262438    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
262439    +LENGTH _WARN_ $4
262440    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
262441    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
262442    +
262443    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
262444    +
262445    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
262446    +
262447    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
262448    +
262449    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
262450    +
262451    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
262452    +
262453    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
262454    +
262455    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
262456    +
262457    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
262458    +
262459    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
262460    +
262461    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
262462    +
262463    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
262464    +
262465    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
262466    +
262467    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
262468    +
262469    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
262470    +
262471    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
262472    +
262473    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
262474    +
262475    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
262476    +
262477    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
262478    +
262479    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
262480    +
262481    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
262482    +
262483    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
262484    +
262485    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
262486    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
262487    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
262488    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
262489    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
262490    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
262491    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
262492    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
262493    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
262494    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
262495    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
262496    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
262497    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
262498    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
262499    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
262500    +end;
MPRINT(EM_DIAGRAM):   end;
262501    +else do;
MPRINT(EM_DIAGRAM):   else do;
262502    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
262503    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
262504    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
262505    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
262506    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
262507    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
262508    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
262509    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
262510    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262511    +         end;
MPRINT(EM_DIAGRAM):   end;
262512    +         else do;
MPRINT(EM_DIAGRAM):   else do;
262513    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
262514    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
262515    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262516    +            end;
MPRINT(EM_DIAGRAM):   end;
262517    +         end;
MPRINT(EM_DIAGRAM):   end;
262518    +      end;
MPRINT(EM_DIAGRAM):   end;
262519    +      else do;
MPRINT(EM_DIAGRAM):   else do;
262520    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
262521    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
262522    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262523    +         end;
MPRINT(EM_DIAGRAM):   end;
262524    +      end;
MPRINT(EM_DIAGRAM):   end;
262525    +   end;
MPRINT(EM_DIAGRAM):   end;
262526    +   else do;
MPRINT(EM_DIAGRAM):   else do;
262527    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
262528    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
262529    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262530    +      end;
MPRINT(EM_DIAGRAM):   end;
262531    +      else do;
MPRINT(EM_DIAGRAM):   else do;
262532    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
262533    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
262534    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
262535    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
262536    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
262537    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
262538    +         end;
MPRINT(EM_DIAGRAM):   end;
262539    +      end;
MPRINT(EM_DIAGRAM):   end;
262540    +   end;
MPRINT(EM_DIAGRAM):   end;
262541    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
262542    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
262543    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
262544    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
262545    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
262546    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
262547    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
262548    +   end;
MPRINT(EM_DIAGRAM):   end;
262549    +end;
MPRINT(EM_DIAGRAM):   end;
262550    +
262551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262552    +*** Checking missing input Interval
262553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
262554    +
262555    +IF NMISS(
262556    +   AcceptedCmpTotal ,
262557    +   Frq ,
262558    +   Mnt ,
262559    +   MntMeatProducts ,
262560    +   NumCatalogPurchases ,
262561    +   NumDealsPurchases ,
262562    +   NumWebVisitsMonth ,
262563    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
262564    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
262565    +
262566    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
262567    +END;
MPRINT(EM_DIAGRAM):   END;
262568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262569    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
262570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262571    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
262572    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
262573    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
262574    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
262575    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
262576    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
262577    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
262578    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
262579    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
262580    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
262581    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
262582    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
262583    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
262584    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
262585    +END;
MPRINT(EM_DIAGRAM):   END;
262586    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
262587    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
262588    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
262589    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
262590    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
262591    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
262592    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
262593    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
262594    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
262595    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
262596    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
262597    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
262598    +   ELSE S_NumCatalogPurchases
262599    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
262600    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
262601    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
262602    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
262603    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
262604    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
262605    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
262606    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
262607    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
262608    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
262609    +END;
MPRINT(EM_DIAGRAM):   END;
262610    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262611    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
262612    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262613    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262614    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
262615    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262616    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
262617    +   H11  =    -0.50937067326512 * S_AcceptedCmpTotal  +     0.59153604997173 *
262618    +        S_Frq  +     0.35109708191283 * S_Mnt  +    -0.54183123684873 *
262619    +        S_MntMeatProducts  +    -0.50968421326068 * S_NumCatalogPurchases
262620    +          +    -0.19046126117019 * S_NumDealsPurchases
262621    +          +    -0.51033119597715 * S_NumWebVisitsMonth
262622    +          +     0.81837864997249 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.50937067326512 * S_AcceptedCmpTotal + 0.59153604997173 * S_Frq 
+ 0.35109708191283 * S_Mnt + -0.54183123684873 * S_MntMeatProducts + -0.50968421326068 * 
S_NumCatalogPurchases + -0.19046126117019 * S_NumDealsPurchases + -0.51033119597715 * 
S_NumWebVisitsMonth + 0.81837864997249 * S_Recency ;
262623    +   H12  =     0.02025228046339 * S_AcceptedCmpTotal  +     0.99930163787509 *
262624    +        S_Frq  +     1.71070447604488 * S_Mnt  +     0.00262288180651 *
262625    +        S_MntMeatProducts  +    -0.26040107336488 * S_NumCatalogPurchases
262626    +          +     1.79245188553632 * S_NumDealsPurchases
262627    +          +     0.26061762777338 * S_NumWebVisitsMonth
262628    +          +     0.08976701277133 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.02025228046339 * S_AcceptedCmpTotal + 0.99930163787509 * S_Frq + 
1.71070447604488 * S_Mnt + 0.00262288180651 * S_MntMeatProducts + -0.26040107336488 * 
S_NumCatalogPurchases + 1.79245188553632 * S_NumDealsPurchases + 0.26061762777338 * 
S_NumWebVisitsMonth + 0.08976701277133 * S_Recency ;
262629    +   H13  =       0.104381332746 * S_AcceptedCmpTotal  +    -1.51764539772771 *
262630    +        S_Frq  +     0.93148616742855 * S_Mnt  +     2.93767108708116 *
262631    +        S_MntMeatProducts  +     0.79051284359814 * S_NumCatalogPurchases
262632    +          +     0.49339750797451 * S_NumDealsPurchases
262633    +          +    -0.25657630888957 * S_NumWebVisitsMonth
262634    +          +    -0.02783592802322 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.104381332746 * S_AcceptedCmpTotal + -1.51764539772771 * S_Frq + 
0.93148616742855 * S_Mnt + 2.93767108708116 * S_MntMeatProducts + 0.79051284359814 * 
S_NumCatalogPurchases + 0.49339750797451 * S_NumDealsPurchases + -0.25657630888957 * 
S_NumWebVisitsMonth + -0.02783592802322 * S_Recency ;
262635    +   H14  =     0.54135833698612 * S_AcceptedCmpTotal  +     1.35730431022222 *
262636    +        S_Frq  +     0.77200942468842 * S_Mnt  +    -1.51698500454254 *
262637    +        S_MntMeatProducts  +    -0.62605649177998 * S_NumCatalogPurchases
262638    +          +    -0.20841011025614 * S_NumDealsPurchases
262639    +          +    -0.95976462163535 * S_NumWebVisitsMonth
262640    +          +    -0.85153512604579 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.54135833698612 * S_AcceptedCmpTotal + 1.35730431022222 * S_Frq + 
0.77200942468842 * S_Mnt + -1.51698500454254 * S_MntMeatProducts + -0.62605649177998 * 
S_NumCatalogPurchases + -0.20841011025614 * S_NumDealsPurchases + -0.95976462163535 * 
S_NumWebVisitsMonth + -0.85153512604579 * S_Recency ;
262641    +   H15  =     0.45598292592982 * S_AcceptedCmpTotal  +     0.62149856604856 *
262642    +        S_Frq  +    -0.19094507833451 * S_Mnt  +     0.31024365368678 *
262643    +        S_MntMeatProducts  +     0.43336537836455 * S_NumCatalogPurchases
262644    +          +    -0.79330545518211 * S_NumDealsPurchases
262645    +          +     0.31692653945914 * S_NumWebVisitsMonth
262646    +          +    -0.82721510615104 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.45598292592982 * S_AcceptedCmpTotal + 0.62149856604856 * S_Frq + 
-0.19094507833451 * S_Mnt + 0.31024365368678 * S_MntMeatProducts + 0.43336537836455 * 
S_NumCatalogPurchases + -0.79330545518211 * S_NumDealsPurchases + 0.31692653945914 * 
S_NumWebVisitsMonth + -0.82721510615104 * S_Recency ;
262647    +   H11  = H11  +    -0.25100863467838 * Marital_StatusDivorced
262648    +          +     0.15562142019257 * Marital_StatusMarried
262649    +          +    -0.11924929825992 * Marital_StatusSingle
262650    +          +     0.19445161712576 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.25100863467838 * Marital_StatusDivorced + 
0.15562142019257 * Marital_StatusMarried + -0.11924929825992 * Marital_StatusSingle + 
0.19445161712576 * Marital_StatusTogether ;
262651    +   H12  = H12  +     0.58193215591516 * Marital_StatusDivorced
262652    +          +     0.27485963958922 * Marital_StatusMarried
262653    +          +    -0.46136322561544 * Marital_StatusSingle
262654    +          +     1.17785849262888 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.58193215591516 * Marital_StatusDivorced + 0.27485963958922 
* Marital_StatusMarried + -0.46136322561544 * Marital_StatusSingle + 1.17785849262888 * 
Marital_StatusTogether ;
262655    +   H13  = H13  +    -0.55576156297846 * Marital_StatusDivorced
262656    +          +     0.18663773247842 * Marital_StatusMarried
262657    +          +    -0.14692184711639 * Marital_StatusSingle
262658    +          +     0.40795003682635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.55576156297846 * Marital_StatusDivorced + 
0.18663773247842 * Marital_StatusMarried + -0.14692184711639 * Marital_StatusSingle + 
0.40795003682635 * Marital_StatusTogether ;
262659    +   H14  = H14  +    -1.70154958647134 * Marital_StatusDivorced
262660    +          +     -0.0143065674831 * Marital_StatusMarried
262661    +          +     0.13491720981006 * Marital_StatusSingle
262662    +          +     0.65058537454476 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -1.70154958647134 * Marital_StatusDivorced + 
-0.0143065674831 * Marital_StatusMarried + 0.13491720981006 * Marital_StatusSingle + 
0.65058537454476 * Marital_StatusTogether ;
262663    +   H15  = H15  +    -0.57735977480465 * Marital_StatusDivorced
262664    +          +    -1.18521635425485 * Marital_StatusMarried
262665    +          +     1.27858890561049 * Marital_StatusSingle
262666    +          +    -0.68308863502606 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.57735977480465 * Marital_StatusDivorced + 
-1.18521635425485 * Marital_StatusMarried + 1.27858890561049 * Marital_StatusSingle + 
-0.68308863502606 * Marital_StatusTogether ;
262667    +   H11  =     0.91898399777449 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.91898399777449 + H11 ;
262668    +   H12  =    -0.65172531168643 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.65172531168643 + H12 ;
262669    +   H13  =     2.21950020718323 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.21950020718323 + H13 ;
262670    +   H14  =     0.94167989308741 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.94167989308741 + H14 ;
262671    +   H15  =    -2.75049414690283 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.75049414690283 + H15 ;
262672    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
262673    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
262674    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
262675    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
262676    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
262677    +END;
MPRINT(EM_DIAGRAM):   END;
262678    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
262679    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
262680    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
262681    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
262682    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
262683    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
262684    +END;
MPRINT(EM_DIAGRAM):   END;
262685    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262686    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
262687    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262688    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
262689    +   P_DepVar1  =    -7.73278760171706 * H11  +    -1.81420899061277 * H12
262690    +          +      7.8974780725891 * H13  +    -2.47430312661533 * H14
262691    +          +       3.637554312671 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -7.73278760171706 * H11 + -1.81420899061277 * H12 + 
7.8974780725891 * H13 + -2.47430312661533 * H14 + 3.637554312671 * H15 ;
262692    +   P_DepVar1  =    -2.27177312353398 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.27177312353398 + P_DepVar1 ;
262693    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
262694    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
262695    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
262696    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
262697    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
262698    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
262699    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
262700    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
262701    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
262702    +END;
MPRINT(EM_DIAGRAM):   END;
262703    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
262704    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
262705    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
262706    +END;
MPRINT(EM_DIAGRAM):   END;
262707    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
262708    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
262709    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
262710    +END;
MPRINT(EM_DIAGRAM):   END;
262711    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262712    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
262713    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
262714    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
262715    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
262716    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
262717    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
262718    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
262719    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
262720    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
262721    +END;
MPRINT(EM_DIAGRAM):   END;
262722    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
262723    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
262724    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
262725    +drop
262726    +H11
262727    +H12
262728    +H13
262729    +H14
262730    +H15
262731    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
262732    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
262733     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
262734     quit;
262735     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
262736     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
262737     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
262738     retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
262739     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
262740     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 805 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 805 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262741     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
262742     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262743     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 805 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 805 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262744     proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
262745     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262746     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262747     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262748     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
262749     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
262750     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262751     proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
262752     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262753     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
262754     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262755     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262756     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262757     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
262758     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262759     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262760     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
262761     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
262761   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 296 rows and 5 columns.

262762     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262763     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
262764     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 296 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 296 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262765     filename _pref
262765   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
262766     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
262767     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
262768    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262769    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
262770    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
262771    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
262772    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
262773    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
262774     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
262775     quit;
262776     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
262777     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
262778     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
262779     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
262780     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
262781     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262782     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
262783     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262784     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262785     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
262786     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262787     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262788     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262789     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
262790     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
262791     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262792     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
262793     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

262794     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
262795     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262796     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262797     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262798     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
262799     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262800     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262801     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
262802     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
262802   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

262803     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262804     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
262805     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 300 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262806     filename _pref
262806   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
262807     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
262808     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
262809    +
262810    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
262811    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
262811   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
262812    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
262813    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
262814    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
262815    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
262816    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
262817     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
262818     quit;
262819     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
262820     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
262821     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
262822     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
262823     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
262824     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262825     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
262826     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262827     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262828     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
262829     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262830     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262831     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262832     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
262833     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
262834     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262835     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
262836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262837     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
262838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262839     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262840     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262841     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
262842     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262843     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262844     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
262845     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
262845   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

262846     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262847     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
262848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 339 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262849     filename _pref
262849   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
262850     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
262851     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
262852    +
262853    +
262854    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
262855    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
262856    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
262857    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
262858    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
262859    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262860    +
262861    +
262862    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
262863    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
262864    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
262865    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
262866    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
262867    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262868    +
262869    +
262870    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
262871    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
262872    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
262873    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
262874    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
262875    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262876    +
262877    +
262878    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
262879    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
262880    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
262881    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
262882    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
262883    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262884    +
262885    +
262886    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
262887    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
262888    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
262889    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
262890    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
262891    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262892    +
262893    +
262894    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
262895    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
262896    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
262897    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
262898    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
262899    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262900    +
262901    +
262902    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
262903    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
262904    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
262905    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
262906    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
262907    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262908    +
262909    +
262910    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
262911    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
262912    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
262913    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
262914    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
262915    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
262916    +if
262917    +_FILTERNORM1 not in ( '.')
262918    + and
262919    +_FILTERNORM2 not in ( '.')
262920    + and
262921    +_FILTERNORM3 not in ( '.')
262922    + and
262923    +_FILTERNORM4 not in ( '.')
262924    + and
262925    +_FILTERNORM5 not in ( '.')
262926    + and
262927    +_FILTERNORM6 not in ( '.')
262928    + and
262929    +_FILTERNORM7 not in ( ' ')
262930    + and
262931    +_FILTERNORM8 not in ( ' ')
262932    +and
262933    +( Dt_Customer ne .)
262934    +and ( Income ne . and (Income<=107000))
262935    +and ( Kidhome ne .)
262936    +and ( MntFishProducts ne .)
262937    +and ( MntFruits ne .)
262938    +and ( MntGoldProds ne .)
262939    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
262940    +and ( MntSweetProducts ne .)
262941    +and ( MntWines ne .)
262942    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
262943    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
262944    +and ( NumStorePurchases ne .)
262945    +and ( NumWebPurchases ne .)
262946    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
262947    +and ( Recency ne .)
262948    +and ( Teenhome ne .)
262949    +and ( Year_Birth ne .)
262950    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
262951    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
262952    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
262953    +end;
MPRINT(EM_DIAGRAM):   end;
262954    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
262955    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
262956     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
262957     quit;
262958     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
262959     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
262960     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
262961     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
262962     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
262963     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262964     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
262965     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262966     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262967     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
262968     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262969     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262970     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262971     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
262972     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
262973     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262974     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
262975     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262976     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
262977     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262978     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262979     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
262980     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
262981     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
262982     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262983     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
262984     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
262984   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

262985     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

262986     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
262987     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 405 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

262988     %macro varDept(fcmpdata=,id=);
262989     %global nobs&id scoreFlag&id;
262990     %let scoreFlag&id = 0;
262991     %if &id=1 or ^&fcmpStart %then %do;
262992     proc sort data=&fcmpdata out=_temp&id nodupkey;
262993     by NAME;
262994     where id=&id and LHS in( %let j=1;
262995     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
262996     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
262997     "&var" %let j = %eval(&j+1);
262998     %end;
262999     );
263000     run;
263001     %let dsid = %sysfunc(open(_temp&id));
263002     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263003     %let dsid = %sysfunc(close(&dsid));
263004     %if &&nobs&id %then %do;
263005     %let scoreFlag&id = 1;
263006     %let fcmpStart = 1;
263007     %end;
263008     %else %let fcmpStart = 0;
263009     %end;
263010     %else %do;
263011     proc sort data=&fcmpdata out=_tempid;
263012     where id=&id;
263013     by LHS;
263014     run;
263015     %let dsid = %sysfunc(open(_tempid));
263016     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263017     %let dsid = %sysfunc(close(&dsid));
263018     %if ^&&nobs&id %then %do;
263019     proc datasets lib=work nolist;
263020     delete _tempid;
263021     run;
263022     quit;
263023     %end;
263024     %else %do;
263025     data _tempAll;
263026     set %let j=%eval(&id-1);
263027     %do x=1 %to &j;
263028     %if &&nobs&x %then %do;
263029     _temp&x %end;
263030     %end;
263031     ;
263032     run;
263033     proc sql;
263034     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
263034   ! work._tempid p2 where p.name=p2.lhs;
263035     quit;
263036     data _temp&id;
263037     set _temp&id;
263038     where LHS ne '' and NAME ne '' and Node ne '';
263039     run;
263040     proc datasets lib=work nolist;
263041     delete _tempAll;
263042     run;
263043     %let dsid = %sysfunc(open(_temp&id));
263044     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263045     %let dsid = %sysfunc(close(&dsid));
263046     %if ^&&nobs&id %then %do;
263047     proc datasets lib=work nolist;
263048     delete _temp&id;
263049     run;
263050     quit;
263051     %end;
263052     %else %do;
263053     %let scoreFlag&id = 1;
263054     data _temp&id;
263055     set _temp&id;
263056     where LHS ne NAME and node ne '';
263057     run;
263058     %let dsid = %sysfunc(open(_temp&id));
263059     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263060     %let dsid = %sysfunc(close(&dsid));
263061     %if ^&&nobs&id %then %do;
263062     proc datasets lib=work nolist;
263063     delete _temp&id;
263064     run;
263065     quit;
263066     %end;
263067     %else %do;
263068     proc sort data=_temp&id nodupkey;
263069     by LHS NAME;
263070     run;
263071     %end;
263072     %end;
263073     %end;
263074     %end;
263075     %mend varDept;
263076     %macro optCode(outdata=fcmpdata);
263077     %global fcmpStart;
263078     %let fcmpStart = 0;
263079     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
263080     %let NumNodes=9;
263081     %do k=1 %to &NumNodes;
263082     %vardept(fcmpdata=&outdata, id=&k);
263083     %end;
263084     %mend optCode;
263085     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 31 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

263086     filename _pref
263086   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas";
263087     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
263088     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural38\EMPUBLISHSCORE.sas.
263089    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
263090    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
263091    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
263092    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
263093    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
263094    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
263095    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
263096    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
263097    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
263098    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
263099    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
263100    +LENGTH _WARN_ $4
263101    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
263102    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
263103    +
263104    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
263105    +
263106    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
263107    +
263108    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
263109    +
263110    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
263111    +
263112    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
263113    +
263114    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
263115    +
263116    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
263117    +
263118    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
263119    +
263120    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
263121    +
263122    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
263123    +
263124    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
263125    +
263126    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
263127    +
263128    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
263129    +
263130    +      label H1x2_1 = 'Hidden: H1x2_=1' ;
MPRINT(EM_DIAGRAM):   label H1x2_1 = 'Hidden: H1x2_=1' ;
263131    +
263132    +      label H1x2_2 = 'Hidden: H1x2_=2' ;
MPRINT(EM_DIAGRAM):   label H1x2_2 = 'Hidden: H1x2_=2' ;
263133    +
263134    +      label H1x3_1 = 'Hidden: H1x3_=1' ;
MPRINT(EM_DIAGRAM):   label H1x3_1 = 'Hidden: H1x3_=1' ;
263135    +
263136    +      label H1x3_2 = 'Hidden: H1x3_=2' ;
MPRINT(EM_DIAGRAM):   label H1x3_2 = 'Hidden: H1x3_=2' ;
263137    +
263138    +      label H1x4_1 = 'Hidden: H1x4_=1' ;
MPRINT(EM_DIAGRAM):   label H1x4_1 = 'Hidden: H1x4_=1' ;
263139    +
263140    +      label H1x4_2 = 'Hidden: H1x4_=2' ;
MPRINT(EM_DIAGRAM):   label H1x4_2 = 'Hidden: H1x4_=2' ;
263141    +
263142    +      label H2x1_1 = 'Hidden: H2x1_=1' ;
MPRINT(EM_DIAGRAM):   label H2x1_1 = 'Hidden: H2x1_=1' ;
263143    +
263144    +      label H2x1_2 = 'Hidden: H2x1_=2' ;
MPRINT(EM_DIAGRAM):   label H2x1_2 = 'Hidden: H2x1_=2' ;
263145    +
263146    +      label H2x2_1 = 'Hidden: H2x2_=1' ;
MPRINT(EM_DIAGRAM):   label H2x2_1 = 'Hidden: H2x2_=1' ;
263147    +
263148    +      label H2x2_2 = 'Hidden: H2x2_=2' ;
MPRINT(EM_DIAGRAM):   label H2x2_2 = 'Hidden: H2x2_=2' ;
263149    +
263150    +      label H2x3_1 = 'Hidden: H2x3_=1' ;
MPRINT(EM_DIAGRAM):   label H2x3_1 = 'Hidden: H2x3_=1' ;
263151    +
263152    +      label H2x3_2 = 'Hidden: H2x3_=2' ;
MPRINT(EM_DIAGRAM):   label H2x3_2 = 'Hidden: H2x3_=2' ;
263153    +
263154    +      label H3x1_1 = 'Hidden: H3x1_=1' ;
MPRINT(EM_DIAGRAM):   label H3x1_1 = 'Hidden: H3x1_=1' ;
263155    +
263156    +      label H3x1_2 = 'Hidden: H3x1_=2' ;
MPRINT(EM_DIAGRAM):   label H3x1_2 = 'Hidden: H3x1_=2' ;
263157    +
263158    +      label H3x2_1 = 'Hidden: H3x2_=1' ;
MPRINT(EM_DIAGRAM):   label H3x2_1 = 'Hidden: H3x2_=1' ;
263159    +
263160    +      label H3x2_2 = 'Hidden: H3x2_=2' ;
MPRINT(EM_DIAGRAM):   label H3x2_2 = 'Hidden: H3x2_=2' ;
263161    +
263162    +      label H4x1_1 = 'Hidden: H4x1_=1' ;
MPRINT(EM_DIAGRAM):   label H4x1_1 = 'Hidden: H4x1_=1' ;
263163    +
263164    +      label H4x1_2 = 'Hidden: H4x1_=2' ;
MPRINT(EM_DIAGRAM):   label H4x1_2 = 'Hidden: H4x1_=2' ;
263165    +
263166    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
263167    +
263168    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
263169    +
263170    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
263171    +
263172    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
263173    +
263174    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
263175    +
263176    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
263177    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
263178    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
263179    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
263180    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
263181    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
263182    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
263183    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
263184    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
263185    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
263186    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
263187    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
263188    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
263189    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
263190    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
263191    +end;
MPRINT(EM_DIAGRAM):   end;
263192    +else do;
MPRINT(EM_DIAGRAM):   else do;
263193    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
263194    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
263195    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
263196    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
263197    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
263198    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
263199    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
263200    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
263201    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
263202    +         end;
MPRINT(EM_DIAGRAM):   end;
263203    +         else do;
MPRINT(EM_DIAGRAM):   else do;
263204    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
263205    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
263206    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
263207    +            end;
MPRINT(EM_DIAGRAM):   end;
263208    +         end;
MPRINT(EM_DIAGRAM):   end;
263209    +      end;
MPRINT(EM_DIAGRAM):   end;
263210    +      else do;
MPRINT(EM_DIAGRAM):   else do;
263211    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
263212    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
263213    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
263214    +         end;
MPRINT(EM_DIAGRAM):   end;
263215    +      end;
MPRINT(EM_DIAGRAM):   end;
263216    +   end;
MPRINT(EM_DIAGRAM):   end;
263217    +   else do;
MPRINT(EM_DIAGRAM):   else do;
263218    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
263219    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
263220    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
263221    +      end;
MPRINT(EM_DIAGRAM):   end;
263222    +      else do;
MPRINT(EM_DIAGRAM):   else do;
263223    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
263224    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
263225    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
263226    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
263227    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
263228    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
263229    +         end;
MPRINT(EM_DIAGRAM):   end;
263230    +      end;
MPRINT(EM_DIAGRAM):   end;
263231    +   end;
MPRINT(EM_DIAGRAM):   end;
263232    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
263233    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
263234    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
263235    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
263236    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
263237    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
263238    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
263239    +   end;
MPRINT(EM_DIAGRAM):   end;
263240    +end;
MPRINT(EM_DIAGRAM):   end;
263241    +
263242    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263243    +*** Checking missing input Interval
263244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
263245    +
263246    +IF NMISS(
263247    +   AcceptedCmpTotal ,
263248    +   Frq ,
263249    +   Mnt ,
263250    +   MntMeatProducts ,
263251    +   NumCatalogPurchases ,
263252    +   NumDealsPurchases ,
263253    +   NumWebVisitsMonth ,
263254    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
263255    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
263256    +
263257    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
263258    +END;
MPRINT(EM_DIAGRAM):   END;
263259    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263260    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
263261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263262    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263263    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
263264    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
263265    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
263266    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
263267    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
263268    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
263269    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
263270    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
263271    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
263272    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
263273    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
263274    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
263275    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
263276    +END;
MPRINT(EM_DIAGRAM):   END;
263277    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263278    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
263279    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
263280    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
263281    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
263282    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
263283    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
263284    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
263285    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
263286    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
263287    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
263288    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
263289    +   ELSE S_NumCatalogPurchases
263290    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
263291    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
263292    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
263293    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
263294    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
263295    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
263296    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
263297    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
263298    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
263299    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
263300    +END;
MPRINT(EM_DIAGRAM):   END;
263301    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263302    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
263303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263304    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263305    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
263306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263307    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263308    +   H1x1_1  =     0.03317833435323 * S_AcceptedCmpTotal
263309    +          +    -0.66859164215955 * S_Frq  +     1.04503858219375 * S_Mnt
263310    +          +     3.02405267314398 * S_MntMeatProducts
263311    +          +     0.25422172488707 * S_NumCatalogPurchases
263312    +          +     0.25977266371328 * S_NumDealsPurchases
263313    +          +    -0.26865365728773 * S_NumWebVisitsMonth
263314    +          +     0.09531087154516 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.03317833435323 * S_AcceptedCmpTotal + -0.66859164215955 * 
S_Frq + 1.04503858219375 * S_Mnt + 3.02405267314398 * S_MntMeatProducts + 0.25422172488707 * 
S_NumCatalogPurchases + 0.25977266371328 * S_NumDealsPurchases + -0.26865365728773 * 
S_NumWebVisitsMonth + 0.09531087154516 * S_Recency ;
263315    +   H1x1_2  =    -0.69087988352897 * S_AcceptedCmpTotal
263316    +          +    -0.11955753576733 * S_Frq  +     0.84152651412075 * S_Mnt
263317    +          +    -0.64419071408502 * S_MntMeatProducts
263318    +          +    -0.49060224303044 * S_NumCatalogPurchases
263319    +          +    -0.04840762943457 * S_NumDealsPurchases
263320    +          +     -0.7656247386051 * S_NumWebVisitsMonth
263321    +          +     1.13086655489449 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.69087988352897 * S_AcceptedCmpTotal + -0.11955753576733 * 
S_Frq + 0.84152651412075 * S_Mnt + -0.64419071408502 * S_MntMeatProducts + -0.49060224303044 * 
S_NumCatalogPurchases + -0.04840762943457 * S_NumDealsPurchases + -0.7656247386051 * 
S_NumWebVisitsMonth + 1.13086655489449 * S_Recency ;
263322    +   H1x1_1  = H1x1_1  +    -0.53136707555877 * Marital_StatusDivorced
263323    +          +    -0.05888536499281 * Marital_StatusMarried
263324    +          +    -0.22627441829205 * Marital_StatusSingle
263325    +          +     0.52348719245564 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.53136707555877 * Marital_StatusDivorced + 
-0.05888536499281 * Marital_StatusMarried + -0.22627441829205 * Marital_StatusSingle + 
0.52348719245564 * Marital_StatusTogether ;
263326    +   H1x1_2  = H1x1_2  +    -0.85322837962298 * Marital_StatusDivorced
263327    +          +     0.82536605771339 * Marital_StatusMarried
263328    +          +    -0.97196770004098 * Marital_StatusSingle
263329    +          +      1.2063947269032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.85322837962298 * Marital_StatusDivorced + 
0.82536605771339 * Marital_StatusMarried + -0.97196770004098 * Marital_StatusSingle + 
1.2063947269032 * Marital_StatusTogether ;
263330    +   H1x1_1  =     3.30547913450619 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 3.30547913450619 + H1x1_1 ;
263331    +   H1x1_2  =     1.08446512287712 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.08446512287712 + H1x1_2 ;
263332    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
263333    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
263334    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
263335    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
263336    +END;
MPRINT(EM_DIAGRAM):   END;
263337    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263338    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
263339    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
263340    +END;
MPRINT(EM_DIAGRAM):   END;
263341    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263342    +*** Writing the Node H1x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x2_ ;
263343    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263344    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263345    +   H1x2_1  =     0.52271766494525 * S_AcceptedCmpTotal
263346    +          +     0.57611155332907 * S_Frq  +     2.82792468297238 * S_Mnt
263347    +          +    -1.52187144029368 * S_MntMeatProducts
263348    +          +    -0.17233011764417 * S_NumCatalogPurchases
263349    +          +     0.08681674245114 * S_NumDealsPurchases
263350    +          +     0.13308256651831 * S_NumWebVisitsMonth
263351    +          +    -0.88526514420045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 0.52271766494525 * S_AcceptedCmpTotal + 0.57611155332907 * 
S_Frq + 2.82792468297238 * S_Mnt + -1.52187144029368 * S_MntMeatProducts + -0.17233011764417 * 
S_NumCatalogPurchases + 0.08681674245114 * S_NumDealsPurchases + 0.13308256651831 * 
S_NumWebVisitsMonth + -0.88526514420045 * S_Recency ;
263352    +   H1x2_2  =      0.4222520789746 * S_AcceptedCmpTotal
263353    +          +    -3.13381438735416 * S_Frq  +    -0.34909843441486 * S_Mnt
263354    +          +     0.66187267823731 * S_MntMeatProducts
263355    +          +     1.52530454111654 * S_NumCatalogPurchases
263356    +          +     0.73982889008686 * S_NumDealsPurchases
263357    +          +     1.03760708665776 * S_NumWebVisitsMonth
263358    +          +    -1.31685207844927 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x2_2 = 0.4222520789746 * S_AcceptedCmpTotal + -3.13381438735416 * 
S_Frq + -0.34909843441486 * S_Mnt + 0.66187267823731 * S_MntMeatProducts + 1.52530454111654 * 
S_NumCatalogPurchases + 0.73982889008686 * S_NumDealsPurchases + 1.03760708665776 * 
S_NumWebVisitsMonth + -1.31685207844927 * S_Recency ;
263359    +   H1x2_1  = H1x2_1  +    -0.40921432838161 * Marital_StatusDivorced
263360    +          +    -0.57121500191985 * Marital_StatusMarried
263361    +          +     0.00575301863466 * Marital_StatusSingle
263362    +          +     0.58606212168272 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_1 = H1x2_1 + -0.40921432838161 * Marital_StatusDivorced + 
-0.57121500191985 * Marital_StatusMarried + 0.00575301863466 * Marital_StatusSingle + 
0.58606212168272 * Marital_StatusTogether ;
263363    +   H1x2_2  = H1x2_2  +     0.05193612372383 * Marital_StatusDivorced
263364    +          +     0.68382990555761 * Marital_StatusMarried
263365    +          +    -0.40241665873988 * Marital_StatusSingle
263366    +          +     0.66274709598028 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x2_2 = H1x2_2 + 0.05193612372383 * Marital_StatusDivorced + 
0.68382990555761 * Marital_StatusMarried + -0.40241665873988 * Marital_StatusSingle + 
0.66274709598028 * Marital_StatusTogether ;
263367    +   H1x2_1  =     1.66256790999222 + H1x2_1 ;
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.66256790999222 + H1x2_1 ;
263368    +   H1x2_2  =    -2.71135276190381 + H1x2_2 ;
MPRINT(EM_DIAGRAM):   H1x2_2 = -2.71135276190381 + H1x2_2 ;
263369    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
263370    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
263371    +   H1x2_1  = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_1 = 1.0 / (1.0 + EXP(MIN( - H1x2_1 , _EXP_BAR)));
263372    +   H1x2_2  = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x2_2 = 1.0 / (1.0 + EXP(MIN( - H1x2_2 , _EXP_BAR)));
263373    +END;
MPRINT(EM_DIAGRAM):   END;
263374    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263375    +   H1x2_1  = .;
MPRINT(EM_DIAGRAM):   H1x2_1 = .;
263376    +   H1x2_2  = .;
MPRINT(EM_DIAGRAM):   H1x2_2 = .;
263377    +END;
MPRINT(EM_DIAGRAM):   END;
263378    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263379    +*** Writing the Node H1x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x3_ ;
263380    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263381    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263382    +   H1x3_1  =    -1.36813165661884 * S_AcceptedCmpTotal
263383    +          +    -0.29960918468261 * S_Frq  +    -0.65204315831074 * S_Mnt
263384    +          +    -2.40830591527574 * S_MntMeatProducts
263385    +          +    -0.89296864866675 * S_NumCatalogPurchases
263386    +          +     1.79889409325514 * S_NumDealsPurchases
263387    +          +    -0.33765715793031 * S_NumWebVisitsMonth
263388    +          +    -0.63474704455434 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_1 = -1.36813165661884 * S_AcceptedCmpTotal + -0.29960918468261 * 
S_Frq + -0.65204315831074 * S_Mnt + -2.40830591527574 * S_MntMeatProducts + -0.89296864866675 
* S_NumCatalogPurchases + 1.79889409325514 * S_NumDealsPurchases + -0.33765715793031 * 
S_NumWebVisitsMonth + -0.63474704455434 * S_Recency ;
263389    +   H1x3_2  =    -0.20409738779324 * S_AcceptedCmpTotal
263390    +          +     1.49919916163823 * S_Frq  +     -0.9415605932144 * S_Mnt
263391    +          +     0.04224245417831 * S_MntMeatProducts
263392    +          +     0.25836861794607 * S_NumCatalogPurchases
263393    +          +     2.47909264202917 * S_NumDealsPurchases
263394    +          +     0.14790226792406 * S_NumWebVisitsMonth
263395    +          +     0.40870786833591 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x3_2 = -0.20409738779324 * S_AcceptedCmpTotal + 1.49919916163823 * 
S_Frq + -0.9415605932144 * S_Mnt + 0.04224245417831 * S_MntMeatProducts + 0.25836861794607 * 
S_NumCatalogPurchases + 2.47909264202917 * S_NumDealsPurchases + 0.14790226792406 * 
S_NumWebVisitsMonth + 0.40870786833591 * S_Recency ;
263396    +   H1x3_1  = H1x3_1  +     0.20928850420446 * Marital_StatusDivorced
263397    +          +     0.39103795234666 * Marital_StatusMarried
263398    +          +    -0.52822284221545 * Marital_StatusSingle
263399    +          +    -1.86494928221959 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_1 = H1x3_1 + 0.20928850420446 * Marital_StatusDivorced + 
0.39103795234666 * Marital_StatusMarried + -0.52822284221545 * Marital_StatusSingle + 
-1.86494928221959 * Marital_StatusTogether ;
263400    +   H1x3_2  = H1x3_2  +     1.62005786474378 * Marital_StatusDivorced
263401    +          +       1.975579060233 * Marital_StatusMarried
263402    +          +     0.15028521746762 * Marital_StatusSingle
263403    +          +     0.92005975380984 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x3_2 = H1x3_2 + 1.62005786474378 * Marital_StatusDivorced + 
1.975579060233 * Marital_StatusMarried + 0.15028521746762 * Marital_StatusSingle + 
0.92005975380984 * Marital_StatusTogether ;
263404    +   H1x3_1  =     0.89242262747745 + H1x3_1 ;
MPRINT(EM_DIAGRAM):   H1x3_1 = 0.89242262747745 + H1x3_1 ;
263405    +   H1x3_2  =     0.65972128608947 + H1x3_2 ;
MPRINT(EM_DIAGRAM):   H1x3_2 = 0.65972128608947 + H1x3_2 ;
263406    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
263407    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
263408    +   H1x3_1  = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_1 = 1.0 / (1.0 + EXP(MIN( - H1x3_1 , _EXP_BAR)));
263409    +   H1x3_2  = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x3_2 = 1.0 / (1.0 + EXP(MIN( - H1x3_2 , _EXP_BAR)));
263410    +END;
MPRINT(EM_DIAGRAM):   END;
263411    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263412    +   H1x3_1  = .;
MPRINT(EM_DIAGRAM):   H1x3_1 = .;
263413    +   H1x3_2  = .;
MPRINT(EM_DIAGRAM):   H1x3_2 = .;
263414    +END;
MPRINT(EM_DIAGRAM):   END;
263415    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263416    +*** Writing the Node H1x4_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x4_ ;
263417    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263418    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263419    +   H1x4_1  =    -1.56857036994838 * S_AcceptedCmpTotal
263420    +          +    -0.01709393019065 * S_Frq  +    -0.41130381419631 * S_Mnt
263421    +          +     0.16060225059391 * S_MntMeatProducts
263422    +          +     1.53093292630033 * S_NumCatalogPurchases
263423    +          +     0.39573641806699 * S_NumDealsPurchases
263424    +          +    -0.95387142126649 * S_NumWebVisitsMonth
263425    +          +     0.58661969978382 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -1.56857036994838 * S_AcceptedCmpTotal + -0.01709393019065 * 
S_Frq + -0.41130381419631 * S_Mnt + 0.16060225059391 * S_MntMeatProducts + 1.53093292630033 * 
S_NumCatalogPurchases + 0.39573641806699 * S_NumDealsPurchases + -0.95387142126649 * 
S_NumWebVisitsMonth + 0.58661969978382 * S_Recency ;
263426    +   H1x4_2  =     0.40365014181339 * S_AcceptedCmpTotal
263427    +          +     0.25758137147094 * S_Frq  +     1.96878849657351 * S_Mnt
263428    +          +     0.71628478327205 * S_MntMeatProducts
263429    +          +     0.15890352363556 * S_NumCatalogPurchases
263430    +          +    -1.12928875468011 * S_NumDealsPurchases
263431    +          +    -0.30108145274307 * S_NumWebVisitsMonth
263432    +          +     0.28810419317266 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 0.40365014181339 * S_AcceptedCmpTotal + 0.25758137147094 * 
S_Frq + 1.96878849657351 * S_Mnt + 0.71628478327205 * S_MntMeatProducts + 0.15890352363556 * 
S_NumCatalogPurchases + -1.12928875468011 * S_NumDealsPurchases + -0.30108145274307 * 
S_NumWebVisitsMonth + 0.28810419317266 * S_Recency ;
263433    +   H1x4_1  = H1x4_1  +     0.71809860803817 * Marital_StatusDivorced
263434    +          +     0.91966160839643 * Marital_StatusMarried
263435    +          +    -0.63411090570397 * Marital_StatusSingle
263436    +          +    -0.54635673224032 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_1 = H1x4_1 + 0.71809860803817 * Marital_StatusDivorced + 
0.91966160839643 * Marital_StatusMarried + -0.63411090570397 * Marital_StatusSingle + 
-0.54635673224032 * Marital_StatusTogether ;
263437    +   H1x4_2  = H1x4_2  +    -0.82559954633474 * Marital_StatusDivorced
263438    +          +     0.77230489026504 * Marital_StatusMarried
263439    +          +     0.20456495503812 * Marital_StatusSingle
263440    +          +    -0.94791841887496 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x4_2 = H1x4_2 + -0.82559954633474 * Marital_StatusDivorced + 
0.77230489026504 * Marital_StatusMarried + 0.20456495503812 * Marital_StatusSingle + 
-0.94791841887496 * Marital_StatusTogether ;
263441    +   H1x4_1  =    -0.74278734869781 + H1x4_1 ;
MPRINT(EM_DIAGRAM):   H1x4_1 = -0.74278734869781 + H1x4_1 ;
263442    +   H1x4_2  =     1.36386007305279 + H1x4_2 ;
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.36386007305279 + H1x4_2 ;
263443    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
263444    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
263445    +   H1x4_1  = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_1 = 1.0 / (1.0 + EXP(MIN( - H1x4_1 , _EXP_BAR)));
263446    +   H1x4_2  = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x4_2 = 1.0 / (1.0 + EXP(MIN( - H1x4_2 , _EXP_BAR)));
263447    +END;
MPRINT(EM_DIAGRAM):   END;
263448    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263449    +   H1x4_1  = .;
MPRINT(EM_DIAGRAM):   H1x4_1 = .;
263450    +   H1x4_2  = .;
MPRINT(EM_DIAGRAM):   H1x4_2 = .;
263451    +END;
MPRINT(EM_DIAGRAM):   END;
263452    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263453    +*** Writing the Node H2x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x1_ ;
263454    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263455    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263456    +   H2x1_1  =     6.70671434954254 * H1x1_1  +    -3.26026761915622 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = 6.70671434954254 * H1x1_1 + -3.26026761915622 * H1x1_2 ;
263457    +   H2x1_2  =     9.50930943961048 * H1x1_1  +     -38.665886357082 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 9.50930943961048 * H1x1_1 + -38.665886357082 * H1x1_2 ;
263458    +   H2x1_1  = H2x1_1  +    -2.93089545861469 * H1x2_1
263459    +          +     1.56101538169797 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -2.93089545861469 * H1x2_1 + 1.56101538169797 * H1x2_2 
;
263460    +   H2x1_2  = H2x1_2  +    -0.71350117244702 * H1x2_1
263461    +          +    -3.81025846953023 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.71350117244702 * H1x2_1 + -3.81025846953023 * 
H1x2_2 ;
263462    +   H2x1_1  = H2x1_1  +    -0.33624313911685 * H1x3_1
263463    +          +     -0.2506302302983 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.33624313911685 * H1x3_1 + -0.2506302302983 * H1x3_2 
;
263464    +   H2x1_2  = H2x1_2  +    -0.95434767487254 * H1x3_1
263465    +          +    -0.10638654133666 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + -0.95434767487254 * H1x3_1 + -0.10638654133666 * 
H1x3_2 ;
263466    +   H2x1_1  = H2x1_1  +    -0.27261326347944 * H1x4_1
263467    +          +     0.15687682287669 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = H2x1_1 + -0.27261326347944 * H1x4_1 + 0.15687682287669 * H1x4_2 
;
263468    +   H2x1_2  = H2x1_2  +     0.43717724195408 * H1x4_1
263469    +          +     0.97600288948907 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = H2x1_2 + 0.43717724195408 * H1x4_1 + 0.97600288948907 * H1x4_2 ;
263470    +   H2x1_1  =    -1.76465776305701 + H2x1_1 ;
MPRINT(EM_DIAGRAM):   H2x1_1 = -1.76465776305701 + H2x1_1 ;
263471    +   H2x1_2  =     2.45505067378694 + H2x1_2 ;
MPRINT(EM_DIAGRAM):   H2x1_2 = 2.45505067378694 + H2x1_2 ;
263472    +   H2x1_1  = SIN(H2x1_1 );
MPRINT(EM_DIAGRAM):   H2x1_1 = SIN(H2x1_1 );
263473    +   H2x1_2  = SIN(H2x1_2 );
MPRINT(EM_DIAGRAM):   H2x1_2 = SIN(H2x1_2 );
263474    +END;
MPRINT(EM_DIAGRAM):   END;
263475    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263476    +   H2x1_1  = .;
MPRINT(EM_DIAGRAM):   H2x1_1 = .;
263477    +   H2x1_2  = .;
MPRINT(EM_DIAGRAM):   H2x1_2 = .;
263478    +END;
MPRINT(EM_DIAGRAM):   END;
263479    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263480    +*** Writing the Node H2x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x2_ ;
263481    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263482    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263483    +   H2x2_1  =     0.44221000188212 * H1x1_1  +    -0.09410411660626 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.44221000188212 * H1x1_1 + -0.09410411660626 * H1x1_2 ;
263484    +   H2x2_2  =    -0.62041237832472 * H1x1_1  +    -1.70568019769479 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.62041237832472 * H1x1_1 + -1.70568019769479 * H1x1_2 ;
263485    +   H2x2_1  = H2x2_1  +     0.86476170574504 * H1x2_1
263486    +          +    -2.36042697137738 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.86476170574504 * H1x2_1 + -2.36042697137738 * H1x2_2 
;
263487    +   H2x2_2  = H2x2_2  +     0.44483356408795 * H1x2_1
263488    +          +    -1.66254033339836 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.44483356408795 * H1x2_1 + -1.66254033339836 * H1x2_2 
;
263489    +   H2x2_1  = H2x2_1  +     2.16429199725142 * H1x3_1
263490    +          +     1.43296701176218 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 2.16429199725142 * H1x3_1 + 1.43296701176218 * H1x3_2 ;
263491    +   H2x2_2  = H2x2_2  +     -2.3086904824016 * H1x3_1
263492    +          +    -2.17810690370253 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + -2.3086904824016 * H1x3_1 + -2.17810690370253 * H1x3_2 
;
263493    +   H2x2_1  = H2x2_1  +     0.00588994713052 * H1x4_1
263494    +          +     0.12676819806376 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = H2x2_1 + 0.00588994713052 * H1x4_1 + 0.12676819806376 * H1x4_2 ;
263495    +   H2x2_2  = H2x2_2  +     0.82027256992322 * H1x4_1
263496    +          +    -0.52732352975227 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = H2x2_2 + 0.82027256992322 * H1x4_1 + -0.52732352975227 * H1x4_2 
;
263497    +   H2x2_1  =     0.47389009262422 + H2x2_1 ;
MPRINT(EM_DIAGRAM):   H2x2_1 = 0.47389009262422 + H2x2_1 ;
263498    +   H2x2_2  =     -0.8122008316452 + H2x2_2 ;
MPRINT(EM_DIAGRAM):   H2x2_2 = -0.8122008316452 + H2x2_2 ;
263499    +   H2x2_1  = SIN(H2x2_1 );
MPRINT(EM_DIAGRAM):   H2x2_1 = SIN(H2x2_1 );
263500    +   H2x2_2  = SIN(H2x2_2 );
MPRINT(EM_DIAGRAM):   H2x2_2 = SIN(H2x2_2 );
263501    +END;
MPRINT(EM_DIAGRAM):   END;
263502    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263503    +   H2x2_1  = .;
MPRINT(EM_DIAGRAM):   H2x2_1 = .;
263504    +   H2x2_2  = .;
MPRINT(EM_DIAGRAM):   H2x2_2 = .;
263505    +END;
MPRINT(EM_DIAGRAM):   END;
263506    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263507    +*** Writing the Node H2x3_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H2x3_ ;
263508    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263509    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263510    +   H2x3_1  =    -0.28493649489231 * H1x1_1  +     0.46324227997344 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = -0.28493649489231 * H1x1_1 + 0.46324227997344 * H1x1_2 ;
263511    +   H2x3_2  =     0.41015874548881 * H1x1_1  +    -0.05146341955765 * H1x1_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = 0.41015874548881 * H1x1_1 + -0.05146341955765 * H1x1_2 ;
263512    +   H2x3_1  = H2x3_1  +    -1.00349052905386 * H1x2_1
263513    +          +     0.64290952668224 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.00349052905386 * H1x2_1 + 0.64290952668224 * H1x2_2 
;
263514    +   H2x3_2  = H2x3_2  +     0.48935572509195 * H1x2_1
263515    +          +     0.64476371718125 * H1x2_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.48935572509195 * H1x2_1 + 0.64476371718125 * H1x2_2 ;
263516    +   H2x3_1  = H2x3_1  +    -1.11988665905516 * H1x3_1
263517    +          +    -0.34805105626026 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + -1.11988665905516 * H1x3_1 + -0.34805105626026 * 
H1x3_2 ;
263518    +   H2x3_2  = H2x3_2  +     0.32493988416634 * H1x3_1
263519    +          +     0.32809540262065 * H1x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + 0.32493988416634 * H1x3_1 + 0.32809540262065 * H1x3_2 ;
263520    +   H2x3_1  = H2x3_1  +     0.47764131040964 * H1x4_1
263521    +          +    -1.36976442655344 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = H2x3_1 + 0.47764131040964 * H1x4_1 + -1.36976442655344 * H1x4_2 
;
263522    +   H2x3_2  = H2x3_2  +     -0.3421580983005 * H1x4_1
263523    +          +     0.47926475944446 * H1x4_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = H2x3_2 + -0.3421580983005 * H1x4_1 + 0.47926475944446 * H1x4_2 ;
263524    +   H2x3_1  =     0.90815431460142 + H2x3_1 ;
MPRINT(EM_DIAGRAM):   H2x3_1 = 0.90815431460142 + H2x3_1 ;
263525    +   H2x3_2  =    -1.77185533764538 + H2x3_2 ;
MPRINT(EM_DIAGRAM):   H2x3_2 = -1.77185533764538 + H2x3_2 ;
263526    +   H2x3_1  = SIN(H2x3_1 );
MPRINT(EM_DIAGRAM):   H2x3_1 = SIN(H2x3_1 );
263527    +   H2x3_2  = SIN(H2x3_2 );
MPRINT(EM_DIAGRAM):   H2x3_2 = SIN(H2x3_2 );
263528    +END;
MPRINT(EM_DIAGRAM):   END;
263529    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263530    +   H2x3_1  = .;
MPRINT(EM_DIAGRAM):   H2x3_1 = .;
263531    +   H2x3_2  = .;
MPRINT(EM_DIAGRAM):   H2x3_2 = .;
263532    +END;
MPRINT(EM_DIAGRAM):   END;
263533    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263534    +*** Writing the Node H3x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x1_ ;
263535    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263536    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263537    +   H3x1_1  =     4.31939811374229 * H2x1_1  +      -0.700351897347 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = 4.31939811374229 * H2x1_1 + -0.700351897347 * H2x1_2 ;
263538    +   H3x1_1  = H3x1_1  +     2.40750918668175 * H2x2_1
263539    +          +    -1.54042325930374 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 2.40750918668175 * H2x2_1 + -1.54042325930374 * H2x2_2 
;
263540    +   H3x1_1  = H3x1_1  +     1.46738265989804 * H2x3_1
263541    +          +     0.20077963052939 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 + 1.46738265989804 * H2x3_1 + 0.20077963052939 * H2x3_2 ;
263542    +   H3x1_1  =    -0.09840116412671 + H3x1_1 ;
MPRINT(EM_DIAGRAM):   H3x1_1 = -0.09840116412671 + H3x1_1 ;
263543    +   H3x1_2  = 0;
MPRINT(EM_DIAGRAM):   H3x1_2 = 0;
263544    +   _MAX_ = MAX (H3x1_1 , H3x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x1_1 , H3x1_2 );
263545    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
263546    +   H3x1_1  = EXP(H3x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_1 = EXP(H3x1_1 - _MAX_);
263547    +   _SUM_ = _SUM_ + H3x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_1 ;
263548    +   H3x1_2  = EXP(H3x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x1_2 = EXP(H3x1_2 - _MAX_);
263549    +   _SUM_ = _SUM_ + H3x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x1_2 ;
263550    +   H3x1_1  = H3x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_1 = H3x1_1 / _SUM_;
263551    +   H3x1_2  = H3x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x1_2 = H3x1_2 / _SUM_;
263552    +END;
MPRINT(EM_DIAGRAM):   END;
263553    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263554    +   H3x1_1  = .;
MPRINT(EM_DIAGRAM):   H3x1_1 = .;
263555    +   H3x1_2  = .;
MPRINT(EM_DIAGRAM):   H3x1_2 = .;
263556    +END;
MPRINT(EM_DIAGRAM):   END;
263557    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263558    +*** Writing the Node H3x2_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H3x2_ ;
263559    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263560    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263561    +   H3x2_1  =    -1.46965147800397 * H2x1_1  +    -0.15489723855448 * H2x1_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = -1.46965147800397 * H2x1_1 + -0.15489723855448 * H2x1_2 ;
263562    +   H3x2_1  = H3x2_1  +     0.91269334410481 * H2x2_1
263563    +          +     -0.0392976578726 * H2x2_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + 0.91269334410481 * H2x2_1 + -0.0392976578726 * H2x2_2 ;
263564    +   H3x2_1  = H3x2_1  +    -1.07273740820729 * H2x3_1
263565    +          +    -1.32572907075931 * H2x3_2 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 + -1.07273740820729 * H2x3_1 + -1.32572907075931 * 
H2x3_2 ;
263566    +   H3x2_1  =     0.58690615295837 + H3x2_1 ;
MPRINT(EM_DIAGRAM):   H3x2_1 = 0.58690615295837 + H3x2_1 ;
263567    +   H3x2_2  = 0;
MPRINT(EM_DIAGRAM):   H3x2_2 = 0;
263568    +   _MAX_ = MAX (H3x2_1 , H3x2_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H3x2_1 , H3x2_2 );
263569    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
263570    +   H3x2_1  = EXP(H3x2_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_1 = EXP(H3x2_1 - _MAX_);
263571    +   _SUM_ = _SUM_ + H3x2_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_1 ;
263572    +   H3x2_2  = EXP(H3x2_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H3x2_2 = EXP(H3x2_2 - _MAX_);
263573    +   _SUM_ = _SUM_ + H3x2_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H3x2_2 ;
263574    +   H3x2_1  = H3x2_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_1 = H3x2_1 / _SUM_;
263575    +   H3x2_2  = H3x2_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H3x2_2 = H3x2_2 / _SUM_;
263576    +END;
MPRINT(EM_DIAGRAM):   END;
263577    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263578    +   H3x2_1  = .;
MPRINT(EM_DIAGRAM):   H3x2_1 = .;
263579    +   H3x2_2  = .;
MPRINT(EM_DIAGRAM):   H3x2_2 = .;
263580    +END;
MPRINT(EM_DIAGRAM):   END;
263581    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263582    +*** Writing the Node H4x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H4x1_ ;
263583    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263584    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263585    +   H4x1_1  =     2.98683826857579 * H3x1_1  +     -3.7943130439002 * H3x1_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 2.98683826857579 * H3x1_1 + -3.7943130439002 * H3x1_2 ;
263586    +   H4x1_1  = H4x1_1  +     -0.1130856885584 * H3x2_1
263587    +          +     0.90223250703174 * H3x2_2 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 + -0.1130856885584 * H3x2_1 + 0.90223250703174 * H3x2_2 ;
263588    +   H4x1_1  =     0.34321706022332 + H4x1_1 ;
MPRINT(EM_DIAGRAM):   H4x1_1 = 0.34321706022332 + H4x1_1 ;
263589    +   H4x1_2  = 0;
MPRINT(EM_DIAGRAM):   H4x1_2 = 0;
263590    +   _MAX_ = MAX (H4x1_1 , H4x1_2 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (H4x1_1 , H4x1_2 );
263591    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
263592    +   H4x1_1  = EXP(H4x1_1  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_1 = EXP(H4x1_1 - _MAX_);
263593    +   _SUM_ = _SUM_ + H4x1_1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_1 ;
263594    +   H4x1_2  = EXP(H4x1_2  - _MAX_);
MPRINT(EM_DIAGRAM):   H4x1_2 = EXP(H4x1_2 - _MAX_);
263595    +   _SUM_ = _SUM_ + H4x1_2 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + H4x1_2 ;
263596    +   H4x1_1  = H4x1_1  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_1 = H4x1_1 / _SUM_;
263597    +   H4x1_2  = H4x1_2  / _SUM_;
MPRINT(EM_DIAGRAM):   H4x1_2 = H4x1_2 / _SUM_;
263598    +END;
MPRINT(EM_DIAGRAM):   END;
263599    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263600    +   H4x1_1  = .;
MPRINT(EM_DIAGRAM):   H4x1_1 = .;
263601    +   H4x1_2  = .;
MPRINT(EM_DIAGRAM):   H4x1_2 = .;
263602    +END;
MPRINT(EM_DIAGRAM):   END;
263603    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263604    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
263605    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263606    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
263607    +   P_DepVar1  =     4.36647161522328 * H4x1_1  +    -5.83126986959915 * H4x1_2
263608    +         ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.36647161522328 * H4x1_1 + -5.83126986959915 * H4x1_2 ;
263609    +   P_DepVar1  =    -4.21364937441824 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.21364937441824 + P_DepVar1 ;
263610    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
263611    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
263612    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
263613    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
263614    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
263615    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
263616    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
263617    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
263618    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
263619    +END;
MPRINT(EM_DIAGRAM):   END;
263620    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
263621    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
263622    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
263623    +END;
MPRINT(EM_DIAGRAM):   END;
263624    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
263625    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
263626    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
263627    +END;
MPRINT(EM_DIAGRAM):   END;
263628    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263629    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
263630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
263631    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
263632    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
263633    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
263634    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
263635    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
263636    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
263637    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
263638    +END;
MPRINT(EM_DIAGRAM):   END;
263639    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
263640    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
263641    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
263642    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
263643     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
263644     quit;
263645     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
263646     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
263647     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
263648     retain ID 2 Node "AutoNeural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural38";
263649     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
263650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263651     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
263652     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263653     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2679 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2679 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263654     proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural38_variableset out=_temp2(keep=NAME 
CREATOR);
263655     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263656     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263657     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263658     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
263659     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
263660     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

263661     proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural38_train out=_meta(keep=NAME) noprint;
263662     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263663     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
263664     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263665     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 73 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 73 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263666     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263667     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
263668     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263669     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 73 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 73 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263670     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
263671     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
263671   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1163 rows and 5 columns.

263672     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263673     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
263674     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1163 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1163 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263675     filename _pref
263675   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
263676     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
263677     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
263678    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
263679    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
263680    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
263681    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
263682    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
263683    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
263684     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
263685     quit;
263686     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
263687     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
263688     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
263689     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
263690     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
263691     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263692     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
263693     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263694     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263695     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
263696     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263697     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263698     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263699     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
263700     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
263701     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263702     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
263703     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263704     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
263705     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263706     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263707     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263708     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
263709     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263710     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263711     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
263712     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
263712   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

263713     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263714     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
263715     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1167 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263716     filename _pref
263716   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
263717     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
263718     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
263719    +
263720    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
263721    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
263721   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
263722    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
263723    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
263724    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
263725    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
263726    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
263727     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
263728     quit;
263729     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
263730     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
263731     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
263732     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
263733     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
263734     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263735     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
263736     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263737     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263738     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
263739     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263740     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263741     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263742     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
263743     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
263744     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263745     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
263746     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263747     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
263748     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263749     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263750     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263751     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
263752     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263753     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263754     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
263755     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
263755   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

263756     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263757     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
263758     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1206 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263759     filename _pref
263759   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
263760     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
263761     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
263762    +
263763    +
263764    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
263765    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
263766    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
263767    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
263768    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
263769    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263770    +
263771    +
263772    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
263773    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
263774    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
263775    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
263776    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
263777    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263778    +
263779    +
263780    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
263781    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
263782    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
263783    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
263784    +drop _FILTERNORM3 ;
The SAS System

MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
263785    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263786    +
263787    +
263788    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
263789    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
263790    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
263791    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
263792    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
263793    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263794    +
263795    +
263796    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
263797    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
263798    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
263799    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
263800    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
263801    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263802    +
263803    +
263804    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
263805    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
263806    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
263807    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
263808    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
263809    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263810    +
263811    +
263812    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
263813    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
263814    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
263815    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
263816    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
263817    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263818    +
263819    +
263820    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
263821    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
263822    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
263823    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
263824    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
263825    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
263826    +if
263827    +_FILTERNORM1 not in ( '.')
263828    + and
263829    +_FILTERNORM2 not in ( '.')
263830    + and
263831    +_FILTERNORM3 not in ( '.')
263832    + and
263833    +_FILTERNORM4 not in ( '.')
263834    + and
263835    +_FILTERNORM5 not in ( '.')
263836    + and
263837    +_FILTERNORM6 not in ( '.')
263838    + and
263839    +_FILTERNORM7 not in ( ' ')
263840    + and
263841    +_FILTERNORM8 not in ( ' ')
263842    +and
263843    +( Dt_Customer ne .)
263844    +and ( Income ne . and (Income<=107000))
263845    +and ( Kidhome ne .)
263846    +and ( MntFishProducts ne .)
263847    +and ( MntFruits ne .)
263848    +and ( MntGoldProds ne .)
263849    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
263850    +and ( MntSweetProducts ne .)
263851    +and ( MntWines ne .)
263852    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
263853    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
263854    +and ( NumStorePurchases ne .)
263855    +and ( NumWebPurchases ne .)
263856    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
263857    +and ( Recency ne .)
263858    +and ( Teenhome ne .)
263859    +and ( Year_Birth ne .)
263860    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
263861    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
263862    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
263863    +end;
MPRINT(EM_DIAGRAM):   end;
263864    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
263865    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
263866     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
263867     quit;
263868     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
263869     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
263870     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
263871     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
263872     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
263873     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263874     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
263875     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263876     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263877     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
263878     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263879     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

263880     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263881     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
263882     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
263883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263884     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
263885     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263886     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
263887     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263888     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263889     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
263890     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
263891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
263892     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263893     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
263894     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
263894   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

263895     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

263896     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
263897     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1272 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

263898     %macro varDept(fcmpdata=,id=);
263899     %global nobs&id scoreFlag&id;
263900     %let scoreFlag&id = 0;
263901     %if &id=1 or ^&fcmpStart %then %do;
263902     proc sort data=&fcmpdata out=_temp&id nodupkey;
263903     by NAME;
263904     where id=&id and LHS in( %let j=1;
263905     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
263906     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
263907     "&var" %let j = %eval(&j+1);
263908     %end;
263909     );
263910     run;
263911     %let dsid = %sysfunc(open(_temp&id));
263912     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263913     %let dsid = %sysfunc(close(&dsid));
263914     %if &&nobs&id %then %do;
263915     %let scoreFlag&id = 1;
263916     %let fcmpStart = 1;
263917     %end;
263918     %else %let fcmpStart = 0;
263919     %end;
263920     %else %do;
263921     proc sort data=&fcmpdata out=_tempid;
263922     where id=&id;
263923     by LHS;
263924     run;
263925     %let dsid = %sysfunc(open(_tempid));
263926     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263927     %let dsid = %sysfunc(close(&dsid));
263928     %if ^&&nobs&id %then %do;
263929     proc datasets lib=work nolist;
263930     delete _tempid;
263931     run;
263932     quit;
263933     %end;
263934     %else %do;
263935     data _tempAll;
263936     set %let j=%eval(&id-1);
263937     %do x=1 %to &j;
263938     %if &&nobs&x %then %do;
263939     _temp&x %end;
263940     %end;
263941     ;
263942     run;
263943     proc sql;
263944     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
263944   ! work._tempid p2 where p.name=p2.lhs;
263945     quit;
263946     data _temp&id;
263947     set _temp&id;
263948     where LHS ne '' and NAME ne '' and Node ne '';
263949     run;
263950     proc datasets lib=work nolist;
263951     delete _tempAll;
263952     run;
263953     %let dsid = %sysfunc(open(_temp&id));
263954     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263955     %let dsid = %sysfunc(close(&dsid));
263956     %if ^&&nobs&id %then %do;
263957     proc datasets lib=work nolist;
263958     delete _temp&id;
263959     run;
263960     quit;
263961     %end;
263962     %else %do;
263963     %let scoreFlag&id = 1;
263964     data _temp&id;
263965     set _temp&id;
263966     where LHS ne NAME and node ne '';
263967     run;
263968     %let dsid = %sysfunc(open(_temp&id));
263969     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
263970     %let dsid = %sysfunc(close(&dsid));
263971     %if ^&&nobs&id %then %do;
263972     proc datasets lib=work nolist;
263973     delete _temp&id;
263974     run;
263975     quit;
263976     %end;
263977     %else %do;
263978     proc sort data=_temp&id nodupkey;
263979     by LHS NAME;
263980     run;
263981     %end;
263982     %end;
263983     %end;
263984     %end;
263985     %mend varDept;
263986     %macro optCode(outdata=fcmpdata);
263987     %global fcmpStart;
263988     %let fcmpStart = 0;
263989     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
263990     %let NumNodes=9;
263991     %do k=1 %to &NumNodes;
263992     %vardept(fcmpdata=&outdata, id=&k);
263993     %end;
263994     %mend optCode;
263995     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 102 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 71 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 31 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 31 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 31 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

263996     filename _pref
263996   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas";
263997     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
263998     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural39\EMPUBLISHSCORE.sas.
263999    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
264000    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
264001    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
264002    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
264003    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
264004    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
264005    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
264006    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
264007    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
264008    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
264009    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
264010    +LENGTH _WARN_ $4
264011    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
264012    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
264013    +
264014    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
264015    +
264016    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
264017    +
264018    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
264019    +
264020    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
264021    +
264022    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
264023    +
264024    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
264025    +
264026    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
264027    +
264028    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
264029    +
264030    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
264031    +
264032    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
264033    +
264034    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
264035    +
264036    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
264037    +
264038    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
264039    +
264040    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
264041    +
264042    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
264043    +
264044    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
264045    +
264046    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
264047    +
264048    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
264049    +
264050    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
264051    +
264052    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
264053    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
264054    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
264055    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
264056    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
264057    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
264058    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
264059    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
264060    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
264061    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
264062    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
264063    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
264064    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
264065    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
264066    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
264067    +end;
MPRINT(EM_DIAGRAM):   end;
264068    +else do;
MPRINT(EM_DIAGRAM):   else do;
264069    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
264070    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
264071    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
264072    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
264073    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
264074    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
264075    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
264076    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
264077    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264078    +         end;
MPRINT(EM_DIAGRAM):   end;
264079    +         else do;
MPRINT(EM_DIAGRAM):   else do;
264080    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
264081    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
264082    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264083    +            end;
MPRINT(EM_DIAGRAM):   end;
264084    +         end;
MPRINT(EM_DIAGRAM):   end;
264085    +      end;
MPRINT(EM_DIAGRAM):   end;
264086    +      else do;
MPRINT(EM_DIAGRAM):   else do;
264087    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
264088    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
264089    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264090    +         end;
MPRINT(EM_DIAGRAM):   end;
264091    +      end;
MPRINT(EM_DIAGRAM):   end;
264092    +   end;
MPRINT(EM_DIAGRAM):   end;
264093    +   else do;
MPRINT(EM_DIAGRAM):   else do;
264094    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
264095    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
264096    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264097    +      end;
MPRINT(EM_DIAGRAM):   end;
264098    +      else do;
MPRINT(EM_DIAGRAM):   else do;
264099    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
264100    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
264101    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
264102    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
264103    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
264104    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264105    +         end;
MPRINT(EM_DIAGRAM):   end;
264106    +      end;
MPRINT(EM_DIAGRAM):   end;
264107    +   end;
MPRINT(EM_DIAGRAM):   end;
264108    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
264109    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
264110    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
264111    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
264112    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
264113    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
264114    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
264115    +   end;
MPRINT(EM_DIAGRAM):   end;
264116    +end;
MPRINT(EM_DIAGRAM):   end;
264117    +
264118    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264119    +*** Checking missing input Interval
264120    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
264121    +
264122    +IF NMISS(
264123    +   AcceptedCmpTotal ,
264124    +   Frq ,
264125    +   Mnt ,
264126    +   MntMeatProducts ,
264127    +   NumCatalogPurchases ,
264128    +   NumDealsPurchases ,
264129    +   NumWebVisitsMonth ,
264130    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
264131    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
264132    +
264133    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
264134    +END;
MPRINT(EM_DIAGRAM):   END;
264135    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264136    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
264137    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264138    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
264139    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
264140    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
264141    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
264142    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
264143    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
264144    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
264145    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
264146    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
264147    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
264148    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
264149    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
264150    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
264151    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
264152    +END;
MPRINT(EM_DIAGRAM):   END;
264153    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
264154    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
264155    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
264156    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
264157    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
264158    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
264159    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
264160    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
264161    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
264162    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
264163    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
264164    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
264165    +   ELSE S_NumCatalogPurchases
264166    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
264167    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
264168    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
264169    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
264170    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
264171    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
264172    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
264173    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
264174    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
264175    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
264176    +END;
MPRINT(EM_DIAGRAM):   END;
264177    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264178    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
264179    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264180    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264181    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
264182    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264183    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
264184    +   H1x1_1  =    -0.80144597199591 * S_AcceptedCmpTotal
264185    +          +    -0.14504406751843 * S_Frq  +    -0.94059273072385 * S_Mnt
264186    +          +     0.02561809182055 * S_MntMeatProducts
264187    +          +     -0.1793288912734 * S_NumCatalogPurchases
264188    +          +    -0.37563080213093 * S_NumDealsPurchases
264189    +          +    -0.48858578777845 * S_NumWebVisitsMonth
264190    +          +     1.20680693155412 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.80144597199591 * S_AcceptedCmpTotal + -0.14504406751843 * 
S_Frq + -0.94059273072385 * S_Mnt + 0.02561809182055 * S_MntMeatProducts + -0.1793288912734 * 
S_NumCatalogPurchases + -0.37563080213093 * S_NumDealsPurchases + -0.48858578777845 * 
S_NumWebVisitsMonth + 1.20680693155412 * S_Recency ;
264191    +   H1x1_2  =    -0.07420266838621 * S_AcceptedCmpTotal
264192    +          +    -0.45831074090349 * S_Frq  +     0.54967451479719 * S_Mnt
264193    +          +     1.94302986779634 * S_MntMeatProducts
264194    +          +      0.2669037763846 * S_NumCatalogPurchases
264195    +          +     0.29313104233947 * S_NumDealsPurchases
264196    +          +    -0.30591479309812 * S_NumWebVisitsMonth
264197    +          +     0.25821520617291 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.07420266838621 * S_AcceptedCmpTotal + -0.45831074090349 * 
S_Frq + 0.54967451479719 * S_Mnt + 1.94302986779634 * S_MntMeatProducts + 0.2669037763846 * 
S_NumCatalogPurchases + 0.29313104233947 * S_NumDealsPurchases + -0.30591479309812 * 
S_NumWebVisitsMonth + 0.25821520617291 * S_Recency ;
264198    +   H1x1_3  =    -0.12066404689072 * S_AcceptedCmpTotal
264199    +          +     0.68455759852245 * S_Frq  +     1.21976572320843 * S_Mnt
264200    +          +    -0.76055629383789 * S_MntMeatProducts
264201    +          +    -0.40114802991127 * S_NumCatalogPurchases
264202    +          +    -1.12215966034372 * S_NumDealsPurchases
264203    +          +    -0.30978133586417 * S_NumWebVisitsMonth
264204    +          +     0.20549481777473 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -0.12066404689072 * S_AcceptedCmpTotal + 0.68455759852245 * 
S_Frq + 1.21976572320843 * S_Mnt + -0.76055629383789 * S_MntMeatProducts + -0.40114802991127 * 
S_NumCatalogPurchases + -1.12215966034372 * S_NumDealsPurchases + -0.30978133586417 * 
S_NumWebVisitsMonth + 0.20549481777473 * S_Recency ;
264205    +   H1x1_1  = H1x1_1  +     0.27293780318455 * Marital_StatusDivorced
264206    +          +     0.20445663414925 * Marital_StatusMarried
264207    +          +     0.16369117386202 * Marital_StatusSingle
264208    +          +     0.24678692955726 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.27293780318455 * Marital_StatusDivorced + 
0.20445663414925 * Marital_StatusMarried + 0.16369117386202 * Marital_StatusSingle + 
0.24678692955726 * Marital_StatusTogether ;
264209    +   H1x1_2  = H1x1_2  +    -0.36629769700975 * Marital_StatusDivorced
264210    +          +     0.09645374599508 * Marital_StatusMarried
264211    +          +     -0.0816282741981 * Marital_StatusSingle
264212    +          +       0.097160394807 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.36629769700975 * Marital_StatusDivorced + 
0.09645374599508 * Marital_StatusMarried + -0.0816282741981 * Marital_StatusSingle + 
0.097160394807 * Marital_StatusTogether ;
264213    +   H1x1_3  = H1x1_3  +     1.07910879572923 * Marital_StatusDivorced
264214    +          +     -3.9031880089591 * Marital_StatusMarried
264215    +          +      1.6995748309328 * Marital_StatusSingle
264216    +          +    -0.60356952072267 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 1.07910879572923 * Marital_StatusDivorced + 
-3.9031880089591 * Marital_StatusMarried + 1.6995748309328 * Marital_StatusSingle + 
-0.60356952072267 * Marital_StatusTogether ;
264217    +   H1x1_1  =     4.12951833926199 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.12951833926199 + H1x1_1 ;
264218    +   H1x1_2  =      2.8051459955517 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 2.8051459955517 + H1x1_2 ;
264219    +   H1x1_3  =    -4.02151507937085 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = -4.02151507937085 + H1x1_3 ;
264220    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
264221    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
264222    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
264223    +   H1x1_2  = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_2 = 1.0 / (1.0 + EXP(MIN( - H1x1_2 , _EXP_BAR)));
264224    +   H1x1_3  = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.0 / (1.0 + EXP(MIN( - H1x1_3 , _EXP_BAR)));
264225    +END;
MPRINT(EM_DIAGRAM):   END;
264226    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
264227    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
264228    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
264229    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
264230    +END;
MPRINT(EM_DIAGRAM):   END;
264231    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264232    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
264233    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264234    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
264235    +   P_DepVar1  =    -49.7324855017185 * H1x1_1  +     60.9087770313173 * H1x1_2
264236    +          +     44.7070762374356 * H1x1_3 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -49.7324855017185 * H1x1_1 + 60.9087770313173 * H1x1_2 + 
44.7070762374356 * H1x1_3 ;
264237    +   P_DepVar1  =    -18.5106107755559 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -18.5106107755559 + P_DepVar1 ;
264238    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
264239    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
264240    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
264241    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
264242    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
264243    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
264244    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
264245    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
264246    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
264247    +END;
MPRINT(EM_DIAGRAM):   END;
264248    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
264249    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
264250    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
264251    +END;
MPRINT(EM_DIAGRAM):   END;
264252    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
264253    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
264254    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
264255    +END;
MPRINT(EM_DIAGRAM):   END;
264256    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264257    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
264258    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264259    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
264260    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
264261    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
264262    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
264263    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
264264    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
264265    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
264266    +END;
MPRINT(EM_DIAGRAM):   END;
264267    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
264268    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
264269    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
264270    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
264271     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
264272     quit;
264273     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
264274     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
264275     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
264276     retain ID 2 Node "AutoNeural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural39";
264277     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
264278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264279     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
264280     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 689 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 689 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

264282     proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural39_variableset out=_temp2(keep=NAME 
CREATOR);
264283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264284     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264285     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264286     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
264287     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
264288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264289     proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural39_train out=_meta(keep=NAME) noprint;
264290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

264291     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
264292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264293     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 56 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 56 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264294     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264295     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
264296     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264297     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 56 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 56 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264298     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
264299     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
264299   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 305 rows and 5 columns.

264300     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264301     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
264302     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 305 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 305 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264303     filename _pref
264303   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
264304     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
264305     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
264306    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
264307    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
264308    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
264309    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
264310    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
264311    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
264312     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
264313     quit;
264314     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
264315     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
264316     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
264317     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
264318     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
264319     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264320     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
264321     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264322     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264323     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
264324     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264325     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264326     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264327     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
264328     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
264329     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264330     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
264331     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264332     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
264333     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264334     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264335     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264336     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
264337     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264338     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264339     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
264340     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
264340   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

264341     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264342     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
264343     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 309 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264344     filename _pref
264344   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
264345     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
264346     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
264347    +
264348    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
264349    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
264349   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
264350    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
264351    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
264352    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
264353    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
264354    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
264355     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
264356     quit;
264357     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
264358     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
264359     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
264360     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
264361     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
264362     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

264363     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
264364     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264365     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264366     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
264367     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264368     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264369     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264370     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
264371     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
264372     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264373     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
264374     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264375     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
264376     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264377     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264378     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264379     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
264380     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264381     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264382     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
264383     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
264383   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

264384     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264385     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
264386     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 348 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264387     filename _pref
264387   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
264388     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
264389     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
264390    +
264391    +
264392    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
264393    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
264394    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
264395    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
264396    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
264397    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264398    +
264399    +
264400    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
264401    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
264402    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
264403    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
264404    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
264405    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264406    +
264407    +
264408    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
264409    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
264410    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
264411    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
264412    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
264413    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264414    +
264415    +
264416    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
264417    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
264418    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
264419    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
264420    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
264421    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264422    +
264423    +
264424    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
264425    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
264426    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
264427    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
264428    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
264429    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264430    +
264431    +
264432    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
264433    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
264434    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
264435    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
264436    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
264437    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264438    +
264439    +
264440    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
264441    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
264442    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
264443    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
264444    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
264445    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264446    +
264447    +
264448    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
264449    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
264450    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
264451    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
264452    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
264453    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
264454    +if
264455    +_FILTERNORM1 not in ( '.')
264456    + and
264457    +_FILTERNORM2 not in ( '.')
264458    + and
264459    +_FILTERNORM3 not in ( '.')
264460    + and
264461    +_FILTERNORM4 not in ( '.')
264462    + and
264463    +_FILTERNORM5 not in ( '.')
264464    + and
264465    +_FILTERNORM6 not in ( '.')
264466    + and
264467    +_FILTERNORM7 not in ( ' ')
264468    + and
264469    +_FILTERNORM8 not in ( ' ')
264470    +and
264471    +( Dt_Customer ne .)
264472    +and ( Income ne . and (Income<=107000))
264473    +and ( Kidhome ne .)
264474    +and ( MntFishProducts ne .)
264475    +and ( MntFruits ne .)
264476    +and ( MntGoldProds ne .)
264477    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
264478    +and ( MntSweetProducts ne .)
264479    +and ( MntWines ne .)
264480    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
264481    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
264482    +and ( NumStorePurchases ne .)
264483    +and ( NumWebPurchases ne .)
264484    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
264485    +and ( Recency ne .)
264486    +and ( Teenhome ne .)
264487    +and ( Year_Birth ne .)
264488    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
264489    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
264490    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
264491    +end;
MPRINT(EM_DIAGRAM):   end;
264492    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
264493    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
264494     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
264495     quit;
264496     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
264497     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
264498     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
264499     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
264500     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
264501     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264502     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
264503     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264504     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264505     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
264506     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264508     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264509     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
264510     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
264511     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264512     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
264513     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264514     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
264515     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264516     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264517     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264518     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
264519     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264520     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264521     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
264522     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
264522   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

264523     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264524     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
264525     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 414 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264526     %macro varDept(fcmpdata=,id=);
264527     %global nobs&id scoreFlag&id;
264528     %let scoreFlag&id = 0;
264529     %if &id=1 or ^&fcmpStart %then %do;
264530     proc sort data=&fcmpdata out=_temp&id nodupkey;
264531     by NAME;
264532     where id=&id and LHS in( %let j=1;
264533     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
264534     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
264535     "&var" %let j = %eval(&j+1);
264536     %end;
264537     );
264538     run;
264539     %let dsid = %sysfunc(open(_temp&id));
264540     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
264541     %let dsid = %sysfunc(close(&dsid));
264542     %if &&nobs&id %then %do;
264543     %let scoreFlag&id = 1;
264544     %let fcmpStart = 1;
264545     %end;
264546     %else %let fcmpStart = 0;
264547     %end;
264548     %else %do;
264549     proc sort data=&fcmpdata out=_tempid;
264550     where id=&id;
264551     by LHS;
264552     run;
264553     %let dsid = %sysfunc(open(_tempid));
264554     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
264555     %let dsid = %sysfunc(close(&dsid));
264556     %if ^&&nobs&id %then %do;
264557     proc datasets lib=work nolist;
264558     delete _tempid;
264559     run;
264560     quit;
264561     %end;
264562     %else %do;
264563     data _tempAll;
264564     set %let j=%eval(&id-1);
264565     %do x=1 %to &j;
264566     %if &&nobs&x %then %do;
264567     _temp&x %end;
264568     %end;
264569     ;
264570     run;
264571     proc sql;
264572     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
264572   ! work._tempid p2 where p.name=p2.lhs;
264573     quit;
264574     data _temp&id;
264575     set _temp&id;
264576     where LHS ne '' and NAME ne '' and Node ne '';
264577     run;
264578     proc datasets lib=work nolist;
264579     delete _tempAll;
264580     run;
264581     %let dsid = %sysfunc(open(_temp&id));
264582     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
264583     %let dsid = %sysfunc(close(&dsid));
264584     %if ^&&nobs&id %then %do;
264585     proc datasets lib=work nolist;
264586     delete _temp&id;
264587     run;
264588     quit;
264589     %end;
264590     %else %do;
264591     %let scoreFlag&id = 1;
264592     data _temp&id;
264593     set _temp&id;
264594     where LHS ne NAME and node ne '';
264595     run;
264596     %let dsid = %sysfunc(open(_temp&id));
264597     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
264598     %let dsid = %sysfunc(close(&dsid));
264599     %if ^&&nobs&id %then %do;
264600     proc datasets lib=work nolist;
264601     delete _temp&id;
264602     run;
264603     quit;
264604     %end;
264605     %else %do;
264606     proc sort data=_temp&id nodupkey;
264607     by LHS NAME;
264608     run;
264609     %end;
264610     %end;
264611     %end;
264612     %end;
264613     %mend varDept;
264614     %macro optCode(outdata=fcmpdata);
264615     %global fcmpStart;
264616     %let fcmpStart = 0;
264617     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
264618     %let NumNodes=9;
264619     %do k=1 %to &NumNodes;
264620     %vardept(fcmpdata=&outdata, id=&k);
264621     %end;
264622     %mend optCode;
264623     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 51 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 37 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

264624     filename _pref
264624   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
264625     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
264626     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
264627    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
264628    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
264629    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
264630    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
264631    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
264632    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
264633    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
264634    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
264635    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
264636    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
264637    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
264638    +LENGTH _WARN_ $4
264639    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
264640    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
264641    +
264642    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
264643    +
264644    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
264645    +
264646    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
264647    +
264648    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
264649    +
264650    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
264651    +
264652    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
264653    +
264654    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
264655    +
264656    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
264657    +
264658    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
264659    +
264660    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
264661    +
264662    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
264663    +
264664    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
264665    +
264666    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
264667    +
264668    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
264669    +
264670    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
264671    +
264672    +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
264673    +
264674    +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
264675    +
264676    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
264677    +
264678    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
264679    +
264680    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
264681    +
264682    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
264683    +
264684    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
264685    +
264686    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
264687    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
264688    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
264689    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
264690    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
264691    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
264692    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
264693    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
264694    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
264695    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
264696    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
264697    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
264698    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
264699    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
264700    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
264701    +end;
MPRINT(EM_DIAGRAM):   end;
264702    +else do;
MPRINT(EM_DIAGRAM):   else do;
264703    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
264704    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
264705    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
264706    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
264707    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
264708    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
264709    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
264710    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
264711    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264712    +         end;
MPRINT(EM_DIAGRAM):   end;
264713    +         else do;
MPRINT(EM_DIAGRAM):   else do;
264714    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
264715    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
264716    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264717    +            end;
MPRINT(EM_DIAGRAM):   end;
264718    +         end;
MPRINT(EM_DIAGRAM):   end;
264719    +      end;
MPRINT(EM_DIAGRAM):   end;
264720    +      else do;
MPRINT(EM_DIAGRAM):   else do;
264721    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
264722    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
264723    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264724    +         end;
MPRINT(EM_DIAGRAM):   end;
264725    +      end;
MPRINT(EM_DIAGRAM):   end;
264726    +   end;
MPRINT(EM_DIAGRAM):   end;
264727    +   else do;
MPRINT(EM_DIAGRAM):   else do;
264728    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
264729    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
264730    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264731    +      end;
MPRINT(EM_DIAGRAM):   end;
264732    +      else do;
MPRINT(EM_DIAGRAM):   else do;
264733    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
264734    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
264735    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
264736    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
264737    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
264738    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
264739    +         end;
MPRINT(EM_DIAGRAM):   end;
264740    +      end;
MPRINT(EM_DIAGRAM):   end;
264741    +   end;
MPRINT(EM_DIAGRAM):   end;
264742    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
264743    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
264744    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
264745    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
264746    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
264747    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
264748    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
264749    +   end;
MPRINT(EM_DIAGRAM):   end;
264750    +end;
MPRINT(EM_DIAGRAM):   end;
264751    +
264752    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264753    +*** Checking missing input Interval
264754    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
264755    +
264756    +IF NMISS(
264757    +   AcceptedCmpTotal ,
264758    +   Frq ,
264759    +   Mnt ,
264760    +   MntMeatProducts ,
264761    +   NumCatalogPurchases ,
264762    +   NumDealsPurchases ,
264763    +   NumWebVisitsMonth ,
264764    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
264765    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
264766    +
264767    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
264768    +END;
MPRINT(EM_DIAGRAM):   END;
264769    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264770    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
264771    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264772    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
264773    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
264774    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
264775    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
264776    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
264777    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
264778    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
264779    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
264780    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
264781    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
264782    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
264783    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
264784    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
264785    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
264786    +END;
MPRINT(EM_DIAGRAM):   END;
264787    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
264788    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
264789    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
264790    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
264791    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
264792    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
264793    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
264794    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
264795    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
264796    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
264797    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
264798    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
264799    +   ELSE S_NumCatalogPurchases
264800    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
264801    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
264802    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
264803    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
264804    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
264805    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
264806    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
264807    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
264808    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
264809    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
264810    +END;
MPRINT(EM_DIAGRAM):   END;
264811    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264812    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
264813    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264815    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
264816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264817    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
264818    +   H11  =    -0.41170995389365 * S_AcceptedCmpTotal  +     0.95675776354898 *
264819    +        S_Frq  +     0.79241767524066 * S_Mnt  +    -1.11291951115769 *
264820    +        S_MntMeatProducts  +    -0.81016243357955 * S_NumCatalogPurchases
264821    +          +    -0.06020302160033 * S_NumDealsPurchases
264822    +          +    -0.72187271327886 * S_NumWebVisitsMonth
264823    +          +     0.63072705601805 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.41170995389365 * S_AcceptedCmpTotal + 0.95675776354898 * S_Frq 
+ 0.79241767524066 * S_Mnt + -1.11291951115769 * S_MntMeatProducts + -0.81016243357955 * 
S_NumCatalogPurchases + -0.06020302160033 * S_NumDealsPurchases + -0.72187271327886 * 
S_NumWebVisitsMonth + 0.63072705601805 * S_Recency ;
264824    +   H12  =     0.16845165387856 * S_AcceptedCmpTotal  +     0.13952140472368 *
264825    +        S_Frq  +    -0.49680297454001 * S_Mnt  +     0.20077884768409 *
264826    +        S_MntMeatProducts  +    -0.26509457206436 * S_NumCatalogPurchases
264827    +          +     0.44023370306786 * S_NumDealsPurchases
264828    +          +     0.14437092902564 * S_NumWebVisitsMonth
264829    +          +     0.29830280717193 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.16845165387856 * S_AcceptedCmpTotal + 0.13952140472368 * S_Frq + 
-0.49680297454001 * S_Mnt + 0.20077884768409 * S_MntMeatProducts + -0.26509457206436 * 
S_NumCatalogPurchases + 0.44023370306786 * S_NumDealsPurchases + 0.14437092902564 * 
S_NumWebVisitsMonth + 0.29830280717193 * S_Recency ;
264830    +   H13  =     0.17736973005738 * S_AcceptedCmpTotal  +    -1.27691889541485 *
264831    +        S_Frq  +     0.76151337613405 * S_Mnt  +     2.91913897431534 *
264832    +        S_MntMeatProducts  +     0.91968924804036 * S_NumCatalogPurchases
264833    +          +     0.36494720404815 * S_NumDealsPurchases
264834    +          +     0.03877838723538 * S_NumWebVisitsMonth
264835    +          +    -0.07783339271235 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.17736973005738 * S_AcceptedCmpTotal + -1.27691889541485 * S_Frq 
+ 0.76151337613405 * S_Mnt + 2.91913897431534 * S_MntMeatProducts + 0.91968924804036 * 
S_NumCatalogPurchases + 0.36494720404815 * S_NumDealsPurchases + 0.03877838723538 * 
S_NumWebVisitsMonth + -0.07783339271235 * S_Recency ;
264836    +   H14  =     0.06585247678486 * S_AcceptedCmpTotal  +     2.38872321291933 *
264837    +        S_Frq  +     0.55261122983069 * S_Mnt  +    -0.92412810336036 *
264838    +        S_MntMeatProducts  +    -0.85761594899144 * S_NumCatalogPurchases
264839    +          +    -0.87171784420951 * S_NumDealsPurchases
264840    +          +     0.27077171192055 * S_NumWebVisitsMonth
264841    +          +     0.44529508014227 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.06585247678486 * S_AcceptedCmpTotal + 2.38872321291933 * S_Frq + 
0.55261122983069 * S_Mnt + -0.92412810336036 * S_MntMeatProducts + -0.85761594899144 * 
S_NumCatalogPurchases + -0.87171784420951 * S_NumDealsPurchases + 0.27077171192055 * 
S_NumWebVisitsMonth + 0.44529508014227 * S_Recency ;
264842    +   H15  =     0.79261864023919 * S_AcceptedCmpTotal  +     0.22408033839661 *
264843    +        S_Frq  +     0.41205750844428 * S_Mnt  +    -0.05167252147978 *
264844    +        S_MntMeatProducts  +     0.52437372576463 * S_NumCatalogPurchases
264845    +          +    -0.02694744085713 * S_NumDealsPurchases
264846    +          +     0.42930866809604 * S_NumWebVisitsMonth
264847    +          +    -1.23356204218313 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.79261864023919 * S_AcceptedCmpTotal + 0.22408033839661 * S_Frq + 
0.41205750844428 * S_Mnt + -0.05167252147978 * S_MntMeatProducts + 0.52437372576463 * 
S_NumCatalogPurchases + -0.02694744085713 * S_NumDealsPurchases + 0.42930866809604 * 
S_NumWebVisitsMonth + -1.23356204218313 * S_Recency ;
264848    +   H16  =     0.07557739377714 * S_AcceptedCmpTotal  +     0.06732498402011 *
264849    +        S_Frq  +     1.00949697256114 * S_Mnt  +     0.18190372979158 *
264850    +        S_MntMeatProducts  +    -0.20994714743436 * S_NumCatalogPurchases
264851    +          +     1.91827561352967 * S_NumDealsPurchases
264852    +          +    -0.65112089304736 * S_NumWebVisitsMonth
264853    +          +     0.94688864667779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.07557739377714 * S_AcceptedCmpTotal + 0.06732498402011 * S_Frq + 
1.00949697256114 * S_Mnt + 0.18190372979158 * S_MntMeatProducts + -0.20994714743436 * 
S_NumCatalogPurchases + 1.91827561352967 * S_NumDealsPurchases + -0.65112089304736 * 
S_NumWebVisitsMonth + 0.94688864667779 * S_Recency ;
264854    +   H11  = H11  +    -0.41944609131662 * Marital_StatusDivorced
264855    +          +     0.19571272479408 * Marital_StatusMarried
264856    +          +    -0.16061908960963 * Marital_StatusSingle
264857    +          +     0.01147019501849 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41944609131662 * Marital_StatusDivorced + 
0.19571272479408 * Marital_StatusMarried + -0.16061908960963 * Marital_StatusSingle + 
0.01147019501849 * Marital_StatusTogether ;
264858    +   H12  = H12  +    -0.70326037460175 * Marital_StatusDivorced
264859    +          +    -0.64968872046859 * Marital_StatusMarried
264860    +          +     1.81995301340231 * Marital_StatusSingle
264861    +          +    -1.25679526739636 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.70326037460175 * Marital_StatusDivorced + 
-0.64968872046859 * Marital_StatusMarried + 1.81995301340231 * Marital_StatusSingle + 
-1.25679526739636 * Marital_StatusTogether ;
264862    +   H13  = H13  +    -0.50413590013638 * Marital_StatusDivorced
264863    +          +     0.19296467458933 * Marital_StatusMarried
264864    +          +     -0.2295693568996 * Marital_StatusSingle
264865    +          +     0.51095451752525 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.50413590013638 * Marital_StatusDivorced + 
0.19296467458933 * Marital_StatusMarried + -0.2295693568996 * Marital_StatusSingle + 
0.51095451752525 * Marital_StatusTogether ;
264866    +   H14  = H14  +    -0.93810483419419 * Marital_StatusDivorced
264867    +          +    -0.12318541826308 * Marital_StatusMarried
264868    +          +    -0.02882902763243 * Marital_StatusSingle
264869    +          +      0.9552700390789 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.93810483419419 * Marital_StatusDivorced + 
-0.12318541826308 * Marital_StatusMarried + -0.02882902763243 * Marital_StatusSingle + 
0.9552700390789 * Marital_StatusTogether ;
264870    +   H15  = H15  +    -0.16315275571793 * Marital_StatusDivorced
264871    +          +    -0.65544681605691 * Marital_StatusMarried
264872    +          +     0.31269236164873 * Marital_StatusSingle
264873    +          +    -0.37135201633747 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.16315275571793 * Marital_StatusDivorced + 
-0.65544681605691 * Marital_StatusMarried + 0.31269236164873 * Marital_StatusSingle + 
-0.37135201633747 * Marital_StatusTogether ;
264874    +   H16  = H16  +    -0.47177568566677 * Marital_StatusDivorced
264875    +          +     0.12269709457787 * Marital_StatusMarried
264876    +          +     0.37106402586008 * Marital_StatusSingle
264877    +          +     0.07580816063395 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.47177568566677 * Marital_StatusDivorced + 
0.12269709457787 * Marital_StatusMarried + 0.37106402586008 * Marital_StatusSingle + 
0.07580816063395 * Marital_StatusTogether ;
264878    +   H11  =     0.87814553506559 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.87814553506559 + H11 ;
264879    +   H12  =     1.18416285607678 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.18416285607678 + H12 ;
264880    +   H13  =     1.86220379911993 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.86220379911993 + H13 ;
264881    +   H14  =     1.79999645343103 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.79999645343103 + H14 ;
264882    +   H15  =    -2.95745585057281 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.95745585057281 + H15 ;
264883    +   H16  =    -0.63040593626724 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.63040593626724 + H16 ;
264884    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
264885    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
264886    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
264887    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
264888    +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
264889    +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
264890    +END;
MPRINT(EM_DIAGRAM):   END;
264891    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
264892    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
264893    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
264894    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
264895    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
264896    +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
264897    +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
264898    +END;
MPRINT(EM_DIAGRAM):   END;
264899    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264900    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
264901    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264902    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
264903    +   P_DepVar1  =    -5.78936073221603 * H11  +     3.14966455677413 * H12
264904    +          +     7.03853349374163 * H13  +    -2.45391654583749 * H14
264905    +          +     4.80213644089029 * H15  +    -1.60369759544804 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.78936073221603 * H11 + 3.14966455677413 * H12 + 
7.03853349374163 * H13 + -2.45391654583749 * H14 + 4.80213644089029 * H15 + -1.60369759544804 
* H16 ;
264906    +   P_DepVar1  =    -1.95361942474066 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.95361942474066 + P_DepVar1 ;
264907    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
264908    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
264909    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
264910    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
264911    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
264912    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
264913    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
264914    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
264915    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
264916    +END;
MPRINT(EM_DIAGRAM):   END;
264917    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
264918    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
264919    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
264920    +END;
MPRINT(EM_DIAGRAM):   END;
264921    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
264922    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
264923    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
264924    +END;
MPRINT(EM_DIAGRAM):   END;
264925    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264926    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
264927    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
264928    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
264929    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
264930    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
264931    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
264932    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
264933    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
264934    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
264935    +END;
MPRINT(EM_DIAGRAM):   END;
264936    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
264937    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
264938    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
264939    +drop
264940    +H11
264941    +H12
264942    +H13
264943    +H14
264944    +H15
264945    +H16
264946    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
264947    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
264948     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
264949     quit;
264950     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
264951     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
264952     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
264953     retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
264954     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
264955     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 877 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264956     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
264957     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264958     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 877 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 877 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264959     proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
264960     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264961     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264962     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264963     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
264964     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
264965     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264966     proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
264967     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

264968     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
264969     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264970     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264971     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
264972     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
264973     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264974     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264975     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
264976     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
264976   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 314 rows and 5 columns.

264977     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

264978     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
264979     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 314 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 314 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264980     filename _pref
264980   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
264981     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
264982     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
264983    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
264984    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
264985    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
264986    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
264987    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
264988    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
264989     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
264990     quit;
264991     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
264992     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
264993     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
264994     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
264995     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
264996     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

264997     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
264998     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
264999     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265000     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
265001     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265002     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265003     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265004     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265005     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265006     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265007     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
265008     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265009     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265010     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265011     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265012     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265013     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265014     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265015     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265016     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265017     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265017   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

265018     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265019     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265020     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 318 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265021     filename _pref
265021   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
265022     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265023     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
265024    +
265025    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
265026    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
265026   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
265027    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
265028    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
265029    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
265030    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
265031    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265032     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265033     quit;
265034     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
265035     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
265036     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
265037     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
265038     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
265039     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265040     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
265041     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265042     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265043     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
265044     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265045     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265046     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265047     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265048     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265049     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265050     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
265051     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265052     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265053     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265054     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265055     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265056     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265057     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265058     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265059     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265060     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265060   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

265061     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265062     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265063     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 357 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265064     filename _pref
265064   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
265065     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265066     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
265067    +
265068    +
265069    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
265070    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
265071    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
265072    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
265073    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
265074    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265075    +
265076    +
265077    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
265078    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
265079    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
265080    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
265081    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
265082    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265083    +
265084    +
265085    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
265086    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
265087    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
265088    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
265089    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
265090    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265091    +
265092    +
265093    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
265094    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
265095    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
265096    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
265097    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
265098    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265099    +
265100    +
265101    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
265102    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
265103    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
265104    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
265105    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
265106    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265107    +
265108    +
265109    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
265110    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
265111    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
265112    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
265113    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
265114    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265115    +
265116    +
265117    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
265118    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
265119    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
265120    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
265121    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
265122    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265123    +
265124    +
265125    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
265126    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
265127    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
265128    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
265129    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
265130    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265131    +if
265132    +_FILTERNORM1 not in ( '.')
265133    + and
265134    +_FILTERNORM2 not in ( '.')
265135    + and
265136    +_FILTERNORM3 not in ( '.')
265137    + and
265138    +_FILTERNORM4 not in ( '.')
265139    + and
265140    +_FILTERNORM5 not in ( '.')
265141    + and
265142    +_FILTERNORM6 not in ( '.')
265143    + and
265144    +_FILTERNORM7 not in ( ' ')
265145    + and
265146    +_FILTERNORM8 not in ( ' ')
265147    +and
265148    +( Dt_Customer ne .)
265149    +and ( Income ne . and (Income<=107000))
265150    +and ( Kidhome ne .)
265151    +and ( MntFishProducts ne .)
265152    +and ( MntFruits ne .)
265153    +and ( MntGoldProds ne .)
265154    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
265155    +and ( MntSweetProducts ne .)
265156    +and ( MntWines ne .)
265157    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
265158    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
265159    +and ( NumStorePurchases ne .)
265160    +and ( NumWebPurchases ne .)
265161    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
265162    +and ( Recency ne .)
265163    +and ( Teenhome ne .)
265164    +and ( Year_Birth ne .)
265165    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
265166    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
265167    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
265168    +end;
MPRINT(EM_DIAGRAM):   end;
265169    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
265170    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265171     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265172     quit;
265173     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
265174     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
265175     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
265176     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
265177     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
265178     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265179     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
265180     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265181     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265182     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
265183     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265184     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265185     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265186     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265187     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265188     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265189     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
265190     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265191     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265192     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265193     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265194     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265195     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265196     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265197     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265198     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265199     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265199   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

265200     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265201     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265202     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 423 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265203     %macro varDept(fcmpdata=,id=);
265204     %global nobs&id scoreFlag&id;
265205     %let scoreFlag&id = 0;
265206     %if &id=1 or ^&fcmpStart %then %do;
265207     proc sort data=&fcmpdata out=_temp&id nodupkey;
265208     by NAME;
265209     where id=&id and LHS in( %let j=1;
265210     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
265211     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
265212     "&var" %let j = %eval(&j+1);
265213     %end;
265214     );
265215     run;
265216     %let dsid = %sysfunc(open(_temp&id));
265217     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265218     %let dsid = %sysfunc(close(&dsid));
265219     %if &&nobs&id %then %do;
265220     %let scoreFlag&id = 1;
265221     %let fcmpStart = 1;
265222     %end;
265223     %else %let fcmpStart = 0;
265224     %end;
265225     %else %do;
265226     proc sort data=&fcmpdata out=_tempid;
265227     where id=&id;
265228     by LHS;
265229     run;
265230     %let dsid = %sysfunc(open(_tempid));
265231     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265232     %let dsid = %sysfunc(close(&dsid));
265233     %if ^&&nobs&id %then %do;
265234     proc datasets lib=work nolist;
265235     delete _tempid;
265236     run;
265237     quit;
265238     %end;
265239     %else %do;
265240     data _tempAll;
265241     set %let j=%eval(&id-1);
265242     %do x=1 %to &j;
265243     %if &&nobs&x %then %do;
265244     _temp&x %end;
265245     %end;
265246     ;
265247     run;
265248     proc sql;
265249     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
265249   ! work._tempid p2 where p.name=p2.lhs;
265250     quit;
265251     data _temp&id;
265252     set _temp&id;
265253     where LHS ne '' and NAME ne '' and Node ne '';
265254     run;
265255     proc datasets lib=work nolist;
265256     delete _tempAll;
265257     run;
265258     %let dsid = %sysfunc(open(_temp&id));
265259     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265260     %let dsid = %sysfunc(close(&dsid));
265261     %if ^&&nobs&id %then %do;
265262     proc datasets lib=work nolist;
265263     delete _temp&id;
265264     run;
265265     quit;
265266     %end;
265267     %else %do;
265268     %let scoreFlag&id = 1;
265269     data _temp&id;
265270     set _temp&id;
265271     where LHS ne NAME and node ne '';
265272     run;
265273     %let dsid = %sysfunc(open(_temp&id));
265274     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265275     %let dsid = %sysfunc(close(&dsid));
265276     %if ^&&nobs&id %then %do;
265277     proc datasets lib=work nolist;
265278     delete _temp&id;
265279     run;
265280     quit;
265281     %end;
265282     %else %do;
265283     proc sort data=_temp&id nodupkey;
265284     by LHS NAME;
265285     run;
265286     %end;
265287     %end;
265288     %end;
265289     %end;
265290     %mend varDept;
265291     %macro optCode(outdata=fcmpdata);
265292     %global fcmpStart;
265293     %let fcmpStart = 0;
265294     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
265295     %let NumNodes=9;
265296     %do k=1 %to &NumNodes;
265297     %vardept(fcmpdata=&outdata, id=&k);
265298     %end;
265299     %mend optCode;
265300     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 31 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

265301     filename _pref
265301   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
265302     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265303     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
265304    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
265305    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
265306    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
265307    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
265308    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
265309    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
265310    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
265311    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
265312    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
265313    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
265314    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
265315    +LENGTH _WARN_ $4
265316    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
265317    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
265318    +
265319    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
265320    +
265321    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
265322    +
265323    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
265324    +
265325    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
265326    +
265327    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
265328    +
265329    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
265330    +
265331    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
265332    +
265333    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
265334    +
265335    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
265336    +
265337    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
265338    +
265339    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
265340    +
265341    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
265342    +
265343    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
265344    +
265345    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
265346    +
265347    +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
265348    +
265349    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
265350    +
265351    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
265352    +
265353    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
265354    +
265355    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
265356    +
265357    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
265358    +
265359    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
265360    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
265361    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
265362    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
265363    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
265364    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
265365    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
265366    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
265367    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
265368    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
265369    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
265370    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
265371    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
265372    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
265373    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265374    +end;
MPRINT(EM_DIAGRAM):   end;
265375    +else do;
MPRINT(EM_DIAGRAM):   else do;
265376    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
265377    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
265378    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
265379    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
265380    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
265381    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
265382    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
265383    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
265384    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265385    +         end;
MPRINT(EM_DIAGRAM):   end;
265386    +         else do;
MPRINT(EM_DIAGRAM):   else do;
265387    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
265388    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
265389    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265390    +            end;
MPRINT(EM_DIAGRAM):   end;
265391    +         end;
MPRINT(EM_DIAGRAM):   end;
265392    +      end;
MPRINT(EM_DIAGRAM):   end;
265393    +      else do;
MPRINT(EM_DIAGRAM):   else do;
265394    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
265395    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
265396    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265397    +         end;
MPRINT(EM_DIAGRAM):   end;
265398    +      end;
MPRINT(EM_DIAGRAM):   end;
265399    +   end;
MPRINT(EM_DIAGRAM):   end;
265400    +   else do;
MPRINT(EM_DIAGRAM):   else do;
265401    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
265402    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
265403    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265404    +      end;
MPRINT(EM_DIAGRAM):   end;
265405    +      else do;
MPRINT(EM_DIAGRAM):   else do;
265406    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
265407    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
265408    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
265409    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
265410    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
265411    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
265412    +         end;
MPRINT(EM_DIAGRAM):   end;
265413    +      end;
MPRINT(EM_DIAGRAM):   end;
265414    +   end;
MPRINT(EM_DIAGRAM):   end;
265415    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
265416    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
265417    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
265418    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
265419    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
265420    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
265421    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265422    +   end;
MPRINT(EM_DIAGRAM):   end;
265423    +end;
MPRINT(EM_DIAGRAM):   end;
265424    +
265425    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265426    +*** Checking missing input Interval
265427    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
265428    +
265429    +IF NMISS(
265430    +   AcceptedCmpTotal ,
265431    +   Frq ,
265432    +   Mnt ,
265433    +   MntMeatProducts ,
265434    +   NumCatalogPurchases ,
265435    +   NumDealsPurchases ,
265436    +   NumWebVisitsMonth ,
265437    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
265438    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
265439    +
265440    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
265441    +END;
MPRINT(EM_DIAGRAM):   END;
265442    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265443    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
265444    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265445    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
265446    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
265447    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
265448    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
265449    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
265450    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
265451    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
265452    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
265453    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
265454    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
265455    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
265456    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
265457    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
265458    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
265459    +END;
MPRINT(EM_DIAGRAM):   END;
265460    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
265461    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
265462    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
265463    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
265464    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
265465    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
265466    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
265467    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
265468    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
265469    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
265470    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
265471    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
265472    +   ELSE S_NumCatalogPurchases
265473    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
265474    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
265475    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
265476    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
265477    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
265478    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
265479    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
265480    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
265481    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
265482    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
265483    +END;
MPRINT(EM_DIAGRAM):   END;
265484    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265485    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
265486    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265487    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265488    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
265489    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265490    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
265491    +   H11  =     0.32071869925611 * S_AcceptedCmpTotal  +    -1.18627222732428 *
265492    +        S_Frq  +     0.00967528650049 * S_Mnt  +     0.53945968152118 *
265493    +        S_MntMeatProducts  +     0.76096876406469 * S_NumCatalogPurchases
265494    +          +       0.868651674737 * S_NumDealsPurchases
265495    +          +     0.56519310644826 * S_NumWebVisitsMonth
265496    +          +    -0.85354176662475 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.32071869925611 * S_AcceptedCmpTotal + -1.18627222732428 * S_Frq 
+ 0.00967528650049 * S_Mnt + 0.53945968152118 * S_MntMeatProducts + 0.76096876406469 * 
S_NumCatalogPurchases + 0.868651674737 * S_NumDealsPurchases + 0.56519310644826 * 
S_NumWebVisitsMonth + -0.85354176662475 * S_Recency ;
265497    +   H12  =    -0.53760783840514 * S_AcceptedCmpTotal  +    -0.10887355535928 *
265498    +        S_Frq  +     0.25951462601453 * S_Mnt  +    -0.54343784484503 *
265499    +        S_MntMeatProducts  +    -0.74697447632011 * S_NumCatalogPurchases
265500    +          +     0.22588169231784 * S_NumDealsPurchases
265501    +          +    -0.50349429270665 * S_NumWebVisitsMonth
265502    +          +     0.94913855646928 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.53760783840514 * S_AcceptedCmpTotal + -0.10887355535928 * S_Frq 
+ 0.25951462601453 * S_Mnt + -0.54343784484503 * S_MntMeatProducts + -0.74697447632011 * 
S_NumCatalogPurchases + 0.22588169231784 * S_NumDealsPurchases + -0.50349429270665 * 
S_NumWebVisitsMonth + 0.94913855646928 * S_Recency ;
265503    +   H13  =    -0.49808738781134 * S_AcceptedCmpTotal  +     0.75871743128278 *
265504    +        S_Frq  +     0.92783231668315 * S_Mnt  +    -0.72994432129905 *
265505    +        S_MntMeatProducts  +    -0.41911874339248 * S_NumCatalogPurchases
265506    +          +     0.38270609344543 * S_NumDealsPurchases
265507    +          +    -0.67911374483005 * S_NumWebVisitsMonth
265508    +          +     0.62959851233589 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.49808738781134 * S_AcceptedCmpTotal + 0.75871743128278 * S_Frq 
+ 0.92783231668315 * S_Mnt + -0.72994432129905 * S_MntMeatProducts + -0.41911874339248 * 
S_NumCatalogPurchases + 0.38270609344543 * S_NumDealsPurchases + -0.67911374483005 * 
S_NumWebVisitsMonth + 0.62959851233589 * S_Recency ;
265509    +   H14  =    -0.36477606348735 * S_AcceptedCmpTotal  +     1.38796327523044 *
265510    +        S_Frq  +     0.07887052944027 * S_Mnt  +    -2.27327070721147 *
265511    +        S_MntMeatProducts  +    -1.42807558393601 * S_NumCatalogPurchases
265512    +          +    -0.27211575710638 * S_NumDealsPurchases
265513    +          +    -0.27365412530976 * S_NumWebVisitsMonth
265514    +          +     0.25676979915144 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.36477606348735 * S_AcceptedCmpTotal + 1.38796327523044 * S_Frq 
+ 0.07887052944027 * S_Mnt + -2.27327070721147 * S_MntMeatProducts + -1.42807558393601 * 
S_NumCatalogPurchases + -0.27211575710638 * S_NumDealsPurchases + -0.27365412530976 * 
S_NumWebVisitsMonth + 0.25676979915144 * S_Recency ;
265515    +   H11  = H11  +    -0.10986134340688 * Marital_StatusDivorced
265516    +          +     0.26671394907331 * Marital_StatusMarried
265517    +          +    -0.21412689047791 * Marital_StatusSingle
265518    +          +      0.0878866166131 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10986134340688 * Marital_StatusDivorced + 
0.26671394907331 * Marital_StatusMarried + -0.21412689047791 * Marital_StatusSingle + 
0.0878866166131 * Marital_StatusTogether ;
265519    +   H12  = H12  +     0.57822808683392 * Marital_StatusDivorced
265520    +          +      0.8828544386185 * Marital_StatusMarried
265521    +          +    -0.82952673399486 * Marital_StatusSingle
265522    +          +     0.54925647255359 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.57822808683392 * Marital_StatusDivorced + 0.8828544386185 
* Marital_StatusMarried + -0.82952673399486 * Marital_StatusSingle + 0.54925647255359 * 
Marital_StatusTogether ;
265523    +   H13  = H13  +    -0.79896029123713 * Marital_StatusDivorced
265524    +          +     0.43581055671108 * Marital_StatusMarried
265525    +          +    -0.37028703904727 * Marital_StatusSingle
265526    +          +     0.68190263239907 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.79896029123713 * Marital_StatusDivorced + 
0.43581055671108 * Marital_StatusMarried + -0.37028703904727 * Marital_StatusSingle + 
0.68190263239907 * Marital_StatusTogether ;
265527    +   H14  = H14  +     0.00414219307385 * Marital_StatusDivorced
265528    +          +     -0.1219875250835 * Marital_StatusMarried
265529    +          +    -0.01813173038471 * Marital_StatusSingle
265530    +          +    -0.20940808240309 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.00414219307385 * Marital_StatusDivorced + -0.1219875250835 
* Marital_StatusMarried + -0.01813173038471 * Marital_StatusSingle + -0.20940808240309 * 
Marital_StatusTogether ;
265531    +   H11  =    -2.24986706948705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24986706948705 + H11 ;
265532    +   H12  =     2.55250334233636 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 2.55250334233636 + H12 ;
265533    +   H13  =    -0.36139954012771 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.36139954012771 + H13 ;
265534    +   H14  =    -0.78789859340386 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.78789859340386 + H14 ;
265535    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
265536    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
265537    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
265538    +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
265539    +END;
MPRINT(EM_DIAGRAM):   END;
265540    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
265541    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
265542    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
265543    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
265544    +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
265545    +END;
MPRINT(EM_DIAGRAM):   END;
265546    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265547    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
265548    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265549    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
265550    +   P_DepVar1  =     3.47156859435653 * H11  +     -3.7137526781971 * H12
265551    +          +    -4.05222402892753 * H13  +    -4.15704481111915 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.47156859435653 * H11 + -3.7137526781971 * H12 + 
-4.05222402892753 * H13 + -4.15704481111915 * H14 ;
265552    +   P_DepVar1  =    -0.19096137615409 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.19096137615409 + P_DepVar1 ;
265553    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
265554    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
265555    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
265556    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
265557    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
265558    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
265559    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
265560    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
265561    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
265562    +END;
MPRINT(EM_DIAGRAM):   END;
265563    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
265564    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
265565    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
265566    +END;
MPRINT(EM_DIAGRAM):   END;
265567    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
265568    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
265569    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
265570    +END;
MPRINT(EM_DIAGRAM):   END;
265571    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265572    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
265573    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
265574    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
265575    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
265576    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
265577    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
265578    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
265579    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
265580    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
265581    +END;
MPRINT(EM_DIAGRAM):   END;
265582    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
265583    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
265584    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
265585    +drop
265586    +H11
265587    +H12
265588    +H13
265589    +H14
265590    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
265591    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265592     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265593     quit;
265594     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
265595     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
265596     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
265597     retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
265598     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
265599     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265600     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
265601     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265602     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265603     proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
265604     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265605     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265606     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265607     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265608     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265609     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265610     proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
265611     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265612     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265613     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265614     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265615     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265616     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265617     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265618     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265619     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265620     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265620   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 278 rows and 5 columns.

265621     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265622     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265623     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 278 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 278 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265624     filename _pref
265624   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
265625     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265626     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
265627    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
265628    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
265629    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
265630    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
265631    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
265632    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265633     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265634     quit;
265635     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
265636     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
265637     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
265638     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
265639     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
265640     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265641     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
265642     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265643     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265644     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
265645     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265646     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265647     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265648     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265649     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265650     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265651     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
265652     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265653     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265654     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265655     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265656     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265657     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265658     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265659     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265660     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265661     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265661   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

265662     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265663     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265664     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 282 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265665     filename _pref
265665   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
265666     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265667     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
265668    +
265669    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
265670    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
265670   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
265671    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
265672    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
265673    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
265674    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
265675    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265676     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265677     quit;
265678     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
265679     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
265680     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
265681     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
265682     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
265683     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265684     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
265685     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265686     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265687     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
265688     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265689     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265690     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265691     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265692     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265693     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265694     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
265695     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265696     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265697     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265698     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265699     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265700     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265701     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265702     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265703     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265704     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265704   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

265705     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265706     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265707     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 321 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265708     filename _pref
265708   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
265709     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265710     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
265711    +
265712    +
265713    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
265714    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
265715    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
265716    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
265717    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
265718    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265719    +
265720    +
265721    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
265722    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
265723    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
265724    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
265725    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
265726    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265727    +
265728    +
265729    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
265730    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
265731    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
265732    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
265733    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
265734    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265735    +
265736    +
265737    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
265738    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
265739    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
265740    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
265741    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
265742    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265743    +
265744    +
265745    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
265746    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
265747    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
265748    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
265749    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
265750    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265751    +
265752    +
265753    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
265754    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
265755    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
265756    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
265757    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
265758    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265759    +
265760    +
265761    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
265762    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
265763    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
265764    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
265765    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
265766    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265767    +
265768    +
265769    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
265770    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
265771    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
265772    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
265773    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
265774    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
265775    +if
265776    +_FILTERNORM1 not in ( '.')
265777    + and
265778    +_FILTERNORM2 not in ( '.')
265779    + and
265780    +_FILTERNORM3 not in ( '.')
265781    + and
265782    +_FILTERNORM4 not in ( '.')
265783    + and
265784    +_FILTERNORM5 not in ( '.')
265785    + and
265786    +_FILTERNORM6 not in ( '.')
265787    + and
265788    +_FILTERNORM7 not in ( ' ')
265789    + and
265790    +_FILTERNORM8 not in ( ' ')
265791    +and
265792    +( Dt_Customer ne .)
265793    +and ( Income ne . and (Income<=107000))
265794    +and ( Kidhome ne .)
265795    +and ( MntFishProducts ne .)
265796    +and ( MntFruits ne .)
265797    +and ( MntGoldProds ne .)
265798    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
265799    +and ( MntSweetProducts ne .)
265800    +and ( MntWines ne .)
265801    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
265802    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
265803    +and ( NumStorePurchases ne .)
265804    +and ( NumWebPurchases ne .)
265805    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
265806    +and ( Recency ne .)
265807    +and ( Teenhome ne .)
265808    +and ( Year_Birth ne .)
265809    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
265810    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
265811    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
265812    +end;
MPRINT(EM_DIAGRAM):   end;
265813    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
265814    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
265815     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
265816     quit;
265817     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
265818     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
265819     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
265820     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
265821     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
265822     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265823     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
265824     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265825     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265826     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
265827     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265828     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265829     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265830     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
265831     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
265832     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265833     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
265834     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

265835     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
265836     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265837     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265838     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
265839     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
265840     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
265841     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265842     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
265843     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
265843   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

265844     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265845     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
265846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 387 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

265847     %macro varDept(fcmpdata=,id=);
265848     %global nobs&id scoreFlag&id;
265849     %let scoreFlag&id = 0;
265850     %if &id=1 or ^&fcmpStart %then %do;
265851     proc sort data=&fcmpdata out=_temp&id nodupkey;
265852     by NAME;
265853     where id=&id and LHS in( %let j=1;
265854     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
265855     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
265856     "&var" %let j = %eval(&j+1);
265857     %end;
265858     );
265859     run;
265860     %let dsid = %sysfunc(open(_temp&id));
265861     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265862     %let dsid = %sysfunc(close(&dsid));
265863     %if &&nobs&id %then %do;
265864     %let scoreFlag&id = 1;
265865     %let fcmpStart = 1;
265866     %end;
265867     %else %let fcmpStart = 0;
265868     %end;
265869     %else %do;
265870     proc sort data=&fcmpdata out=_tempid;
265871     where id=&id;
265872     by LHS;
265873     run;
265874     %let dsid = %sysfunc(open(_tempid));
265875     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265876     %let dsid = %sysfunc(close(&dsid));
265877     %if ^&&nobs&id %then %do;
265878     proc datasets lib=work nolist;
265879     delete _tempid;
265880     run;
265881     quit;
265882     %end;
265883     %else %do;
265884     data _tempAll;
265885     set %let j=%eval(&id-1);
265886     %do x=1 %to &j;
265887     %if &&nobs&x %then %do;
265888     _temp&x %end;
265889     %end;
265890     ;
265891     run;
265892     proc sql;
265893     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
265893   ! work._tempid p2 where p.name=p2.lhs;
265894     quit;
265895     data _temp&id;
265896     set _temp&id;
265897     where LHS ne '' and NAME ne '' and Node ne '';
265898     run;
265899     proc datasets lib=work nolist;
265900     delete _tempAll;
265901     run;
265902     %let dsid = %sysfunc(open(_temp&id));
265903     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265904     %let dsid = %sysfunc(close(&dsid));
265905     %if ^&&nobs&id %then %do;
265906     proc datasets lib=work nolist;
265907     delete _temp&id;
265908     run;
265909     quit;
265910     %end;
265911     %else %do;
265912     %let scoreFlag&id = 1;
265913     data _temp&id;
265914     set _temp&id;
265915     where LHS ne NAME and node ne '';
265916     run;
265917     %let dsid = %sysfunc(open(_temp&id));
265918     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
265919     %let dsid = %sysfunc(close(&dsid));
265920     %if ^&&nobs&id %then %do;
265921     proc datasets lib=work nolist;
265922     delete _temp&id;
265923     run;
265924     quit;
265925     %end;
265926     %else %do;
265927     proc sort data=_temp&id nodupkey;
265928     by LHS NAME;
265929     run;
265930     %end;
265931     %end;
265932     %end;
265933     %end;
265934     %mend varDept;
265935     %macro optCode(outdata=fcmpdata);
265936     %global fcmpStart;
265937     %let fcmpStart = 0;
265938     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
265939     %let NumNodes=9;
265940     %do k=1 %to &NumNodes;
265941     %vardept(fcmpdata=&outdata, id=&k);
265942     %end;
265943     %mend optCode;
265944     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 42 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 31 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 11 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 11 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 11 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

265945     filename _pref
265945   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas";
265946     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
265947     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural37\EMPUBLISHSCORE.sas.
265948    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
265949    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
265950    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
265951    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
265952    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
265953    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
265954    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
265955    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
265956    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
265957    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
265958    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
265959    +LENGTH _WARN_ $4
265960    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
265961    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
265962    +
265963    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
265964    +
265965    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
265966    +
265967    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
265968    +
265969    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
265970    +
265971    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
265972    +
265973    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
265974    +
265975    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
265976    +
265977    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
265978    +
265979    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
265980    +
265981    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
265982    +
265983    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
265984    +
265985    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
265986    +
265987    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
265988    +
265989    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
265990    +
265991    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
265992    +
265993    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
265994    +
265995    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
265996    +
265997    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
265998    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
265999    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
266000    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
266001    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
266002    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
266003    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
266004    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
266005    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
266006    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
266007    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
266008    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
266009    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
266010    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
266011    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266012    +end;
MPRINT(EM_DIAGRAM):   end;
266013    +else do;
MPRINT(EM_DIAGRAM):   else do;
266014    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
266015    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
266016    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
266017    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
266018    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
266019    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
266020    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
266021    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
266022    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266023    +         end;
MPRINT(EM_DIAGRAM):   end;
266024    +         else do;
MPRINT(EM_DIAGRAM):   else do;
266025    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
266026    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
266027    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266028    +            end;
MPRINT(EM_DIAGRAM):   end;
266029    +         end;
MPRINT(EM_DIAGRAM):   end;
266030    +      end;
MPRINT(EM_DIAGRAM):   end;
266031    +      else do;
MPRINT(EM_DIAGRAM):   else do;
266032    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
266033    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
266034    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266035    +         end;
MPRINT(EM_DIAGRAM):   end;
266036    +      end;
MPRINT(EM_DIAGRAM):   end;
266037    +   end;
MPRINT(EM_DIAGRAM):   end;
266038    +   else do;
MPRINT(EM_DIAGRAM):   else do;
266039    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
266040    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
266041    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266042    +      end;
MPRINT(EM_DIAGRAM):   end;
266043    +      else do;
MPRINT(EM_DIAGRAM):   else do;
266044    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
266045    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
266046    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
266047    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
266048    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
266049    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266050    +         end;
MPRINT(EM_DIAGRAM):   end;
266051    +      end;
MPRINT(EM_DIAGRAM):   end;
266052    +   end;
MPRINT(EM_DIAGRAM):   end;
266053    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
266054    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
266055    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
266056    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
266057    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
266058    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
266059    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266060    +   end;
MPRINT(EM_DIAGRAM):   end;
266061    +end;
MPRINT(EM_DIAGRAM):   end;
266062    +
266063    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266064    +*** Checking missing input Interval
266065    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
266066    +
266067    +IF NMISS(
266068    +   AcceptedCmpTotal ,
266069    +   Frq ,
266070    +   Mnt ,
266071    +   MntMeatProducts ,
266072    +   NumCatalogPurchases ,
266073    +   NumDealsPurchases ,
266074    +   NumWebVisitsMonth ,
266075    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
266076    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
266077    +
266078    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266079    +END;
MPRINT(EM_DIAGRAM):   END;
266080    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266081    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
266082    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266083    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266084    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
266085    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
266086    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
266087    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
266088    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
266089    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
266090    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
266091    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
266092    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
266093    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
266094    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
266095    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
266096    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
266097    +END;
MPRINT(EM_DIAGRAM):   END;
266098    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266099    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
266100    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
266101    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
266102    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
266103    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
266104    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
266105    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
266106    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
266107    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
266108    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
266109    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
266110    +   ELSE S_NumCatalogPurchases
266111    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
266112    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
266113    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
266114    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
266115    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
266116    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
266117    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
266118    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
266119    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
266120    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
266121    +END;
MPRINT(EM_DIAGRAM):   END;
266122    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266123    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
266124    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266125    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266126    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
266127    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266128    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266129    +   H1x1_1  =     0.09570386434261 * S_AcceptedCmpTotal
266130    +          +    -3.36239324145969 * S_Frq  +     2.37222713457405 * S_Mnt
266131    +          +     6.08901143667375 * S_MntMeatProducts
266132    +          +     2.21464286693249 * S_NumCatalogPurchases
266133    +          +     0.88693497635794 * S_NumDealsPurchases
266134    +          +    -0.16352347343851 * S_NumWebVisitsMonth
266135    +          +     0.02048426810982 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 0.09570386434261 * S_AcceptedCmpTotal + -3.36239324145969 * 
S_Frq + 2.37222713457405 * S_Mnt + 6.08901143667375 * S_MntMeatProducts + 2.21464286693249 * 
S_NumCatalogPurchases + 0.88693497635794 * S_NumDealsPurchases + -0.16352347343851 * 
S_NumWebVisitsMonth + 0.02048426810982 * S_Recency ;
266136    +   H1x1_1  = H1x1_1  +    -0.48159393292731 * Marital_StatusDivorced
266137    +          +     0.97693281807676 * Marital_StatusMarried
266138    +          +    -0.47353913752833 * Marital_StatusSingle
266139    +          +     0.72993998289048 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + -0.48159393292731 * Marital_StatusDivorced + 
0.97693281807676 * Marital_StatusMarried + -0.47353913752833 * Marital_StatusSingle + 
0.72993998289048 * Marital_StatusTogether ;
266140    +   H1x1_1  =     4.98331351913225 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = 4.98331351913225 + H1x1_1 ;
266141    +   DROP _EXP_BAR;
MPRINT(EM_DIAGRAM):   DROP _EXP_BAR;
266142    +   _EXP_BAR=50;
MPRINT(EM_DIAGRAM):   _EXP_BAR=50;
266143    +   H1x1_1  = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
MPRINT(EM_DIAGRAM):   H1x1_1 = 1.0 / (1.0 + EXP(MIN( - H1x1_1 , _EXP_BAR)));
266144    +END;
MPRINT(EM_DIAGRAM):   END;
266145    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266146    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
266147    +END;
MPRINT(EM_DIAGRAM):   END;
266148    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266149    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
266150    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266151    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266152    +   P_DepVar1  =     12.9267769403169 * H1x1_1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.9267769403169 * H1x1_1 ;
266153    +   P_DepVar1  =    -15.3575436578276 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -15.3575436578276 + P_DepVar1 ;
266154    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
266155    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
266156    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
266157    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
266158    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
266159    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
266160    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
266161    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
266162    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
266163    +END;
MPRINT(EM_DIAGRAM):   END;
266164    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266165    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
266166    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
266167    +END;
MPRINT(EM_DIAGRAM):   END;
266168    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
266169    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
266170    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
266171    +END;
MPRINT(EM_DIAGRAM):   END;
266172    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266173    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
266174    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266175    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
266176    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
266177    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
266178    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
266179    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
266180    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
266181    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
266182    +END;
MPRINT(EM_DIAGRAM):   END;
266183    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
266184    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
266185    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
266186    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266187     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266188     quit;
266189     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266190     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266191     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266192     retain ID 2 Node "AutoNeural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural37";
266193     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266194     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266195     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266196     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266197     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 541 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 541 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266198     proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural37_variableset out=_temp2(keep=NAME 
CREATOR);
266199     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266200     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266201     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266202     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266203     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266204     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266205     proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural37_train out=_meta(keep=NAME) noprint;
266206     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

266207     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266208     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266209     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266210     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266211     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266212     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266213     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266214     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266215     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266215   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 245 rows and 5 columns.

266216     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266217     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266218     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 245 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 245 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266219     filename _pref
266219   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
266220     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266221     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
266222    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266223    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
266224    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266225    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
266226    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
266227    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266228     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266229     quit;
266230     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266231     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266232     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266233     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
266234     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266235     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266236     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266237     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266238     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266239     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
266240     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266241     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266242     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266243     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266244     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266245     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266246     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
266247     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

266248     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266249     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266250     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266251     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266252     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266253     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266254     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266255     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266256     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266256   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

266257     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266258     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266259     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 249 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266260     filename _pref
266260   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
266261     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266262     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
266263    +
266264    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
266265    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
266265   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
266266    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
266267    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
266268    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
266269    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
266270    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266271     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266272     quit;
266273     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266274     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266275     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266276     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
266277     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266278     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266279     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266280     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266281     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266282     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
266283     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266284     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266285     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266286     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266287     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266288     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266289     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
266290     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266291     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266292     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266293     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266294     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266295     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266296     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266297     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266298     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266299     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266299   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

266300     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266301     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266302     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 288 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266303     filename _pref
266303   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
266304     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266305     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
266306    +
266307    +
266308    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
266309    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
266310    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
266311    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
266312    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
266313    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266314    +
266315    +
266316    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
266317    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
266318    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
266319    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
266320    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
266321    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266322    +
266323    +
266324    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
266325    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
266326    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
266327    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
266328    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
266329    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266330    +
266331    +
266332    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
266333    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
266334    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
266335    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
266336    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
266337    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266338    +
266339    +
266340    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
266341    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
266342    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
266343    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
266344    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
266345    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266346    +
266347    +
266348    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
266349    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
266350    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
266351    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
266352    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
266353    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266354    +
266355    +
266356    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
266357    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
266358    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
266359    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
266360    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
266361    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266362    +
266363    +
266364    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
266365    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
266366    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
266367    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
266368    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
266369    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266370    +if
266371    +_FILTERNORM1 not in ( '.')
266372    + and
266373    +_FILTERNORM2 not in ( '.')
266374    + and
266375    +_FILTERNORM3 not in ( '.')
266376    + and
266377    +_FILTERNORM4 not in ( '.')
266378    + and
266379    +_FILTERNORM5 not in ( '.')
266380    + and
266381    +_FILTERNORM6 not in ( '.')
266382    + and
266383    +_FILTERNORM7 not in ( ' ')
266384    + and
266385    +_FILTERNORM8 not in ( ' ')
266386    +and
266387    +( Dt_Customer ne .)
266388    +and ( Income ne . and (Income<=107000))
266389    +and ( Kidhome ne .)
266390    +and ( MntFishProducts ne .)
266391    +and ( MntFruits ne .)
266392    +and ( MntGoldProds ne .)
266393    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
266394    +and ( MntSweetProducts ne .)
266395    +and ( MntWines ne .)
266396    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
266397    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
266398    +and ( NumStorePurchases ne .)
266399    +and ( NumWebPurchases ne .)
266400    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
266401    +and ( Recency ne .)
266402    +and ( Teenhome ne .)
266403    +and ( Year_Birth ne .)
266404    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
266405    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
266406    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
266407    +end;
MPRINT(EM_DIAGRAM):   end;
266408    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
266409    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266410     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266411     quit;
266412     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266413     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266414     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266415     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
266416     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266417     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266418     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266419     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266420     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266421     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
266422     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266423     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266424     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266425     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266426     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266427     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266428     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
266429     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

266430     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266431     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266432     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266433     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266434     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266435     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266436     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266437     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266438     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266438   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

266439     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266440     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266441     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 354 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266442     %macro varDept(fcmpdata=,id=);
266443     %global nobs&id scoreFlag&id;
266444     %let scoreFlag&id = 0;
266445     %if &id=1 or ^&fcmpStart %then %do;
266446     proc sort data=&fcmpdata out=_temp&id nodupkey;
266447     by NAME;
266448     where id=&id and LHS in( %let j=1;
266449     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
266450     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
266451     "&var" %let j = %eval(&j+1);
266452     %end;
266453     );
266454     run;
266455     %let dsid = %sysfunc(open(_temp&id));
266456     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
266457     %let dsid = %sysfunc(close(&dsid));
266458     %if &&nobs&id %then %do;
266459     %let scoreFlag&id = 1;
266460     %let fcmpStart = 1;
266461     %end;
266462     %else %let fcmpStart = 0;
266463     %end;
266464     %else %do;
266465     proc sort data=&fcmpdata out=_tempid;
266466     where id=&id;
266467     by LHS;
266468     run;
266469     %let dsid = %sysfunc(open(_tempid));
266470     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
266471     %let dsid = %sysfunc(close(&dsid));
266472     %if ^&&nobs&id %then %do;
266473     proc datasets lib=work nolist;
266474     delete _tempid;
266475     run;
266476     quit;
266477     %end;
266478     %else %do;
266479     data _tempAll;
266480     set %let j=%eval(&id-1);
266481     %do x=1 %to &j;
266482     %if &&nobs&x %then %do;
266483     _temp&x %end;
266484     %end;
266485     ;
266486     run;
266487     proc sql;
266488     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
266488   ! work._tempid p2 where p.name=p2.lhs;
266489     quit;
266490     data _temp&id;
266491     set _temp&id;
266492     where LHS ne '' and NAME ne '' and Node ne '';
266493     run;
266494     proc datasets lib=work nolist;
266495     delete _tempAll;
266496     run;
266497     %let dsid = %sysfunc(open(_temp&id));
266498     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
266499     %let dsid = %sysfunc(close(&dsid));
266500     %if ^&&nobs&id %then %do;
266501     proc datasets lib=work nolist;
266502     delete _temp&id;
266503     run;
266504     quit;
266505     %end;
266506     %else %do;
266507     %let scoreFlag&id = 1;
266508     data _temp&id;
266509     set _temp&id;
266510     where LHS ne NAME and node ne '';
266511     run;
266512     %let dsid = %sysfunc(open(_temp&id));
266513     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
266514     %let dsid = %sysfunc(close(&dsid));
266515     %if ^&&nobs&id %then %do;
266516     proc datasets lib=work nolist;
266517     delete _temp&id;
266518     run;
266519     quit;
266520     %end;
266521     %else %do;
266522     proc sort data=_temp&id nodupkey;
266523     by LHS NAME;
266524     run;
266525     %end;
266526     %end;
266527     %end;
266528     %end;
266529     %mend varDept;
266530     %macro optCode(outdata=fcmpdata);
266531     %global fcmpStart;
266532     %let fcmpStart = 0;
266533     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
266534     %let NumNodes=9;
266535     %do k=1 %to &NumNodes;
266536     %vardept(fcmpdata=&outdata, id=&k);
266537     %end;
266538     %mend optCode;
266539     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 45 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 33 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 26 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

266540     filename _pref
266540   ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas";
266541     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266542     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural40\EMPUBLISHSCORE.sas.
266543    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
266544    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
266545    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
266546    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
266547    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
266548    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
266549    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
266550    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
266551    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
266552    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
266553    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
266554    +LENGTH _WARN_ $4
266555    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
266556    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
266557    +
266558    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
266559    +
266560    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
266561    +
266562    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
266563    +
266564    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
266565    +
266566    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
266567    +
266568    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
266569    +
266570    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
266571    +
266572    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
266573    +
266574    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
266575    +
266576    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
266577    +
266578    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
266579    +
266580    +      label H1x1_1 = 'Hidden: H1x1_=1' ;
MPRINT(EM_DIAGRAM):   label H1x1_1 = 'Hidden: H1x1_=1' ;
266581    +
266582    +      label H1x1_2 = 'Hidden: H1x1_=2' ;
MPRINT(EM_DIAGRAM):   label H1x1_2 = 'Hidden: H1x1_=2' ;
266583    +
266584    +      label H1x1_3 = 'Hidden: H1x1_=3' ;
MPRINT(EM_DIAGRAM):   label H1x1_3 = 'Hidden: H1x1_=3' ;
266585    +
266586    +      label H1x1_4 = 'Hidden: H1x1_=4' ;
MPRINT(EM_DIAGRAM):   label H1x1_4 = 'Hidden: H1x1_=4' ;
266587    +
266588    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
266589    +
266590    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
266591    +
266592    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
266593    +
266594    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
266595    +
266596    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
266597    +
266598    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
266599    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
266600    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
266601    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
266602    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
266603    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
266604    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
266605    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
266606    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
266607    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
266608    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
266609    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
266610    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
266611    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
266612    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266613    +end;
MPRINT(EM_DIAGRAM):   end;
266614    +else do;
MPRINT(EM_DIAGRAM):   else do;
266615    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
266616    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
266617    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
266618    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
266619    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
266620    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
266621    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
266622    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
266623    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266624    +         end;
MPRINT(EM_DIAGRAM):   end;
266625    +         else do;
MPRINT(EM_DIAGRAM):   else do;
266626    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
266627    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
266628    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266629    +            end;
MPRINT(EM_DIAGRAM):   end;
266630    +         end;
MPRINT(EM_DIAGRAM):   end;
266631    +      end;
MPRINT(EM_DIAGRAM):   end;
266632    +      else do;
MPRINT(EM_DIAGRAM):   else do;
266633    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
266634    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
266635    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266636    +         end;
MPRINT(EM_DIAGRAM):   end;
266637    +      end;
MPRINT(EM_DIAGRAM):   end;
266638    +   end;
MPRINT(EM_DIAGRAM):   end;
266639    +   else do;
MPRINT(EM_DIAGRAM):   else do;
266640    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
266641    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
266642    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266643    +      end;
MPRINT(EM_DIAGRAM):   end;
266644    +      else do;
MPRINT(EM_DIAGRAM):   else do;
266645    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
266646    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
266647    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
266648    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
266649    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
266650    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
266651    +         end;
MPRINT(EM_DIAGRAM):   end;
266652    +      end;
MPRINT(EM_DIAGRAM):   end;
266653    +   end;
MPRINT(EM_DIAGRAM):   end;
266654    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
266655    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
266656    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
266657    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
266658    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
266659    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
266660    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266661    +   end;
MPRINT(EM_DIAGRAM):   end;
266662    +end;
MPRINT(EM_DIAGRAM):   end;
266663    +
266664    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266665    +*** Checking missing input Interval
266666    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
266667    +
266668    +IF NMISS(
266669    +   AcceptedCmpTotal ,
266670    +   Frq ,
266671    +   Mnt ,
266672    +   MntMeatProducts ,
266673    +   NumCatalogPurchases ,
266674    +   NumDealsPurchases ,
266675    +   NumWebVisitsMonth ,
266676    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
266677    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
266678    +
266679    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
266680    +END;
MPRINT(EM_DIAGRAM):   END;
266681    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266682    +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
266683    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266684    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266685    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
266686    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
266687    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
266688    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
266689    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
266690    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
266691    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
266692    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
266693    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
266694    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
266695    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
266696    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
266697    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
266698    +END;
MPRINT(EM_DIAGRAM):   END;
266699    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266700    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
266701    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
266702    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
266703    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
266704    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
266705    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
266706    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
266707    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
266708    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
266709    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
266710    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
266711    +   ELSE S_NumCatalogPurchases
266712    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
266713    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
266714    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
266715    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
266716    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
266717    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
266718    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
266719    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
266720    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
266721    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
266722    +END;
MPRINT(EM_DIAGRAM):   END;
266723    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266724    +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
266725    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266726    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266727    +*** Writing the Node H1x1_ ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1x1_ ;
266728    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266729    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266730    +   H1x1_1  =    -0.05302855298398 * S_AcceptedCmpTotal
266731    +          +    -0.09205648080047 * S_Frq  +    -0.89621344379521 * S_Mnt
266732    +          +      0.2338265945616 * S_MntMeatProducts
266733    +          +     0.01564313414142 * S_NumCatalogPurchases
266734    +          +    -0.07464304384577 * S_NumDealsPurchases
266735    +          +    -0.08299095200051 * S_NumWebVisitsMonth
266736    +          +     0.13978973311119 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -0.05302855298398 * S_AcceptedCmpTotal + -0.09205648080047 * 
S_Frq + -0.89621344379521 * S_Mnt + 0.2338265945616 * S_MntMeatProducts + 0.01564313414142 * 
S_NumCatalogPurchases + -0.07464304384577 * S_NumDealsPurchases + -0.08299095200051 * 
S_NumWebVisitsMonth + 0.13978973311119 * S_Recency ;
266737    +   H1x1_2  =    -0.03911055677138 * S_AcceptedCmpTotal
266738    +          +     0.07733855489079 * S_Frq  +      0.2563411171282 * S_Mnt
266739    +          +     -0.3893643428589 * S_MntMeatProducts
266740    +          +    -0.11487225011852 * S_NumCatalogPurchases
266741    +          +       0.001237145136 * S_NumDealsPurchases
266742    +          +    -0.04234500703321 * S_NumWebVisitsMonth
266743    +          +     0.05116348108415 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_2 = -0.03911055677138 * S_AcceptedCmpTotal + 0.07733855489079 * 
S_Frq + 0.2563411171282 * S_Mnt + -0.3893643428589 * S_MntMeatProducts + -0.11487225011852 * 
S_NumCatalogPurchases + 0.001237145136 * S_NumDealsPurchases + -0.04234500703321 * 
S_NumWebVisitsMonth + 0.05116348108415 * S_Recency ;
266744    +   H1x1_3  =     0.05186380835835 * S_AcceptedCmpTotal
266745    +          +    -0.12505141082202 * S_Frq  +    -0.25371307325653 * S_Mnt
266746    +          +    -0.27963474874984 * S_MntMeatProducts
266747    +          +     0.01939450840376 * S_NumCatalogPurchases
266748    +          +    -0.03907394757592 * S_NumDealsPurchases
266749    +          +     0.06752842740103 * S_NumWebVisitsMonth
266750    +          +    -0.08457426712542 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 0.05186380835835 * S_AcceptedCmpTotal + -0.12505141082202 * 
S_Frq + -0.25371307325653 * S_Mnt + -0.27963474874984 * S_MntMeatProducts + 0.01939450840376 * 
S_NumCatalogPurchases + -0.03907394757592 * S_NumDealsPurchases + 0.06752842740103 * 
S_NumWebVisitsMonth + -0.08457426712542 * S_Recency ;
266751    +   H1x1_4  =     0.27532181874726 * S_AcceptedCmpTotal
266752    +          +    -0.87263022737986 * S_Frq  +    -0.69004923627526 * S_Mnt
266753    +          +     0.09842717305515 * S_MntMeatProducts
266754    +          +     0.48040050668836 * S_NumCatalogPurchases
266755    +          +     0.55911507039756 * S_NumDealsPurchases
266756    +          +     0.35441361757916 * S_NumWebVisitsMonth
266757    +          +    -0.43753517932111 * S_Recency ;
MPRINT(EM_DIAGRAM):   H1x1_4 = 0.27532181874726 * S_AcceptedCmpTotal + -0.87263022737986 * 
S_Frq + -0.69004923627526 * S_Mnt + 0.09842717305515 * S_MntMeatProducts + 0.48040050668836 * 
S_NumCatalogPurchases + 0.55911507039756 * S_NumDealsPurchases + 0.35441361757916 * 
S_NumWebVisitsMonth + -0.43753517932111 * S_Recency ;
266758    +   H1x1_1  = H1x1_1  +     0.23871713366711 * Marital_StatusDivorced
266759    +          +     0.13423943689575 * Marital_StatusMarried
266760    +          +    -0.01496857872487 * Marital_StatusSingle
266761    +          +     0.09065620914015 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_1 = H1x1_1 + 0.23871713366711 * Marital_StatusDivorced + 
0.13423943689575 * Marital_StatusMarried + -0.01496857872487 * Marital_StatusSingle + 
0.09065620914015 * Marital_StatusTogether ;
266762    +   H1x1_2  = H1x1_2  +    -0.01884888861908 * Marital_StatusDivorced
266763    +          +     0.03005244373637 * Marital_StatusMarried
266764    +          +    -0.06891231360799 * Marital_StatusSingle
266765    +          +     0.03916911436548 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_2 = H1x1_2 + -0.01884888861908 * Marital_StatusDivorced + 
0.03005244373637 * Marital_StatusMarried + -0.06891231360799 * Marital_StatusSingle + 
0.03916911436548 * Marital_StatusTogether ;
266766    +   H1x1_3  = H1x1_3  +     0.13813252013441 * Marital_StatusDivorced
266767    +          +     0.01694145364157 * Marital_StatusMarried
266768    +          +    -0.05183794192194 * Marital_StatusSingle
266769    +          +     0.03543146366331 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_3 = H1x1_3 + 0.13813252013441 * Marital_StatusDivorced + 
0.01694145364157 * Marital_StatusMarried + -0.05183794192194 * Marital_StatusSingle + 
0.03543146366331 * Marital_StatusTogether ;
266770    +   H1x1_4  = H1x1_4  +    -0.02708459807651 * Marital_StatusDivorced
266771    +          +     0.44185773223966 * Marital_StatusMarried
266772    +          +     -0.6351733171702 * Marital_StatusSingle
266773    +          +     0.63280583005707 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H1x1_4 = H1x1_4 + -0.02708459807651 * Marital_StatusDivorced + 
0.44185773223966 * Marital_StatusMarried + -0.6351733171702 * Marital_StatusSingle + 
0.63280583005707 * Marital_StatusTogether ;
266774    +   H1x1_1  =    -1.91705514496288 + H1x1_1 ;
MPRINT(EM_DIAGRAM):   H1x1_1 = -1.91705514496288 + H1x1_1 ;
266775    +   H1x1_2  =      0.5215405194232 + H1x1_2 ;
MPRINT(EM_DIAGRAM):   H1x1_2 = 0.5215405194232 + H1x1_2 ;
266776    +   H1x1_3  =     1.20502195447806 + H1x1_3 ;
MPRINT(EM_DIAGRAM):   H1x1_3 = 1.20502195447806 + H1x1_3 ;
266777    +   H1x1_4  =    -1.53366644544584 + H1x1_4 ;
MPRINT(EM_DIAGRAM):   H1x1_4 = -1.53366644544584 + H1x1_4 ;
266778    +   H1x1_1  = SIN(H1x1_1 );
MPRINT(EM_DIAGRAM):   H1x1_1 = SIN(H1x1_1 );
266779    +   H1x1_2  = SIN(H1x1_2 );
MPRINT(EM_DIAGRAM):   H1x1_2 = SIN(H1x1_2 );
266780    +   H1x1_3  = SIN(H1x1_3 );
MPRINT(EM_DIAGRAM):   H1x1_3 = SIN(H1x1_3 );
266781    +   H1x1_4  = SIN(H1x1_4 );
MPRINT(EM_DIAGRAM):   H1x1_4 = SIN(H1x1_4 );
266782    +END;
MPRINT(EM_DIAGRAM):   END;
266783    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266784    +   H1x1_1  = .;
MPRINT(EM_DIAGRAM):   H1x1_1 = .;
266785    +   H1x1_2  = .;
MPRINT(EM_DIAGRAM):   H1x1_2 = .;
266786    +   H1x1_3  = .;
MPRINT(EM_DIAGRAM):   H1x1_3 = .;
266787    +   H1x1_4  = .;
MPRINT(EM_DIAGRAM):   H1x1_4 = .;
266788    +END;
MPRINT(EM_DIAGRAM):   END;
266789    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266790    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
266791    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266792    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
266793    +   P_DepVar1  =     39.2787940172339 * H1x1_1  +    -104.671380650004 * H1x1_2
266794    +          +      81.489126537237 * H1x1_3  +     9.55747882149012 * H1x1_4 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 39.2787940172339 * H1x1_1 + -104.671380650004 * H1x1_2 + 
81.489126537237 * H1x1_3 + 9.55747882149012 * H1x1_4 ;
266795    +   P_DepVar1  =      5.5599052732327 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.5599052732327 + P_DepVar1 ;
266796    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
266797    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
266798    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
266799    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
266800    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
266801    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
266802    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
266803    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
266804    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
266805    +END;
MPRINT(EM_DIAGRAM):   END;
266806    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
266807    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
266808    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
266809    +END;
MPRINT(EM_DIAGRAM):   END;
266810    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
266811    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
266812    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
266813    +END;
MPRINT(EM_DIAGRAM):   END;
266814    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266815    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
266816    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
266817    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
266818    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
266819    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
266820    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
266821    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
266822    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
266823    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
266824    +END;
MPRINT(EM_DIAGRAM):   END;
266825    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
266826    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
266827    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
266828    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266829     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266830     quit;
266831     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266832     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266833     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266834     retain ID 2 Node "AutoNeural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "AutoNeural40";
266835     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266836     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266837     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266838     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266839     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 733 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 733 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266840     proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural40_variableset out=_temp2(keep=NAME 
CREATOR);
266841     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266842     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.AUTONEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266843     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266844     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266845     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266846     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266847     proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.AutoNeural40_train out=_meta(keep=NAME) noprint;
266848     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

266849     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266850     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266851     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 57 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 57 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266852     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266853     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266854     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266855     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 57 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 57 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266856     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266857     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266857   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 326 rows and 5 columns.

266858     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266859     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266860     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 326 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 326 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266861     filename _pref
266861   ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
266862     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266863     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
266864    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266865    +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
266866    +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
266867    +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
266868    +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
266869    +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266870     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266871     quit;
266872     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266873     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266874     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266875     retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
266876     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266877     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266878     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266879     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266880     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266881     proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
266882     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266883     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

266884     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266885     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266886     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266887     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266888     proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
266889     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266890     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266891     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266892     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266893     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266894     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266895     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266896     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266897     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266898     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266898   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

266899     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266900     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266901     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 330 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266902     filename _pref
266902   ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
266903     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266904     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
266905    +
266906    +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
266907    +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
266907   !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
266908    +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
266909    +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
266910    +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
266911    +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
266912    +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
266913     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
266914     quit;
266915     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
266916     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
266917     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
266918     retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
266919     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
266920     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266921     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
266922     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266923     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266924     proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
266925     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266926     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266927     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266928     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
266929     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
266930     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266931     proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
266932     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266933     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
266934     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266935     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266936     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
266937     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
266938     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
266939     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266940     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
266941     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
266941   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

266942     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

266943     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
266944     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 369 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

266945     filename _pref
266945   ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
266946     proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
266947     %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
266948    +
266949    +
266950    +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
266951    +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
266952    +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
266953    +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
266954    +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
266955    +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266956    +
266957    +
266958    +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
266959    +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
266960    +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
266961    +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
266962    +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
266963    +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266964    +
266965    +
266966    +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
266967    +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
266968    +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
266969    +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
266970    +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
266971    +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266972    +
266973    +
266974    +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
266975    +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
266976    +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
266977    +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
266978    +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
266979    +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266980    +
266981    +
266982    +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
266983    +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
266984    +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
266985    +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
266986    +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
266987    +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266988    +
266989    +
266990    +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
266991    +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
266992    +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
266993    +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
266994    +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
266995    +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
266996    +
266997    +
266998    +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
266999    +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
267000    +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
267001    +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
267002    +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
267003    +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
267004    +
267005    +
267006    +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
267007    +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
267008    +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
267009    +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
267010    +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
267011    +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
267012    +if
267013    +_FILTERNORM1 not in ( '.')
267014    + and
267015    +_FILTERNORM2 not in ( '.')
267016    + and
267017    +_FILTERNORM3 not in ( '.')
267018    + and
267019    +_FILTERNORM4 not in ( '.')
267020    + and
267021    +_FILTERNORM5 not in ( '.')
267022    + and
267023    +_FILTERNORM6 not in ( '.')
267024    + and
267025    +_FILTERNORM7 not in ( ' ')
267026    + and
267027    +_FILTERNORM8 not in ( ' ')
267028    +and
267029    +( Dt_Customer ne .)
267030    +and ( Income ne . and (Income<=107000))
267031    +and ( Kidhome ne .)
267032    +and ( MntFishProducts ne .)
267033    +and ( MntFruits ne .)
267034    +and ( MntGoldProds ne .)
267035    +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
267036    +and ( MntSweetProducts ne .)
267037    +and ( MntWines ne .)
267038    +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
267039    +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
267040    +and ( NumStorePurchases ne .)
267041    +and ( NumWebPurchases ne .)
267042    +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
267043    +and ( Recency ne .)
267044    +and ( Teenhome ne .)
267045    +and ( Year_Birth ne .)
267046    +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
267047    +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
267048    +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
267049    +end;
MPRINT(EM_DIAGRAM):   end;
267050    +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
267051    +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
267052     run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
267053     quit;
267054     filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
267055     data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
267056     length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
267057     retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
267058     set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
267059     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267060     proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
267061     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
267062     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267063     proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
267064     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
267065     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267066     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
267067     length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
267068     set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
267069     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267070     proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
267071     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

267072     proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
267073     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
267074     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267075     data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
267076     merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
267077     by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
267078     run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267079     proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
267080     create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
267080   ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

267081     quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

267082     proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
267083     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267084     %macro varDept(fcmpdata=,id=);
267085     %global nobs&id scoreFlag&id;
267086     %let scoreFlag&id = 0;
267087     %if &id=1 or ^&fcmpStart %then %do;
267088     proc sort data=&fcmpdata out=_temp&id nodupkey;
267089     by NAME;
267090     where id=&id and LHS in( %let j=1;
267091     %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
267092     %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
267093     "&var" %let j = %eval(&j+1);
267094     %end;
267095     );
267096     run;
267097     %let dsid = %sysfunc(open(_temp&id));
267098     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
267099     %let dsid = %sysfunc(close(&dsid));
267100     %if &&nobs&id %then %do;
267101     %let scoreFlag&id = 1;
267102     %let fcmpStart = 1;
267103     %end;
267104     %else %let fcmpStart = 0;
267105     %end;
267106     %else %do;
267107     proc sort data=&fcmpdata out=_tempid;
267108     where id=&id;
267109     by LHS;
267110     run;
267111     %let dsid = %sysfunc(open(_tempid));
267112     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
267113     %let dsid = %sysfunc(close(&dsid));
267114     %if ^&&nobs&id %then %do;
267115     proc datasets lib=work nolist;
267116     delete _tempid;
267117     run;
267118     quit;
267119     %end;
267120     %else %do;
267121     data _tempAll;
267122     set %let j=%eval(&id-1);
267123     %do x=1 %to &j;
267124     %if &&nobs&x %then %do;
267125     _temp&x %end;
267126     %end;
267127     ;
267128     run;
267129     proc sql;
267130     create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
267130   ! work._tempid p2 where p.name=p2.lhs;
267131     quit;
267132     data _temp&id;
267133     set _temp&id;
267134     where LHS ne '' and NAME ne '' and Node ne '';
267135     run;
267136     proc datasets lib=work nolist;
267137     delete _tempAll;
267138     run;
267139     %let dsid = %sysfunc(open(_temp&id));
267140     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
267141     %let dsid = %sysfunc(close(&dsid));
267142     %if ^&&nobs&id %then %do;
267143     proc datasets lib=work nolist;
267144     delete _temp&id;
267145     run;
267146     quit;
267147     %end;
267148     %else %do;
267149     %let scoreFlag&id = 1;
267150     data _temp&id;
267151     set _temp&id;
267152     where LHS ne NAME and node ne '';
267153     run;
267154     %let dsid = %sysfunc(open(_temp&id));
267155     %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
267156     %let dsid = %sysfunc(close(&dsid));
267157     %if ^&&nobs&id %then %do;
267158     proc datasets lib=work nolist;
267159     delete _temp&id;
267160     run;
267161     quit;
267162     %end;
267163     %else %do;
267164     proc sort data=_temp&id nodupkey;
267165     by LHS NAME;
267166     run;
267167     %end;
267168     %end;
267169     %end;
267170     %end;
267171     %mend varDept;
267172     %macro optCode(outdata=fcmpdata);
267173     %global fcmpStart;
267174     %let fcmpStart = 0;
267175     %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
267176     %let NumNodes=9;
267177     %do k=1 %to &NumNodes;
267178     %vardept(fcmpdata=&outdata, id=&k);
267179     %end;
267180     %mend optCode;
267181     %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 54 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 15 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 14 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 14 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: There were 14 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
The SAS System

MPRINT(EM_DIAGRAM):  ;

267182     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
267183     * Ensmbl24: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing metadata for TRAIN data;
267184     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL24_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.07 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl24_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl24_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl24_TRAIN out=WORK.M0GUQ9K5 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GUQ9K5;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GUQ9K5(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0GUQ9K5;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0GUQ9K5;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0L2LNRT NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3Q0YUR1(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L2LNRT;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl24";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl24";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
267504     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
267505     set EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl24_EMINFO;
267506     where DATA='Ensmbl24' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl24' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
267507     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_EMINFO.
      WHERE (DATA='Ensmbl24') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267508     data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl24_EMINFO;
267509     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
267510     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
267511     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
267515     run;
267516     data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMINFO;
267517     set EMWS8.Ensmbl24_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl24_EMINFO WORK.MODELTEMP_INFO;
267518     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267519     proc sort data = EMWS8.Ensmbl24_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl24_EMINFO NOTHREADS;
267520     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
267521     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

267522     proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural40_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
267523     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
267524     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL40_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267525     proc sort data = EMWS8.Ensmbl24_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl24_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
267526     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
267527     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

267528     data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMINFO;
267529     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
267530     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
267531     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

267532     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
267533     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
267534     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
267535     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.ENSMBL24_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
NOTE: View EMWS8.ENSMBL24_VALIDATE.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
