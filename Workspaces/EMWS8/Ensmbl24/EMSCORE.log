MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.29 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.29 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3RWM6GL 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3RWM6GL new;
MPRINT(EM_DIAGRAM):   run;
1172355    filename emflow
1172355  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring NEURAL37_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172356    *------------------------------------------------------------*;
1172357    * Ensmbl24: Scoring NEURAL37_TRAIN data;
1172358    *------------------------------------------------------------*;
1172359    data EMWS8.Ensmbl24_TRAIN
1172360    / view=EMWS8.Ensmbl24_TRAIN
1172361    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_TRAIN / view=EMWS8.Ensmbl24_TRAIN ;
1172362    set EMWS8.Neural37_TRAIN
1172363    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural37_TRAIN ;
1172364    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas.
1172365   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172366   +* Ensmbl24: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Combine model for DepVar;
1172367   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172368   +* Ensmbl24: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 1 of 7;
1172369   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172370   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172371   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1172372   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1172373   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1172374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172375   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172376   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1172377   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1172378   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1172379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172381   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1172382   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1172383   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1172384   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172386   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1172387   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1172388   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1172389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172390   +
1172391   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1172392   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1172392  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1172393   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1172394   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1172395   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1172396   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1172397   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1172398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172399   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1172400   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1172401   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1172402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172404   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1172405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172406   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1172407   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1172408   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1172409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172410   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1172411   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1172412   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1172413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172415   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1172416   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1172417   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1172418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172420   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1172421   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1172422   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1172423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1172425   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1172426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1172427   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1172428   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1172429   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1172430   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1172431   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1172432   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1172433   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1172434   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1172435   +LENGTH _WARN_ $4
1172436   +      F_DepVar  $ 12
1172437   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1172438   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1172439   +
1172440   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1172441   +
1172442   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1172443   +
1172444   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1172445   +
1172446   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1172447   +
1172448   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1172449   +
1172450   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1172451   +
1172452   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1172453   +
1172454   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1172455   +
1172456   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1172457   +
1172458   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1172459   +
1172460   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1172461   +
1172462   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1172463   +
1172464   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1172465   +
1172466   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1172467   +
1172468   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1172469   +
1172470   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1172471   +
1172472   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1172473   +
1172474   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1172475   +
1172476   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1172477   +
1172478   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1172479   +
1172480   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1172481   +
1172482   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1172483   +
1172484   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1172485   +
1172486   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1172487   +
1172488   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1172489   +
1172490   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1172491   +
1172492   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1172493   +
1172494   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1172495   +
1172496   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1172497   +
1172498   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1172499   +
1172500   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1172501   +
1172502   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1172503   +
1172504   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1172505   +
1172506   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1172507   +
1172508   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1172509   +
1172510   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1172511   +
1172512   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1172513   +
1172514   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1172515   +
1172516   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1172517   +
1172518   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1172519   +
1172520   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1172521   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1172522   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1172523   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1172524   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172525   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172526   +end;
MPRINT(EM_DIAGRAM):   end;
1172527   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172528   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172529   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1172530   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172531   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1172532   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1172533   +   end;
MPRINT(EM_DIAGRAM):   end;
1172534   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1172535   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1172536   +   end;
MPRINT(EM_DIAGRAM):   end;
1172537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172538   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1172539   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172540   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172541   +   end;
MPRINT(EM_DIAGRAM):   end;
1172542   +end;
MPRINT(EM_DIAGRAM):   end;
1172543   +
1172544   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1172545   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1172546   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1172547   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1172548   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172549   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172550   +end;
MPRINT(EM_DIAGRAM):   end;
1172551   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172552   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172553   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1172554   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172555   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1172556   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1172557   +   end;
MPRINT(EM_DIAGRAM):   end;
1172558   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1172559   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1172560   +   end;
MPRINT(EM_DIAGRAM):   end;
1172561   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172562   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1172563   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172564   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172565   +   end;
MPRINT(EM_DIAGRAM):   end;
1172566   +end;
MPRINT(EM_DIAGRAM):   end;
1172567   +
1172568   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1172569   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1172570   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1172571   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1172572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172574   +end;
MPRINT(EM_DIAGRAM):   end;
1172575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172577   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1172578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172579   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1172580   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1172581   +   end;
MPRINT(EM_DIAGRAM):   end;
1172582   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1172583   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1172584   +   end;
MPRINT(EM_DIAGRAM):   end;
1172585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172586   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1172587   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172588   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172589   +   end;
MPRINT(EM_DIAGRAM):   end;
1172590   +end;
MPRINT(EM_DIAGRAM):   end;
1172591   +
1172592   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1172593   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1172594   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1172595   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1172596   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172597   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172598   +end;
MPRINT(EM_DIAGRAM):   end;
1172599   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172600   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172601   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1172602   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172603   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1172604   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1172605   +   end;
MPRINT(EM_DIAGRAM):   end;
1172606   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1172607   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1172608   +   end;
MPRINT(EM_DIAGRAM):   end;
1172609   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172610   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1172611   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172612   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172613   +   end;
MPRINT(EM_DIAGRAM):   end;
1172614   +end;
MPRINT(EM_DIAGRAM):   end;
1172615   +
1172616   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1172617   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1172618   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1172619   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1172620   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172621   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172622   +end;
MPRINT(EM_DIAGRAM):   end;
1172623   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172624   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172625   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1172626   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172627   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1172628   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1172629   +   end;
MPRINT(EM_DIAGRAM):   end;
1172630   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1172631   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1172632   +   end;
MPRINT(EM_DIAGRAM):   end;
1172633   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172634   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1172635   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172636   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172637   +   end;
MPRINT(EM_DIAGRAM):   end;
1172638   +end;
MPRINT(EM_DIAGRAM):   end;
1172639   +
1172640   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1172641   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1172642   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1172643   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1172644   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172645   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172646   +end;
MPRINT(EM_DIAGRAM):   end;
1172647   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172648   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172649   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1172650   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172651   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1172652   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1172653   +   end;
MPRINT(EM_DIAGRAM):   end;
1172654   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1172655   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1172656   +   end;
MPRINT(EM_DIAGRAM):   end;
1172657   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172658   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1172659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172661   +   end;
MPRINT(EM_DIAGRAM):   end;
1172662   +end;
MPRINT(EM_DIAGRAM):   end;
1172663   +
1172664   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1172665   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1172666   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1172667   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1172668   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172669   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172670   +end;
MPRINT(EM_DIAGRAM):   end;
1172671   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172672   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172673   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1172674   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172675   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1172676   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1172677   +   end;
MPRINT(EM_DIAGRAM):   end;
1172678   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1172679   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1172680   +   end;
MPRINT(EM_DIAGRAM):   end;
1172681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172682   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1172683   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172684   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172685   +   end;
MPRINT(EM_DIAGRAM):   end;
1172686   +end;
MPRINT(EM_DIAGRAM):   end;
1172687   +
1172688   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1172689   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1172690   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172691   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1172692   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1172693   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1172694   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1172695   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1172696   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1172697   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1172698   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1172699   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1172700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172702   +end;
MPRINT(EM_DIAGRAM):   end;
1172703   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172704   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1172705   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1172706   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172707   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1172708   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1172709   +   end;
MPRINT(EM_DIAGRAM):   end;
1172710   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1172711   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1172712   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1172713   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1172714   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1172715   +   end;
MPRINT(EM_DIAGRAM):   end;
1172716   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1172717   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1172718   +   end;
MPRINT(EM_DIAGRAM):   end;
1172719   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1172720   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1172721   +   end;
MPRINT(EM_DIAGRAM):   end;
1172722   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1172723   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1172724   +   end;
MPRINT(EM_DIAGRAM):   end;
1172725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172726   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1172727   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1172728   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1172729   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1172730   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172731   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172732   +   end;
MPRINT(EM_DIAGRAM):   end;
1172733   +end;
MPRINT(EM_DIAGRAM):   end;
1172734   +
1172735   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1172736   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1172737   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1172738   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172739   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1172740   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1172741   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1172742   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1172743   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1172744   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1172745   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1172746   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1172747   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1172748   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172749   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172750   +end;
MPRINT(EM_DIAGRAM):   end;
1172751   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172752   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1172753   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1172754   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172755   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172756   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1172757   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1172758   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1172759   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1172760   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172761   +         end;
MPRINT(EM_DIAGRAM):   end;
1172762   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172763   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1172764   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1172765   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172766   +            end;
MPRINT(EM_DIAGRAM):   end;
1172767   +         end;
MPRINT(EM_DIAGRAM):   end;
1172768   +      end;
MPRINT(EM_DIAGRAM):   end;
1172769   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172770   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1172771   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1172772   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172773   +         end;
MPRINT(EM_DIAGRAM):   end;
1172774   +      end;
MPRINT(EM_DIAGRAM):   end;
1172775   +   end;
MPRINT(EM_DIAGRAM):   end;
1172776   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172777   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1172778   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1172779   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172780   +      end;
MPRINT(EM_DIAGRAM):   end;
1172781   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172782   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1172783   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1172784   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1172785   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1172786   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1172787   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172788   +         end;
MPRINT(EM_DIAGRAM):   end;
1172789   +      end;
MPRINT(EM_DIAGRAM):   end;
1172790   +   end;
MPRINT(EM_DIAGRAM):   end;
1172791   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172792   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1172793   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1172794   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1172795   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1172796   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172797   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172798   +   end;
MPRINT(EM_DIAGRAM):   end;
1172799   +end;
MPRINT(EM_DIAGRAM):   end;
1172800   +
1172801   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172802   +*** Checking missing input Interval
1172803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1172804   +
1172805   +IF NMISS(
1172806   +   AcceptedCmpTotal ,
1172807   +   Age ,
1172808   +   Frq ,
1172809   +   Income ,
1172810   +   Kidhome ,
1172811   +   MntFishProducts ,
1172812   +   MntFruits ,
1172813   +   MntGoldProds ,
1172814   +   MntSweetProducts ,
1172815   +   MonthsAsCustomer ,
1172816   +   NumDealsPurchases ,
1172817   +   NumWebVisitsMonth ,
1172818   +   RFMstat ,
1172819   +   RMntFrq ,
1172820   +   Recency ,
1172821   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1172822   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1172823   +
1172824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172825   +END;
MPRINT(EM_DIAGRAM):   END;
1172826   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172827   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1172828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172829   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172830   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1172831   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1172832   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1172833   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1172834   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1172835   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1172836   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1172837   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1172838   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1172839   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1172840   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1172841   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1172842   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1172843   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1172844   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1172845   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1172846   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1172847   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1172848   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1172849   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1172850   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1172851   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1172852   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1172853   +END;
MPRINT(EM_DIAGRAM):   END;
1172854   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172855   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1172856   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1172857   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1172858   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1172859   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1172860   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1172861   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1172862   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1172863   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1172864   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1172865   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1172866   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1172867   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1172868   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1172869   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1172870   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1172871   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1172872   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1172873   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1172874   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1172875   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1172876   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1172877   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1172878   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1172879   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1172880   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1172881   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1172882   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1172883   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1172884   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1172885   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1172886   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1172887   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1172888   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1172889   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1172890   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1172891   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1172892   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1172893   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1172894   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1172895   +END;
MPRINT(EM_DIAGRAM):   END;
1172896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172897   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1172898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172900   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1172901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172903   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1172904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172905   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172906   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1172907   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1172908   +        S_Income  +     0.21434017685167 * S_Kidhome
1172909   +          +    -0.00245095061163 * S_MntFishProducts
1172910   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1172911   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1172912   +          +     -0.0436897985886 * S_MonthsAsCustomer
1172913   +          +    -0.11066147452589 * S_NumDealsPurchases
1172914   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1172915   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1172916   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1172917   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1172918   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1172919   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1172920   +        S_Income  +    -0.34676303560555 * S_Kidhome
1172921   +          +    -0.19666313381749 * S_MntFishProducts
1172922   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1172923   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1172924   +          +     0.11921399006499 * S_MonthsAsCustomer
1172925   +          +    -0.67623098057964 * S_NumDealsPurchases
1172926   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1172927   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1172928   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1172929   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1172930   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1172931   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1172932   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1172933   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1172934   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1172935   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1172936   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1172937   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1172938   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1172939   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1172940   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1172941   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1172942   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1172943   +          +    -0.09599098826432 * Marital_StatusDivorced
1172944   +          +     0.29380773989654 * Marital_StatusMarried
1172945   +          +    -0.24344588832351 * Marital_StatusSingle
1172946   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1172947   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1172948   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1172949   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1172950   +          +    -0.18210246138549 * Marital_StatusDivorced
1172951   +          +    -0.33707503901978 * Marital_StatusMarried
1172952   +          +     0.45975144433549 * Marital_StatusSingle
1172953   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1172954   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1172955   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1172956   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1172957   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1172958   +END;
MPRINT(EM_DIAGRAM):   END;
1172959   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172960   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1172961   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1172962   +END;
MPRINT(EM_DIAGRAM):   END;
1172963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172964   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1172965   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172966   +
1172967   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1172968   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1172969   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1172970   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1172971   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1172972   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172973   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1172974   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1172975   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1172976   +end;
MPRINT(EM_DIAGRAM):   end;
1172977   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172978   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1172979   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1172980   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1172981   +   end;
MPRINT(EM_DIAGRAM):   end;
1172982   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1172983   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1172984   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1172985   +   end;
MPRINT(EM_DIAGRAM):   end;
1172986   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172987   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1172988   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1172989   +   end;
MPRINT(EM_DIAGRAM):   end;
1172990   +end;
MPRINT(EM_DIAGRAM):   end;
1172991   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172992   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1172993   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1172994   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1172995   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1172996   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1172997   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1172998   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1172999   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1173000   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1173001   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1173002   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1173003   +END;
MPRINT(EM_DIAGRAM):   END;
1173004   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173005   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1173006   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1173007   +END;
MPRINT(EM_DIAGRAM):   END;
1173008   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1173009   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1173010   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1173011   +END;
MPRINT(EM_DIAGRAM):   END;
1173012   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1173013   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1173014   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1173015   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1173016   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1173017   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1173018   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1173019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173020   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1173021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173022   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1173023   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1173024   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1173025   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1173026   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1173027   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1173028   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1173029   +END;
MPRINT(EM_DIAGRAM):   END;
1173030   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1173031   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1173032   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1173033   +drop
1173034   +H11
1173035   +H12
1173036   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1173037   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1173038   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1173039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173040   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1173041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173042   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1173043   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1173044   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1173045   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1173046   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173047   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1173048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173049   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1173050   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1173051   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1173052   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173053   +* Ensmbl24: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 2 of 7;
1173054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173056   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1173057   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1173058   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1173059   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173060   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173061   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1173062   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173063   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1173064   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1173065   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1173066   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1173067   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1173068   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1173069   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1173070   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1173071   +LENGTH _WARN_ $4
1173072   +      F_DepVar  $ 12
1173073   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1173074   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1173075   +
1173076   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1173077   +
1173078   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1173079   +
1173080   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1173081   +
1173082   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1173083   +
1173084   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1173085   +
1173086   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1173087   +
1173088   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1173089   +
1173090   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1173091   +
1173092   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1173093   +
1173094   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1173095   +
1173096   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1173097   +
1173098   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1173099   +
1173100   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1173101   +
1173102   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1173103   +
1173104   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1173105   +
1173106   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1173107   +
1173108   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1173109   +
1173110   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1173111   +
1173112   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1173113   +
1173114   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1173115   +
1173116   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1173117   +
1173118   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1173119   +
1173120   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1173121   +
1173122   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1173123   +
1173124   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1173125   +
1173126   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1173127   +
1173128   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1173129   +
1173130   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1173131   +
1173132   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1173133   +
1173134   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1173135   +
1173136   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1173137   +
1173138   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1173139   +
1173140   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1173141   +
1173142   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1173143   +
1173144   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1173145   +
1173146   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1173147   +
1173148   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1173149   +
1173150   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1173151   +
1173152   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1173153   +
1173154   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1173155   +
1173156   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1173157   +
1173158   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1173159   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1173160   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1173161   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1173162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173164   +end;
MPRINT(EM_DIAGRAM):   end;
1173165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173167   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1173168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173170   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1173171   +   end;
MPRINT(EM_DIAGRAM):   end;
1173172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173173   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1173174   +   end;
MPRINT(EM_DIAGRAM):   end;
1173175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173176   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1173177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173179   +   end;
MPRINT(EM_DIAGRAM):   end;
1173180   +end;
MPRINT(EM_DIAGRAM):   end;
1173181   +
1173182   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1173183   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1173184   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1173185   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1173186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173188   +end;
MPRINT(EM_DIAGRAM):   end;
1173189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173191   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1173192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173194   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1173195   +   end;
MPRINT(EM_DIAGRAM):   end;
1173196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173197   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1173198   +   end;
MPRINT(EM_DIAGRAM):   end;
1173199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173200   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1173201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173203   +   end;
MPRINT(EM_DIAGRAM):   end;
1173204   +end;
MPRINT(EM_DIAGRAM):   end;
1173205   +
1173206   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1173207   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1173208   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1173209   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1173210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173212   +end;
MPRINT(EM_DIAGRAM):   end;
1173213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173215   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1173216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173218   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1173219   +   end;
MPRINT(EM_DIAGRAM):   end;
1173220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173221   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1173222   +   end;
MPRINT(EM_DIAGRAM):   end;
1173223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173224   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1173225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173227   +   end;
MPRINT(EM_DIAGRAM):   end;
1173228   +end;
MPRINT(EM_DIAGRAM):   end;
1173229   +
1173230   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1173231   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1173232   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1173233   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1173234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173236   +end;
MPRINT(EM_DIAGRAM):   end;
1173237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173239   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1173240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173242   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1173243   +   end;
MPRINT(EM_DIAGRAM):   end;
1173244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173245   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1173246   +   end;
MPRINT(EM_DIAGRAM):   end;
1173247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173248   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1173249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173251   +   end;
MPRINT(EM_DIAGRAM):   end;
1173252   +end;
MPRINT(EM_DIAGRAM):   end;
1173253   +
1173254   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1173255   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1173256   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1173257   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1173258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173260   +end;
MPRINT(EM_DIAGRAM):   end;
1173261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173263   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1173264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173266   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1173267   +   end;
MPRINT(EM_DIAGRAM):   end;
1173268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173269   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1173270   +   end;
MPRINT(EM_DIAGRAM):   end;
1173271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173272   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1173273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173275   +   end;
MPRINT(EM_DIAGRAM):   end;
1173276   +end;
MPRINT(EM_DIAGRAM):   end;
1173277   +
1173278   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1173279   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1173280   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1173281   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1173282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173284   +end;
MPRINT(EM_DIAGRAM):   end;
1173285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173287   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1173288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173289   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173290   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1173291   +   end;
MPRINT(EM_DIAGRAM):   end;
1173292   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173293   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1173294   +   end;
MPRINT(EM_DIAGRAM):   end;
1173295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173296   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1173297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173299   +   end;
MPRINT(EM_DIAGRAM):   end;
1173300   +end;
MPRINT(EM_DIAGRAM):   end;
1173301   +
1173302   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1173303   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1173304   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1173305   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1173306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173308   +end;
MPRINT(EM_DIAGRAM):   end;
1173309   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173310   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173311   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1173312   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173313   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1173314   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1173315   +   end;
MPRINT(EM_DIAGRAM):   end;
1173316   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1173317   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1173318   +   end;
MPRINT(EM_DIAGRAM):   end;
1173319   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173320   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1173321   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173322   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173323   +   end;
MPRINT(EM_DIAGRAM):   end;
1173324   +end;
MPRINT(EM_DIAGRAM):   end;
1173325   +
1173326   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1173327   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1173328   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173329   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1173330   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1173331   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1173332   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1173333   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1173334   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1173335   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1173336   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1173337   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1173338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173340   +end;
MPRINT(EM_DIAGRAM):   end;
1173341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173342   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1173343   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1173344   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173345   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1173346   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1173347   +   end;
MPRINT(EM_DIAGRAM):   end;
1173348   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1173349   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1173350   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1173351   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1173352   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1173353   +   end;
MPRINT(EM_DIAGRAM):   end;
1173354   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1173355   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1173356   +   end;
MPRINT(EM_DIAGRAM):   end;
1173357   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1173358   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1173359   +   end;
MPRINT(EM_DIAGRAM):   end;
1173360   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1173361   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1173362   +   end;
MPRINT(EM_DIAGRAM):   end;
1173363   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173364   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1173365   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1173366   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1173367   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1173368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173370   +   end;
MPRINT(EM_DIAGRAM):   end;
1173371   +end;
MPRINT(EM_DIAGRAM):   end;
1173372   +
1173373   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1173374   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1173375   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1173376   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173377   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1173378   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1173379   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1173380   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1173381   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1173382   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1173383   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1173384   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1173385   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1173386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173388   +end;
MPRINT(EM_DIAGRAM):   end;
1173389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173390   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1173391   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1173392   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173393   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173394   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1173395   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1173396   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1173397   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1173398   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173399   +         end;
MPRINT(EM_DIAGRAM):   end;
1173400   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173401   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1173402   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1173403   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173404   +            end;
MPRINT(EM_DIAGRAM):   end;
1173405   +         end;
MPRINT(EM_DIAGRAM):   end;
1173406   +      end;
MPRINT(EM_DIAGRAM):   end;
1173407   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173408   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1173409   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1173410   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173411   +         end;
MPRINT(EM_DIAGRAM):   end;
1173412   +      end;
MPRINT(EM_DIAGRAM):   end;
1173413   +   end;
MPRINT(EM_DIAGRAM):   end;
1173414   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173415   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1173416   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1173417   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173418   +      end;
MPRINT(EM_DIAGRAM):   end;
1173419   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173420   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1173421   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1173422   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1173423   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1173424   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1173425   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173426   +         end;
MPRINT(EM_DIAGRAM):   end;
1173427   +      end;
MPRINT(EM_DIAGRAM):   end;
1173428   +   end;
MPRINT(EM_DIAGRAM):   end;
1173429   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1173430   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1173431   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1173432   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1173433   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1173434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173436   +   end;
MPRINT(EM_DIAGRAM):   end;
1173437   +end;
MPRINT(EM_DIAGRAM):   end;
1173438   +
1173439   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173440   +*** Checking missing input Interval
1173441   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1173442   +
1173443   +IF NMISS(
1173444   +   AcceptedCmpTotal ,
1173445   +   Age ,
1173446   +   Frq ,
1173447   +   Income ,
1173448   +   Kidhome ,
1173449   +   MntFishProducts ,
1173450   +   MntFruits ,
1173451   +   MntGoldProds ,
1173452   +   MntSweetProducts ,
1173453   +   MonthsAsCustomer ,
1173454   +   NumDealsPurchases ,
1173455   +   NumWebVisitsMonth ,
1173456   +   RFMstat ,
1173457   +   RMntFrq ,
1173458   +   Recency ,
1173459   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1173460   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1173461   +
1173462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173463   +END;
MPRINT(EM_DIAGRAM):   END;
1173464   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173465   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1173466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173467   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1173468   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1173469   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1173470   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1173471   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1173472   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1173473   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1173474   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1173475   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1173476   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1173477   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1173478   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1173479   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1173480   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1173481   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1173482   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1173483   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1173484   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1173485   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1173486   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1173487   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1173488   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1173489   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1173490   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1173491   +END;
MPRINT(EM_DIAGRAM):   END;
1173492   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173493   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1173494   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1173495   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1173496   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1173497   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1173498   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1173499   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1173500   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1173501   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1173502   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1173503   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1173504   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1173505   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1173506   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1173507   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1173508   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1173509   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1173510   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1173511   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1173512   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1173513   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1173514   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1173515   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1173516   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1173517   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1173518   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1173519   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1173520   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1173521   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1173522   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1173523   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1173524   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1173525   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1173526   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1173527   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1173528   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1173529   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1173530   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1173531   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1173532   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1173533   +END;
MPRINT(EM_DIAGRAM):   END;
1173534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173535   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1173536   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173538   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1173539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173541   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1173542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173543   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1173544   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1173545   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1173546   +        S_Income  +    -0.29829037747286 * S_Kidhome
1173547   +          +    -0.18720823453547 * S_MntFishProducts
1173548   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1173549   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1173550   +          +    -0.06646294977493 * S_MonthsAsCustomer
1173551   +          +    -0.37026551859537 * S_NumDealsPurchases
1173552   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1173553   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1173554   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1173555   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1173556   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1173557   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1173558   +        S_Income  +    -0.83201267605135 * S_Kidhome
1173559   +          +    -0.09483355610222 * S_MntFishProducts
1173560   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1173561   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1173562   +          +     0.36008195182034 * S_MonthsAsCustomer
1173563   +          +    -0.13663022832818 * S_NumDealsPurchases
1173564   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1173565   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1173566   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1173567   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1173568   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1173569   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1173570   +        S_Income  +     0.25780281448124 * S_Kidhome
1173571   +          +     0.04440164182166 * S_MntFishProducts
1173572   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1173573   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1173574   +          +     0.11601256317603 * S_MonthsAsCustomer
1173575   +          +    -0.06382091961731 * S_NumDealsPurchases
1173576   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1173577   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1173578   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1173579   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1173580   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1173581   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1173582   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1173583   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1173584   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1173585   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1173586   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1173587   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1173588   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1173589   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1173590   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1173591   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1173592   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1173593   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1173594   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1173595   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1173596   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1173597   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1173598   +          +     0.18754186259114 * Marital_StatusDivorced
1173599   +          +    -0.11988223819284 * Marital_StatusMarried
1173600   +          +    -0.02283707816223 * Marital_StatusSingle
1173601   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1173602   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1173603   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1173604   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1173605   +          +    -0.28983318463941 * Marital_StatusDivorced
1173606   +          +    -0.74851149560881 * Marital_StatusMarried
1173607   +          +      0.7618336919202 * Marital_StatusSingle
1173608   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1173609   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1173610   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1173611   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1173612   +          +    -0.33639004627791 * Marital_StatusDivorced
1173613   +          +     0.12327415586833 * Marital_StatusMarried
1173614   +          +      0.0060971946845 * Marital_StatusSingle
1173615   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1173616   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1173617   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1173618   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1173619   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1173620   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1173621   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1173622   +END;
MPRINT(EM_DIAGRAM):   END;
1173623   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173624   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1173625   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1173626   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1173627   +END;
MPRINT(EM_DIAGRAM):   END;
1173628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173629   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1173630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173631   +
1173632   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1173633   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1173634   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1173635   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1173636   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1173637   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173638   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1173639   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1173640   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1173641   +end;
MPRINT(EM_DIAGRAM):   end;
1173642   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173643   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1173644   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1173645   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1173646   +   end;
MPRINT(EM_DIAGRAM):   end;
1173647   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1173648   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1173649   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1173650   +   end;
MPRINT(EM_DIAGRAM):   end;
1173651   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173652   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1173653   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1173654   +   end;
MPRINT(EM_DIAGRAM):   end;
1173655   +end;
MPRINT(EM_DIAGRAM):   end;
1173656   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1173657   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1173658   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1173659   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1173660   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1173661   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1173662   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1173663   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1173664   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1173665   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1173666   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
The SAS System

1173667   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1173668   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1173669   +END;
MPRINT(EM_DIAGRAM):   END;
1173670   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1173671   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1173672   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1173673   +END;
MPRINT(EM_DIAGRAM):   END;
1173674   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1173675   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1173676   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1173677   +END;
MPRINT(EM_DIAGRAM):   END;
1173678   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1173679   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1173680   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1173681   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1173682   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1173683   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1173684   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1173685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173686   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1173687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1173688   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1173689   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1173690   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1173691   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1173692   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1173693   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1173694   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1173695   +END;
MPRINT(EM_DIAGRAM):   END;
1173696   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1173697   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1173698   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1173699   +drop
1173700   +H11
1173701   +H12
1173702   +H13
1173703   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1173704   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1173705   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1173706   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173707   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1173708   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173709   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1173710   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1173711   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1173712   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1173713   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173714   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1173715   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173716   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1173717   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1173718   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1173719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173720   +* Ensmbl24: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 3 of 7;
1173721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173722   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173723   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1173724   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1173725   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1173726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1173727   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173728   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1173729   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173730   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1173731   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1173732   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1173733   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1173734   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1173735   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1173736   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1173737   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1173738   +LENGTH _WARN_ $4
1173739   +      F_DepVar  $ 12
1173740   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1173741   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1173742   +
1173743   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1173744   +
1173745   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1173746   +
1173747   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1173748   +
1173749   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1173750   +
1173751   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1173752   +
1173753   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1173754   +
1173755   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1173756   +
1173757   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1173758   +
1173759   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1173760   +
1173761   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1173762   +
1173763   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1173764   +
1173765   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1173766   +
1173767   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1173768   +
1173769   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1173770   +
1173771   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1173772   +
1173773   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1173774   +
1173775   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1173776   +
1173777   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1173778   +
1173779   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1173780   +
1173781   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1173782   +
1173783   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1173784   +
1173785   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1173786   +
1173787   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1173788   +
1173789   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1173790   +
1173791   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1173792   +
1173793   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1173794   +
1173795   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1173796   +
1173797   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1173798   +
1173799   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1173800   +
1173801   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1173802   +
1173803   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1173804   +
1173805   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1173806   +
1173807   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1173808   +
1173809   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1173810   +
1173811   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1173812   +
1173813   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1173814   +
1173815   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1173816   +
1173817   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1173818   +
1173819   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1173820   +
1173821   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1173822   +
1173823   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1173824   +
1173825   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1173826   +
1173827   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1173828   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1173829   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1173830   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1173831   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173832   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173833   +end;
MPRINT(EM_DIAGRAM):   end;
1173834   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173835   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173836   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1173837   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173838   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173839   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1173840   +   end;
MPRINT(EM_DIAGRAM):   end;
1173841   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173842   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1173843   +   end;
MPRINT(EM_DIAGRAM):   end;
1173844   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173845   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1173846   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173847   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173848   +   end;
MPRINT(EM_DIAGRAM):   end;
1173849   +end;
MPRINT(EM_DIAGRAM):   end;
1173850   +
1173851   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1173852   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1173853   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1173854   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1173855   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173856   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173857   +end;
MPRINT(EM_DIAGRAM):   end;
1173858   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173859   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173860   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1173861   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173862   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173863   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1173864   +   end;
MPRINT(EM_DIAGRAM):   end;
1173865   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173866   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1173867   +   end;
MPRINT(EM_DIAGRAM):   end;
1173868   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173869   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1173870   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173871   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173872   +   end;
MPRINT(EM_DIAGRAM):   end;
1173873   +end;
MPRINT(EM_DIAGRAM):   end;
1173874   +
1173875   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1173876   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1173877   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1173878   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1173879   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173880   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173881   +end;
MPRINT(EM_DIAGRAM):   end;
1173882   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173883   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173884   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1173885   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173886   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173887   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1173888   +   end;
MPRINT(EM_DIAGRAM):   end;
1173889   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173890   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1173891   +   end;
MPRINT(EM_DIAGRAM):   end;
1173892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173893   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1173894   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173895   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173896   +   end;
MPRINT(EM_DIAGRAM):   end;
1173897   +end;
MPRINT(EM_DIAGRAM):   end;
1173898   +
1173899   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1173900   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1173901   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1173902   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1173903   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173904   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173905   +end;
MPRINT(EM_DIAGRAM):   end;
1173906   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173907   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173908   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1173909   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173910   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173911   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1173912   +   end;
MPRINT(EM_DIAGRAM):   end;
1173913   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173914   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1173915   +   end;
MPRINT(EM_DIAGRAM):   end;
1173916   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173917   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1173918   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173919   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173920   +   end;
MPRINT(EM_DIAGRAM):   end;
1173921   +end;
MPRINT(EM_DIAGRAM):   end;
1173922   +
1173923   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1173924   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1173925   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1173926   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1173927   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173928   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173929   +end;
MPRINT(EM_DIAGRAM):   end;
1173930   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173931   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173932   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1173933   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173934   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173935   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1173936   +   end;
MPRINT(EM_DIAGRAM):   end;
1173937   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173938   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1173939   +   end;
MPRINT(EM_DIAGRAM):   end;
1173940   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173941   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1173942   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173943   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173944   +   end;
MPRINT(EM_DIAGRAM):   end;
1173945   +end;
MPRINT(EM_DIAGRAM):   end;
1173946   +
1173947   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1173948   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1173949   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1173950   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1173951   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173952   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173953   +end;
MPRINT(EM_DIAGRAM):   end;
1173954   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173955   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173956   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1173957   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173958   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1173959   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1173960   +   end;
MPRINT(EM_DIAGRAM):   end;
1173961   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1173962   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1173963   +   end;
MPRINT(EM_DIAGRAM):   end;
1173964   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173965   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1173966   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173967   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173968   +   end;
MPRINT(EM_DIAGRAM):   end;
1173969   +end;
MPRINT(EM_DIAGRAM):   end;
1173970   +
1173971   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1173972   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1173973   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1173974   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1173975   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173976   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173977   +end;
MPRINT(EM_DIAGRAM):   end;
1173978   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173979   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173980   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1173981   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173982   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1173983   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1173984   +   end;
MPRINT(EM_DIAGRAM):   end;
1173985   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1173986   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1173987   +   end;
MPRINT(EM_DIAGRAM):   end;
1173988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173989   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1173990   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173991   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173992   +   end;
MPRINT(EM_DIAGRAM):   end;
1173993   +end;
MPRINT(EM_DIAGRAM):   end;
1173994   +
1173995   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1173996   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1173997   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173998   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1173999   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1174000   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1174001   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1174002   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1174003   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1174004   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1174005   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1174006   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1174007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174009   +end;
MPRINT(EM_DIAGRAM):   end;
1174010   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174011   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1174012   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1174013   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174014   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1174015   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1174016   +   end;
MPRINT(EM_DIAGRAM):   end;
1174017   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1174018   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1174019   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1174020   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1174021   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1174022   +   end;
MPRINT(EM_DIAGRAM):   end;
1174023   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1174024   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1174025   +   end;
MPRINT(EM_DIAGRAM):   end;
1174026   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1174027   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1174028   +   end;
MPRINT(EM_DIAGRAM):   end;
1174029   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1174030   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1174031   +   end;
MPRINT(EM_DIAGRAM):   end;
1174032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174033   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1174034   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1174035   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1174036   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1174037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174039   +   end;
MPRINT(EM_DIAGRAM):   end;
1174040   +end;
MPRINT(EM_DIAGRAM):   end;
1174041   +
1174042   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1174043   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1174044   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1174045   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174046   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1174047   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1174048   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1174049   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1174050   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1174051   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1174052   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1174053   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1174054   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1174055   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174057   +end;
MPRINT(EM_DIAGRAM):   end;
1174058   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174059   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1174060   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1174061   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174062   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174063   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1174064   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1174065   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1174066   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1174067   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174068   +         end;
MPRINT(EM_DIAGRAM):   end;
1174069   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174070   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1174071   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1174072   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174073   +            end;
MPRINT(EM_DIAGRAM):   end;
1174074   +         end;
MPRINT(EM_DIAGRAM):   end;
1174075   +      end;
MPRINT(EM_DIAGRAM):   end;
1174076   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174077   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1174078   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1174079   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174080   +         end;
MPRINT(EM_DIAGRAM):   end;
1174081   +      end;
MPRINT(EM_DIAGRAM):   end;
1174082   +   end;
MPRINT(EM_DIAGRAM):   end;
1174083   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174084   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1174085   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1174086   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174087   +      end;
MPRINT(EM_DIAGRAM):   end;
1174088   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174089   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1174090   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1174091   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1174092   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1174093   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1174094   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174095   +         end;
MPRINT(EM_DIAGRAM):   end;
1174096   +      end;
MPRINT(EM_DIAGRAM):   end;
1174097   +   end;
MPRINT(EM_DIAGRAM):   end;
1174098   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174099   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1174100   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1174101   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1174102   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1174103   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174104   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174105   +   end;
MPRINT(EM_DIAGRAM):   end;
1174106   +end;
MPRINT(EM_DIAGRAM):   end;
1174107   +
1174108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174109   +*** Checking missing input Interval
1174110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1174111   +
1174112   +IF NMISS(
1174113   +   AcceptedCmpTotal ,
1174114   +   Age ,
1174115   +   Frq ,
1174116   +   Income ,
1174117   +   Kidhome ,
1174118   +   MntFishProducts ,
1174119   +   MntFruits ,
1174120   +   MntGoldProds ,
1174121   +   MntSweetProducts ,
1174122   +   MonthsAsCustomer ,
1174123   +   NumDealsPurchases ,
1174124   +   NumWebVisitsMonth ,
1174125   +   RFMstat ,
1174126   +   RMntFrq ,
1174127   +   Recency ,
1174128   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1174129   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1174130   +
1174131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174132   +END;
MPRINT(EM_DIAGRAM):   END;
1174133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174134   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1174135   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174136   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174137   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1174138   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1174139   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1174140   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1174141   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1174142   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1174143   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1174144   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1174145   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1174146   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1174147   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1174148   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1174149   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1174150   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1174151   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1174152   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1174153   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1174154   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1174155   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1174156   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1174157   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1174158   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1174159   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1174160   +END;
MPRINT(EM_DIAGRAM):   END;
1174161   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174162   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1174163   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1174164   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1174165   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1174166   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1174167   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1174168   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1174169   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1174170   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1174171   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1174172   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1174173   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1174174   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1174175   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1174176   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1174177   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1174178   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1174179   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1174180   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1174181   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1174182   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1174183   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1174184   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1174185   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1174186   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1174187   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1174188   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1174189   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1174190   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1174191   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1174192   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1174193   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1174194   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1174195   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1174196   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1174197   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1174198   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1174199   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1174200   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1174201   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1174202   +END;
MPRINT(EM_DIAGRAM):   END;
1174203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174204   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1174205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174206   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174207   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1174208   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174210   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1174211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174212   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174213   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1174214   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1174215   +        S_Income  +     0.25564250606874 * S_Kidhome
1174216   +          +    -0.02786629817134 * S_MntFishProducts
1174217   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1174218   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1174219   +          +    -0.29199173107007 * S_MonthsAsCustomer
1174220   +          +    -0.59759788962473 * S_NumDealsPurchases
1174221   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1174222   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1174223   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1174224   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1174225   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1174226   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1174227   +        S_Income  +     0.07328887474153 * S_Kidhome
1174228   +          +    -0.23284570213322 * S_MntFishProducts
1174229   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1174230   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1174231   +          +     0.29669594858185 * S_MonthsAsCustomer
1174232   +          +    -0.51220833966596 * S_NumDealsPurchases
1174233   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1174234   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1174235   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1174236   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1174237   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1174238   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1174239   +        S_Income  +    -0.68209910558389 * S_Kidhome
1174240   +          +     0.23366174254474 * S_MntFishProducts
1174241   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1174242   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1174243   +          +    -0.05759532204753 * S_MonthsAsCustomer
1174244   +          +    -0.30170163047261 * S_NumDealsPurchases
1174245   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1174246   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1174247   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1174248   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1174249   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1174250   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1174251   +        S_Income  +     0.67855138873039 * S_Kidhome
1174252   +          +    -0.05297743313476 * S_MntFishProducts
1174253   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1174254   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1174255   +          +    -0.15817861274553 * S_MonthsAsCustomer
1174256   +          +     0.25133066233725 * S_NumDealsPurchases
1174257   +          +     0.08802636187267 * S_NumWebVisitsMonth
1174258   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1174259   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1174260   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1174261   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1174262   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1174263   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1174264   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1174265   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1174266   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1174267   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1174268   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1174269   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1174270   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1174271   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1174272   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1174273   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1174274   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1174275   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1174276   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1174277   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1174278   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1174279   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1174280   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1174281   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1174282   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1174283   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1174284   +          +      0.0528075343138 * Marital_StatusDivorced
1174285   +          +    -0.08269844855231 * Marital_StatusMarried
1174286   +          +     0.43411839786169 * Marital_StatusSingle
1174287   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1174288   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1174289   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1174290   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1174291   +          +    -0.12842912869907 * Marital_StatusDivorced
1174292   +          +     0.11838814754642 * Marital_StatusMarried
1174293   +          +     0.01184261900927 * Marital_StatusSingle
1174294   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1174295   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1174296   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1174297   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1174298   +          +    -0.22110722201709 * Marital_StatusDivorced
1174299   +          +      0.1355339029843 * Marital_StatusMarried
1174300   +          +    -0.33157273596382 * Marital_StatusSingle
1174301   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1174302   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1174303   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1174304   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1174305   +          +    -0.21663247467797 * Marital_StatusDivorced
1174306   +          +     1.11468603898508 * Marital_StatusMarried
1174307   +          +    -0.84252388146943 * Marital_StatusSingle
1174308   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1174309   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1174310   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1174311   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1174312   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1174313   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1174314   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1174315   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1174316   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1174317   +END;
MPRINT(EM_DIAGRAM):   END;
1174318   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174319   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1174320   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1174321   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1174322   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1174323   +END;
MPRINT(EM_DIAGRAM):   END;
1174324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174325   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1174326   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174327   +
1174328   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1174329   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1174330   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1174331   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1174332   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1174333   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174334   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1174335   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1174336   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1174337   +end;
MPRINT(EM_DIAGRAM):   end;
1174338   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174339   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1174340   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1174341   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1174342   +   end;
MPRINT(EM_DIAGRAM):   end;
1174343   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1174344   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1174345   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1174346   +   end;
MPRINT(EM_DIAGRAM):   end;
1174347   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174348   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1174349   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1174350   +   end;
MPRINT(EM_DIAGRAM):   end;
1174351   +end;
MPRINT(EM_DIAGRAM):   end;
1174352   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174353   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1174354   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1174355   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1174356   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1174357   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1174358   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1174359   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1174360   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1174361   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1174362   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1174363   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1174364   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1174365   +END;
MPRINT(EM_DIAGRAM):   END;
1174366   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174367   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1174368   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1174369   +END;
MPRINT(EM_DIAGRAM):   END;
1174370   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1174371   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1174372   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1174373   +END;
MPRINT(EM_DIAGRAM):   END;
1174374   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1174375   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1174376   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1174377   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1174378   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1174379   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1174380   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1174381   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174382   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1174383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174384   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1174385   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1174386   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1174387   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1174388   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1174389   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1174390   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1174391   +END;
MPRINT(EM_DIAGRAM):   END;
1174392   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1174393   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1174394   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1174395   +drop
1174396   +H11
1174397   +H12
1174398   +H13
1174399   +H14
1174400   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1174401   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1174402   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1174403   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174404   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1174405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174406   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1174407   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1174408   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1174409   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1174410   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174411   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1174412   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174413   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1174414   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1174415   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1174416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174417   +* Ensmbl24: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 4 of 7;
1174418   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174420   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1174421   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1174422   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1174423   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1174424   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1174425   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1174426   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1174427   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1174428   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1174429   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1174430   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1174431   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1174432   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1174433   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1174434   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1174435   +LENGTH _WARN_ $4
1174436   +      F_DepVar  $ 12
1174437   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1174438   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1174439   +
1174440   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1174441   +
1174442   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1174443   +
1174444   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1174445   +
1174446   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1174447   +
1174448   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1174449   +
1174450   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1174451   +
1174452   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1174453   +
1174454   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1174455   +
1174456   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1174457   +
1174458   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1174459   +
1174460   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1174461   +
1174462   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1174463   +
1174464   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1174465   +
1174466   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1174467   +
1174468   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1174469   +
1174470   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1174471   +
1174472   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1174473   +
1174474   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1174475   +
1174476   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1174477   +
1174478   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1174479   +
1174480   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1174481   +
1174482   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1174483   +
1174484   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1174485   +
1174486   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1174487   +
1174488   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1174489   +
1174490   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1174491   +
1174492   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1174493   +
1174494   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1174495   +
1174496   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1174497   +
1174498   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1174499   +
1174500   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1174501   +
1174502   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1174503   +
1174504   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1174505   +
1174506   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1174507   +
1174508   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1174509   +
1174510   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1174511   +
1174512   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1174513   +
1174514   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1174515   +
1174516   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1174517   +
1174518   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1174519   +
1174520   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1174521   +
1174522   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1174523   +
1174524   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1174525   +
1174526   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1174527   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1174528   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1174529   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1174530   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174531   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174532   +end;
MPRINT(EM_DIAGRAM):   end;
1174533   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174534   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174535   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1174536   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174537   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1174538   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1174539   +   end;
MPRINT(EM_DIAGRAM):   end;
1174540   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174541   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1174542   +   end;
MPRINT(EM_DIAGRAM):   end;
1174543   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174544   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1174545   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174546   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174547   +   end;
MPRINT(EM_DIAGRAM):   end;
1174548   +end;
MPRINT(EM_DIAGRAM):   end;
1174549   +
1174550   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1174551   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1174552   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1174553   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1174554   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174555   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174556   +end;
MPRINT(EM_DIAGRAM):   end;
1174557   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174558   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174559   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1174560   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174561   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1174562   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1174563   +   end;
MPRINT(EM_DIAGRAM):   end;
1174564   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174565   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1174566   +   end;
MPRINT(EM_DIAGRAM):   end;
1174567   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174568   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1174569   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174570   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174571   +   end;
MPRINT(EM_DIAGRAM):   end;
1174572   +end;
MPRINT(EM_DIAGRAM):   end;
1174573   +
1174574   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1174575   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1174576   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1174577   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1174578   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174579   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174580   +end;
MPRINT(EM_DIAGRAM):   end;
1174581   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174582   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174583   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1174584   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174585   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1174586   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1174587   +   end;
MPRINT(EM_DIAGRAM):   end;
1174588   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174589   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1174590   +   end;
MPRINT(EM_DIAGRAM):   end;
1174591   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174592   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1174593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174595   +   end;
MPRINT(EM_DIAGRAM):   end;
1174596   +end;
MPRINT(EM_DIAGRAM):   end;
1174597   +
1174598   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1174599   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1174600   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1174601   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1174602   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174603   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174604   +end;
MPRINT(EM_DIAGRAM):   end;
1174605   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174606   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174607   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1174608   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174609   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1174610   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1174611   +   end;
MPRINT(EM_DIAGRAM):   end;
1174612   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174613   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1174614   +   end;
MPRINT(EM_DIAGRAM):   end;
1174615   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174616   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1174617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174619   +   end;
MPRINT(EM_DIAGRAM):   end;
1174620   +end;
MPRINT(EM_DIAGRAM):   end;
1174621   +
1174622   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1174623   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1174624   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1174625   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1174626   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174627   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174628   +end;
MPRINT(EM_DIAGRAM):   end;
1174629   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174630   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174631   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1174632   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174633   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1174634   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1174635   +   end;
MPRINT(EM_DIAGRAM):   end;
1174636   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174637   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1174638   +   end;
MPRINT(EM_DIAGRAM):   end;
1174639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174640   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1174641   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174642   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174643   +   end;
MPRINT(EM_DIAGRAM):   end;
1174644   +end;
MPRINT(EM_DIAGRAM):   end;
1174645   +
1174646   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1174647   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1174648   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1174649   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1174650   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174651   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174652   +end;
MPRINT(EM_DIAGRAM):   end;
1174653   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174654   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174655   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1174656   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174657   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1174658   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1174659   +   end;
MPRINT(EM_DIAGRAM):   end;
1174660   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1174661   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1174662   +   end;
MPRINT(EM_DIAGRAM):   end;
1174663   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174664   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1174665   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174666   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174667   +   end;
MPRINT(EM_DIAGRAM):   end;
1174668   +end;
MPRINT(EM_DIAGRAM):   end;
1174669   +
1174670   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1174671   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1174672   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1174673   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1174674   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174675   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174676   +end;
MPRINT(EM_DIAGRAM):   end;
1174677   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174678   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174679   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1174680   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174681   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1174682   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1174683   +   end;
MPRINT(EM_DIAGRAM):   end;
1174684   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1174685   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1174686   +   end;
MPRINT(EM_DIAGRAM):   end;
1174687   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174688   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1174689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174691   +   end;
MPRINT(EM_DIAGRAM):   end;
1174692   +end;
MPRINT(EM_DIAGRAM):   end;
1174693   +
1174694   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1174695   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1174696   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174697   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1174698   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1174699   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1174700   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1174701   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1174702   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1174703   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1174704   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1174705   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1174706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174708   +end;
MPRINT(EM_DIAGRAM):   end;
1174709   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174710   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1174711   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1174712   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174713   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1174714   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1174715   +   end;
MPRINT(EM_DIAGRAM):   end;
1174716   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1174717   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1174718   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1174719   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1174720   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1174721   +   end;
MPRINT(EM_DIAGRAM):   end;
1174722   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1174723   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1174724   +   end;
MPRINT(EM_DIAGRAM):   end;
1174725   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1174726   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1174727   +   end;
MPRINT(EM_DIAGRAM):   end;
1174728   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1174729   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1174730   +   end;
MPRINT(EM_DIAGRAM):   end;
1174731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174732   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1174733   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1174734   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1174735   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1174736   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174737   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174738   +   end;
MPRINT(EM_DIAGRAM):   end;
1174739   +end;
MPRINT(EM_DIAGRAM):   end;
1174740   +
1174741   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1174742   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1174743   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1174744   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174745   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1174746   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1174747   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1174748   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1174749   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1174750   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1174751   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1174752   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1174753   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1174754   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174755   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174756   +end;
MPRINT(EM_DIAGRAM):   end;
1174757   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174758   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1174759   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1174760   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174761   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174762   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1174763   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1174764   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1174765   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1174766   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174767   +         end;
MPRINT(EM_DIAGRAM):   end;
1174768   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174769   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1174770   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1174771   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174772   +            end;
MPRINT(EM_DIAGRAM):   end;
1174773   +         end;
MPRINT(EM_DIAGRAM):   end;
1174774   +      end;
MPRINT(EM_DIAGRAM):   end;
1174775   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174776   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1174777   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1174778   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174779   +         end;
MPRINT(EM_DIAGRAM):   end;
1174780   +      end;
MPRINT(EM_DIAGRAM):   end;
1174781   +   end;
MPRINT(EM_DIAGRAM):   end;
1174782   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174783   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1174784   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1174785   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174786   +      end;
MPRINT(EM_DIAGRAM):   end;
1174787   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174788   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1174789   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1174790   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1174791   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1174792   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1174793   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174794   +         end;
MPRINT(EM_DIAGRAM):   end;
1174795   +      end;
MPRINT(EM_DIAGRAM):   end;
1174796   +   end;
MPRINT(EM_DIAGRAM):   end;
1174797   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174798   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1174799   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1174800   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1174801   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1174802   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174803   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174804   +   end;
MPRINT(EM_DIAGRAM):   end;
1174805   +end;
MPRINT(EM_DIAGRAM):   end;
1174806   +
1174807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174808   +*** Checking missing input Interval
1174809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1174810   +
1174811   +IF NMISS(
1174812   +   AcceptedCmpTotal ,
1174813   +   Age ,
1174814   +   Frq ,
1174815   +   Income ,
1174816   +   Kidhome ,
1174817   +   MntFishProducts ,
1174818   +   MntFruits ,
1174819   +   MntGoldProds ,
1174820   +   MntSweetProducts ,
1174821   +   MonthsAsCustomer ,
1174822   +   NumDealsPurchases ,
1174823   +   NumWebVisitsMonth ,
1174824   +   RFMstat ,
1174825   +   RMntFrq ,
1174826   +   Recency ,
1174827   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1174828   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1174829   +
1174830   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174831   +END;
MPRINT(EM_DIAGRAM):   END;
1174832   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174833   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1174834   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174836   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1174837   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1174838   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1174839   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1174840   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1174841   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1174842   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1174843   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1174844   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1174845   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1174846   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1174847   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1174848   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1174849   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1174850   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1174851   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1174852   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1174853   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1174854   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1174855   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1174856   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1174857   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1174858   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1174859   +END;
MPRINT(EM_DIAGRAM):   END;
1174860   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1174861   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1174862   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1174863   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1174864   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1174865   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1174866   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1174867   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1174868   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1174869   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1174870   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1174871   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1174872   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1174873   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1174874   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1174875   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1174876   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1174877   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1174878   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1174879   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1174880   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1174881   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1174882   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1174883   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1174884   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1174885   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1174886   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1174887   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1174888   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1174889   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1174890   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1174891   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1174892   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1174893   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1174894   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1174895   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1174896   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1174897   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1174898   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1174899   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1174900   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1174901   +END;
MPRINT(EM_DIAGRAM):   END;
1174902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174903   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1174904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174905   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174906   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1174907   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174909   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1174910   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1174911   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1174912   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1174913   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1174914   +        S_Income  +     0.39869341630865 * S_Kidhome
1174915   +          +    -0.04263586382867 * S_MntFishProducts
1174916   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1174917   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1174918   +          +    -0.14308588367026 * S_MonthsAsCustomer
1174919   +          +    -0.01053346972758 * S_NumDealsPurchases
1174920   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1174921   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1174922   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1174923   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1174924   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1174925   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1174926   +        S_Income  +     0.31514301668626 * S_Kidhome
1174927   +          +    -0.05723808748191 * S_MntFishProducts
1174928   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1174929   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1174930   +          +    -0.48738730918684 * S_MonthsAsCustomer
1174931   +          +     0.31545795225489 * S_NumDealsPurchases
1174932   +          +     0.24686603252864 * S_NumWebVisitsMonth
1174933   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1174934   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1174935   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1174936   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1174937   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1174938   +        S_Income  +    -0.48452563006855 * S_Kidhome
1174939   +          +      0.1638851163007 * S_MntFishProducts
1174940   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1174941   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1174942   +          +    -0.09008316729574 * S_MonthsAsCustomer
1174943   +          +    -0.45452883452999 * S_NumDealsPurchases
1174944   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1174945   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1174946   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1174947   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1174948   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1174949   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1174950   +        S_Income  +    -0.62959343200613 * S_Kidhome
1174951   +          +    -0.08953561593231 * S_MntFishProducts
1174952   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1174953   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1174954   +          +    -0.04786752357029 * S_MonthsAsCustomer
1174955   +          +     0.01658790214447 * S_NumDealsPurchases
1174956   +          +     0.60508225698649 * S_NumWebVisitsMonth
1174957   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1174958   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1174959   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1174960   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1174961   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1174962   +        S_Income  +    -0.02417847760857 * S_Kidhome
1174963   +          +    -0.15499190740194 * S_MntFishProducts
1174964   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1174965   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1174966   +          +     0.03507116553703 * S_MonthsAsCustomer
1174967   +          +    -0.55190381693021 * S_NumDealsPurchases
1174968   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1174969   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1174970   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1174971   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1174972   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1174973   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1174974   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1174975   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1174976   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1174977   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1174978   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1174979   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1174980   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1174981   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1174982   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1174983   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1174984   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1174985   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1174986   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1174987   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1174988   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1174989   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1174990   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1174991   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1174992   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1174993   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1174994   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1174995   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1174996   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1174997   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1174998   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1174999   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1175000   +          +    -0.41654638301737 * Marital_StatusDivorced
1175001   +          +     0.65956207700583 * Marital_StatusMarried
1175002   +          +    -0.52573042887166 * Marital_StatusSingle
1175003   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1175004   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1175005   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1175006   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1175007   +          +    -0.32313846862799 * Marital_StatusDivorced
1175008   +          +     0.15910539009887 * Marital_StatusMarried
1175009   +          +     0.28781821946114 * Marital_StatusSingle
1175010   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1175011   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1175012   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1175013   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1175014   +          +    -0.06481096024989 * Marital_StatusDivorced
1175015   +          +    -0.01184060710261 * Marital_StatusMarried
1175016   +          +    -0.04932258474026 * Marital_StatusSingle
1175017   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1175018   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1175019   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1175020   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1175021   +          +      0.2062190716357 * Marital_StatusDivorced
1175022   +          +      -0.523160668609 * Marital_StatusMarried
1175023   +          +     0.50687401816278 * Marital_StatusSingle
1175024   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1175025   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1175026   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1175027   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1175028   +          +     -0.1386176879533 * Marital_StatusDivorced
1175029   +          +    -0.17611433777439 * Marital_StatusMarried
1175030   +          +     0.09908348348999 * Marital_StatusSingle
1175031   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1175032   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1175033   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1175034   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1175035   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1175036   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1175037   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1175038   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1175039   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1175040   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1175041   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1175042   +END;
MPRINT(EM_DIAGRAM):   END;
1175043   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175044   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1175045   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1175046   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1175047   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1175048   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1175049   +END;
MPRINT(EM_DIAGRAM):   END;
1175050   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175051   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1175052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175053   +
1175054   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1175055   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1175056   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1175057   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1175058   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1175059   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175060   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1175061   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1175062   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1175063   +end;
MPRINT(EM_DIAGRAM):   end;
1175064   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175065   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1175066   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1175067   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1175068   +   end;
MPRINT(EM_DIAGRAM):   end;
1175069   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1175070   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1175071   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1175072   +   end;
MPRINT(EM_DIAGRAM):   end;
1175073   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175074   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1175075   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1175076   +   end;
MPRINT(EM_DIAGRAM):   end;
1175077   +end;
MPRINT(EM_DIAGRAM):   end;
1175078   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1175079   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1175080   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1175081   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1175082   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1175083   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1175084   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1175085   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1175086   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1175087   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1175088   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1175089   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1175090   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1175091   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1175092   +END;
MPRINT(EM_DIAGRAM):   END;
1175093   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175094   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1175095   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1175096   +END;
MPRINT(EM_DIAGRAM):   END;
1175097   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1175098   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1175099   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1175100   +END;
MPRINT(EM_DIAGRAM):   END;
1175101   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1175102   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1175103   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1175104   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1175105   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1175106   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1175107   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1175108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175109   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1175110   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175111   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1175112   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1175113   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1175114   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1175115   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1175116   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1175117   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1175118   +END;
MPRINT(EM_DIAGRAM):   END;
1175119   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1175120   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1175121   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1175122   +drop
1175123   +H11
1175124   +H12
1175125   +H13
1175126   +H14
1175127   +H15
1175128   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1175129   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1175130   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1175131   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175132   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1175133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175134   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1175135   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1175136   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1175137   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1175138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175139   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1175140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175141   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1175142   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1175143   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1175144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175145   +* Ensmbl24: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 5 of 7;
1175146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175148   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1175149   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1175150   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1175151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175152   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1175153   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1175154   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1175155   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1175156   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1175157   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1175158   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1175159   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1175160   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1175161   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1175162   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1175163   +LENGTH _WARN_ $4
1175164   +      F_DepVar  $ 12
1175165   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1175166   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1175167   +
1175168   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1175169   +
1175170   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1175171   +
1175172   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1175173   +
1175174   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1175175   +
1175176   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1175177   +
1175178   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1175179   +
1175180   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1175181   +
1175182   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1175183   +
1175184   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1175185   +
1175186   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1175187   +
1175188   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1175189   +
1175190   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1175191   +
1175192   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1175193   +
1175194   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1175195   +
1175196   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1175197   +
1175198   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1175199   +
1175200   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1175201   +
1175202   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1175203   +
1175204   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1175205   +
1175206   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1175207   +
1175208   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1175209   +
1175210   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1175211   +
1175212   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1175213   +
1175214   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1175215   +
1175216   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1175217   +
1175218   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1175219   +
1175220   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1175221   +
1175222   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1175223   +
1175224   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1175225   +
1175226   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1175227   +
1175228   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1175229   +
1175230   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1175231   +
1175232   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1175233   +
1175234   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1175235   +
1175236   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1175237   +
1175238   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1175239   +
1175240   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1175241   +
1175242   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1175243   +
1175244   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1175245   +
1175246   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1175247   +
1175248   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1175249   +
1175250   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1175251   +
1175252   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1175253   +
1175254   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1175255   +
1175256   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1175257   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1175258   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1175259   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1175260   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175261   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175262   +end;
MPRINT(EM_DIAGRAM):   end;
1175263   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175264   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175265   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1175266   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175267   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1175268   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1175269   +   end;
MPRINT(EM_DIAGRAM):   end;
1175270   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1175271   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1175272   +   end;
MPRINT(EM_DIAGRAM):   end;
1175273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175274   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1175275   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175276   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175277   +   end;
MPRINT(EM_DIAGRAM):   end;
1175278   +end;
MPRINT(EM_DIAGRAM):   end;
1175279   +
1175280   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1175281   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1175282   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1175283   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1175284   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175285   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175286   +end;
MPRINT(EM_DIAGRAM):   end;
1175287   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175288   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175289   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1175290   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175291   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1175292   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1175293   +   end;
MPRINT(EM_DIAGRAM):   end;
1175294   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1175295   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1175296   +   end;
MPRINT(EM_DIAGRAM):   end;
1175297   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175298   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1175299   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175300   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175301   +   end;
MPRINT(EM_DIAGRAM):   end;
1175302   +end;
MPRINT(EM_DIAGRAM):   end;
1175303   +
1175304   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1175305   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1175306   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1175307   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1175308   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175309   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175310   +end;
MPRINT(EM_DIAGRAM):   end;
1175311   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175312   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175313   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1175314   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175315   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1175316   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1175317   +   end;
MPRINT(EM_DIAGRAM):   end;
1175318   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1175319   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1175320   +   end;
MPRINT(EM_DIAGRAM):   end;
1175321   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175322   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1175323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175325   +   end;
MPRINT(EM_DIAGRAM):   end;
1175326   +end;
MPRINT(EM_DIAGRAM):   end;
1175327   +
1175328   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1175329   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1175330   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1175331   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1175332   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175333   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175334   +end;
MPRINT(EM_DIAGRAM):   end;
1175335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175336   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175337   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1175338   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175339   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1175340   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1175341   +   end;
MPRINT(EM_DIAGRAM):   end;
1175342   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1175343   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1175344   +   end;
MPRINT(EM_DIAGRAM):   end;
1175345   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175346   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1175347   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175348   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175349   +   end;
MPRINT(EM_DIAGRAM):   end;
1175350   +end;
MPRINT(EM_DIAGRAM):   end;
1175351   +
1175352   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1175353   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1175354   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1175355   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1175356   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175357   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175358   +end;
MPRINT(EM_DIAGRAM):   end;
1175359   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175360   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175361   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1175362   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175363   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1175364   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1175365   +   end;
MPRINT(EM_DIAGRAM):   end;
1175366   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1175367   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1175368   +   end;
MPRINT(EM_DIAGRAM):   end;
1175369   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175370   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1175371   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175372   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175373   +   end;
MPRINT(EM_DIAGRAM):   end;
1175374   +end;
MPRINT(EM_DIAGRAM):   end;
1175375   +
1175376   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1175377   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1175378   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1175379   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1175380   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175381   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175382   +end;
MPRINT(EM_DIAGRAM):   end;
1175383   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175384   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175385   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1175386   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175387   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1175388   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1175389   +   end;
MPRINT(EM_DIAGRAM):   end;
1175390   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1175391   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1175392   +   end;
MPRINT(EM_DIAGRAM):   end;
1175393   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175394   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1175395   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175396   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175397   +   end;
MPRINT(EM_DIAGRAM):   end;
1175398   +end;
MPRINT(EM_DIAGRAM):   end;
1175399   +
1175400   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1175401   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1175402   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1175403   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1175404   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175405   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175406   +end;
MPRINT(EM_DIAGRAM):   end;
1175407   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175408   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1175409   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1175410   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175411   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1175412   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1175413   +   end;
MPRINT(EM_DIAGRAM):   end;
1175414   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1175415   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1175416   +   end;
MPRINT(EM_DIAGRAM):   end;
1175417   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175418   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1175419   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175420   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175421   +   end;
MPRINT(EM_DIAGRAM):   end;
1175422   +end;
MPRINT(EM_DIAGRAM):   end;
1175423   +
1175424   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1175425   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1175426   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1175427   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1175428   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1175429   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1175430   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1175431   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1175432   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1175433   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1175434   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1175435   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1175436   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175437   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175438   +end;
MPRINT(EM_DIAGRAM):   end;
1175439   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175440   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1175441   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1175442   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175443   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1175444   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1175445   +   end;
MPRINT(EM_DIAGRAM):   end;
1175446   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1175447   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1175448   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1175449   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1175450   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1175451   +   end;
MPRINT(EM_DIAGRAM):   end;
1175452   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1175453   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1175454   +   end;
MPRINT(EM_DIAGRAM):   end;
1175455   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1175456   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1175457   +   end;
MPRINT(EM_DIAGRAM):   end;
1175458   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1175459   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1175460   +   end;
MPRINT(EM_DIAGRAM):   end;
1175461   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175462   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1175463   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1175464   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1175465   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1175466   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175467   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175468   +   end;
MPRINT(EM_DIAGRAM):   end;
1175469   +end;
MPRINT(EM_DIAGRAM):   end;
1175470   +
1175471   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1175472   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1175473   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1175474   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1175475   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1175476   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1175477   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1175478   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1175479   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1175480   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1175481   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1175482   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1175483   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1175484   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1175485   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175486   +end;
MPRINT(EM_DIAGRAM):   end;
1175487   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175488   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1175489   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1175490   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175491   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1175492   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1175493   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1175494   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1175495   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1175496   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175497   +         end;
MPRINT(EM_DIAGRAM):   end;
1175498   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1175499   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1175500   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1175501   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175502   +            end;
MPRINT(EM_DIAGRAM):   end;
1175503   +         end;
MPRINT(EM_DIAGRAM):   end;
1175504   +      end;
MPRINT(EM_DIAGRAM):   end;
1175505   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1175506   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1175507   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1175508   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175509   +         end;
MPRINT(EM_DIAGRAM):   end;
1175510   +      end;
MPRINT(EM_DIAGRAM):   end;
1175511   +   end;
MPRINT(EM_DIAGRAM):   end;
1175512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175513   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1175514   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1175515   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175516   +      end;
MPRINT(EM_DIAGRAM):   end;
1175517   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1175518   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1175519   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1175520   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1175521   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1175522   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1175523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175524   +         end;
MPRINT(EM_DIAGRAM):   end;
1175525   +      end;
MPRINT(EM_DIAGRAM):   end;
1175526   +   end;
MPRINT(EM_DIAGRAM):   end;
1175527   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1175528   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1175529   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1175530   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1175531   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1175532   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175533   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175534   +   end;
MPRINT(EM_DIAGRAM):   end;
1175535   +end;
MPRINT(EM_DIAGRAM):   end;
1175536   +
1175537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175538   +*** Checking missing input Interval
1175539   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1175540   +
1175541   +IF NMISS(
1175542   +   AcceptedCmpTotal ,
1175543   +   Age ,
1175544   +   Frq ,
1175545   +   Income ,
1175546   +   Kidhome ,
1175547   +   MntFishProducts ,
1175548   +   MntFruits ,
1175549   +   MntGoldProds ,
1175550   +   MntSweetProducts ,
1175551   +   MonthsAsCustomer ,
1175552   +   NumDealsPurchases ,
1175553   +   NumWebVisitsMonth ,
1175554   +   RFMstat ,
1175555   +   RMntFrq ,
1175556   +   Recency ,
1175557   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1175558   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1175559   +
1175560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175561   +END;
MPRINT(EM_DIAGRAM):   END;
1175562   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175563   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1175564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175565   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1175566   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1175567   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1175568   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1175569   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1175570   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1175571   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1175572   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1175573   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1175574   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1175575   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1175576   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1175577   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1175578   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1175579   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1175580   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1175581   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1175582   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1175583   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1175584   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1175585   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1175586   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1175587   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1175588   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1175589   +END;
MPRINT(EM_DIAGRAM):   END;
1175590   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175591   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1175592   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1175593   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1175594   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1175595   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1175596   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1175597   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1175598   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1175599   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1175600   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1175601   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1175602   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1175603   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1175604   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1175605   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1175606   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1175607   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1175608   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1175609   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1175610   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1175611   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1175612   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1175613   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1175614   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1175615   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1175616   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1175617   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1175618   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1175619   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1175620   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1175621   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1175622   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1175623   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1175624   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1175625   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1175626   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1175627   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1175628   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1175629   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1175630   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1175631   +END;
MPRINT(EM_DIAGRAM):   END;
1175632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175633   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1175634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175635   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175636   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1175637   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175639   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1175640   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175641   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1175642   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1175643   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1175644   +        S_Income  +    -0.52684337240504 * S_Kidhome
1175645   +          +     0.07835956947085 * S_MntFishProducts
1175646   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1175647   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1175648   +          +    -0.44463888327841 * S_MonthsAsCustomer
1175649   +          +    -0.20310227710644 * S_NumDealsPurchases
1175650   +          +     0.06594467408568 * S_NumWebVisitsMonth
1175651   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1175652   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1175653   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1175654   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1175655   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1175656   +        S_Income  +     0.91025818069308 * S_Kidhome
1175657   +          +     0.26585860774761 * S_MntFishProducts
1175658   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1175659   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1175660   +          +    -0.12421403342454 * S_MonthsAsCustomer
1175661   +          +     0.66931066909347 * S_NumDealsPurchases
1175662   +          +     0.35050056776957 * S_NumWebVisitsMonth
1175663   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1175664   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1175665   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1175666   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1175667   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1175668   +        S_Income  +     0.63027536562783 * S_Kidhome
1175669   +          +     0.15303249164566 * S_MntFishProducts
1175670   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1175671   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1175672   +          +    -0.21006970062531 * S_MonthsAsCustomer
1175673   +          +      0.2955774677605 * S_NumDealsPurchases
1175674   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1175675   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1175676   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1175677   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1175678   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1175679   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1175680   +        S_Income  +    -0.00985947331416 * S_Kidhome
1175681   +          +    -0.27114701164817 * S_MntFishProducts
1175682   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1175683   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1175684   +          +    -0.02702818828921 * S_MonthsAsCustomer
1175685   +          +    -0.63381188911946 * S_NumDealsPurchases
1175686   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1175687   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1175688   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1175689   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1175690   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1175691   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1175692   +        S_Income  +    -0.24206929946772 * S_Kidhome
1175693   +          +    -0.19039689229491 * S_MntFishProducts
1175694   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1175695   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1175696   +          +     0.03815221487927 * S_MonthsAsCustomer
1175697   +          +    -0.43579024169696 * S_NumDealsPurchases
1175698   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1175699   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1175700   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1175701   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1175702   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1175703   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1175704   +        S_Income  +    -0.25736924536467 * S_Kidhome
1175705   +          +    -0.04400855145817 * S_MntFishProducts
1175706   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1175707   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1175708   +          +     0.00265986106691 * S_MonthsAsCustomer
1175709   +          +     0.27331919080312 * S_NumDealsPurchases
1175710   +          +     0.22836119952787 * S_NumWebVisitsMonth
1175711   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1175712   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1175713   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1175714   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1175715   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1175716   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1175717   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1175718   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1175719   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1175720   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1175721   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1175722   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1175723   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1175724   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1175725   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1175726   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1175727   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1175728   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1175729   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1175730   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1175731   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1175732   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1175733   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1175734   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1175735   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1175736   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1175737   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1175738   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1175739   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1175740   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1175741   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1175742   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1175743   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1175744   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1175745   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1175746   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1175747   +          +     0.12502276672336 * Marital_StatusDivorced
1175748   +          +    -0.02606508453741 * Marital_StatusMarried
1175749   +          +      0.0418850245266 * Marital_StatusSingle
1175750   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1175751   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1175752   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1175753   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1175754   +          +      0.1943860669795 * Marital_StatusDivorced
1175755   +          +     -0.1529596261268 * Marital_StatusMarried
1175756   +          +     0.24187461301348 * Marital_StatusSingle
1175757   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1175758   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1175759   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1175760   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1175761   +          +    -0.19677652422622 * Marital_StatusDivorced
1175762   +          +     0.75897106429478 * Marital_StatusMarried
1175763   +          +    -0.66692260284833 * Marital_StatusSingle
1175764   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1175765   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1175766   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1175767   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1175768   +          +    -0.18964222971122 * Marital_StatusDivorced
1175769   +          +    -0.15222045956879 * Marital_StatusMarried
1175770   +          +     0.15455795695595 * Marital_StatusSingle
1175771   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1175772   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1175773   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1175774   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1175775   +          +    -0.10122776921995 * Marital_StatusDivorced
1175776   +          +     0.14126755564161 * Marital_StatusMarried
1175777   +          +    -0.18463644418978 * Marital_StatusSingle
1175778   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1175779   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1175780   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1175781   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1175782   +          +     0.05009431660662 * Marital_StatusDivorced
1175783   +          +    -0.38407798045329 * Marital_StatusMarried
1175784   +          +      0.3035257398654 * Marital_StatusSingle
1175785   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1175786   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1175787   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1175788   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1175789   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1175790   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1175791   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1175792   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1175793   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1175794   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1175795   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1175796   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1175797   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1175798   +END;
MPRINT(EM_DIAGRAM):   END;
1175799   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175800   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1175801   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1175802   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1175803   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1175804   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1175805   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1175806   +END;
MPRINT(EM_DIAGRAM):   END;
1175807   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175808   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1175809   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175810   +
1175811   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1175812   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1175813   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1175814   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1175815   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1175816   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175817   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1175818   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1175819   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1175820   +end;
MPRINT(EM_DIAGRAM):   end;
1175821   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175822   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1175823   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1175824   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1175825   +   end;
MPRINT(EM_DIAGRAM):   end;
1175826   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1175827   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1175828   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1175829   +   end;
MPRINT(EM_DIAGRAM):   end;
1175830   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175831   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1175832   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1175833   +   end;
MPRINT(EM_DIAGRAM):   end;
1175834   +end;
MPRINT(EM_DIAGRAM):   end;
1175835   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1175836   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1175837   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1175838   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1175839   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1175840   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1175841   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1175842   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1175843   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1175844   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1175845   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1175846   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1175847   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1175848   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1175849   +END;
MPRINT(EM_DIAGRAM):   END;
1175850   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175851   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1175852   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1175853   +END;
MPRINT(EM_DIAGRAM):   END;
1175854   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1175855   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1175856   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1175857   +END;
MPRINT(EM_DIAGRAM):   END;
1175858   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1175859   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1175860   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1175861   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1175862   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1175863   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1175864   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1175865   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175866   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1175867   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175868   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1175869   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1175870   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1175871   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1175872   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1175873   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1175874   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1175875   +END;
MPRINT(EM_DIAGRAM):   END;
1175876   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1175877   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1175878   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1175879   +drop
1175880   +H11
1175881   +H12
1175882   +H13
1175883   +H14
1175884   +H15
1175885   +H16
1175886   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1175887   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1175888   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1175889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175890   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1175891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175892   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1175893   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1175894   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1175895   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1175896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175897   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1175898   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175899   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1175900   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1175901   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1175902   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175903   +* Ensmbl24: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 6 of 7;
1175904   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175905   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175906   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1175907   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1175908   +* NODE: Neural36;
MPRINT(EM_DIAGRAM):   * NODE: Neural36;
1175909   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1175910   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1175911   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1175912   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1175913   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1175914   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1175915   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1175916   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1175917   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1175918   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1175919   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1175920   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1175921   +LENGTH _WARN_ $4
1175922   +      F_DepVar  $ 12
1175923   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1175924   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1175925   +
1175926   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1175927   +
1175928   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1175929   +
1175930   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1175931   +
1175932   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1175933   +
1175934   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1175935   +
1175936   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1175937   +
1175938   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1175939   +
1175940   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1175941   +
1175942   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1175943   +
1175944   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1175945   +
1175946   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1175947   +
1175948   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1175949   +
1175950   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1175951   +
1175952   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1175953   +
1175954   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1175955   +
1175956   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1175957   +
1175958   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1175959   +
1175960   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1175961   +
1175962   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1175963   +
1175964   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1175965   +
1175966   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1175967   +
1175968   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1175969   +
1175970   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1175971   +
1175972   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1175973   +
1175974   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1175975   +
1175976   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1175977   +
1175978   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1175979   +
1175980   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1175981   +
1175982   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1175983   +
1175984   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1175985   +
1175986   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1175987   +
1175988   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1175989   +
1175990   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1175991   +
1175992   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1175993   +
1175994   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1175995   +
1175996   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1175997   +
1175998   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1175999   +
1176000   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1176001   +
1176002   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1176003   +
1176004   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1176005   +
1176006   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1176007   +
1176008   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1176009   +
1176010   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1176011   +
1176012   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1176013   +
1176014   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1176015   +
1176016   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1176017   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1176018   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1176019   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1176020   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176021   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176022   +end;
MPRINT(EM_DIAGRAM):   end;
1176023   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176024   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176025   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1176026   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176027   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176028   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1176029   +   end;
MPRINT(EM_DIAGRAM):   end;
1176030   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176031   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1176032   +   end;
MPRINT(EM_DIAGRAM):   end;
1176033   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176034   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1176035   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176036   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176037   +   end;
MPRINT(EM_DIAGRAM):   end;
1176038   +end;
MPRINT(EM_DIAGRAM):   end;
1176039   +
1176040   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1176041   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1176042   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1176043   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1176044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176046   +end;
MPRINT(EM_DIAGRAM):   end;
1176047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176049   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1176050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176051   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176052   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1176053   +   end;
MPRINT(EM_DIAGRAM):   end;
1176054   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176055   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1176056   +   end;
MPRINT(EM_DIAGRAM):   end;
1176057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176058   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1176059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176061   +   end;
MPRINT(EM_DIAGRAM):   end;
1176062   +end;
MPRINT(EM_DIAGRAM):   end;
1176063   +
1176064   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1176065   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1176066   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1176067   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1176068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176070   +end;
MPRINT(EM_DIAGRAM):   end;
1176071   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176072   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176073   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1176074   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176075   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176076   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1176077   +   end;
MPRINT(EM_DIAGRAM):   end;
1176078   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176079   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1176080   +   end;
MPRINT(EM_DIAGRAM):   end;
1176081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176082   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1176083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176085   +   end;
MPRINT(EM_DIAGRAM):   end;
1176086   +end;
MPRINT(EM_DIAGRAM):   end;
1176087   +
1176088   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1176089   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1176090   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1176091   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1176092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176094   +end;
MPRINT(EM_DIAGRAM):   end;
1176095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176097   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1176098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176099   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176100   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1176101   +   end;
MPRINT(EM_DIAGRAM):   end;
1176102   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176103   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1176104   +   end;
MPRINT(EM_DIAGRAM):   end;
1176105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176106   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1176107   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176108   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176109   +   end;
MPRINT(EM_DIAGRAM):   end;
1176110   +end;
MPRINT(EM_DIAGRAM):   end;
1176111   +
1176112   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1176113   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1176114   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1176115   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1176116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176118   +end;
MPRINT(EM_DIAGRAM):   end;
1176119   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176120   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176121   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1176122   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176123   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176124   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1176125   +   end;
MPRINT(EM_DIAGRAM):   end;
1176126   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176127   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1176128   +   end;
MPRINT(EM_DIAGRAM):   end;
1176129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176130   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1176131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176133   +   end;
MPRINT(EM_DIAGRAM):   end;
1176134   +end;
MPRINT(EM_DIAGRAM):   end;
1176135   +
1176136   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1176137   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1176138   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1176139   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1176140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176142   +end;
MPRINT(EM_DIAGRAM):   end;
1176143   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176145   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1176146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176148   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1176149   +   end;
MPRINT(EM_DIAGRAM):   end;
1176150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176151   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1176152   +   end;
MPRINT(EM_DIAGRAM):   end;
1176153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176154   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1176155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176157   +   end;
MPRINT(EM_DIAGRAM):   end;
1176158   +end;
MPRINT(EM_DIAGRAM):   end;
1176159   +
1176160   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1176161   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1176162   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1176163   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1176164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176166   +end;
MPRINT(EM_DIAGRAM):   end;
1176167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176169   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1176170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176171   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1176172   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1176173   +   end;
MPRINT(EM_DIAGRAM):   end;
1176174   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1176175   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1176176   +   end;
MPRINT(EM_DIAGRAM):   end;
1176177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176178   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1176179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176181   +   end;
MPRINT(EM_DIAGRAM):   end;
1176182   +end;
MPRINT(EM_DIAGRAM):   end;
1176183   +
1176184   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1176185   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1176186   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1176187   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1176188   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1176189   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1176190   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1176191   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1176192   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1176193   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1176194   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1176195   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1176196   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176197   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176198   +end;
MPRINT(EM_DIAGRAM):   end;
1176199   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176200   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1176201   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1176202   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176203   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1176204   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1176205   +   end;
MPRINT(EM_DIAGRAM):   end;
1176206   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1176207   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1176208   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1176209   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1176210   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1176211   +   end;
MPRINT(EM_DIAGRAM):   end;
1176212   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1176213   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1176214   +   end;
MPRINT(EM_DIAGRAM):   end;
1176215   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1176216   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1176217   +   end;
MPRINT(EM_DIAGRAM):   end;
1176218   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1176219   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1176220   +   end;
MPRINT(EM_DIAGRAM):   end;
1176221   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176222   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1176223   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1176224   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1176225   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1176226   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176227   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176228   +   end;
MPRINT(EM_DIAGRAM):   end;
1176229   +end;
MPRINT(EM_DIAGRAM):   end;
1176230   +
1176231   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1176232   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1176233   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1176234   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1176235   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1176236   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1176237   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1176238   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1176239   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1176240   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1176241   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1176242   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1176243   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1176244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176246   +end;
MPRINT(EM_DIAGRAM):   end;
1176247   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176248   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1176249   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1176250   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176251   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1176252   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1176253   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1176254   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1176255   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1176256   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176257   +         end;
MPRINT(EM_DIAGRAM):   end;
1176258   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1176259   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1176260   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1176261   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176262   +            end;
MPRINT(EM_DIAGRAM):   end;
1176263   +         end;
MPRINT(EM_DIAGRAM):   end;
1176264   +      end;
MPRINT(EM_DIAGRAM):   end;
1176265   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1176266   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1176267   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1176268   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176269   +         end;
MPRINT(EM_DIAGRAM):   end;
1176270   +      end;
MPRINT(EM_DIAGRAM):   end;
1176271   +   end;
MPRINT(EM_DIAGRAM):   end;
1176272   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176273   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1176274   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1176275   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176276   +      end;
MPRINT(EM_DIAGRAM):   end;
1176277   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1176278   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1176279   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1176280   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1176281   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1176282   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1176283   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176284   +         end;
MPRINT(EM_DIAGRAM):   end;
1176285   +      end;
MPRINT(EM_DIAGRAM):   end;
1176286   +   end;
MPRINT(EM_DIAGRAM):   end;
1176287   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1176288   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1176289   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1176290   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1176291   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1176292   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176293   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176294   +   end;
MPRINT(EM_DIAGRAM):   end;
1176295   +end;
MPRINT(EM_DIAGRAM):   end;
1176296   +
1176297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176298   +*** Checking missing input Interval
1176299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1176300   +
1176301   +IF NMISS(
1176302   +   AcceptedCmpTotal ,
1176303   +   Age ,
1176304   +   Frq ,
1176305   +   Income ,
1176306   +   Kidhome ,
1176307   +   MntFishProducts ,
1176308   +   MntFruits ,
1176309   +   MntGoldProds ,
1176310   +   MntSweetProducts ,
1176311   +   MonthsAsCustomer ,
1176312   +   NumDealsPurchases ,
1176313   +   NumWebVisitsMonth ,
1176314   +   RFMstat ,
1176315   +   RMntFrq ,
1176316   +   Recency ,
1176317   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1176318   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1176319   +
1176320   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176321   +END;
MPRINT(EM_DIAGRAM):   END;
1176322   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176323   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1176324   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176325   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1176326   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1176327   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1176328   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1176329   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1176330   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1176331   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1176332   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1176333   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1176334   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1176335   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1176336   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1176337   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1176338   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1176339   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1176340   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1176341   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1176342   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1176343   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1176344   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1176345   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1176346   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1176347   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1176348   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1176349   +END;
MPRINT(EM_DIAGRAM):   END;
1176350   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1176351   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1176352   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1176353   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1176354   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1176355   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1176356   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1176357   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1176358   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1176359   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1176360   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1176361   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1176362   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1176363   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1176364   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1176365   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1176366   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1176367   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1176368   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1176369   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1176370   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1176371   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1176372   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1176373   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1176374   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1176375   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1176376   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1176377   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1176378   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1176379   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1176380   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1176381   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1176382   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1176383   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1176384   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1176385   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1176386   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1176387   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1176388   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1176389   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1176390   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1176391   +END;
MPRINT(EM_DIAGRAM):   END;
1176392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176393   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1176394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176395   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176396   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1176397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176399   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1176400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176401   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1176402   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1176403   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1176404   +        S_Income  +     0.21790378443814 * S_Kidhome
1176405   +          +    -0.08134586316395 * S_MntFishProducts
1176406   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1176407   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1176408   +          +     0.21726816930291 * S_MonthsAsCustomer
1176409   +          +    -0.21824241156847 * S_NumDealsPurchases
1176410   +          +     0.07727563921761 * S_NumWebVisitsMonth
1176411   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1176412   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1176413   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1176414   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1176415   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1176416   +        S_Income  +    -0.51036141680293 * S_Kidhome
1176417   +          +     0.10879858722875 * S_MntFishProducts
1176418   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1176419   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1176420   +          +    -0.11392977531374 * S_MonthsAsCustomer
1176421   +          +     -0.5318843752274 * S_NumDealsPurchases
1176422   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1176423   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1176424   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1176425   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1176426   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1176427   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1176428   +        S_Income  +     0.59254092901621 * S_Kidhome
1176429   +          +    -0.20448500725841 * S_MntFishProducts
1176430   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1176431   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1176432   +          +     0.75084411765835 * S_MonthsAsCustomer
1176433   +          +     -0.0387146296237 * S_NumDealsPurchases
1176434   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1176435   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1176436   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1176437   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1176438   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1176439   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1176440   +        S_Income  +    -0.00122834275949 * S_Kidhome
1176441   +          +    -0.27566379985337 * S_MntFishProducts
1176442   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1176443   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1176444   +          +    -0.04164317708211 * S_MonthsAsCustomer
1176445   +          +    -0.69362879353268 * S_NumDealsPurchases
1176446   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1176447   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1176448   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1176449   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1176450   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1176451   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1176452   +        S_Income  +    -0.52116533001423 * S_Kidhome
1176453   +          +     -0.0164127050263 * S_MntFishProducts
1176454   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1176455   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1176456   +          +     0.24190773546087 * S_MonthsAsCustomer
1176457   +          +    -0.20709839635746 * S_NumDealsPurchases
1176458   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1176459   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1176460   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1176461   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1176462   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1176463   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1176464   +        S_Income  +     0.02656798188894 * S_Kidhome
1176465   +          +     0.30126647035438 * S_MntFishProducts
1176466   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1176467   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1176468   +          +     0.02225077975252 * S_MonthsAsCustomer
1176469   +          +    -0.25574607065737 * S_NumDealsPurchases
1176470   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1176471   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1176472   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1176473   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1176474   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1176475   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1176476   +        S_Income  +     0.24859715564668 * S_Kidhome
1176477   +          +    -0.25170385966484 * S_MntFishProducts
1176478   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1176479   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1176480   +          +     0.05219342683802 * S_MonthsAsCustomer
1176481   +          +     0.43291262348863 * S_NumDealsPurchases
1176482   +          +     0.56350506449265 * S_NumWebVisitsMonth
1176483   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1176484   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1176485   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1176486   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1176487   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1176488   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1176489   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1176490   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1176491   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1176492   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1176493   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1176494   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1176495   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1176496   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1176497   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1176498   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1176499   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1176500   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1176501   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1176502   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1176503   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1176504   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1176505   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1176506   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1176507   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1176508   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1176509   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1176510   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1176511   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1176512   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1176513   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1176514   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1176515   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1176516   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1176517   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1176518   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1176519   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1176520   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1176521   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1176522   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1176523   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1176524   +          +     0.03245181998921 * Marital_StatusDivorced
1176525   +          +     0.29722741247663 * Marital_StatusMarried
1176526   +          +    -0.05683085497262 * Marital_StatusSingle
1176527   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1176528   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1176529   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1176530   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1176531   +          +    -0.13095826187081 * Marital_StatusDivorced
1176532   +          +     0.29509760197193 * Marital_StatusMarried
1176533   +          +    -0.21019918550166 * Marital_StatusSingle
1176534   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1176535   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1176536   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1176537   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1176538   +          +     0.03746692643939 * Marital_StatusDivorced
1176539   +          +     0.03482798841727 * Marital_StatusMarried
1176540   +          +     0.16645207250571 * Marital_StatusSingle
1176541   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1176542   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1176543   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1176544   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1176545   +          +     -0.0753971504765 * Marital_StatusDivorced
1176546   +          +     0.20446719655724 * Marital_StatusMarried
1176547   +          +     0.21472836757686 * Marital_StatusSingle
1176548   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1176549   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1176550   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1176551   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1176552   +          +     0.16191937298215 * Marital_StatusDivorced
1176553   +          +    -0.81780658848614 * Marital_StatusMarried
1176554   +          +     0.84981159748349 * Marital_StatusSingle
1176555   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1176556   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1176557   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1176558   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1176559   +          +    -0.01766312280073 * Marital_StatusDivorced
1176560   +          +     0.04455346003394 * Marital_StatusMarried
1176561   +          +    -0.05433982251127 * Marital_StatusSingle
1176562   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1176563   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1176564   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1176565   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1176566   +          +        0.22905595967 * Marital_StatusDivorced
1176567   +          +      0.1024998677695 * Marital_StatusMarried
1176568   +          +    -0.07752101768018 * Marital_StatusSingle
1176569   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1176570   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1176571   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1176572   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1176573   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1176574   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1176575   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1176576   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1176577   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1176578   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1176579   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1176580   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1176581   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1176582   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1176583   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1176584   +END;
MPRINT(EM_DIAGRAM):   END;
1176585   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1176586   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1176587   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1176588   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1176589   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1176590   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1176591   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1176592   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1176593   +END;
MPRINT(EM_DIAGRAM):   END;
1176594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176595   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1176596   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176597   +
1176598   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1176599   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1176600   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1176601   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1176602   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1176603   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176604   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1176605   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1176606   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1176607   +end;
MPRINT(EM_DIAGRAM):   end;
1176608   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176609   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1176610   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1176611   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1176612   +   end;
MPRINT(EM_DIAGRAM):   end;
1176613   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1176614   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1176615   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1176616   +   end;
MPRINT(EM_DIAGRAM):   end;
1176617   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176618   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1176619   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1176620   +   end;
MPRINT(EM_DIAGRAM):   end;
1176621   +end;
MPRINT(EM_DIAGRAM):   end;
1176622   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1176623   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1176624   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1176625   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1176626   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1176627   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1176628   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1176629   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1176630   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1176631   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1176632   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1176633   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1176634   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1176635   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1176636   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1176637   +END;
MPRINT(EM_DIAGRAM):   END;
1176638   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1176639   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1176640   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1176641   +END;
MPRINT(EM_DIAGRAM):   END;
1176642   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1176643   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1176644   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1176645   +END;
MPRINT(EM_DIAGRAM):   END;
1176646   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1176647   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1176648   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1176649   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1176650   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1176651   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1176652   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1176653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176654   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1176655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1176656   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1176657   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1176658   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1176659   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1176660   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1176661   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1176662   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1176663   +END;
MPRINT(EM_DIAGRAM):   END;
1176664   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1176665   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1176666   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1176667   +drop
1176668   +H11
1176669   +H12
1176670   +H13
1176671   +H14
1176672   +H15
1176673   +H16
1176674   +H17
1176675   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1176676   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1176677   +* Renaming variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural36;
1176678   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176679   +* Renaming Posterior variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural36;
1176680   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176681   +drop Neural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar1;
1176682   +Neural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar1 = P_DepVar1;
1176683   +drop Neural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar0;
1176684   +Neural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar0 = P_DepVar0;
1176685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176686   +* Renaming _WARN_ variable for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural36;
1176687   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176688   +length Neural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural36_WARN_ $4;
1176689   +drop Neural36_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural36_WARN_;
1176690   +Neural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural36_WARN_ = _WARN_;
1176691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176692   +* Ensmbl24: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 7 of 7;
1176693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176694   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176695   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1176696   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1176697   +* NODE: Reg11;
MPRINT(EM_DIAGRAM):   * NODE: Reg11;
1176698   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1176699   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1176700   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1176701   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1176702   +
1176703   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1176704   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1176705   +
1176706   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1176707   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1176708   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1176709   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1176710   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1176711   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1176712   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1176713   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1176714   +
1176715   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1176716   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1176717   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1176718   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1176719   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1176720   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176721   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1176722   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1176723   +end;
MPRINT(EM_DIAGRAM):   end;
1176724   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176725   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1176726   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1176727   +   end;
MPRINT(EM_DIAGRAM):   end;
1176728   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1176729   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1176730   +   end;
MPRINT(EM_DIAGRAM):   end;
1176731   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176732   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1176733   +   end;
MPRINT(EM_DIAGRAM):   end;
1176734   +end;
MPRINT(EM_DIAGRAM):   end;
1176735   +
1176736   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1176737   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1176738   +
1176739   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1176740   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1176741   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176742   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176743   +end;
MPRINT(EM_DIAGRAM):   end;
1176744   +
1176745   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1176746   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1176747   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176748   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176749   +end;
MPRINT(EM_DIAGRAM):   end;
1176750   +
1176751   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1176752   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1176753   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176754   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176755   +end;
MPRINT(EM_DIAGRAM):   end;
1176756   +
1176757   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1176758   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1176759   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176760   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176761   +end;
MPRINT(EM_DIAGRAM):   end;
1176762   +
1176763   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1176764   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1176765   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176766   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176767   +end;
MPRINT(EM_DIAGRAM):   end;
1176768   +
1176769   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1176770   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1176771   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176772   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176773   +end;
MPRINT(EM_DIAGRAM):   end;
1176774   +
1176775   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1176776   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1176777   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176778   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176779   +end;
MPRINT(EM_DIAGRAM):   end;
1176780   +
1176781   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1176782   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1176783   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176784   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176785   +end;
MPRINT(EM_DIAGRAM):   end;
1176786   +
1176787   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1176788   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1176789   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176790   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176791   +end;
MPRINT(EM_DIAGRAM):   end;
1176792   +
1176793   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1176794   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1176795   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176796   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176797   +end;
MPRINT(EM_DIAGRAM):   end;
1176798   +
1176799   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1176800   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1176801   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1176802   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1176803   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176804   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176805   +end;
MPRINT(EM_DIAGRAM):   end;
1176806   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176807   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176808   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1176809   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176810   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176811   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1176812   +   end;
MPRINT(EM_DIAGRAM):   end;
1176813   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176814   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1176815   +   end;
MPRINT(EM_DIAGRAM):   end;
1176816   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176817   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1176818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176820   +   end;
MPRINT(EM_DIAGRAM):   end;
1176821   +end;
MPRINT(EM_DIAGRAM):   end;
1176822   +
1176823   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1176824   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1176825   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1176826   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1176827   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176828   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176829   +end;
MPRINT(EM_DIAGRAM):   end;
1176830   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176831   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1176832   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1176833   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176834   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1176835   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1176836   +   end;
MPRINT(EM_DIAGRAM):   end;
1176837   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1176838   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1176839   +   end;
MPRINT(EM_DIAGRAM):   end;
1176840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176841   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1176842   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176843   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176844   +   end;
MPRINT(EM_DIAGRAM):   end;
1176845   +end;
MPRINT(EM_DIAGRAM):   end;
1176846   +
1176847   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1176848   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1176849   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1176850   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1176851   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1176852   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1176853   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1176854   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1176855   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1176856   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1176857   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1176858   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1176859   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1176860   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176861   +end;
MPRINT(EM_DIAGRAM):   end;
1176862   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176863   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1176864   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1176865   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1176866   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1176867   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1176868   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1176869   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1176870   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1176871   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176872   +         end;
MPRINT(EM_DIAGRAM):   end;
1176873   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1176874   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1176875   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1176876   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176877   +            end;
MPRINT(EM_DIAGRAM):   end;
1176878   +         end;
MPRINT(EM_DIAGRAM):   end;
1176879   +      end;
MPRINT(EM_DIAGRAM):   end;
1176880   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1176881   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1176882   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1176883   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176884   +         end;
MPRINT(EM_DIAGRAM):   end;
1176885   +      end;
MPRINT(EM_DIAGRAM):   end;
1176886   +   end;
MPRINT(EM_DIAGRAM):   end;
1176887   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1176888   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1176889   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1176890   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176891   +      end;
MPRINT(EM_DIAGRAM):   end;
1176892   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1176893   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1176894   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1176895   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1176896   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1176897   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1176898   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1176899   +         end;
MPRINT(EM_DIAGRAM):   end;
1176900   +      end;
MPRINT(EM_DIAGRAM):   end;
1176901   +   end;
MPRINT(EM_DIAGRAM):   end;
1176902   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1176903   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1176904   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1176905   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1176906   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1176907   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1176908   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1176909   +   end;
MPRINT(EM_DIAGRAM):   end;
1176910   +end;
MPRINT(EM_DIAGRAM):   end;
1176911   +
1176912   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1176913   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1176914   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1176915   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1176916   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1176917   +end;
MPRINT(EM_DIAGRAM):   end;
1176918   +
1176919   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1176920   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1176921   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1176922   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1176923   +
1176924   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1176925   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1176926   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1176927   +
1176928   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1176929   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1176930   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1176931   +
1176932   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1176933   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1176934   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1176935   +
1176936   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1176937   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1176938   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1176939   +
1176940   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1176941   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1176942   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1176943   +
1176944   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1176945   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1176946   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1176947   +
1176948   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1176949   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1176950   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1176951   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1176952   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1176953   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1176954   +
1176955   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1176956   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1176957   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1176958   +
1176959   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1176960   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1176961   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1176962   +
1176963   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1176964   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1176965   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1176966   +
1176967   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1176968   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1176969   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1176970   +
1176971   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1176972   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1176973   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1176974   +
1176975   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1176976   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1176977   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1176978   +
1176979   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1176980   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1176981   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1176982   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1176983   +
1176984   +REG11DR1:
1176985   +
1176986   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Residuals;
1176987   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1176988   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1176989   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1176990   +end;
MPRINT(EM_DIAGRAM):   end;
1176991   +else do;
MPRINT(EM_DIAGRAM):   else do;
1176992   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1176993   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1176994   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1176995   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1176996   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1176997   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1176998   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1176999   +   end;
MPRINT(EM_DIAGRAM):   end;
1177000   +end;
MPRINT(EM_DIAGRAM):   end;
1177001   +
1177002   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1177003   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1177004   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1177005   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1177006   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1177007   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1177008   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1177009   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1177010   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1177011   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1177012   +end;
MPRINT(EM_DIAGRAM):   end;
1177013   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1177014   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1177015   +
1177016   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1177017   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1177018   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1177019   +* Renaming variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg11;
1177020   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177021   +* Renaming Posterior variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg11;
1177022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177023   +drop Reg11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar1;
1177024   +Reg11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar1 = P_DepVar1;
1177025   +drop Reg11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar0;
1177026   +Reg11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar0 = P_DepVar0;
1177027   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177028   +* Renaming _WARN_ variable for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg11;
1177029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177030   +length Reg11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg11_WARN_ $4;
1177031   +drop Reg11_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg11_WARN_;
1177032   +Reg11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg11_WARN_ = _WARN_;
1177033   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177034   +* Ensmbl24: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Average Posteriors of 7 models;
1177035   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177036   +P_DepVar1 = (
1177037   +Neural37_P_DepVar1 +
1177038   +Neural38_P_DepVar1 +
1177039   +Neural39_P_DepVar1 +
1177040   +Neural40_P_DepVar1 +
1177041   +Neural41_P_DepVar1 +
1177042   +Neural36_P_DepVar1 +
1177043   +Reg11_P_DepVar1
1177044   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural37_P_DepVar1 + Neural38_P_DepVar1 + 
Neural39_P_DepVar1 + Neural40_P_DepVar1 + Neural41_P_DepVar1 + Neural36_P_DepVar1 + 
Reg11_P_DepVar1 )/7;
1177045   +P_DepVar0 = (
1177046   +Neural37_P_DepVar0 +
1177047   +Neural38_P_DepVar0 +
1177048   +Neural39_P_DepVar0 +
1177049   +Neural40_P_DepVar0 +
1177050   +Neural41_P_DepVar0 +
1177051   +Neural36_P_DepVar0 +
1177052   +Reg11_P_DepVar0
1177053   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural37_P_DepVar0 + Neural38_P_DepVar0 + 
Neural39_P_DepVar0 + Neural40_P_DepVar0 + Neural41_P_DepVar0 + Neural36_P_DepVar0 + 
Reg11_P_DepVar0 )/7;
1177054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177055   +* Ensmbl24: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Classification Vars;
1177056   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177057   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1177058   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1177059   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1177060   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1177061   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1177062   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1177063   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1177064   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1177065   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1177066   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1177067   +end;
MPRINT(EM_DIAGRAM):   end;
1177068   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1177069   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1177070   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1177071   +end;
MPRINT(EM_DIAGRAM):   end;
1177072   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1177073   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177074   +* Ensmbl24: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Producing Unformatted variable;
1177075   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177076   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1177077   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1177078   +else
1177079   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1177080   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177081   +* Ensmbl24: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing _WARN_ Variable;
1177082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177083   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1177084   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1177085   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1177086   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1177086  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1177087   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1177087  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1177088   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1177088  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1177089   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1177089  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1177090   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1177090  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1177091   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1177091  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1177092   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1177092  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1177093   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1177093  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1177094   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1177094  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1177095   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1177095  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1177096   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1177096  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1177097   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1177097  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1177098   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1177098  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1177099   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1177099  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1177100   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1177100  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1177101   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1177101  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1177102   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1177102  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1177103   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1177103  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1177104   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1177104  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1177105   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1177105  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1177106   +if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1177106  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1177107   +if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1177107  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1177108   +if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1177108  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1177109   +if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1177109  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1177110   +if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1177111   +if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1177112   +if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1177113   +if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1177114   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177115   +* Ensmbl24: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Residual Vars;
1177116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177117   +if
1177118   +F_DepVar NE '1'
1177119   +AND F_DepVar NE '0'
1177120   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1177121   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1177122   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1177123   +end;
MPRINT(EM_DIAGRAM):   end;
1177124   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177125   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1177126   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1177127   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1177128   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1177129   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1177130   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1177131   +END;
MPRINT(EM_DIAGRAM):   END;
1177132   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1177133    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL24_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL37_TRAIN.VIEW used (Total process time):
      real time           0.15 seconds
      cpu time            0.15 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1177134    quit;
1177135    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1177136    filename emflow
1177136  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring NEURAL37_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177137    *------------------------------------------------------------*;
1177138    * Ensmbl24: Scoring NEURAL37_VALIDATE data;
1177139    *------------------------------------------------------------*;
1177140    data EMWS8.Ensmbl24_VALIDATE
1177141    / view=EMWS8.Ensmbl24_VALIDATE
1177142    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_VALIDATE / view=EMWS8.Ensmbl24_VALIDATE ;
1177143    set EMWS8.Neural37_VALIDATE
1177144    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural37_VALIDATE ;
1177145    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\EMFLOWSCORE.sas.
1177146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177147   +* Ensmbl24: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Combine model for DepVar;
1177148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177149   +* Ensmbl24: Scoring Code of model 1 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 1 of 7;
1177150   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177152   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1177153   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1177154   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1177155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177156   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177157   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1177158   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1177159   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1177160   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177161   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177162   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1177163   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1177164   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1177165   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177167   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1177168   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1177169   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1177170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177171   +
1177172   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1177173   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1177173  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1177174   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1177175   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1177176   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1177177   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1177178   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1177179   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177180   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1177181   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1177182   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1177183   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177185   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1177186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177187   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1177188   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1177189   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1177190   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177191   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1177192   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1177193   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1177194   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177195   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177196   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1177197   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1177198   +* NODE: Meta3;
MPRINT(EM_DIAGRAM):   * NODE: Meta3;
1177199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177201   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1177202   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1177203   +* NODE: Neural37;
MPRINT(EM_DIAGRAM):   * NODE: Neural37;
1177204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177205   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1177206   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1177207   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1177208   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1177209   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1177210   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1177211   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1177212   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1177213   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1177214   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1177215   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1177216   +LENGTH _WARN_ $4
1177217   +      F_DepVar  $ 12
1177218   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1177219   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1177220   +
1177221   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1177222   +
1177223   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1177224   +
1177225   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1177226   +
1177227   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1177228   +
1177229   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1177230   +
1177231   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1177232   +
1177233   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1177234   +
1177235   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1177236   +
1177237   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1177238   +
1177239   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1177240   +
1177241   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1177242   +
1177243   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1177244   +
1177245   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1177246   +
1177247   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1177248   +
1177249   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1177250   +
1177251   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1177252   +
1177253   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1177254   +
1177255   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1177256   +
1177257   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1177258   +
1177259   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1177260   +
1177261   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1177262   +
1177263   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1177264   +
1177265   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1177266   +
1177267   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1177268   +
1177269   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1177270   +
1177271   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1177272   +
1177273   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1177274   +
1177275   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1177276   +
1177277   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1177278   +
1177279   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1177280   +
1177281   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1177282   +
1177283   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1177284   +
1177285   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1177286   +
1177287   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1177288   +
1177289   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1177290   +
1177291   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1177292   +
1177293   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1177294   +
1177295   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1177296   +
1177297   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1177298   +
1177299   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1177300   +
1177301   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1177302   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1177303   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1177304   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1177305   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177306   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177307   +end;
MPRINT(EM_DIAGRAM):   end;
1177308   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177309   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177310   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1177311   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177312   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177313   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1177314   +   end;
MPRINT(EM_DIAGRAM):   end;
1177315   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177316   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1177317   +   end;
MPRINT(EM_DIAGRAM):   end;
1177318   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177319   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1177320   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177321   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177322   +   end;
MPRINT(EM_DIAGRAM):   end;
1177323   +end;
MPRINT(EM_DIAGRAM):   end;
1177324   +
1177325   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1177326   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1177327   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1177328   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1177329   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177330   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177331   +end;
MPRINT(EM_DIAGRAM):   end;
1177332   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177333   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177334   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1177335   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177336   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177337   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1177338   +   end;
MPRINT(EM_DIAGRAM):   end;
1177339   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177340   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1177341   +   end;
MPRINT(EM_DIAGRAM):   end;
1177342   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177343   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1177344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177346   +   end;
MPRINT(EM_DIAGRAM):   end;
1177347   +end;
MPRINT(EM_DIAGRAM):   end;
1177348   +
1177349   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1177350   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1177351   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1177352   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1177353   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177354   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177355   +end;
MPRINT(EM_DIAGRAM):   end;
1177356   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177357   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177358   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1177359   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177360   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177361   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1177362   +   end;
MPRINT(EM_DIAGRAM):   end;
1177363   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177364   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1177365   +   end;
MPRINT(EM_DIAGRAM):   end;
1177366   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177367   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1177368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177370   +   end;
MPRINT(EM_DIAGRAM):   end;
1177371   +end;
MPRINT(EM_DIAGRAM):   end;
1177372   +
1177373   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1177374   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1177375   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1177376   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1177377   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177378   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177379   +end;
MPRINT(EM_DIAGRAM):   end;
1177380   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177381   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177382   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1177383   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177384   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177385   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1177386   +   end;
MPRINT(EM_DIAGRAM):   end;
1177387   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177388   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1177389   +   end;
MPRINT(EM_DIAGRAM):   end;
1177390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177391   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1177392   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177393   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177394   +   end;
MPRINT(EM_DIAGRAM):   end;
1177395   +end;
MPRINT(EM_DIAGRAM):   end;
1177396   +
1177397   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1177398   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1177399   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1177400   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1177401   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177402   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177403   +end;
MPRINT(EM_DIAGRAM):   end;
1177404   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177405   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177406   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1177407   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177408   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177409   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1177410   +   end;
MPRINT(EM_DIAGRAM):   end;
1177411   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177412   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1177413   +   end;
MPRINT(EM_DIAGRAM):   end;
1177414   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177415   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1177416   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177417   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177418   +   end;
MPRINT(EM_DIAGRAM):   end;
1177419   +end;
MPRINT(EM_DIAGRAM):   end;
1177420   +
1177421   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1177422   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1177423   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1177424   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1177425   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177426   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177427   +end;
MPRINT(EM_DIAGRAM):   end;
1177428   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177429   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177430   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1177431   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177432   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177433   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1177434   +   end;
MPRINT(EM_DIAGRAM):   end;
1177435   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177436   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1177437   +   end;
MPRINT(EM_DIAGRAM):   end;
1177438   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177439   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1177440   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177441   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177442   +   end;
MPRINT(EM_DIAGRAM):   end;
1177443   +end;
MPRINT(EM_DIAGRAM):   end;
1177444   +
1177445   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1177446   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1177447   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1177448   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1177449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177451   +end;
MPRINT(EM_DIAGRAM):   end;
1177452   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177453   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177454   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1177455   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177456   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1177457   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1177458   +   end;
MPRINT(EM_DIAGRAM):   end;
1177459   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1177460   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1177461   +   end;
MPRINT(EM_DIAGRAM):   end;
1177462   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177463   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1177464   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177465   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177466   +   end;
MPRINT(EM_DIAGRAM):   end;
1177467   +end;
MPRINT(EM_DIAGRAM):   end;
1177468   +
1177469   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1177470   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1177471   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1177472   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1177473   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1177474   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1177475   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1177476   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1177477   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1177478   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1177479   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1177480   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1177481   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177482   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177483   +end;
MPRINT(EM_DIAGRAM):   end;
1177484   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177485   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1177486   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1177487   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177488   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1177489   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1177490   +   end;
MPRINT(EM_DIAGRAM):   end;
1177491   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1177492   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1177493   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1177494   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1177495   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1177496   +   end;
MPRINT(EM_DIAGRAM):   end;
1177497   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1177498   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1177499   +   end;
MPRINT(EM_DIAGRAM):   end;
1177500   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1177501   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1177502   +   end;
MPRINT(EM_DIAGRAM):   end;
1177503   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1177504   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1177505   +   end;
MPRINT(EM_DIAGRAM):   end;
1177506   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177507   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1177508   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1177509   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1177510   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1177511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177513   +   end;
MPRINT(EM_DIAGRAM):   end;
1177514   +end;
MPRINT(EM_DIAGRAM):   end;
1177515   +
1177516   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1177517   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1177518   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1177519   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1177520   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1177521   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1177522   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1177523   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1177524   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1177525   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1177526   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1177527   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1177528   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1177529   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177530   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177531   +end;
MPRINT(EM_DIAGRAM):   end;
1177532   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177533   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1177534   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1177535   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177536   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1177537   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1177538   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1177539   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1177540   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1177541   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1177542   +         end;
MPRINT(EM_DIAGRAM):   end;
1177543   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1177544   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1177545   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1177546   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1177547   +            end;
MPRINT(EM_DIAGRAM):   end;
1177548   +         end;
MPRINT(EM_DIAGRAM):   end;
1177549   +      end;
MPRINT(EM_DIAGRAM):   end;
1177550   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1177551   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1177552   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1177553   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1177554   +         end;
MPRINT(EM_DIAGRAM):   end;
1177555   +      end;
MPRINT(EM_DIAGRAM):   end;
1177556   +   end;
MPRINT(EM_DIAGRAM):   end;
1177557   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177558   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1177559   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1177560   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1177561   +      end;
MPRINT(EM_DIAGRAM):   end;
1177562   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1177563   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1177564   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1177565   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1177566   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1177567   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1177568   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1177569   +         end;
MPRINT(EM_DIAGRAM):   end;
1177570   +      end;
MPRINT(EM_DIAGRAM):   end;
1177571   +   end;
MPRINT(EM_DIAGRAM):   end;
1177572   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1177573   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1177574   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1177575   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1177576   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1177577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177579   +   end;
MPRINT(EM_DIAGRAM):   end;
1177580   +end;
MPRINT(EM_DIAGRAM):   end;
1177581   +
1177582   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177583   +*** Checking missing input Interval
1177584   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1177585   +
1177586   +IF NMISS(
1177587   +   AcceptedCmpTotal ,
1177588   +   Age ,
1177589   +   Frq ,
1177590   +   Income ,
1177591   +   Kidhome ,
1177592   +   MntFishProducts ,
1177593   +   MntFruits ,
1177594   +   MntGoldProds ,
1177595   +   MntSweetProducts ,
1177596   +   MonthsAsCustomer ,
1177597   +   NumDealsPurchases ,
1177598   +   NumWebVisitsMonth ,
1177599   +   RFMstat ,
1177600   +   RMntFrq ,
1177601   +   Recency ,
1177602   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1177603   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1177604   +
1177605   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177606   +END;
MPRINT(EM_DIAGRAM):   END;
1177607   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177608   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1177609   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177610   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1177611   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1177612   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1177613   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1177614   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1177615   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1177616   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1177617   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1177618   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1177619   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1177620   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1177621   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1177622   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1177623   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1177624   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1177625   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1177626   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1177627   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1177628   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1177629   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1177630   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1177631   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1177632   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1177633   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1177634   +END;
MPRINT(EM_DIAGRAM):   END;
1177635   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1177636   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1177637   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1177638   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1177639   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1177640   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1177641   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1177642   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1177643   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1177644   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1177645   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1177646   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1177647   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1177648   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1177649   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1177650   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1177651   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1177652   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1177653   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1177654   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1177655   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1177656   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1177657   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1177658   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1177659   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1177660   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1177661   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1177662   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1177663   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1177664   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1177665   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1177666   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1177667   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1177668   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1177669   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1177670   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1177671   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1177672   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1177673   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1177674   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1177675   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1177676   +END;
MPRINT(EM_DIAGRAM):   END;
1177677   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177678   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1177679   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177680   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177681   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1177682   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177684   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1177685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177686   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1177687   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1177688   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1177689   +        S_Income  +     0.21434017685167 * S_Kidhome
1177690   +          +    -0.00245095061163 * S_MntFishProducts
1177691   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1177692   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1177693   +          +     -0.0436897985886 * S_MonthsAsCustomer
1177694   +          +    -0.11066147452589 * S_NumDealsPurchases
1177695   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1177696   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1177697   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1177698   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1177699   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1177700   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1177701   +        S_Income  +    -0.34676303560555 * S_Kidhome
1177702   +          +    -0.19666313381749 * S_MntFishProducts
1177703   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1177704   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1177705   +          +     0.11921399006499 * S_MonthsAsCustomer
1177706   +          +    -0.67623098057964 * S_NumDealsPurchases
1177707   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1177708   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1177709   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1177710   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1177711   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1177712   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1177713   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1177714   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1177715   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1177716   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1177717   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1177718   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1177719   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1177720   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1177721   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1177722   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1177723   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1177724   +          +    -0.09599098826432 * Marital_StatusDivorced
1177725   +          +     0.29380773989654 * Marital_StatusMarried
1177726   +          +    -0.24344588832351 * Marital_StatusSingle
1177727   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1177728   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1177729   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1177730   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1177731   +          +    -0.18210246138549 * Marital_StatusDivorced
1177732   +          +    -0.33707503901978 * Marital_StatusMarried
1177733   +          +     0.45975144433549 * Marital_StatusSingle
1177734   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1177735   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1177736   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1177737   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1177738   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1177739   +END;
MPRINT(EM_DIAGRAM):   END;
1177740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1177741   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1177742   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1177743   +END;
MPRINT(EM_DIAGRAM):   END;
1177744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177745   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1177746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177747   +
1177748   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1177749   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1177750   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1177751   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1177752   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1177753   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177754   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1177755   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1177756   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1177757   +end;
MPRINT(EM_DIAGRAM):   end;
1177758   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177759   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1177760   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1177761   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1177762   +   end;
MPRINT(EM_DIAGRAM):   end;
1177763   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1177764   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1177765   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1177766   +   end;
MPRINT(EM_DIAGRAM):   end;
1177767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177768   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1177769   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1177770   +   end;
MPRINT(EM_DIAGRAM):   end;
1177771   +end;
MPRINT(EM_DIAGRAM):   end;
1177772   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1177773   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1177774   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1177775   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1177776   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1177777   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1177778   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1177779   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1177780   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1177781   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1177782   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1177783   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1177784   +END;
MPRINT(EM_DIAGRAM):   END;
1177785   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1177786   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1177787   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1177788   +END;
MPRINT(EM_DIAGRAM):   END;
1177789   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1177790   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1177791   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1177792   +END;
MPRINT(EM_DIAGRAM):   END;
1177793   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1177794   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1177795   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1177796   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1177797   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1177798   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1177799   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1177800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177801   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1177802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1177803   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1177804   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1177805   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1177806   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1177807   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1177808   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1177809   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1177810   +END;
MPRINT(EM_DIAGRAM):   END;
1177811   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1177812   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1177813   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1177814   +drop
1177815   +H11
1177816   +H12
1177817   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1177818   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1177819   +* Renaming variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural37;
1177820   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177821   +* Renaming Posterior variables for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural37;
1177822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177823   +drop Neural37_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar1;
1177824   +Neural37_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar1 = P_DepVar1;
1177825   +drop Neural37_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural37_P_DepVar0;
1177826   +Neural37_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural37_P_DepVar0 = P_DepVar0;
1177827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177828   +* Renaming _WARN_ variable for Neural37;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural37;
1177829   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177830   +length Neural37_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural37_WARN_ $4;
1177831   +drop Neural37_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural37_WARN_;
1177832   +Neural37_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural37_WARN_ = _WARN_;
1177833   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177834   +* Ensmbl24: Scoring Code of model 2 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 2 of 7;
1177835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177837   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1177838   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1177839   +* NODE: Neural38;
MPRINT(EM_DIAGRAM):   * NODE: Neural38;
1177840   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1177841   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1177842   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1177843   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1177844   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1177845   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1177846   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1177847   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1177848   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1177849   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1177850   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1177851   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1177852   +LENGTH _WARN_ $4
1177853   +      F_DepVar  $ 12
1177854   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1177855   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1177856   +
1177857   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1177858   +
1177859   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1177860   +
1177861   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1177862   +
1177863   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1177864   +
1177865   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1177866   +
1177867   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1177868   +
1177869   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1177870   +
1177871   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1177872   +
1177873   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1177874   +
1177875   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1177876   +
1177877   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1177878   +
1177879   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1177880   +
1177881   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1177882   +
1177883   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1177884   +
1177885   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1177886   +
1177887   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1177888   +
1177889   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1177890   +
1177891   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1177892   +
1177893   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1177894   +
1177895   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1177896   +
1177897   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1177898   +
1177899   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1177900   +
1177901   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1177902   +
1177903   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1177904   +
1177905   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1177906   +
1177907   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1177908   +
1177909   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1177910   +
1177911   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1177912   +
1177913   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1177914   +
1177915   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1177916   +
1177917   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1177918   +
1177919   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1177920   +
1177921   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1177922   +
1177923   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1177924   +
1177925   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1177926   +
1177927   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1177928   +
1177929   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1177930   +
1177931   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1177932   +
1177933   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1177934   +
1177935   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1177936   +
1177937   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1177938   +
1177939   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1177940   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1177941   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1177942   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1177943   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177944   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177945   +end;
MPRINT(EM_DIAGRAM):   end;
1177946   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177947   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177948   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1177949   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177950   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177951   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1177952   +   end;
MPRINT(EM_DIAGRAM):   end;
1177953   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177954   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1177955   +   end;
MPRINT(EM_DIAGRAM):   end;
1177956   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177957   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1177958   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177959   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177960   +   end;
MPRINT(EM_DIAGRAM):   end;
1177961   +end;
MPRINT(EM_DIAGRAM):   end;
1177962   +
1177963   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1177964   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1177965   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1177966   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1177967   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177968   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177969   +end;
MPRINT(EM_DIAGRAM):   end;
1177970   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177971   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177972   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1177973   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177974   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177975   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1177976   +   end;
MPRINT(EM_DIAGRAM):   end;
1177977   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1177978   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1177979   +   end;
MPRINT(EM_DIAGRAM):   end;
1177980   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1177981   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1177982   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1177983   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177984   +   end;
MPRINT(EM_DIAGRAM):   end;
1177985   +end;
MPRINT(EM_DIAGRAM):   end;
1177986   +
1177987   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1177988   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1177989   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1177990   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1177991   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1177992   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1177993   +end;
MPRINT(EM_DIAGRAM):   end;
1177994   +else do;
MPRINT(EM_DIAGRAM):   else do;
1177995   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1177996   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1177997   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1177998   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1177999   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1178000   +   end;
MPRINT(EM_DIAGRAM):   end;
1178001   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178002   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1178003   +   end;
MPRINT(EM_DIAGRAM):   end;
1178004   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178005   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1178006   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178007   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178008   +   end;
MPRINT(EM_DIAGRAM):   end;
1178009   +end;
MPRINT(EM_DIAGRAM):   end;
1178010   +
1178011   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1178012   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1178013   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1178014   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1178015   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178017   +end;
MPRINT(EM_DIAGRAM):   end;
1178018   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178019   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178020   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1178021   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178022   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178023   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1178024   +   end;
MPRINT(EM_DIAGRAM):   end;
1178025   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178026   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1178027   +   end;
MPRINT(EM_DIAGRAM):   end;
1178028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178029   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1178030   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178031   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178032   +   end;
MPRINT(EM_DIAGRAM):   end;
1178033   +end;
MPRINT(EM_DIAGRAM):   end;
1178034   +
1178035   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1178036   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1178037   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1178038   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1178039   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178040   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178041   +end;
MPRINT(EM_DIAGRAM):   end;
1178042   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178043   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178044   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1178045   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178046   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178047   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1178048   +   end;
MPRINT(EM_DIAGRAM):   end;
1178049   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178050   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1178051   +   end;
MPRINT(EM_DIAGRAM):   end;
1178052   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178053   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1178054   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178055   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178056   +   end;
MPRINT(EM_DIAGRAM):   end;
1178057   +end;
MPRINT(EM_DIAGRAM):   end;
1178058   +
1178059   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1178060   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1178061   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1178062   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1178063   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178064   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178065   +end;
MPRINT(EM_DIAGRAM):   end;
1178066   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178067   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178068   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1178069   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178070   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178071   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1178072   +   end;
MPRINT(EM_DIAGRAM):   end;
1178073   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178074   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1178075   +   end;
MPRINT(EM_DIAGRAM):   end;
1178076   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178077   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1178078   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178079   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178080   +   end;
MPRINT(EM_DIAGRAM):   end;
1178081   +end;
MPRINT(EM_DIAGRAM):   end;
1178082   +
1178083   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1178084   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1178085   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1178086   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1178087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178089   +end;
MPRINT(EM_DIAGRAM):   end;
1178090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178091   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178092   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1178093   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178094   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1178095   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1178096   +   end;
MPRINT(EM_DIAGRAM):   end;
1178097   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1178098   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1178099   +   end;
MPRINT(EM_DIAGRAM):   end;
1178100   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178101   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1178102   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178103   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178104   +   end;
MPRINT(EM_DIAGRAM):   end;
1178105   +end;
MPRINT(EM_DIAGRAM):   end;
1178106   +
1178107   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1178108   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1178109   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1178110   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1178111   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1178112   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1178113   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1178114   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1178115   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1178116   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1178117   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1178118   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1178119   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178120   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178121   +end;
MPRINT(EM_DIAGRAM):   end;
1178122   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178123   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1178124   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1178125   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178126   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1178127   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1178128   +   end;
MPRINT(EM_DIAGRAM):   end;
1178129   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1178130   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1178131   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1178132   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1178133   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1178134   +   end;
MPRINT(EM_DIAGRAM):   end;
1178135   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1178136   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1178137   +   end;
MPRINT(EM_DIAGRAM):   end;
1178138   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1178139   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1178140   +   end;
MPRINT(EM_DIAGRAM):   end;
1178141   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1178142   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1178143   +   end;
MPRINT(EM_DIAGRAM):   end;
1178144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178145   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1178146   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1178147   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1178148   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1178149   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178150   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178151   +   end;
MPRINT(EM_DIAGRAM):   end;
1178152   +end;
MPRINT(EM_DIAGRAM):   end;
1178153   +
1178154   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1178155   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1178156   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1178157   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1178158   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1178159   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1178160   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1178161   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1178162   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1178163   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1178164   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1178165   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1178166   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1178167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178169   +end;
MPRINT(EM_DIAGRAM):   end;
1178170   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178171   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1178172   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1178173   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178174   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1178175   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1178176   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1178177   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1178178   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1178179   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178180   +         end;
MPRINT(EM_DIAGRAM):   end;
1178181   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1178182   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1178183   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1178184   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178185   +            end;
MPRINT(EM_DIAGRAM):   end;
1178186   +         end;
MPRINT(EM_DIAGRAM):   end;
1178187   +      end;
MPRINT(EM_DIAGRAM):   end;
1178188   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1178189   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1178190   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1178191   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178192   +         end;
MPRINT(EM_DIAGRAM):   end;
1178193   +      end;
MPRINT(EM_DIAGRAM):   end;
1178194   +   end;
MPRINT(EM_DIAGRAM):   end;
1178195   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178196   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1178197   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1178198   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178199   +      end;
MPRINT(EM_DIAGRAM):   end;
1178200   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1178201   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1178202   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1178203   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1178204   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1178205   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1178206   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178207   +         end;
MPRINT(EM_DIAGRAM):   end;
1178208   +      end;
MPRINT(EM_DIAGRAM):   end;
1178209   +   end;
MPRINT(EM_DIAGRAM):   end;
1178210   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1178211   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1178212   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1178213   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1178214   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1178215   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178216   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178217   +   end;
MPRINT(EM_DIAGRAM):   end;
1178218   +end;
MPRINT(EM_DIAGRAM):   end;
1178219   +
1178220   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178221   +*** Checking missing input Interval
1178222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1178223   +
1178224   +IF NMISS(
1178225   +   AcceptedCmpTotal ,
1178226   +   Age ,
1178227   +   Frq ,
1178228   +   Income ,
1178229   +   Kidhome ,
1178230   +   MntFishProducts ,
1178231   +   MntFruits ,
1178232   +   MntGoldProds ,
1178233   +   MntSweetProducts ,
1178234   +   MonthsAsCustomer ,
1178235   +   NumDealsPurchases ,
1178236   +   NumWebVisitsMonth ,
1178237   +   RFMstat ,
1178238   +   RMntFrq ,
1178239   +   Recency ,
1178240   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1178241   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1178242   +
1178243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178244   +END;
MPRINT(EM_DIAGRAM):   END;
1178245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178246   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1178247   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178248   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1178249   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1178250   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1178251   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1178252   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1178253   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1178254   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1178255   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1178256   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1178257   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1178258   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1178259   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1178260   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1178261   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1178262   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1178263   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1178264   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1178265   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1178266   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1178267   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1178268   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1178269   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1178270   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1178271   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1178272   +END;
MPRINT(EM_DIAGRAM):   END;
1178273   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1178274   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1178275   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1178276   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1178277   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1178278   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1178279   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1178280   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1178281   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1178282   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1178283   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1178284   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1178285   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1178286   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1178287   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1178288   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1178289   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1178290   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1178291   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1178292   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1178293   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1178294   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1178295   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1178296   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1178297   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1178298   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1178299   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1178300   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1178301   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1178302   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1178303   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1178304   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1178305   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1178306   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1178307   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1178308   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1178309   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1178310   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1178311   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1178312   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1178313   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1178314   +END;
MPRINT(EM_DIAGRAM):   END;
1178315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178316   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1178317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178319   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1178320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178322   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1178323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178324   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1178325   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1178326   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1178327   +        S_Income  +    -0.29829037747286 * S_Kidhome
1178328   +          +    -0.18720823453547 * S_MntFishProducts
1178329   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1178330   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1178331   +          +    -0.06646294977493 * S_MonthsAsCustomer
1178332   +          +    -0.37026551859537 * S_NumDealsPurchases
1178333   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1178334   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1178335   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1178336   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1178337   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1178338   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1178339   +        S_Income  +    -0.83201267605135 * S_Kidhome
1178340   +          +    -0.09483355610222 * S_MntFishProducts
1178341   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1178342   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1178343   +          +     0.36008195182034 * S_MonthsAsCustomer
1178344   +          +    -0.13663022832818 * S_NumDealsPurchases
1178345   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1178346   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1178347   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1178348   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1178349   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1178350   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1178351   +        S_Income  +     0.25780281448124 * S_Kidhome
1178352   +          +     0.04440164182166 * S_MntFishProducts
1178353   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1178354   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1178355   +          +     0.11601256317603 * S_MonthsAsCustomer
1178356   +          +    -0.06382091961731 * S_NumDealsPurchases
1178357   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1178358   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1178359   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1178360   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1178361   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1178362   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1178363   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1178364   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1178365   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1178366   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1178367   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1178368   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1178369   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1178370   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1178371   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1178372   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1178373   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1178374   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1178375   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1178376   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1178377   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1178378   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1178379   +          +     0.18754186259114 * Marital_StatusDivorced
1178380   +          +    -0.11988223819284 * Marital_StatusMarried
1178381   +          +    -0.02283707816223 * Marital_StatusSingle
1178382   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1178383   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1178384   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1178385   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1178386   +          +    -0.28983318463941 * Marital_StatusDivorced
1178387   +          +    -0.74851149560881 * Marital_StatusMarried
1178388   +          +      0.7618336919202 * Marital_StatusSingle
1178389   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1178390   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1178391   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1178392   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1178393   +          +    -0.33639004627791 * Marital_StatusDivorced
1178394   +          +     0.12327415586833 * Marital_StatusMarried
1178395   +          +      0.0060971946845 * Marital_StatusSingle
1178396   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1178397   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1178398   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1178399   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1178400   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1178401   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1178402   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1178403   +END;
MPRINT(EM_DIAGRAM):   END;
1178404   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1178405   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1178406   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1178407   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1178408   +END;
MPRINT(EM_DIAGRAM):   END;
1178409   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178410   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1178411   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178412   +
1178413   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1178414   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1178415   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1178416   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1178417   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1178418   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178419   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1178420   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1178421   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1178422   +end;
MPRINT(EM_DIAGRAM):   end;
1178423   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178424   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1178425   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1178426   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1178427   +   end;
MPRINT(EM_DIAGRAM):   end;
1178428   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1178429   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1178430   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1178431   +   end;
MPRINT(EM_DIAGRAM):   end;
1178432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178433   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1178434   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1178435   +   end;
MPRINT(EM_DIAGRAM):   end;
1178436   +end;
MPRINT(EM_DIAGRAM):   end;
1178437   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1178438   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1178439   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1178440   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1178441   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1178442   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1178443   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1178444   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1178445   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1178446   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1178447   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1178448   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1178449   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1178450   +END;
MPRINT(EM_DIAGRAM):   END;
1178451   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1178452   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1178453   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1178454   +END;
MPRINT(EM_DIAGRAM):   END;
1178455   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1178456   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1178457   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1178458   +END;
MPRINT(EM_DIAGRAM):   END;
1178459   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1178460   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1178461   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1178462   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1178463   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1178464   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1178465   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1178466   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178467   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1178468   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178469   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1178470   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1178471   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1178472   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1178473   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1178474   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1178475   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1178476   +END;
MPRINT(EM_DIAGRAM):   END;
1178477   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1178478   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1178479   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1178480   +drop
1178481   +H11
1178482   +H12
1178483   +H13
1178484   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1178485   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1178486   +* Renaming variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural38;
1178487   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178488   +* Renaming Posterior variables for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural38;
1178489   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178490   +drop Neural38_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar1;
1178491   +Neural38_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar1 = P_DepVar1;
1178492   +drop Neural38_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural38_P_DepVar0;
1178493   +Neural38_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural38_P_DepVar0 = P_DepVar0;
1178494   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178495   +* Renaming _WARN_ variable for Neural38;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural38;
1178496   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178497   +length Neural38_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural38_WARN_ $4;
1178498   +drop Neural38_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural38_WARN_;
1178499   +Neural38_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural38_WARN_ = _WARN_;
1178500   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178501   +* Ensmbl24: Scoring Code of model 3 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 3 of 7;
1178502   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178503   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178504   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1178505   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1178506   +* NODE: Neural39;
MPRINT(EM_DIAGRAM):   * NODE: Neural39;
1178507   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1178508   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1178509   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1178510   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1178511   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1178512   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1178513   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1178514   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1178515   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1178516   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1178517   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1178518   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1178519   +LENGTH _WARN_ $4
1178520   +      F_DepVar  $ 12
1178521   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1178522   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1178523   +
1178524   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1178525   +
1178526   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1178527   +
1178528   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1178529   +
1178530   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1178531   +
1178532   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1178533   +
1178534   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1178535   +
1178536   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1178537   +
1178538   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1178539   +
1178540   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1178541   +
1178542   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1178543   +
1178544   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1178545   +
1178546   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1178547   +
1178548   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1178549   +
1178550   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1178551   +
1178552   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1178553   +
1178554   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1178555   +
1178556   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1178557   +
1178558   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1178559   +
1178560   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1178561   +
1178562   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1178563   +
1178564   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1178565   +
1178566   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1178567   +
1178568   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1178569   +
1178570   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1178571   +
1178572   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1178573   +
1178574   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1178575   +
1178576   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1178577   +
1178578   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1178579   +
1178580   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1178581   +
1178582   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1178583   +
1178584   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1178585   +
1178586   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1178587   +
1178588   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1178589   +
1178590   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1178591   +
1178592   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1178593   +
1178594   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1178595   +
1178596   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1178597   +
1178598   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1178599   +
1178600   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1178601   +
1178602   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1178603   +
1178604   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1178605   +
1178606   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1178607   +
1178608   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1178609   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1178610   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1178611   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1178612   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178613   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178614   +end;
MPRINT(EM_DIAGRAM):   end;
1178615   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178616   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178617   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1178618   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178619   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178620   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1178621   +   end;
MPRINT(EM_DIAGRAM):   end;
1178622   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178623   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1178624   +   end;
MPRINT(EM_DIAGRAM):   end;
1178625   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178626   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1178627   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178628   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178629   +   end;
MPRINT(EM_DIAGRAM):   end;
1178630   +end;
MPRINT(EM_DIAGRAM):   end;
1178631   +
1178632   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1178633   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1178634   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1178635   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1178636   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178637   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178638   +end;
MPRINT(EM_DIAGRAM):   end;
1178639   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178640   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178641   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1178642   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178643   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178644   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1178645   +   end;
MPRINT(EM_DIAGRAM):   end;
1178646   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178647   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1178648   +   end;
MPRINT(EM_DIAGRAM):   end;
1178649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178650   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1178651   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178652   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178653   +   end;
MPRINT(EM_DIAGRAM):   end;
1178654   +end;
MPRINT(EM_DIAGRAM):   end;
1178655   +
1178656   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1178657   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1178658   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1178659   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1178660   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178661   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178662   +end;
MPRINT(EM_DIAGRAM):   end;
1178663   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178664   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178665   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1178666   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178667   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178668   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1178669   +   end;
MPRINT(EM_DIAGRAM):   end;
1178670   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178671   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1178672   +   end;
MPRINT(EM_DIAGRAM):   end;
1178673   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178674   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1178675   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178676   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178677   +   end;
MPRINT(EM_DIAGRAM):   end;
1178678   +end;
MPRINT(EM_DIAGRAM):   end;
1178679   +
1178680   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1178681   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1178682   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1178683   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1178684   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178685   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178686   +end;
MPRINT(EM_DIAGRAM):   end;
1178687   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178688   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178689   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1178690   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178691   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178692   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1178693   +   end;
MPRINT(EM_DIAGRAM):   end;
1178694   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178695   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1178696   +   end;
MPRINT(EM_DIAGRAM):   end;
1178697   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178698   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1178699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178701   +   end;
MPRINT(EM_DIAGRAM):   end;
1178702   +end;
MPRINT(EM_DIAGRAM):   end;
1178703   +
1178704   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1178705   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1178706   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1178707   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1178708   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178709   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178710   +end;
MPRINT(EM_DIAGRAM):   end;
1178711   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178712   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178713   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1178714   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178715   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178716   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1178717   +   end;
MPRINT(EM_DIAGRAM):   end;
1178718   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178719   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1178720   +   end;
MPRINT(EM_DIAGRAM):   end;
1178721   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178722   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1178723   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178724   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178725   +   end;
MPRINT(EM_DIAGRAM):   end;
1178726   +end;
MPRINT(EM_DIAGRAM):   end;
1178727   +
1178728   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1178729   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1178730   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1178731   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1178732   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178733   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178734   +end;
MPRINT(EM_DIAGRAM):   end;
1178735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178736   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178737   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1178738   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178739   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1178740   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1178741   +   end;
MPRINT(EM_DIAGRAM):   end;
1178742   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1178743   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1178744   +   end;
MPRINT(EM_DIAGRAM):   end;
1178745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178746   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1178747   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178748   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178749   +   end;
MPRINT(EM_DIAGRAM):   end;
1178750   +end;
MPRINT(EM_DIAGRAM):   end;
1178751   +
1178752   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1178753   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1178754   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1178755   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1178756   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178757   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178758   +end;
MPRINT(EM_DIAGRAM):   end;
1178759   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178760   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1178761   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1178762   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178763   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1178764   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1178765   +   end;
MPRINT(EM_DIAGRAM):   end;
1178766   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1178767   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1178768   +   end;
MPRINT(EM_DIAGRAM):   end;
1178769   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178770   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1178771   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178772   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178773   +   end;
MPRINT(EM_DIAGRAM):   end;
1178774   +end;
MPRINT(EM_DIAGRAM):   end;
1178775   +
1178776   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1178777   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1178778   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1178779   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1178780   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1178781   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1178782   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1178783   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1178784   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1178785   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1178786   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1178787   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1178788   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178789   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178790   +end;
MPRINT(EM_DIAGRAM):   end;
1178791   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178792   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1178793   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1178794   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178795   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1178796   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1178797   +   end;
MPRINT(EM_DIAGRAM):   end;
1178798   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1178799   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1178800   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1178801   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1178802   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1178803   +   end;
MPRINT(EM_DIAGRAM):   end;
1178804   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1178805   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1178806   +   end;
MPRINT(EM_DIAGRAM):   end;
1178807   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1178808   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1178809   +   end;
MPRINT(EM_DIAGRAM):   end;
1178810   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1178811   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1178812   +   end;
MPRINT(EM_DIAGRAM):   end;
1178813   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178814   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1178815   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1178816   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1178817   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1178818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178820   +   end;
MPRINT(EM_DIAGRAM):   end;
1178821   +end;
MPRINT(EM_DIAGRAM):   end;
1178822   +
1178823   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1178824   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1178825   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1178826   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1178827   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1178828   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1178829   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1178830   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1178831   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1178832   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1178833   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1178834   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1178835   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1178836   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1178837   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178838   +end;
MPRINT(EM_DIAGRAM):   end;
1178839   +else do;
MPRINT(EM_DIAGRAM):   else do;
1178840   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1178841   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1178842   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1178843   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1178844   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1178845   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1178846   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1178847   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1178848   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178849   +         end;
MPRINT(EM_DIAGRAM):   end;
1178850   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1178851   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1178852   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1178853   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178854   +            end;
MPRINT(EM_DIAGRAM):   end;
1178855   +         end;
MPRINT(EM_DIAGRAM):   end;
1178856   +      end;
MPRINT(EM_DIAGRAM):   end;
1178857   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1178858   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1178859   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1178860   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178861   +         end;
MPRINT(EM_DIAGRAM):   end;
1178862   +      end;
MPRINT(EM_DIAGRAM):   end;
1178863   +   end;
MPRINT(EM_DIAGRAM):   end;
1178864   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1178865   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1178866   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1178867   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178868   +      end;
MPRINT(EM_DIAGRAM):   end;
1178869   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1178870   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1178871   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1178872   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1178873   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1178874   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1178875   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1178876   +         end;
MPRINT(EM_DIAGRAM):   end;
1178877   +      end;
MPRINT(EM_DIAGRAM):   end;
1178878   +   end;
MPRINT(EM_DIAGRAM):   end;
1178879   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1178880   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1178881   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1178882   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1178883   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1178884   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1178885   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178886   +   end;
MPRINT(EM_DIAGRAM):   end;
1178887   +end;
MPRINT(EM_DIAGRAM):   end;
1178888   +
1178889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178890   +*** Checking missing input Interval
1178891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1178892   +
1178893   +IF NMISS(
1178894   +   AcceptedCmpTotal ,
1178895   +   Age ,
1178896   +   Frq ,
1178897   +   Income ,
1178898   +   Kidhome ,
1178899   +   MntFishProducts ,
1178900   +   MntFruits ,
1178901   +   MntGoldProds ,
1178902   +   MntSweetProducts ,
1178903   +   MonthsAsCustomer ,
1178904   +   NumDealsPurchases ,
1178905   +   NumWebVisitsMonth ,
1178906   +   RFMstat ,
1178907   +   RMntFrq ,
1178908   +   Recency ,
1178909   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1178910   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1178911   +
1178912   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1178913   +END;
MPRINT(EM_DIAGRAM):   END;
1178914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178915   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1178916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178917   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1178918   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1178919   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1178920   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1178921   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1178922   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1178923   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1178924   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1178925   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1178926   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1178927   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1178928   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1178929   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1178930   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1178931   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1178932   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1178933   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1178934   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1178935   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1178936   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1178937   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1178938   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1178939   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1178940   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1178941   +END;
MPRINT(EM_DIAGRAM):   END;
1178942   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
The SAS System

1178943   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1178944   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1178945   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1178946   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1178947   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1178948   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1178949   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1178950   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1178951   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1178952   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1178953   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1178954   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1178955   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1178956   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1178957   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1178958   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1178959   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1178960   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1178961   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1178962   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1178963   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1178964   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1178965   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1178966   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1178967   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1178968   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1178969   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1178970   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1178971   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1178972   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1178973   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1178974   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1178975   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1178976   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1178977   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1178978   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1178979   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1178980   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1178981   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1178982   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1178983   +END;
MPRINT(EM_DIAGRAM):   END;
1178984   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178985   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1178986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178987   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178988   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1178989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178990   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178991   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1178992   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1178993   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1178994   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1178995   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1178996   +        S_Income  +     0.25564250606874 * S_Kidhome
1178997   +          +    -0.02786629817134 * S_MntFishProducts
1178998   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1178999   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1179000   +          +    -0.29199173107007 * S_MonthsAsCustomer
1179001   +          +    -0.59759788962473 * S_NumDealsPurchases
1179002   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1179003   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1179004   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1179005   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1179006   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1179007   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1179008   +        S_Income  +     0.07328887474153 * S_Kidhome
1179009   +          +    -0.23284570213322 * S_MntFishProducts
1179010   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1179011   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1179012   +          +     0.29669594858185 * S_MonthsAsCustomer
1179013   +          +    -0.51220833966596 * S_NumDealsPurchases
1179014   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1179015   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1179016   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1179017   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1179018   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1179019   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1179020   +        S_Income  +    -0.68209910558389 * S_Kidhome
1179021   +          +     0.23366174254474 * S_MntFishProducts
1179022   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1179023   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1179024   +          +    -0.05759532204753 * S_MonthsAsCustomer
1179025   +          +    -0.30170163047261 * S_NumDealsPurchases
1179026   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1179027   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1179028   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1179029   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1179030   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1179031   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1179032   +        S_Income  +     0.67855138873039 * S_Kidhome
1179033   +          +    -0.05297743313476 * S_MntFishProducts
1179034   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1179035   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1179036   +          +    -0.15817861274553 * S_MonthsAsCustomer
1179037   +          +     0.25133066233725 * S_NumDealsPurchases
1179038   +          +     0.08802636187267 * S_NumWebVisitsMonth
1179039   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1179040   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1179041   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1179042   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1179043   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1179044   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1179045   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1179046   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1179047   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1179048   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1179049   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1179050   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1179051   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1179052   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1179053   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1179054   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1179055   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1179056   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1179057   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1179058   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1179059   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1179060   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1179061   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1179062   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1179063   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1179064   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1179065   +          +      0.0528075343138 * Marital_StatusDivorced
1179066   +          +    -0.08269844855231 * Marital_StatusMarried
1179067   +          +     0.43411839786169 * Marital_StatusSingle
1179068   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1179069   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1179070   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1179071   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1179072   +          +    -0.12842912869907 * Marital_StatusDivorced
1179073   +          +     0.11838814754642 * Marital_StatusMarried
1179074   +          +     0.01184261900927 * Marital_StatusSingle
1179075   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1179076   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1179077   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1179078   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1179079   +          +    -0.22110722201709 * Marital_StatusDivorced
1179080   +          +      0.1355339029843 * Marital_StatusMarried
1179081   +          +    -0.33157273596382 * Marital_StatusSingle
1179082   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1179083   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1179084   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1179085   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1179086   +          +    -0.21663247467797 * Marital_StatusDivorced
1179087   +          +     1.11468603898508 * Marital_StatusMarried
1179088   +          +    -0.84252388146943 * Marital_StatusSingle
1179089   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1179090   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1179091   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1179092   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1179093   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1179094   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1179095   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1179096   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1179097   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1179098   +END;
MPRINT(EM_DIAGRAM):   END;
1179099   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1179100   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1179101   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1179102   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1179103   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1179104   +END;
MPRINT(EM_DIAGRAM):   END;
1179105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179106   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1179107   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179108   +
1179109   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1179110   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1179111   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1179112   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1179113   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1179114   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179115   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1179116   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1179117   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1179118   +end;
MPRINT(EM_DIAGRAM):   end;
1179119   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179120   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1179121   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1179122   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1179123   +   end;
MPRINT(EM_DIAGRAM):   end;
1179124   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1179125   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1179126   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1179127   +   end;
MPRINT(EM_DIAGRAM):   end;
1179128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179129   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1179130   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1179131   +   end;
MPRINT(EM_DIAGRAM):   end;
1179132   +end;
MPRINT(EM_DIAGRAM):   end;
1179133   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1179134   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1179135   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1179136   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1179137   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1179138   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1179139   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1179140   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1179141   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1179142   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1179143   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1179144   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1179145   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1179146   +END;
MPRINT(EM_DIAGRAM):   END;
1179147   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1179148   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1179149   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1179150   +END;
MPRINT(EM_DIAGRAM):   END;
1179151   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1179152   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1179153   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1179154   +END;
MPRINT(EM_DIAGRAM):   END;
1179155   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1179156   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1179157   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1179158   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1179159   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1179160   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1179161   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1179162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179163   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1179164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179165   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1179166   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1179167   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1179168   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1179169   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1179170   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1179171   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1179172   +END;
MPRINT(EM_DIAGRAM):   END;
1179173   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1179174   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1179175   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1179176   +drop
1179177   +H11
1179178   +H12
1179179   +H13
1179180   +H14
1179181   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1179182   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1179183   +* Renaming variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural39;
1179184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179185   +* Renaming Posterior variables for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural39;
1179186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179187   +drop Neural39_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar1;
1179188   +Neural39_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar1 = P_DepVar1;
1179189   +drop Neural39_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural39_P_DepVar0;
1179190   +Neural39_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural39_P_DepVar0 = P_DepVar0;
1179191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179192   +* Renaming _WARN_ variable for Neural39;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural39;
1179193   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179194   +length Neural39_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural39_WARN_ $4;
1179195   +drop Neural39_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural39_WARN_;
1179196   +Neural39_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural39_WARN_ = _WARN_;
1179197   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179198   +* Ensmbl24: Scoring Code of model 4 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 4 of 7;
1179199   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179200   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179201   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1179202   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1179203   +* NODE: Neural40;
MPRINT(EM_DIAGRAM):   * NODE: Neural40;
1179204   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179205   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1179206   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1179207   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1179208   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1179209   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1179210   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1179211   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1179212   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1179213   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1179214   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1179215   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1179216   +LENGTH _WARN_ $4
1179217   +      F_DepVar  $ 12
1179218   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1179219   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1179220   +
1179221   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1179222   +
1179223   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1179224   +
1179225   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1179226   +
1179227   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1179228   +
1179229   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1179230   +
1179231   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1179232   +
1179233   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1179234   +
1179235   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1179236   +
1179237   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1179238   +
1179239   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1179240   +
1179241   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1179242   +
1179243   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1179244   +
1179245   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1179246   +
1179247   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1179248   +
1179249   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1179250   +
1179251   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1179252   +
1179253   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1179254   +
1179255   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1179256   +
1179257   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1179258   +
1179259   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1179260   +
1179261   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1179262   +
1179263   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1179264   +
1179265   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1179266   +
1179267   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1179268   +
1179269   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1179270   +
1179271   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1179272   +
1179273   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1179274   +
1179275   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1179276   +
1179277   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1179278   +
1179279   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1179280   +
1179281   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1179282   +
1179283   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1179284   +
1179285   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1179286   +
1179287   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1179288   +
1179289   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1179290   +
1179291   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1179292   +
1179293   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1179294   +
1179295   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1179296   +
1179297   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1179298   +
1179299   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1179300   +
1179301   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1179302   +
1179303   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1179304   +
1179305   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1179306   +
1179307   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1179308   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1179309   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1179310   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1179311   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179312   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179313   +end;
MPRINT(EM_DIAGRAM):   end;
1179314   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179315   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179316   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1179317   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179318   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1179319   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1179320   +   end;
MPRINT(EM_DIAGRAM):   end;
1179321   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1179322   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1179323   +   end;
MPRINT(EM_DIAGRAM):   end;
1179324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179325   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1179326   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179327   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179328   +   end;
MPRINT(EM_DIAGRAM):   end;
1179329   +end;
MPRINT(EM_DIAGRAM):   end;
1179330   +
1179331   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1179332   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1179333   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1179334   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1179335   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179336   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179337   +end;
MPRINT(EM_DIAGRAM):   end;
1179338   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179339   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179340   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1179341   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179342   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1179343   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1179344   +   end;
MPRINT(EM_DIAGRAM):   end;
1179345   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1179346   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1179347   +   end;
MPRINT(EM_DIAGRAM):   end;
1179348   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179349   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1179350   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179351   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179352   +   end;
MPRINT(EM_DIAGRAM):   end;
1179353   +end;
MPRINT(EM_DIAGRAM):   end;
1179354   +
1179355   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1179356   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1179357   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1179358   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1179359   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179360   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179361   +end;
MPRINT(EM_DIAGRAM):   end;
1179362   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179363   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179364   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1179365   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179366   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1179367   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1179368   +   end;
MPRINT(EM_DIAGRAM):   end;
1179369   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1179370   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1179371   +   end;
MPRINT(EM_DIAGRAM):   end;
1179372   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179373   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1179374   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179375   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179376   +   end;
MPRINT(EM_DIAGRAM):   end;
1179377   +end;
MPRINT(EM_DIAGRAM):   end;
1179378   +
1179379   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1179380   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1179381   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1179382   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1179383   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179384   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179385   +end;
MPRINT(EM_DIAGRAM):   end;
1179386   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179387   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179388   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1179389   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179390   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1179391   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1179392   +   end;
MPRINT(EM_DIAGRAM):   end;
1179393   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1179394   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1179395   +   end;
MPRINT(EM_DIAGRAM):   end;
1179396   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179397   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1179398   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179399   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179400   +   end;
MPRINT(EM_DIAGRAM):   end;
1179401   +end;
MPRINT(EM_DIAGRAM):   end;
1179402   +
1179403   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1179404   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1179405   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1179406   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1179407   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179408   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179409   +end;
MPRINT(EM_DIAGRAM):   end;
1179410   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179411   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179412   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1179413   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179414   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1179415   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1179416   +   end;
MPRINT(EM_DIAGRAM):   end;
1179417   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1179418   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1179419   +   end;
MPRINT(EM_DIAGRAM):   end;
1179420   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179421   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1179422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179424   +   end;
MPRINT(EM_DIAGRAM):   end;
1179425   +end;
MPRINT(EM_DIAGRAM):   end;
1179426   +
1179427   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1179428   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1179429   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1179430   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1179431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179433   +end;
MPRINT(EM_DIAGRAM):   end;
1179434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179436   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1179437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179438   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1179439   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1179440   +   end;
MPRINT(EM_DIAGRAM):   end;
1179441   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1179442   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1179443   +   end;
MPRINT(EM_DIAGRAM):   end;
1179444   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179445   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1179446   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179447   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179448   +   end;
MPRINT(EM_DIAGRAM):   end;
1179449   +end;
MPRINT(EM_DIAGRAM):   end;
1179450   +
1179451   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1179452   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1179453   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1179454   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1179455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179457   +end;
MPRINT(EM_DIAGRAM):   end;
1179458   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179459   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1179460   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1179461   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179462   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1179463   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1179464   +   end;
MPRINT(EM_DIAGRAM):   end;
1179465   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1179466   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1179467   +   end;
MPRINT(EM_DIAGRAM):   end;
1179468   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179469   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1179470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179472   +   end;
MPRINT(EM_DIAGRAM):   end;
1179473   +end;
MPRINT(EM_DIAGRAM):   end;
1179474   +
1179475   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1179476   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1179477   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1179478   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1179479   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1179480   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1179481   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1179482   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1179483   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1179484   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1179485   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1179486   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1179487   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179488   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179489   +end;
MPRINT(EM_DIAGRAM):   end;
1179490   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179491   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1179492   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1179493   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179494   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1179495   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1179496   +   end;
MPRINT(EM_DIAGRAM):   end;
1179497   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1179498   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1179499   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1179500   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1179501   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1179502   +   end;
MPRINT(EM_DIAGRAM):   end;
1179503   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1179504   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1179505   +   end;
MPRINT(EM_DIAGRAM):   end;
1179506   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1179507   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1179508   +   end;
MPRINT(EM_DIAGRAM):   end;
1179509   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1179510   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1179511   +   end;
MPRINT(EM_DIAGRAM):   end;
1179512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179513   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1179514   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1179515   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1179516   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1179517   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179518   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179519   +   end;
MPRINT(EM_DIAGRAM):   end;
1179520   +end;
MPRINT(EM_DIAGRAM):   end;
1179521   +
1179522   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1179523   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1179524   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1179525   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1179526   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1179527   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1179528   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1179529   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1179530   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1179531   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1179532   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1179533   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1179534   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1179535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1179536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179537   +end;
MPRINT(EM_DIAGRAM):   end;
1179538   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179539   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1179540   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1179541   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179542   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1179543   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1179544   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1179545   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1179546   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1179547   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1179548   +         end;
MPRINT(EM_DIAGRAM):   end;
1179549   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1179550   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1179551   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1179552   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1179553   +            end;
MPRINT(EM_DIAGRAM):   end;
1179554   +         end;
MPRINT(EM_DIAGRAM):   end;
1179555   +      end;
MPRINT(EM_DIAGRAM):   end;
1179556   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1179557   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1179558   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1179559   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1179560   +         end;
MPRINT(EM_DIAGRAM):   end;
1179561   +      end;
MPRINT(EM_DIAGRAM):   end;
1179562   +   end;
MPRINT(EM_DIAGRAM):   end;
1179563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179564   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1179565   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1179566   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1179567   +      end;
MPRINT(EM_DIAGRAM):   end;
1179568   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1179569   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1179570   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1179571   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1179572   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1179573   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1179574   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1179575   +         end;
MPRINT(EM_DIAGRAM):   end;
1179576   +      end;
MPRINT(EM_DIAGRAM):   end;
1179577   +   end;
MPRINT(EM_DIAGRAM):   end;
1179578   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1179579   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1179580   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1179581   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1179582   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1179583   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1179584   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179585   +   end;
MPRINT(EM_DIAGRAM):   end;
1179586   +end;
MPRINT(EM_DIAGRAM):   end;
1179587   +
1179588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179589   +*** Checking missing input Interval
1179590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1179591   +
1179592   +IF NMISS(
1179593   +   AcceptedCmpTotal ,
1179594   +   Age ,
1179595   +   Frq ,
1179596   +   Income ,
1179597   +   Kidhome ,
1179598   +   MntFishProducts ,
1179599   +   MntFruits ,
1179600   +   MntGoldProds ,
1179601   +   MntSweetProducts ,
1179602   +   MonthsAsCustomer ,
1179603   +   NumDealsPurchases ,
1179604   +   NumWebVisitsMonth ,
1179605   +   RFMstat ,
1179606   +   RMntFrq ,
1179607   +   Recency ,
1179608   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1179609   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1179610   +
1179611   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1179612   +END;
MPRINT(EM_DIAGRAM):   END;
1179613   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179614   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1179615   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179616   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1179617   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1179618   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1179619   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1179620   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1179621   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1179622   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1179623   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1179624   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1179625   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1179626   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1179627   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1179628   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1179629   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1179630   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1179631   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1179632   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1179633   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1179634   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1179635   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1179636   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1179637   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1179638   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1179639   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1179640   +END;
MPRINT(EM_DIAGRAM):   END;
1179641   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1179642   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1179643   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1179644   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1179645   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1179646   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1179647   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1179648   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1179649   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1179650   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1179651   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1179652   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1179653   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1179654   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1179655   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1179656   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1179657   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1179658   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1179659   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1179660   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1179661   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1179662   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1179663   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1179664   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1179665   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1179666   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1179667   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1179668   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1179669   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1179670   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1179671   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1179672   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1179673   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1179674   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1179675   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1179676   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1179677   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1179678   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1179679   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1179680   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1179681   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1179682   +END;
MPRINT(EM_DIAGRAM):   END;
1179683   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179684   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1179685   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179687   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1179688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179690   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1179691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179692   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1179693   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1179694   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1179695   +        S_Income  +     0.39869341630865 * S_Kidhome
1179696   +          +    -0.04263586382867 * S_MntFishProducts
1179697   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1179698   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1179699   +          +    -0.14308588367026 * S_MonthsAsCustomer
1179700   +          +    -0.01053346972758 * S_NumDealsPurchases
1179701   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1179702   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1179703   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1179704   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1179705   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1179706   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1179707   +        S_Income  +     0.31514301668626 * S_Kidhome
1179708   +          +    -0.05723808748191 * S_MntFishProducts
1179709   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1179710   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1179711   +          +    -0.48738730918684 * S_MonthsAsCustomer
1179712   +          +     0.31545795225489 * S_NumDealsPurchases
1179713   +          +     0.24686603252864 * S_NumWebVisitsMonth
1179714   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1179715   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1179716   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1179717   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1179718   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1179719   +        S_Income  +    -0.48452563006855 * S_Kidhome
1179720   +          +      0.1638851163007 * S_MntFishProducts
1179721   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1179722   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1179723   +          +    -0.09008316729574 * S_MonthsAsCustomer
1179724   +          +    -0.45452883452999 * S_NumDealsPurchases
1179725   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1179726   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1179727   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1179728   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1179729   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1179730   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1179731   +        S_Income  +    -0.62959343200613 * S_Kidhome
1179732   +          +    -0.08953561593231 * S_MntFishProducts
1179733   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1179734   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1179735   +          +    -0.04786752357029 * S_MonthsAsCustomer
1179736   +          +     0.01658790214447 * S_NumDealsPurchases
1179737   +          +     0.60508225698649 * S_NumWebVisitsMonth
1179738   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1179739   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1179740   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1179741   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1179742   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1179743   +        S_Income  +    -0.02417847760857 * S_Kidhome
1179744   +          +    -0.15499190740194 * S_MntFishProducts
1179745   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1179746   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1179747   +          +     0.03507116553703 * S_MonthsAsCustomer
1179748   +          +    -0.55190381693021 * S_NumDealsPurchases
1179749   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1179750   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1179751   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1179752   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1179753   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1179754   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1179755   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1179756   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1179757   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1179758   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1179759   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1179760   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1179761   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1179762   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1179763   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1179764   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1179765   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1179766   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1179767   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1179768   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1179769   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1179770   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1179771   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1179772   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1179773   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1179774   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1179775   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1179776   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1179777   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1179778   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1179779   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1179780   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1179781   +          +    -0.41654638301737 * Marital_StatusDivorced
1179782   +          +     0.65956207700583 * Marital_StatusMarried
1179783   +          +    -0.52573042887166 * Marital_StatusSingle
1179784   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1179785   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1179786   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1179787   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1179788   +          +    -0.32313846862799 * Marital_StatusDivorced
1179789   +          +     0.15910539009887 * Marital_StatusMarried
1179790   +          +     0.28781821946114 * Marital_StatusSingle
1179791   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1179792   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1179793   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1179794   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1179795   +          +    -0.06481096024989 * Marital_StatusDivorced
1179796   +          +    -0.01184060710261 * Marital_StatusMarried
1179797   +          +    -0.04932258474026 * Marital_StatusSingle
1179798   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1179799   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1179800   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1179801   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1179802   +          +      0.2062190716357 * Marital_StatusDivorced
1179803   +          +      -0.523160668609 * Marital_StatusMarried
1179804   +          +     0.50687401816278 * Marital_StatusSingle
1179805   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1179806   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1179807   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1179808   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1179809   +          +     -0.1386176879533 * Marital_StatusDivorced
1179810   +          +    -0.17611433777439 * Marital_StatusMarried
1179811   +          +     0.09908348348999 * Marital_StatusSingle
1179812   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1179813   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1179814   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1179815   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1179816   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1179817   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1179818   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1179819   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1179820   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1179821   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1179822   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1179823   +END;
MPRINT(EM_DIAGRAM):   END;
1179824   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1179825   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1179826   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1179827   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1179828   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1179829   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1179830   +END;
MPRINT(EM_DIAGRAM):   END;
1179831   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179832   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1179833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179834   +
1179835   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1179836   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1179837   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1179838   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1179839   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1179840   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1179841   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1179842   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1179843   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1179844   +end;
MPRINT(EM_DIAGRAM):   end;
1179845   +else do;
MPRINT(EM_DIAGRAM):   else do;
1179846   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1179847   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1179848   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1179849   +   end;
MPRINT(EM_DIAGRAM):   end;
1179850   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1179851   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1179852   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1179853   +   end;
MPRINT(EM_DIAGRAM):   end;
1179854   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1179855   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1179856   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1179857   +   end;
MPRINT(EM_DIAGRAM):   end;
1179858   +end;
MPRINT(EM_DIAGRAM):   end;
1179859   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1179860   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1179861   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1179862   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1179863   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1179864   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1179865   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1179866   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1179867   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1179868   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1179869   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1179870   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1179871   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1179872   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1179873   +END;
MPRINT(EM_DIAGRAM):   END;
1179874   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1179875   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1179876   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1179877   +END;
MPRINT(EM_DIAGRAM):   END;
1179878   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1179879   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1179880   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1179881   +END;
MPRINT(EM_DIAGRAM):   END;
1179882   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1179883   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1179884   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1179885   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1179886   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1179887   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1179888   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1179889   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179890   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1179891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1179892   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1179893   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1179894   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1179895   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1179896   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1179897   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1179898   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1179899   +END;
MPRINT(EM_DIAGRAM):   END;
1179900   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1179901   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1179902   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1179903   +drop
1179904   +H11
1179905   +H12
1179906   +H13
1179907   +H14
1179908   +H15
1179909   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1179910   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1179911   +* Renaming variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural40;
1179912   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179913   +* Renaming Posterior variables for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural40;
1179914   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179915   +drop Neural40_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar1;
1179916   +Neural40_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar1 = P_DepVar1;
1179917   +drop Neural40_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural40_P_DepVar0;
1179918   +Neural40_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural40_P_DepVar0 = P_DepVar0;
1179919   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179920   +* Renaming _WARN_ variable for Neural40;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural40;
1179921   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179922   +length Neural40_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural40_WARN_ $4;
1179923   +drop Neural40_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural40_WARN_;
1179924   +Neural40_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural40_WARN_ = _WARN_;
1179925   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179926   +* Ensmbl24: Scoring Code of model 5 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 5 of 7;
1179927   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179929   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1179930   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1179931   +* NODE: Neural41;
MPRINT(EM_DIAGRAM):   * NODE: Neural41;
1179932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1179933   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1179934   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1179935   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1179936   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1179937   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1179938   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1179939   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1179940   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1179941   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1179942   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1179943   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1179944   +LENGTH _WARN_ $4
1179945   +      F_DepVar  $ 12
1179946   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1179947   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1179948   +
1179949   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1179950   +
1179951   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1179952   +
1179953   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1179954   +
1179955   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1179956   +
1179957   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1179958   +
1179959   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1179960   +
1179961   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1179962   +
1179963   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1179964   +
1179965   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1179966   +
1179967   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1179968   +
1179969   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1179970   +
1179971   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1179972   +
1179973   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1179974   +
1179975   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1179976   +
1179977   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1179978   +
1179979   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1179980   +
1179981   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1179982   +
1179983   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1179984   +
1179985   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1179986   +
1179987   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1179988   +
1179989   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1179990   +
1179991   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1179992   +
1179993   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1179994   +
1179995   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1179996   +
1179997   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1179998   +
1179999   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1180000   +
1180001   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1180002   +
1180003   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1180004   +
1180005   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1180006   +
1180007   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1180008   +
1180009   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1180010   +
1180011   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1180012   +
1180013   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1180014   +
1180015   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1180016   +
1180017   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1180018   +
1180019   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1180020   +
1180021   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1180022   +
1180023   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1180024   +
1180025   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1180026   +
1180027   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1180028   +
1180029   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1180030   +
1180031   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1180032   +
1180033   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1180034   +
1180035   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1180036   +
1180037   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1180038   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1180039   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1180040   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1180041   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180042   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180043   +end;
MPRINT(EM_DIAGRAM):   end;
1180044   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180045   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180046   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1180047   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180048   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180049   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1180050   +   end;
MPRINT(EM_DIAGRAM):   end;
1180051   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180052   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1180053   +   end;
MPRINT(EM_DIAGRAM):   end;
1180054   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180055   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1180056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180058   +   end;
MPRINT(EM_DIAGRAM):   end;
1180059   +end;
MPRINT(EM_DIAGRAM):   end;
1180060   +
1180061   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1180062   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1180063   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1180064   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1180065   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180066   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180067   +end;
MPRINT(EM_DIAGRAM):   end;
1180068   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180069   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180070   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1180071   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180072   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180073   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1180074   +   end;
MPRINT(EM_DIAGRAM):   end;
1180075   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180076   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1180077   +   end;
MPRINT(EM_DIAGRAM):   end;
1180078   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180079   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1180080   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180081   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180082   +   end;
MPRINT(EM_DIAGRAM):   end;
1180083   +end;
MPRINT(EM_DIAGRAM):   end;
1180084   +
1180085   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1180086   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1180087   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1180088   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1180089   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180090   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180091   +end;
MPRINT(EM_DIAGRAM):   end;
1180092   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180093   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180094   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1180095   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180096   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180097   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1180098   +   end;
MPRINT(EM_DIAGRAM):   end;
1180099   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180100   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1180101   +   end;
MPRINT(EM_DIAGRAM):   end;
1180102   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180103   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1180104   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180105   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180106   +   end;
MPRINT(EM_DIAGRAM):   end;
1180107   +end;
MPRINT(EM_DIAGRAM):   end;
1180108   +
1180109   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1180110   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1180111   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1180112   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1180113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180115   +end;
MPRINT(EM_DIAGRAM):   end;
1180116   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180118   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1180119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180121   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1180122   +   end;
MPRINT(EM_DIAGRAM):   end;
1180123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180124   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1180125   +   end;
MPRINT(EM_DIAGRAM):   end;
1180126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180127   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1180128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180130   +   end;
MPRINT(EM_DIAGRAM):   end;
1180131   +end;
MPRINT(EM_DIAGRAM):   end;
1180132   +
1180133   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1180134   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1180135   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1180136   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1180137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180139   +end;
MPRINT(EM_DIAGRAM):   end;
1180140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180142   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1180143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180145   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1180146   +   end;
MPRINT(EM_DIAGRAM):   end;
1180147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180148   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1180149   +   end;
MPRINT(EM_DIAGRAM):   end;
1180150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180151   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1180152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180154   +   end;
MPRINT(EM_DIAGRAM):   end;
1180155   +end;
MPRINT(EM_DIAGRAM):   end;
1180156   +
1180157   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1180158   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1180159   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1180160   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1180161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180163   +end;
MPRINT(EM_DIAGRAM):   end;
1180164   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180166   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1180167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180169   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1180170   +   end;
MPRINT(EM_DIAGRAM):   end;
1180171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180172   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1180173   +   end;
MPRINT(EM_DIAGRAM):   end;
1180174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180175   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1180176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180178   +   end;
MPRINT(EM_DIAGRAM):   end;
1180179   +end;
MPRINT(EM_DIAGRAM):   end;
1180180   +
1180181   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1180182   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1180183   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1180184   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1180185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180187   +end;
MPRINT(EM_DIAGRAM):   end;
1180188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180190   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1180191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180192   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1180193   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1180194   +   end;
MPRINT(EM_DIAGRAM):   end;
1180195   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1180196   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1180197   +   end;
MPRINT(EM_DIAGRAM):   end;
1180198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180199   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1180200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180202   +   end;
MPRINT(EM_DIAGRAM):   end;
1180203   +end;
MPRINT(EM_DIAGRAM):   end;
1180204   +
1180205   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1180206   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1180207   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1180208   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1180209   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1180210   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1180211   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1180212   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1180213   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1180214   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1180215   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1180216   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1180217   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180218   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180219   +end;
MPRINT(EM_DIAGRAM):   end;
1180220   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180221   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1180222   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1180223   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180224   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1180225   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1180226   +   end;
MPRINT(EM_DIAGRAM):   end;
1180227   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1180228   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1180229   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1180230   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1180231   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1180232   +   end;
MPRINT(EM_DIAGRAM):   end;
1180233   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1180234   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1180235   +   end;
MPRINT(EM_DIAGRAM):   end;
1180236   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1180237   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1180238   +   end;
MPRINT(EM_DIAGRAM):   end;
1180239   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1180240   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1180241   +   end;
MPRINT(EM_DIAGRAM):   end;
1180242   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180243   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1180244   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1180245   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1180246   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1180247   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180248   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180249   +   end;
MPRINT(EM_DIAGRAM):   end;
1180250   +end;
MPRINT(EM_DIAGRAM):   end;
1180251   +
1180252   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1180253   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1180254   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1180255   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1180256   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1180257   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1180258   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1180259   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1180260   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1180261   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1180262   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1180263   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1180264   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1180265   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180266   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180267   +end;
MPRINT(EM_DIAGRAM):   end;
1180268   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180269   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1180270   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1180271   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180272   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1180273   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1180274   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1180275   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1180276   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1180277   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1180278   +         end;
MPRINT(EM_DIAGRAM):   end;
1180279   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1180280   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1180281   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1180282   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1180283   +            end;
MPRINT(EM_DIAGRAM):   end;
1180284   +         end;
MPRINT(EM_DIAGRAM):   end;
1180285   +      end;
MPRINT(EM_DIAGRAM):   end;
1180286   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1180287   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1180288   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1180289   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1180290   +         end;
MPRINT(EM_DIAGRAM):   end;
1180291   +      end;
MPRINT(EM_DIAGRAM):   end;
1180292   +   end;
MPRINT(EM_DIAGRAM):   end;
1180293   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180294   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1180295   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1180296   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1180297   +      end;
MPRINT(EM_DIAGRAM):   end;
1180298   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1180299   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1180300   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1180301   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1180302   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1180303   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1180304   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1180305   +         end;
MPRINT(EM_DIAGRAM):   end;
1180306   +      end;
MPRINT(EM_DIAGRAM):   end;
1180307   +   end;
MPRINT(EM_DIAGRAM):   end;
1180308   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1180309   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1180310   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1180311   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1180312   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1180313   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180314   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180315   +   end;
MPRINT(EM_DIAGRAM):   end;
1180316   +end;
MPRINT(EM_DIAGRAM):   end;
1180317   +
1180318   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180319   +*** Checking missing input Interval
1180320   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1180321   +
1180322   +IF NMISS(
1180323   +   AcceptedCmpTotal ,
1180324   +   Age ,
1180325   +   Frq ,
1180326   +   Income ,
1180327   +   Kidhome ,
1180328   +   MntFishProducts ,
1180329   +   MntFruits ,
1180330   +   MntGoldProds ,
1180331   +   MntSweetProducts ,
1180332   +   MonthsAsCustomer ,
1180333   +   NumDealsPurchases ,
1180334   +   NumWebVisitsMonth ,
1180335   +   RFMstat ,
1180336   +   RMntFrq ,
1180337   +   Recency ,
1180338   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1180339   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1180340   +
1180341   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180342   +END;
MPRINT(EM_DIAGRAM):   END;
1180343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180344   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1180345   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180346   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1180347   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1180348   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1180349   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1180350   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1180351   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1180352   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1180353   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1180354   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1180355   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1180356   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1180357   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1180358   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1180359   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1180360   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1180361   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1180362   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1180363   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1180364   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1180365   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1180366   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1180367   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1180368   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1180369   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1180370   +END;
MPRINT(EM_DIAGRAM):   END;
1180371   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1180372   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1180373   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1180374   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1180375   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1180376   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1180377   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1180378   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1180379   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1180380   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1180381   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1180382   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1180383   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1180384   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1180385   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1180386   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1180387   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1180388   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1180389   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1180390   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1180391   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1180392   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1180393   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1180394   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1180395   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1180396   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1180397   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1180398   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1180399   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1180400   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1180401   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1180402   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1180403   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1180404   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1180405   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1180406   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1180407   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1180408   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1180409   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1180410   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1180411   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1180412   +END;
MPRINT(EM_DIAGRAM):   END;
1180413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180414   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1180415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180417   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1180418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180420   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1180421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180422   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1180423   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1180424   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1180425   +        S_Income  +    -0.52684337240504 * S_Kidhome
1180426   +          +     0.07835956947085 * S_MntFishProducts
1180427   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1180428   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1180429   +          +    -0.44463888327841 * S_MonthsAsCustomer
1180430   +          +    -0.20310227710644 * S_NumDealsPurchases
1180431   +          +     0.06594467408568 * S_NumWebVisitsMonth
1180432   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1180433   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1180434   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1180435   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1180436   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1180437   +        S_Income  +     0.91025818069308 * S_Kidhome
1180438   +          +     0.26585860774761 * S_MntFishProducts
1180439   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1180440   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1180441   +          +    -0.12421403342454 * S_MonthsAsCustomer
1180442   +          +     0.66931066909347 * S_NumDealsPurchases
1180443   +          +     0.35050056776957 * S_NumWebVisitsMonth
1180444   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1180445   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1180446   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1180447   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1180448   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1180449   +        S_Income  +     0.63027536562783 * S_Kidhome
1180450   +          +     0.15303249164566 * S_MntFishProducts
1180451   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1180452   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1180453   +          +    -0.21006970062531 * S_MonthsAsCustomer
1180454   +          +      0.2955774677605 * S_NumDealsPurchases
1180455   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1180456   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1180457   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1180458   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1180459   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1180460   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1180461   +        S_Income  +    -0.00985947331416 * S_Kidhome
1180462   +          +    -0.27114701164817 * S_MntFishProducts
1180463   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1180464   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1180465   +          +    -0.02702818828921 * S_MonthsAsCustomer
1180466   +          +    -0.63381188911946 * S_NumDealsPurchases
1180467   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1180468   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1180469   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1180470   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1180471   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1180472   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1180473   +        S_Income  +    -0.24206929946772 * S_Kidhome
1180474   +          +    -0.19039689229491 * S_MntFishProducts
1180475   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1180476   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1180477   +          +     0.03815221487927 * S_MonthsAsCustomer
1180478   +          +    -0.43579024169696 * S_NumDealsPurchases
1180479   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1180480   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1180481   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1180482   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1180483   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1180484   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1180485   +        S_Income  +    -0.25736924536467 * S_Kidhome
1180486   +          +    -0.04400855145817 * S_MntFishProducts
1180487   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1180488   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1180489   +          +     0.00265986106691 * S_MonthsAsCustomer
1180490   +          +     0.27331919080312 * S_NumDealsPurchases
1180491   +          +     0.22836119952787 * S_NumWebVisitsMonth
1180492   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1180493   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1180494   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1180495   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1180496   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1180497   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1180498   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1180499   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1180500   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1180501   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1180502   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1180503   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1180504   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1180505   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1180506   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1180507   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1180508   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1180509   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1180510   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1180511   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1180512   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1180513   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1180514   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1180515   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1180516   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1180517   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1180518   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1180519   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1180520   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1180521   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1180522   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1180523   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1180524   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1180525   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1180526   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1180527   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1180528   +          +     0.12502276672336 * Marital_StatusDivorced
1180529   +          +    -0.02606508453741 * Marital_StatusMarried
1180530   +          +      0.0418850245266 * Marital_StatusSingle
1180531   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1180532   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1180533   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1180534   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1180535   +          +      0.1943860669795 * Marital_StatusDivorced
1180536   +          +     -0.1529596261268 * Marital_StatusMarried
1180537   +          +     0.24187461301348 * Marital_StatusSingle
1180538   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1180539   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1180540   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1180541   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1180542   +          +    -0.19677652422622 * Marital_StatusDivorced
1180543   +          +     0.75897106429478 * Marital_StatusMarried
1180544   +          +    -0.66692260284833 * Marital_StatusSingle
1180545   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1180546   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1180547   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1180548   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1180549   +          +    -0.18964222971122 * Marital_StatusDivorced
1180550   +          +    -0.15222045956879 * Marital_StatusMarried
1180551   +          +     0.15455795695595 * Marital_StatusSingle
1180552   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1180553   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1180554   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1180555   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1180556   +          +    -0.10122776921995 * Marital_StatusDivorced
1180557   +          +     0.14126755564161 * Marital_StatusMarried
1180558   +          +    -0.18463644418978 * Marital_StatusSingle
1180559   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1180560   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1180561   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1180562   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1180563   +          +     0.05009431660662 * Marital_StatusDivorced
1180564   +          +    -0.38407798045329 * Marital_StatusMarried
1180565   +          +      0.3035257398654 * Marital_StatusSingle
1180566   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1180567   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1180568   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1180569   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1180570   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1180571   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1180572   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1180573   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1180574   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1180575   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1180576   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1180577   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1180578   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1180579   +END;
MPRINT(EM_DIAGRAM):   END;
1180580   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1180581   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1180582   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1180583   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1180584   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1180585   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1180586   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1180587   +END;
MPRINT(EM_DIAGRAM):   END;
1180588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180589   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1180590   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180591   +
1180592   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1180593   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1180594   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1180595   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1180596   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1180597   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180598   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1180599   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1180600   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1180601   +end;
MPRINT(EM_DIAGRAM):   end;
1180602   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180603   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1180604   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1180605   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1180606   +   end;
MPRINT(EM_DIAGRAM):   end;
1180607   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1180608   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1180609   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1180610   +   end;
MPRINT(EM_DIAGRAM):   end;
1180611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180612   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1180613   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1180614   +   end;
MPRINT(EM_DIAGRAM):   end;
1180615   +end;
MPRINT(EM_DIAGRAM):   end;
1180616   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1180617   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1180618   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1180619   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1180620   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1180621   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1180622   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1180623   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1180624   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1180625   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1180626   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1180627   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1180628   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1180629   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1180630   +END;
MPRINT(EM_DIAGRAM):   END;
1180631   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1180632   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1180633   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1180634   +END;
MPRINT(EM_DIAGRAM):   END;
1180635   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1180636   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1180637   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1180638   +END;
MPRINT(EM_DIAGRAM):   END;
1180639   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1180640   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1180641   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1180642   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1180643   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1180644   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1180645   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1180646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180647   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1180648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1180649   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1180650   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1180651   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1180652   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1180653   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1180654   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1180655   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1180656   +END;
MPRINT(EM_DIAGRAM):   END;
1180657   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1180658   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1180659   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1180660   +drop
1180661   +H11
1180662   +H12
1180663   +H13
1180664   +H14
1180665   +H15
1180666   +H16
1180667   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1180668   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1180669   +* Renaming variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural41;
1180670   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180671   +* Renaming Posterior variables for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural41;
1180672   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180673   +drop Neural41_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar1;
1180674   +Neural41_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar1 = P_DepVar1;
1180675   +drop Neural41_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural41_P_DepVar0;
1180676   +Neural41_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural41_P_DepVar0 = P_DepVar0;
1180677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180678   +* Renaming _WARN_ variable for Neural41;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural41;
1180679   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180680   +length Neural41_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural41_WARN_ $4;
1180681   +drop Neural41_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural41_WARN_;
1180682   +Neural41_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural41_WARN_ = _WARN_;
1180683   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180684   +* Ensmbl24: Scoring Code of model 6 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 6 of 7;
1180685   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180686   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180687   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1180688   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1180689   +* NODE: Neural36;
MPRINT(EM_DIAGRAM):   * NODE: Neural36;
1180690   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1180691   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1180692   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1180693   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1180694   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1180695   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1180696   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1180697   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1180698   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1180699   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1180700   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1180701   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1180702   +LENGTH _WARN_ $4
1180703   +      F_DepVar  $ 12
1180704   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1180705   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1180706   +
1180707   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1180708   +
1180709   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1180710   +
1180711   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1180712   +
1180713   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1180714   +
1180715   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1180716   +
1180717   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1180718   +
1180719   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1180720   +
1180721   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1180722   +
1180723   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1180724   +
1180725   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1180726   +
1180727   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1180728   +
1180729   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1180730   +
1180731   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1180732   +
1180733   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1180734   +
1180735   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1180736   +
1180737   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1180738   +
1180739   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1180740   +
1180741   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1180742   +
1180743   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1180744   +
1180745   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1180746   +
1180747   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1180748   +
1180749   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1180750   +
1180751   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1180752   +
1180753   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1180754   +
1180755   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1180756   +
1180757   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1180758   +
1180759   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1180760   +
1180761   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1180762   +
1180763   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1180764   +
1180765   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1180766   +
1180767   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1180768   +
1180769   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1180770   +
1180771   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1180772   +
1180773   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1180774   +
1180775   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1180776   +
1180777   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1180778   +
1180779   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1180780   +
1180781   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1180782   +
1180783   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1180784   +
1180785   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1180786   +
1180787   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1180788   +
1180789   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1180790   +
1180791   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1180792   +
1180793   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1180794   +
1180795   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1180796   +
1180797   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1180798   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1180799   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1180800   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1180801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180803   +end;
MPRINT(EM_DIAGRAM):   end;
1180804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180806   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1180807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180808   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180809   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1180810   +   end;
MPRINT(EM_DIAGRAM):   end;
1180811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180812   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1180813   +   end;
MPRINT(EM_DIAGRAM):   end;
1180814   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180815   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1180816   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180817   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180818   +   end;
MPRINT(EM_DIAGRAM):   end;
1180819   +end;
MPRINT(EM_DIAGRAM):   end;
1180820   +
1180821   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1180822   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1180823   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1180824   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1180825   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180826   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180827   +end;
MPRINT(EM_DIAGRAM):   end;
1180828   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180829   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180830   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1180831   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180832   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180833   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1180834   +   end;
MPRINT(EM_DIAGRAM):   end;
1180835   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180836   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1180837   +   end;
MPRINT(EM_DIAGRAM):   end;
1180838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180839   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1180840   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180841   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180842   +   end;
MPRINT(EM_DIAGRAM):   end;
1180843   +end;
MPRINT(EM_DIAGRAM):   end;
1180844   +
1180845   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1180846   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1180847   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1180848   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1180849   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180850   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180851   +end;
MPRINT(EM_DIAGRAM):   end;
1180852   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180853   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180854   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1180855   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180856   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180857   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1180858   +   end;
MPRINT(EM_DIAGRAM):   end;
1180859   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180860   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1180861   +   end;
MPRINT(EM_DIAGRAM):   end;
1180862   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180863   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1180864   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180865   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180866   +   end;
MPRINT(EM_DIAGRAM):   end;
1180867   +end;
MPRINT(EM_DIAGRAM):   end;
1180868   +
1180869   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1180870   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1180871   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1180872   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1180873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180875   +end;
MPRINT(EM_DIAGRAM):   end;
1180876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180878   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1180879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180880   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180881   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1180882   +   end;
MPRINT(EM_DIAGRAM):   end;
1180883   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180884   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1180885   +   end;
MPRINT(EM_DIAGRAM):   end;
1180886   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180887   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1180888   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180889   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180890   +   end;
MPRINT(EM_DIAGRAM):   end;
1180891   +end;
MPRINT(EM_DIAGRAM):   end;
1180892   +
1180893   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1180894   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1180895   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1180896   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1180897   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180899   +end;
MPRINT(EM_DIAGRAM):   end;
1180900   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180901   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180902   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1180903   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180904   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180905   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1180906   +   end;
MPRINT(EM_DIAGRAM):   end;
1180907   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180908   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1180909   +   end;
MPRINT(EM_DIAGRAM):   end;
1180910   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180911   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1180912   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180913   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180914   +   end;
MPRINT(EM_DIAGRAM):   end;
1180915   +end;
MPRINT(EM_DIAGRAM):   end;
1180916   +
1180917   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1180918   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1180919   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1180920   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1180921   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180922   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180923   +end;
MPRINT(EM_DIAGRAM):   end;
1180924   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180925   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180926   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1180927   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180928   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1180929   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1180930   +   end;
MPRINT(EM_DIAGRAM):   end;
1180931   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1180932   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1180933   +   end;
MPRINT(EM_DIAGRAM):   end;
1180934   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180935   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1180936   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180937   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180938   +   end;
MPRINT(EM_DIAGRAM):   end;
1180939   +end;
MPRINT(EM_DIAGRAM):   end;
1180940   +
1180941   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1180942   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1180943   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1180944   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1180945   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180946   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180947   +end;
MPRINT(EM_DIAGRAM):   end;
1180948   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180949   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1180950   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1180951   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180952   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1180953   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1180954   +   end;
MPRINT(EM_DIAGRAM):   end;
1180955   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1180956   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1180957   +   end;
MPRINT(EM_DIAGRAM):   end;
1180958   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1180959   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1180960   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1180961   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180962   +   end;
MPRINT(EM_DIAGRAM):   end;
1180963   +end;
MPRINT(EM_DIAGRAM):   end;
1180964   +
1180965   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1180966   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1180967   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1180968   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1180969   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1180970   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1180971   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1180972   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1180973   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1180974   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1180975   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1180976   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1180977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1180978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1180979   +end;
MPRINT(EM_DIAGRAM):   end;
1180980   +else do;
MPRINT(EM_DIAGRAM):   else do;
1180981   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1180982   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1180983   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1180984   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1180985   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1180986   +   end;
MPRINT(EM_DIAGRAM):   end;
1180987   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1180988   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1180989   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1180990   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1180991   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1180992   +   end;
MPRINT(EM_DIAGRAM):   end;
1180993   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1180994   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1180995   +   end;
MPRINT(EM_DIAGRAM):   end;
1180996   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1180997   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1180998   +   end;
MPRINT(EM_DIAGRAM):   end;
1180999   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1181000   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1181001   +   end;
MPRINT(EM_DIAGRAM):   end;
1181002   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181003   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1181004   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1181005   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1181006   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1181007   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1181008   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181009   +   end;
MPRINT(EM_DIAGRAM):   end;
1181010   +end;
MPRINT(EM_DIAGRAM):   end;
1181011   +
1181012   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1181013   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1181014   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1181015   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1181016   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1181017   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1181018   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1181019   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1181020   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1181021   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1181022   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1181023   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1181024   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1181025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181027   +end;
MPRINT(EM_DIAGRAM):   end;
1181028   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181029   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1181030   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1181031   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1181032   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1181033   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1181034   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1181035   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1181036   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1181037   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181038   +         end;
MPRINT(EM_DIAGRAM):   end;
1181039   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1181040   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1181041   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1181042   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181043   +            end;
MPRINT(EM_DIAGRAM):   end;
1181044   +         end;
MPRINT(EM_DIAGRAM):   end;
1181045   +      end;
MPRINT(EM_DIAGRAM):   end;
1181046   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1181047   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1181048   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1181049   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181050   +         end;
MPRINT(EM_DIAGRAM):   end;
1181051   +      end;
MPRINT(EM_DIAGRAM):   end;
1181052   +   end;
MPRINT(EM_DIAGRAM):   end;
1181053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181054   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1181055   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1181056   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181057   +      end;
MPRINT(EM_DIAGRAM):   end;
1181058   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1181059   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1181060   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1181061   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1181062   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1181063   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1181064   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181065   +         end;
MPRINT(EM_DIAGRAM):   end;
1181066   +      end;
MPRINT(EM_DIAGRAM):   end;
1181067   +   end;
MPRINT(EM_DIAGRAM):   end;
1181068   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1181069   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1181070   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1181071   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1181072   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1181073   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1181074   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181075   +   end;
MPRINT(EM_DIAGRAM):   end;
1181076   +end;
MPRINT(EM_DIAGRAM):   end;
1181077   +
1181078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181079   +*** Checking missing input Interval
1181080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1181081   +
1181082   +IF NMISS(
1181083   +   AcceptedCmpTotal ,
1181084   +   Age ,
1181085   +   Frq ,
1181086   +   Income ,
1181087   +   Kidhome ,
1181088   +   MntFishProducts ,
1181089   +   MntFruits ,
1181090   +   MntGoldProds ,
1181091   +   MntSweetProducts ,
1181092   +   MonthsAsCustomer ,
1181093   +   NumDealsPurchases ,
1181094   +   NumWebVisitsMonth ,
1181095   +   RFMstat ,
1181096   +   RMntFrq ,
1181097   +   Recency ,
1181098   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1181099   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1181100   +
1181101   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181102   +END;
MPRINT(EM_DIAGRAM):   END;
1181103   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181104   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1181105   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181106   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1181107   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1181108   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1181109   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1181110   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1181111   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1181112   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1181113   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1181114   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1181115   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1181116   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1181117   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1181118   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1181119   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1181120   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1181121   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1181122   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1181123   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1181124   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1181125   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1181126   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1181127   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1181128   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1181129   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1181130   +END;
MPRINT(EM_DIAGRAM):   END;
1181131   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1181132   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1181133   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1181134   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1181135   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1181136   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1181137   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1181138   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1181139   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1181140   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1181141   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1181142   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1181143   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1181144   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1181145   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1181146   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1181147   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1181148   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1181149   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1181150   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1181151   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1181152   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1181153   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1181154   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1181155   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1181156   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1181157   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1181158   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1181159   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1181160   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1181161   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1181162   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1181163   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1181164   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1181165   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1181166   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1181167   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1181168   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1181169   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1181170   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1181171   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1181172   +END;
MPRINT(EM_DIAGRAM):   END;
1181173   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181174   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1181175   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181176   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181177   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1181178   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181180   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1181181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181182   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1181183   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1181184   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1181185   +        S_Income  +     0.21790378443814 * S_Kidhome
1181186   +          +    -0.08134586316395 * S_MntFishProducts
1181187   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1181188   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1181189   +          +     0.21726816930291 * S_MonthsAsCustomer
1181190   +          +    -0.21824241156847 * S_NumDealsPurchases
1181191   +          +     0.07727563921761 * S_NumWebVisitsMonth
1181192   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1181193   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1181194   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1181195   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1181196   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1181197   +        S_Income  +    -0.51036141680293 * S_Kidhome
1181198   +          +     0.10879858722875 * S_MntFishProducts
1181199   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1181200   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1181201   +          +    -0.11392977531374 * S_MonthsAsCustomer
1181202   +          +     -0.5318843752274 * S_NumDealsPurchases
1181203   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1181204   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1181205   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1181206   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1181207   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1181208   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1181209   +        S_Income  +     0.59254092901621 * S_Kidhome
1181210   +          +    -0.20448500725841 * S_MntFishProducts
1181211   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1181212   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1181213   +          +     0.75084411765835 * S_MonthsAsCustomer
1181214   +          +     -0.0387146296237 * S_NumDealsPurchases
1181215   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1181216   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1181217   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1181218   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1181219   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1181220   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1181221   +        S_Income  +    -0.00122834275949 * S_Kidhome
1181222   +          +    -0.27566379985337 * S_MntFishProducts
1181223   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1181224   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1181225   +          +    -0.04164317708211 * S_MonthsAsCustomer
1181226   +          +    -0.69362879353268 * S_NumDealsPurchases
1181227   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1181228   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1181229   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1181230   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1181231   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1181232   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1181233   +        S_Income  +    -0.52116533001423 * S_Kidhome
1181234   +          +     -0.0164127050263 * S_MntFishProducts
1181235   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1181236   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1181237   +          +     0.24190773546087 * S_MonthsAsCustomer
1181238   +          +    -0.20709839635746 * S_NumDealsPurchases
1181239   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1181240   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1181241   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1181242   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1181243   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1181244   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1181245   +        S_Income  +     0.02656798188894 * S_Kidhome
1181246   +          +     0.30126647035438 * S_MntFishProducts
1181247   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1181248   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1181249   +          +     0.02225077975252 * S_MonthsAsCustomer
1181250   +          +    -0.25574607065737 * S_NumDealsPurchases
1181251   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1181252   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1181253   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1181254   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1181255   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1181256   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1181257   +        S_Income  +     0.24859715564668 * S_Kidhome
1181258   +          +    -0.25170385966484 * S_MntFishProducts
1181259   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1181260   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1181261   +          +     0.05219342683802 * S_MonthsAsCustomer
1181262   +          +     0.43291262348863 * S_NumDealsPurchases
1181263   +          +     0.56350506449265 * S_NumWebVisitsMonth
1181264   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1181265   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1181266   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1181267   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1181268   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1181269   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1181270   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1181271   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1181272   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1181273   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1181274   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1181275   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1181276   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1181277   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1181278   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1181279   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1181280   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1181281   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1181282   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1181283   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1181284   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1181285   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1181286   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1181287   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1181288   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1181289   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1181290   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1181291   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1181292   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1181293   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1181294   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1181295   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1181296   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1181297   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1181298   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1181299   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1181300   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1181301   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1181302   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1181303   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1181304   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1181305   +          +     0.03245181998921 * Marital_StatusDivorced
1181306   +          +     0.29722741247663 * Marital_StatusMarried
1181307   +          +    -0.05683085497262 * Marital_StatusSingle
1181308   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1181309   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1181310   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1181311   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1181312   +          +    -0.13095826187081 * Marital_StatusDivorced
1181313   +          +     0.29509760197193 * Marital_StatusMarried
1181314   +          +    -0.21019918550166 * Marital_StatusSingle
1181315   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1181316   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1181317   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1181318   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1181319   +          +     0.03746692643939 * Marital_StatusDivorced
1181320   +          +     0.03482798841727 * Marital_StatusMarried
1181321   +          +     0.16645207250571 * Marital_StatusSingle
1181322   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1181323   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1181324   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1181325   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1181326   +          +     -0.0753971504765 * Marital_StatusDivorced
1181327   +          +     0.20446719655724 * Marital_StatusMarried
1181328   +          +     0.21472836757686 * Marital_StatusSingle
1181329   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1181330   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1181331   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1181332   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1181333   +          +     0.16191937298215 * Marital_StatusDivorced
1181334   +          +    -0.81780658848614 * Marital_StatusMarried
1181335   +          +     0.84981159748349 * Marital_StatusSingle
1181336   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1181337   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1181338   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1181339   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1181340   +          +    -0.01766312280073 * Marital_StatusDivorced
1181341   +          +     0.04455346003394 * Marital_StatusMarried
1181342   +          +    -0.05433982251127 * Marital_StatusSingle
1181343   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1181344   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1181345   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1181346   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1181347   +          +        0.22905595967 * Marital_StatusDivorced
1181348   +          +      0.1024998677695 * Marital_StatusMarried
1181349   +          +    -0.07752101768018 * Marital_StatusSingle
1181350   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1181351   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1181352   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1181353   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1181354   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1181355   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1181356   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1181357   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1181358   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1181359   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1181360   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1181361   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1181362   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1181363   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1181364   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1181365   +END;
MPRINT(EM_DIAGRAM):   END;
1181366   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1181367   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1181368   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1181369   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1181370   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1181371   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1181372   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1181373   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1181374   +END;
MPRINT(EM_DIAGRAM):   END;
1181375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181376   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1181377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181378   +
1181379   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1181380   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1181381   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1181382   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1181383   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1181384   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1181385   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1181386   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1181387   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1181388   +end;
MPRINT(EM_DIAGRAM):   end;
1181389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181390   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1181391   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1181392   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1181393   +   end;
MPRINT(EM_DIAGRAM):   end;
1181394   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1181395   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1181396   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1181397   +   end;
MPRINT(EM_DIAGRAM):   end;
1181398   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181399   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1181400   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1181401   +   end;
MPRINT(EM_DIAGRAM):   end;
1181402   +end;
MPRINT(EM_DIAGRAM):   end;
1181403   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1181404   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1181405   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1181406   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1181407   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1181408   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1181409   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1181410   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1181411   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1181412   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1181413   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1181414   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1181415   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1181416   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1181417   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1181418   +END;
MPRINT(EM_DIAGRAM):   END;
1181419   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1181420   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1181421   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1181422   +END;
MPRINT(EM_DIAGRAM):   END;
1181423   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1181424   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1181425   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1181426   +END;
MPRINT(EM_DIAGRAM):   END;
1181427   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1181428   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1181429   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1181430   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1181431   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1181432   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1181433   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1181434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181435   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1181436   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1181437   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1181438   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1181439   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1181440   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1181441   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1181442   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1181443   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1181444   +END;
MPRINT(EM_DIAGRAM):   END;
1181445   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1181446   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1181447   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1181448   +drop
1181449   +H11
1181450   +H12
1181451   +H13
1181452   +H14
1181453   +H15
1181454   +H16
1181455   +H17
1181456   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1181457   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1181458   +* Renaming variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural36;
1181459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181460   +* Renaming Posterior variables for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural36;
1181461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181462   +drop Neural36_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar1;
1181463   +Neural36_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar1 = P_DepVar1;
1181464   +drop Neural36_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural36_P_DepVar0;
1181465   +Neural36_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural36_P_DepVar0 = P_DepVar0;
1181466   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181467   +* Renaming _WARN_ variable for Neural36;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural36;
1181468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181469   +length Neural36_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural36_WARN_ $4;
1181470   +drop Neural36_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural36_WARN_;
1181471   +Neural36_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural36_WARN_ = _WARN_;
1181472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181473   +* Ensmbl24: Scoring Code of model 7 of 7;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Scoring Code of model 7 of 7;
1181474   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181476   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1181477   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1181478   +* NODE: Reg11;
MPRINT(EM_DIAGRAM):   * NODE: Reg11;
1181479   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181480   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1181481   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1181482   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1181483   +
1181484   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1181485   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1181486   +
1181487   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1181488   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1181489   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1181490   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1181491   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1181492   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1181493   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1181494   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1181495   +
1181496   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1181497   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1181498   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1181499   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1181500   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1181501   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1181502   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1181503   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1181504   +end;
MPRINT(EM_DIAGRAM):   end;
1181505   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181506   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1181507   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1181508   +   end;
MPRINT(EM_DIAGRAM):   end;
1181509   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1181510   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1181511   +   end;
MPRINT(EM_DIAGRAM):   end;
1181512   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181513   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1181514   +   end;
MPRINT(EM_DIAGRAM):   end;
1181515   +end;
MPRINT(EM_DIAGRAM):   end;
1181516   +
1181517   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1181518   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1181519   +
1181520   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1181521   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1181522   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181523   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181524   +end;
MPRINT(EM_DIAGRAM):   end;
1181525   +
1181526   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1181527   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1181528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181530   +end;
MPRINT(EM_DIAGRAM):   end;
1181531   +
1181532   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1181533   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1181534   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181535   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181536   +end;
MPRINT(EM_DIAGRAM):   end;
1181537   +
1181538   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1181539   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1181540   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181541   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181542   +end;
MPRINT(EM_DIAGRAM):   end;
1181543   +
1181544   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1181545   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1181546   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181547   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181548   +end;
MPRINT(EM_DIAGRAM):   end;
1181549   +
1181550   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1181551   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1181552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181554   +end;
MPRINT(EM_DIAGRAM):   end;
1181555   +
1181556   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1181557   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1181558   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181559   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181560   +end;
MPRINT(EM_DIAGRAM):   end;
1181561   +
1181562   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1181563   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1181564   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181565   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181566   +end;
MPRINT(EM_DIAGRAM):   end;
1181567   +
1181568   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1181569   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1181570   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181571   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181572   +end;
MPRINT(EM_DIAGRAM):   end;
1181573   +
1181574   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1181575   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1181576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181578   +end;
MPRINT(EM_DIAGRAM):   end;
1181579   +
1181580   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1181581   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1181582   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1181583   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1181584   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181585   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181586   +end;
MPRINT(EM_DIAGRAM):   end;
1181587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181588   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1181589   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1181590   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1181591   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1181592   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1181593   +   end;
MPRINT(EM_DIAGRAM):   end;
1181594   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1181595   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1181596   +   end;
MPRINT(EM_DIAGRAM):   end;
1181597   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181598   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1181599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1181600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181601   +   end;
MPRINT(EM_DIAGRAM):   end;
1181602   +end;
MPRINT(EM_DIAGRAM):   end;
1181603   +
1181604   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1181605   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1181606   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1181607   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1181608   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181609   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181610   +end;
MPRINT(EM_DIAGRAM):   end;
1181611   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181612   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1181613   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1181614   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1181615   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1181616   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1181617   +   end;
MPRINT(EM_DIAGRAM):   end;
1181618   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1181619   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1181620   +   end;
MPRINT(EM_DIAGRAM):   end;
1181621   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181622   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1181623   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1181624   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181625   +   end;
MPRINT(EM_DIAGRAM):   end;
1181626   +end;
MPRINT(EM_DIAGRAM):   end;
1181627   +
1181628   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1181629   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1181630   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1181631   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1181632   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1181633   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1181634   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1181635   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1181636   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1181637   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1181638   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1181639   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1181640   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1181641   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181642   +end;
MPRINT(EM_DIAGRAM):   end;
1181643   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181644   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1181645   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1181646   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1181647   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1181648   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1181649   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1181650   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1181651   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1181652   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181653   +         end;
MPRINT(EM_DIAGRAM):   end;
1181654   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1181655   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1181656   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1181657   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181658   +            end;
MPRINT(EM_DIAGRAM):   end;
1181659   +         end;
MPRINT(EM_DIAGRAM):   end;
1181660   +      end;
MPRINT(EM_DIAGRAM):   end;
1181661   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1181662   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1181663   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1181664   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181665   +         end;
MPRINT(EM_DIAGRAM):   end;
1181666   +      end;
MPRINT(EM_DIAGRAM):   end;
1181667   +   end;
MPRINT(EM_DIAGRAM):   end;
1181668   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1181669   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1181670   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1181671   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181672   +      end;
MPRINT(EM_DIAGRAM):   end;
1181673   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1181674   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1181675   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1181676   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1181677   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1181678   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1181679   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1181680   +         end;
MPRINT(EM_DIAGRAM):   end;
1181681   +      end;
MPRINT(EM_DIAGRAM):   end;
1181682   +   end;
MPRINT(EM_DIAGRAM):   end;
1181683   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1181684   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1181685   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1181686   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1181687   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1181688   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1181689   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1181690   +   end;
MPRINT(EM_DIAGRAM):   end;
1181691   +end;
MPRINT(EM_DIAGRAM):   end;
1181692   +
1181693   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1181694   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1181695   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1181696   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1181697   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1181698   +end;
MPRINT(EM_DIAGRAM):   end;
1181699   +
1181700   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1181701   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1181702   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1181703   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1181704   +
1181705   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1181706   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1181707   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1181708   +
1181709   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1181710   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1181711   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1181712   +
1181713   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1181714   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1181715   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1181716   +
1181717   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1181718   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1181719   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1181720   +
1181721   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1181722   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1181723   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1181724   +
1181725   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1181726   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1181727   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1181728   +
1181729   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1181730   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1181731   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1181732   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1181733   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1181734   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1181735   +
1181736   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1181737   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1181738   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1181739   +
1181740   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1181741   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1181742   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1181743   +
1181744   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1181745   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1181746   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1181747   +
1181748   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1181749   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1181750   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1181751   +
1181752   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1181753   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1181754   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1181755   +
1181756   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1181757   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1181758   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1181759   +
1181760   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1181761   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1181762   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1181763   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1181764   +
1181765   +REG11DR1:
1181766   +
1181767   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Residuals;
1181768   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1181769   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1181770   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1181771   +end;
MPRINT(EM_DIAGRAM):   end;
1181772   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181773   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1181774   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1181775   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1181776   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1181777   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1181778   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1181779   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1181780   +   end;
MPRINT(EM_DIAGRAM):   end;
1181781   +end;
MPRINT(EM_DIAGRAM):   end;
1181782   +
1181783   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1181784   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1181785   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1181786   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1181787   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1181788   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1181789   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1181790   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1181791   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1181792   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1181793   +end;
MPRINT(EM_DIAGRAM):   end;
1181794   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1181795   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1181796   +
1181797   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1181798   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1181799   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1181800   +* Renaming variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg11;
1181801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181802   +* Renaming Posterior variables for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg11;
1181803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181804   +drop Reg11_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar1;
1181805   +Reg11_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar1 = P_DepVar1;
1181806   +drop Reg11_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg11_P_DepVar0;
1181807   +Reg11_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg11_P_DepVar0 = P_DepVar0;
1181808   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181809   +* Renaming _WARN_ variable for Reg11;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg11;
1181810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181811   +length Reg11_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg11_WARN_ $4;
1181812   +drop Reg11_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg11_WARN_;
1181813   +Reg11_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg11_WARN_ = _WARN_;
1181814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181815   +* Ensmbl24: Average Posteriors of 7 models;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Average Posteriors of 7 models;
1181816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181817   +P_DepVar1 = (
1181818   +Neural37_P_DepVar1 +
1181819   +Neural38_P_DepVar1 +
1181820   +Neural39_P_DepVar1 +
1181821   +Neural40_P_DepVar1 +
1181822   +Neural41_P_DepVar1 +
1181823   +Neural36_P_DepVar1 +
1181824   +Reg11_P_DepVar1
1181825   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural37_P_DepVar1 + Neural38_P_DepVar1 + 
Neural39_P_DepVar1 + Neural40_P_DepVar1 + Neural41_P_DepVar1 + Neural36_P_DepVar1 + 
Reg11_P_DepVar1 )/7;
1181826   +P_DepVar0 = (
1181827   +Neural37_P_DepVar0 +
1181828   +Neural38_P_DepVar0 +
1181829   +Neural39_P_DepVar0 +
1181830   +Neural40_P_DepVar0 +
1181831   +Neural41_P_DepVar0 +
1181832   +Neural36_P_DepVar0 +
1181833   +Reg11_P_DepVar0
1181834   +)/7;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural37_P_DepVar0 + Neural38_P_DepVar0 + 
Neural39_P_DepVar0 + Neural40_P_DepVar0 + Neural41_P_DepVar0 + Neural36_P_DepVar0 + 
Reg11_P_DepVar0 )/7;
1181835   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181836   +* Ensmbl24: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Classification Vars;
1181837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181838   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1181839   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1181840   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1181841   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1181842   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1181843   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1181844   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1181845   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1181846   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1181847   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1181848   +end;
MPRINT(EM_DIAGRAM):   end;
1181849   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1181850   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1181851   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1181852   +end;
MPRINT(EM_DIAGRAM):   end;
1181853   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1181854   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181855   +* Ensmbl24: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Producing Unformatted variable;
1181856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181857   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1181858   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1181859   +else
1181860   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1181861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181862   +* Ensmbl24: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing _WARN_ Variable;
1181863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181864   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1181865   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1181866   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1181867   +if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1181867  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1181868   +if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1181868  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1181869   +if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1181869  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1181870   +if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1181870  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL37_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1181871   +if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1181871  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1181872   +if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1181872  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1181873   +if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1181873  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1181874   +if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1181874  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL38_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1181875   +if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1181875  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1181876   +if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1181876  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1181877   +if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1181877  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1181878   +if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1181878  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL39_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1181879   +if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1181879  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1181880   +if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1181880  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1181881   +if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1181881  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1181882   +if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1181882  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL40_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1181883   +if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1181883  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1181884   +if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1181884  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1181885   +if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1181885  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1181886   +if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1181886  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL41_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1181887   +if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1181887  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1181888   +if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1181888  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1181889   +if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1181889  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1181890   +if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1181890  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL36_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1181891   +if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 
1, 1) ='M';
1181892   +if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 
2, 1) ='U';
1181893   +if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 
3, 1) ='P';
1181894   +if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG11_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 
4, 1) ='C';
1181895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181896   +* Ensmbl24: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing Residual Vars;
1181897   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1181898   +if
1181899   +F_DepVar NE '1'
1181900   +AND F_DepVar NE '0'
1181901   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1181902   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1181903   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1181904   +end;
MPRINT(EM_DIAGRAM):   end;
1181905   +else do;
MPRINT(EM_DIAGRAM):   else do;
1181906   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1181907   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1181908   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1181909   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1181910   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1181911   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1181912   +END;
MPRINT(EM_DIAGRAM):   END;
1181913   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1181914    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL24_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL37_VALIDATE.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.18 seconds
      cpu time            0.18 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1181915    quit;
1181916    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl24_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl24_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl24_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1181976    filename _pref
1181976  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas";
1181977    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1181978    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural37\EMPUBLISHSCORE.sas.
1181979   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1181980   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1181981   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1181982   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1181983   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1181984   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1181985   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1181986   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1181987   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1181988   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1181989   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1181990   +LENGTH _WARN_ $4
1181991   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1181992   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1181993   +
1181994   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1181995   +
1181996   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1181997   +
1181998   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1181999   +
1182000   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1182001   +
1182002   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1182003   +
1182004   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1182005   +
1182006   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1182007   +
1182008   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1182009   +
1182010   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1182011   +
1182012   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1182013   +
1182014   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1182015   +
1182016   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1182017   +
1182018   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1182019   +
1182020   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1182021   +
1182022   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1182023   +
1182024   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1182025   +
1182026   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1182027   +
1182028   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1182029   +
1182030   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1182031   +
1182032   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1182033   +
1182034   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1182035   +
1182036   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1182037   +
1182038   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1182039   +
1182040   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1182041   +
1182042   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1182043   +
1182044   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1182045   +
1182046   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1182047   +
1182048   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1182049   +
1182050   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1182051   +
1182052   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1182053   +
1182054   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1182055   +
1182056   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1182057   +
1182058   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1182059   +
1182060   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1182061   +
1182062   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1182063   +
1182064   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1182065   +
1182066   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1182067   +
1182068   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1182069   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1182070   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1182071   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1182072   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182073   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182074   +end;
MPRINT(EM_DIAGRAM):   end;
1182075   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182076   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182077   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1182078   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182079   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1182080   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1182081   +   end;
MPRINT(EM_DIAGRAM):   end;
1182082   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1182083   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1182084   +   end;
MPRINT(EM_DIAGRAM):   end;
1182085   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182086   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1182087   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182088   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182089   +   end;
MPRINT(EM_DIAGRAM):   end;
1182090   +end;
MPRINT(EM_DIAGRAM):   end;
1182091   +
1182092   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1182093   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1182094   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1182095   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1182096   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182097   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182098   +end;
MPRINT(EM_DIAGRAM):   end;
1182099   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182100   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182101   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1182102   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182103   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1182104   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1182105   +   end;
MPRINT(EM_DIAGRAM):   end;
1182106   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1182107   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1182108   +   end;
MPRINT(EM_DIAGRAM):   end;
1182109   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182110   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1182111   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182112   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182113   +   end;
MPRINT(EM_DIAGRAM):   end;
1182114   +end;
MPRINT(EM_DIAGRAM):   end;
1182115   +
1182116   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1182117   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1182118   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1182119   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1182120   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182121   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182122   +end;
MPRINT(EM_DIAGRAM):   end;
1182123   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182124   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182125   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1182126   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182127   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1182128   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1182129   +   end;
MPRINT(EM_DIAGRAM):   end;
1182130   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1182131   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1182132   +   end;
MPRINT(EM_DIAGRAM):   end;
1182133   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182134   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1182135   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182136   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182137   +   end;
MPRINT(EM_DIAGRAM):   end;
1182138   +end;
MPRINT(EM_DIAGRAM):   end;
1182139   +
1182140   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1182141   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1182142   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1182143   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1182144   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182145   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182146   +end;
MPRINT(EM_DIAGRAM):   end;
1182147   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182148   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182149   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1182150   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182151   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1182152   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1182153   +   end;
MPRINT(EM_DIAGRAM):   end;
1182154   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1182155   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1182156   +   end;
MPRINT(EM_DIAGRAM):   end;
1182157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182158   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1182159   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182160   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182161   +   end;
MPRINT(EM_DIAGRAM):   end;
1182162   +end;
MPRINT(EM_DIAGRAM):   end;
1182163   +
1182164   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1182165   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1182166   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1182167   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1182168   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182169   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182170   +end;
MPRINT(EM_DIAGRAM):   end;
1182171   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182172   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182173   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1182174   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182175   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1182176   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1182177   +   end;
MPRINT(EM_DIAGRAM):   end;
1182178   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1182179   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1182180   +   end;
MPRINT(EM_DIAGRAM):   end;
1182181   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182182   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1182183   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182184   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182185   +   end;
MPRINT(EM_DIAGRAM):   end;
1182186   +end;
MPRINT(EM_DIAGRAM):   end;
1182187   +
1182188   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1182189   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1182190   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1182191   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1182192   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182193   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182194   +end;
MPRINT(EM_DIAGRAM):   end;
1182195   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182196   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182197   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1182198   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182199   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1182200   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1182201   +   end;
MPRINT(EM_DIAGRAM):   end;
1182202   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1182203   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1182204   +   end;
MPRINT(EM_DIAGRAM):   end;
1182205   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182206   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1182207   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182208   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182209   +   end;
MPRINT(EM_DIAGRAM):   end;
1182210   +end;
MPRINT(EM_DIAGRAM):   end;
1182211   +
1182212   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1182213   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1182214   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1182215   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1182216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182218   +end;
MPRINT(EM_DIAGRAM):   end;
1182219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1182221   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1182222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182223   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1182224   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1182225   +   end;
MPRINT(EM_DIAGRAM):   end;
1182226   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1182227   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1182228   +   end;
MPRINT(EM_DIAGRAM):   end;
1182229   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182230   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1182231   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182232   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182233   +   end;
MPRINT(EM_DIAGRAM):   end;
1182234   +end;
MPRINT(EM_DIAGRAM):   end;
1182235   +
1182236   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1182237   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1182238   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1182239   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1182240   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1182241   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1182242   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1182243   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1182244   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1182245   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1182246   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1182247   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1182248   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182249   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182250   +end;
MPRINT(EM_DIAGRAM):   end;
1182251   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182252   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1182253   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1182254   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182255   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1182256   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1182257   +   end;
MPRINT(EM_DIAGRAM):   end;
1182258   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1182259   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1182260   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1182261   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1182262   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1182263   +   end;
MPRINT(EM_DIAGRAM):   end;
1182264   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1182265   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1182266   +   end;
MPRINT(EM_DIAGRAM):   end;
1182267   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1182268   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1182269   +   end;
MPRINT(EM_DIAGRAM):   end;
1182270   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1182271   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1182272   +   end;
MPRINT(EM_DIAGRAM):   end;
1182273   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182274   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1182275   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1182276   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1182277   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1182278   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182279   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182280   +   end;
MPRINT(EM_DIAGRAM):   end;
1182281   +end;
MPRINT(EM_DIAGRAM):   end;
1182282   +
1182283   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1182284   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1182285   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1182286   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1182287   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1182288   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1182289   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1182290   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1182291   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1182292   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1182293   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1182294   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1182295   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1182296   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1182297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182298   +end;
MPRINT(EM_DIAGRAM):   end;
1182299   +else do;
MPRINT(EM_DIAGRAM):   else do;
1182300   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1182301   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1182302   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1182303   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1182304   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1182305   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1182306   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1182307   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1182308   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1182309   +         end;
MPRINT(EM_DIAGRAM):   end;
1182310   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1182311   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1182312   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1182313   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1182314   +            end;
MPRINT(EM_DIAGRAM):   end;
1182315   +         end;
MPRINT(EM_DIAGRAM):   end;
1182316   +      end;
MPRINT(EM_DIAGRAM):   end;
1182317   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1182318   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1182319   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1182320   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1182321   +         end;
MPRINT(EM_DIAGRAM):   end;
1182322   +      end;
MPRINT(EM_DIAGRAM):   end;
1182323   +   end;
MPRINT(EM_DIAGRAM):   end;
1182324   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1182325   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1182326   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1182327   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1182328   +      end;
MPRINT(EM_DIAGRAM):   end;
1182329   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1182330   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1182331   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1182332   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1182333   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1182334   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1182335   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1182336   +         end;
MPRINT(EM_DIAGRAM):   end;
1182337   +      end;
MPRINT(EM_DIAGRAM):   end;
1182338   +   end;
MPRINT(EM_DIAGRAM):   end;
1182339   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1182340   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1182341   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1182342   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1182343   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1182344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1182345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182346   +   end;
MPRINT(EM_DIAGRAM):   end;
1182347   +end;
MPRINT(EM_DIAGRAM):   end;
1182348   +
1182349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182350   +*** Checking missing input Interval
1182351   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1182352   +
1182353   +IF NMISS(
1182354   +   AcceptedCmpTotal ,
1182355   +   Age ,
1182356   +   Frq ,
1182357   +   Income ,
1182358   +   Kidhome ,
1182359   +   MntFishProducts ,
1182360   +   MntFruits ,
1182361   +   MntGoldProds ,
1182362   +   MntSweetProducts ,
1182363   +   MonthsAsCustomer ,
1182364   +   NumDealsPurchases ,
1182365   +   NumWebVisitsMonth ,
1182366   +   RFMstat ,
1182367   +   RMntFrq ,
1182368   +   Recency ,
1182369   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1182370   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1182371   +
1182372   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1182373   +END;
MPRINT(EM_DIAGRAM):   END;
1182374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182375   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1182376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182377   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1182378   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1182379   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1182380   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1182381   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1182382   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1182383   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1182384   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1182385   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1182386   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1182387   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1182388   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1182389   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1182390   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1182391   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1182392   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1182393   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1182394   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1182395   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1182396   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1182397   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1182398   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1182399   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1182400   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1182401   +END;
MPRINT(EM_DIAGRAM):   END;
1182402   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1182403   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1182404   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1182405   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1182406   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1182407   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1182408   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1182409   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1182410   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1182411   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1182412   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1182413   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1182414   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1182415   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1182416   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1182417   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1182418   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1182419   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1182420   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1182421   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1182422   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1182423   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1182424   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1182425   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1182426   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1182427   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1182428   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1182429   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1182430   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1182431   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1182432   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1182433   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1182434   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1182435   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1182436   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1182437   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1182438   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1182439   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1182440   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1182441   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1182442   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1182443   +END;
MPRINT(EM_DIAGRAM):   END;
1182444   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182445   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1182446   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182447   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182448   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1182449   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182451   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1182452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182453   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1182454   +   H11  =     0.00529231235481 * S_AcceptedCmpTotal  +      0.0343326832257 *
1182455   +        S_Age  +    -0.05203541829299 * S_Frq  +    -0.45089409751085 *
1182456   +        S_Income  +     0.21434017685167 * S_Kidhome
1182457   +          +    -0.00245095061163 * S_MntFishProducts
1182458   +          +     0.05045649639793 * S_MntFruits  +     0.00647541618092 *
1182459   +        S_MntGoldProds  +     0.05644685811145 * S_MntSweetProducts
1182460   +          +     -0.0436897985886 * S_MonthsAsCustomer
1182461   +          +    -0.11066147452589 * S_NumDealsPurchases
1182462   +          +    -0.15815826211613 * S_NumWebVisitsMonth
1182463   +          +    -0.02488895787197 * S_RFMstat  +    -0.07848372303852 *
1182464   +        S_RMntFrq  +     0.44584112602611 * S_Recency
1182465   +          +     0.31802924624272 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00529231235481 * S_AcceptedCmpTotal + 0.0343326832257 * S_Age + 
-0.05203541829299 * S_Frq + -0.45089409751085 * S_Income + 0.21434017685167 * S_Kidhome + 
-0.00245095061163 * S_MntFishProducts + 0.05045649639793 * S_MntFruits + 0.00647541618092 * 
S_MntGoldProds + 0.05644685811145 * S_MntSweetProducts + -0.0436897985886 * S_MonthsAsCustomer 
+ -0.11066147452589 * S_NumDealsPurchases + -0.15815826211613 * S_NumWebVisitsMonth + 
-0.02488895787197 * S_RFMstat + -0.07848372303852 * S_RMntFrq + 0.44584112602611 * S_Recency + 
0.31802924624272 * S_Teenhome ;
1182466   +   H12  =    -0.10209163274452 * S_AcceptedCmpTotal  +     0.11827354067819 *
1182467   +        S_Age  +     1.40350663058769 * S_Frq  +     0.61315172399898 *
1182468   +        S_Income  +    -0.34676303560555 * S_Kidhome
1182469   +          +    -0.19666313381749 * S_MntFishProducts
1182470   +          +     0.02049419497141 * S_MntFruits  +    -0.20582738219797 *
1182471   +        S_MntGoldProds  +    -0.07237052620156 * S_MntSweetProducts
1182472   +          +     0.11921399006499 * S_MonthsAsCustomer
1182473   +          +    -0.67623098057964 * S_NumDealsPurchases
1182474   +          +    -0.59190965073948 * S_NumWebVisitsMonth
1182475   +          +    -0.20613596895241 * S_RFMstat  +    -0.32007172204835 *
1182476   +        S_RMntFrq  +     0.69616846305831 * S_Recency
1182477   +          +     -0.3023019033387 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.10209163274452 * S_AcceptedCmpTotal + 0.11827354067819 * S_Age 
+ 1.40350663058769 * S_Frq + 0.61315172399898 * S_Income + -0.34676303560555 * S_Kidhome + 
-0.19666313381749 * S_MntFishProducts + 0.02049419497141 * S_MntFruits + -0.20582738219797 * 
S_MntGoldProds + -0.07237052620156 * S_MntSweetProducts + 0.11921399006499 * 
S_MonthsAsCustomer + -0.67623098057964 * S_NumDealsPurchases + -0.59190965073948 * 
S_NumWebVisitsMonth + -0.20613596895241 * S_RFMstat + -0.32007172204835 * S_RMntFrq + 
0.69616846305831 * S_Recency + -0.3023019033387 * S_Teenhome ;
1182478   +   H11  = H11  +     0.19876934538613 * AcceptedCmp10
1182479   +          +     0.18951634162327 * AcceptedCmp20  +     0.24251361227823 *
1182480   +        AcceptedCmp30  +     0.16680588614581 * AcceptedCmp40
1182481   +          +     0.15217121708385 * AcceptedCmp50  +    -0.06185934853348 *
1182482   +        Complain0  +    -0.02156128066423 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19876934538613 * AcceptedCmp10 + 0.18951634162327 * 
AcceptedCmp20 + 0.24251361227823 * AcceptedCmp30 + 0.16680588614581 * AcceptedCmp40 + 
0.15217121708385 * AcceptedCmp50 + -0.06185934853348 * Complain0 + -0.02156128066423 * 
HigherEducationBinary0 ;
1182483   +   H12  = H12  +     0.42936838873103 * AcceptedCmp10
1182484   +          +     0.31531206230129 * AcceptedCmp20  +     0.61595858080275 *
1182485   +        AcceptedCmp30  +    -0.02848071087974 * AcceptedCmp40
1182486   +          +     0.26463885464849 * AcceptedCmp50  +    -0.25408897937456 *
1182487   +        Complain0  +     0.37165308117925 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42936838873103 * AcceptedCmp10 + 0.31531206230129 * 
AcceptedCmp20 + 0.61595858080275 * AcceptedCmp30 + -0.02848071087974 * AcceptedCmp40 + 
0.26463885464849 * AcceptedCmp50 + -0.25408897937456 * Complain0 + 0.37165308117925 * 
HigherEducationBinary0 ;
1182488   +   H11  = H11  +    -0.06004623502296 * Education2n_Cycle
1182489   +          +    -0.14055981460472 * EducationBasic  +    -0.02226325005028 *
1182490   +        EducationGraduation  +     0.17382426297237 * EducationMaster
1182491   +          +    -0.09599098826432 * Marital_StatusDivorced
1182492   +          +     0.29380773989654 * Marital_StatusMarried
1182493   +          +    -0.24344588832351 * Marital_StatusSingle
1182494   +          +     0.26861619886367 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06004623502296 * Education2n_Cycle + -0.14055981460472 * 
EducationBasic + -0.02226325005028 * EducationGraduation + 0.17382426297237 * EducationMaster 
+ -0.09599098826432 * Marital_StatusDivorced + 0.29380773989654 * Marital_StatusMarried + 
-0.24344588832351 * Marital_StatusSingle + 0.26861619886367 * Marital_StatusTogether ;
1182495   +   H12  = H12  +    -0.05553559517027 * Education2n_Cycle
1182496   +          +     0.10110187812592 * EducationBasic  +    -0.01454720780814 *
1182497   +        EducationGraduation  +    -0.23207789950977 * EducationMaster
1182498   +          +    -0.18210246138549 * Marital_StatusDivorced
1182499   +          +    -0.33707503901978 * Marital_StatusMarried
1182500   +          +     0.45975144433549 * Marital_StatusSingle
1182501   +          +    -0.30223475265715 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05553559517027 * Education2n_Cycle + 0.10110187812592 * 
EducationBasic + -0.01454720780814 * EducationGraduation + -0.23207789950977 * EducationMaster 
+ -0.18210246138549 * Marital_StatusDivorced + -0.33707503901978 * Marital_StatusMarried + 
0.45975144433549 * Marital_StatusSingle + -0.30223475265715 * Marital_StatusTogether ;
1182502   +   H11  =    -0.01761609034495 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.01761609034495 + H11 ;
1182503   +   H12  =     1.54520059814945 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.54520059814945 + H12 ;
1182504   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1182505   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1182506   +END;
MPRINT(EM_DIAGRAM):   END;
1182507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1182508   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1182509   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1182510   +END;
MPRINT(EM_DIAGRAM):   END;
1182511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182512   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1182513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182514   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1182515   +   P_DepVar1  =    -5.00819716007083 * H11  +    -2.90644970096905 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.00819716007083 * H11 + -2.90644970096905 * H12 ;
1182516   +   P_DepVar1  =     0.91635286006129 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.91635286006129 + P_DepVar1 ;
1182517   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1182518   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1182519   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1182520   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1182521   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1182522   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1182523   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1182524   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1182525   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1182526   +END;
MPRINT(EM_DIAGRAM):   END;
1182527   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1182528   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1182529   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1182530   +END;
MPRINT(EM_DIAGRAM):   END;
1182531   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1182532   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1182533   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1182534   +END;
MPRINT(EM_DIAGRAM):   END;
1182535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182536   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1182537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1182538   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1182539   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1182540   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1182541   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1182542   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1182543   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1182544   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1182545   +END;
MPRINT(EM_DIAGRAM):   END;
1182546   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1182547   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1182548   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1182549   +drop
1182550   +H11
1182551   +H12
1182552   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1182553   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1182554    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1182555    quit;
1182556    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1182557    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1182558    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1182559    retain ID 2 Node "Neural37";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural37";
1182560    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1182561    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182562    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1182563    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182564    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1599 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1599 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182565    proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural37_variableset out=_temp2(keep=NAME CREATOR);
1182566    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL37_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182568    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182569    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1182570    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1182571    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182572    proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural37_train out=_meta(keep=NAME) noprint;
1182573    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182574    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1182575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182576    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182577    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182578    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1182579    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182580    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182581    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1182582    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1182582  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 887 rows and 5 columns.

1182583    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182584    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1182585    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 887 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 887 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1182586    filename _pref
1182586  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1182587    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1182588    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1182589   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1182590   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1182591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1182592   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1182593   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1182594   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1182595    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1182596    quit;
1182597    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1182598    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1182599    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1182600    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1182601    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1182602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182603    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1182604    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182605    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182606    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1182607    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182609    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182610    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1182611    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1182612    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182613    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1182614    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182615    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1182616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182617    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1182618    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182619    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1182620    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182621    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182622    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1182623    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1182623  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1182624    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182625    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1182626    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 891 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182627    filename _pref
1182627  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1182628    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1182629    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1182630   +
1182631   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1182632   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1182632  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1182633   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1182634   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1182635   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1182636   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1182637   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1182638    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1182639    quit;
1182640    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1182641    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1182642    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1182643    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1182644    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1182645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182646    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1182647    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182648    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182649    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1182650    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182652    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182653    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1182654    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1182655    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182656    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1182657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182658    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1182659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182660    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182661    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182662    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1182663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182664    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182665    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1182666    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1182666  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1182667    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182668    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1182669    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 930 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182670    filename _pref
1182670  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1182671    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1182672    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1182673   +
1182674   +
1182675   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1182676   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1182677   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1182678   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1182679   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1182680   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182681   +
1182682   +
1182683   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1182684   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1182685   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1182686   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1182687   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1182688   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182689   +
1182690   +
1182691   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1182692   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1182693   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1182694   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1182695   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1182696   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182697   +
1182698   +
1182699   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1182700   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1182701   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1182702   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1182703   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1182704   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182705   +
1182706   +
1182707   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1182708   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1182709   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1182710   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1182711   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1182712   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182713   +
1182714   +
1182715   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1182716   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1182717   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1182718   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1182719   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1182720   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182721   +
1182722   +
1182723   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1182724   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1182725   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1182726   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1182727   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1182728   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182729   +
1182730   +
1182731   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1182732   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1182733   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1182734   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1182735   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1182736   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1182737   +if
1182738   +_FILTERNORM1 not in ( '.')
1182739   + and
1182740   +_FILTERNORM2 not in ( '.')
1182741   + and
1182742   +_FILTERNORM3 not in ( '.')
1182743   + and
1182744   +_FILTERNORM4 not in ( '.')
1182745   + and
1182746   +_FILTERNORM5 not in ( '.')
1182747   + and
1182748   +_FILTERNORM6 not in ( '.')
1182749   + and
1182750   +_FILTERNORM7 not in ( ' ')
1182751   + and
1182752   +_FILTERNORM8 not in ( ' ')
1182753   +and
1182754   +( Dt_Customer ne .)
1182755   +and ( Income ne . and (Income<=107000))
1182756   +and ( Kidhome ne .)
1182757   +and ( MntFishProducts ne .)
1182758   +and ( MntFruits ne .)
1182759   +and ( MntGoldProds ne .)
1182760   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1182761   +and ( MntSweetProducts ne .)
1182762   +and ( MntWines ne .)
1182763   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1182764   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1182765   +and ( NumStorePurchases ne .)
1182766   +and ( NumWebPurchases ne .)
1182767   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1182768   +and ( Recency ne .)
1182769   +and ( Teenhome ne .)
1182770   +and ( Year_Birth ne .)
1182771   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1182772   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1182773   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1182774   +end;
MPRINT(EM_DIAGRAM):   end;
1182775   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1182776   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1182777    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1182778    quit;
1182779    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1182780    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1182781    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1182782    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1182783    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1182784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182785    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1182786    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182787    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182788    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1182789    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182791    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182792    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1182793    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1182794    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182795    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1182796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1182797    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1182798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182799    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1182801    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1182802    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1182803    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182804    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1182805    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1182805  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1182806    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182807    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1182808    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 996 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182809    %macro varDept(fcmpdata=,id=);
1182810    %global nobs&id scoreFlag&id;
1182811    %let scoreFlag&id = 0;
1182812    %if &id=1 or ^&fcmpStart %then %do;
1182813    proc sort data=&fcmpdata out=_temp&id nodupkey;
1182814    by NAME;
1182815    where id=&id and LHS in( %let j=1;
1182816    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1182817    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1182818    "&var" %let j = %eval(&j+1);
1182819    %end;
1182820    );
1182821    run;
1182822    %let dsid = %sysfunc(open(_temp&id));
1182823    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1182824    %let dsid = %sysfunc(close(&dsid));
1182825    %if &&nobs&id %then %do;
1182826    %let scoreFlag&id = 1;
1182827    %let fcmpStart = 1;
1182828    %end;
1182829    %else %let fcmpStart = 0;
1182830    %end;
1182831    %else %do;
1182832    proc sort data=&fcmpdata out=_tempid;
1182833    where id=&id;
1182834    by LHS;
1182835    run;
1182836    %let dsid = %sysfunc(open(_tempid));
1182837    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1182838    %let dsid = %sysfunc(close(&dsid));
1182839    %if ^&&nobs&id %then %do;
1182840    proc datasets lib=work nolist;
1182841    delete _tempid;
1182842    run;
1182843    quit;
1182844    %end;
1182845    %else %do;
1182846    data _tempAll;
1182847    set %let j=%eval(&id-1);
1182848    %do x=1 %to &j;
1182849    %if &&nobs&x %then %do;
1182850    _temp&x %end;
1182851    %end;
1182852    ;
1182853    run;
1182854    proc sql;
1182855    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1182855  ! work._tempid p2 where p.name=p2.lhs;
1182856    quit;
1182857    data _temp&id;
1182858    set _temp&id;
1182859    where LHS ne '' and NAME ne '' and Node ne '';
1182860    run;
1182861    proc datasets lib=work nolist;
1182862    delete _tempAll;
1182863    run;
1182864    %let dsid = %sysfunc(open(_temp&id));
1182865    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1182866    %let dsid = %sysfunc(close(&dsid));
1182867    %if ^&&nobs&id %then %do;
1182868    proc datasets lib=work nolist;
1182869    delete _temp&id;
1182870    run;
1182871    quit;
1182872    %end;
1182873    %else %do;
1182874    %let scoreFlag&id = 1;
1182875    data _temp&id;
1182876    set _temp&id;
1182877    where LHS ne NAME and node ne '';
1182878    run;
1182879    %let dsid = %sysfunc(open(_temp&id));
1182880    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1182881    %let dsid = %sysfunc(close(&dsid));
1182882    %if ^&&nobs&id %then %do;
1182883    proc datasets lib=work nolist;
1182884    delete _temp&id;
1182885    run;
1182886    quit;
1182887    %end;
1182888    %else %do;
1182889    proc sort data=_temp&id nodupkey;
1182890    by LHS NAME;
1182891    run;
1182892    %end;
1182893    %end;
1182894    %end;
1182895    %end;
1182896    %mend varDept;
1182897    %macro optCode(outdata=fcmpdata);
1182898    %global fcmpStart;
1182899    %let fcmpStart = 0;
1182900    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1182901    %let NumNodes=9;
1182902    %do k=1 %to &NumNodes;
1182903    %vardept(fcmpdata=&outdata, id=&k);
1182904    %end;
1182905    %mend optCode;
1182906    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1182907    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1182908    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1182909    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1182910    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182911    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1182912    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1182913    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1182914    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1182915    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1182916    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1182916  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1182917    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1182918    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1182919    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1182920    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1182921    filename _pref
1182921  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas";
1182922    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1182923    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMPUBLISHSCORE.sas.
1182924   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1182925   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1182926   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1182927   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1182928   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1182929   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1182930   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1182931   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1182932   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1182933   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1182934   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1182935   +LENGTH _WARN_ $4
1182936   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1182937   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1182938   +
1182939   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1182940   +
1182941   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1182942   +
1182943   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1182944   +
1182945   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1182946   +
1182947   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1182948   +
1182949   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1182950   +
1182951   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1182952   +
1182953   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1182954   +
1182955   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1182956   +
1182957   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1182958   +
1182959   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1182960   +
1182961   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1182962   +
1182963   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1182964   +
1182965   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1182966   +
1182967   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1182968   +
1182969   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1182970   +
1182971   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1182972   +
1182973   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1182974   +
1182975   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1182976   +
1182977   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1182978   +
1182979   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1182980   +
1182981   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1182982   +
1182983   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1182984   +
1182985   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1182986   +
1182987   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1182988   +
1182989   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1182990   +
1182991   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1182992   +
1182993   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1182994   +
1182995   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1182996   +
1182997   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1182998   +
1182999   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1183000   +
1183001   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1183002   +
1183003   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1183004   +
1183005   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1183006   +
1183007   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1183008   +
1183009   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1183010   +
1183011   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1183012   +
1183013   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1183014   +
1183015   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1183016   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1183017   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1183018   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1183019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183021   +end;
MPRINT(EM_DIAGRAM):   end;
1183022   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183023   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183024   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1183025   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183026   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1183027   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1183028   +   end;
MPRINT(EM_DIAGRAM):   end;
1183029   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1183030   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1183031   +   end;
MPRINT(EM_DIAGRAM):   end;
1183032   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183033   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1183034   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183035   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183036   +   end;
MPRINT(EM_DIAGRAM):   end;
1183037   +end;
MPRINT(EM_DIAGRAM):   end;
1183038   +
1183039   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1183040   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1183041   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1183042   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1183043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183045   +end;
MPRINT(EM_DIAGRAM):   end;
1183046   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183048   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1183049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183050   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1183051   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1183052   +   end;
MPRINT(EM_DIAGRAM):   end;
1183053   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1183054   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1183055   +   end;
MPRINT(EM_DIAGRAM):   end;
1183056   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183057   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1183058   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183059   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183060   +   end;
MPRINT(EM_DIAGRAM):   end;
1183061   +end;
MPRINT(EM_DIAGRAM):   end;
1183062   +
1183063   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1183064   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1183065   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1183066   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1183067   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183069   +end;
MPRINT(EM_DIAGRAM):   end;
1183070   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183071   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183072   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1183073   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183074   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1183075   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1183076   +   end;
MPRINT(EM_DIAGRAM):   end;
1183077   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1183078   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1183079   +   end;
MPRINT(EM_DIAGRAM):   end;
1183080   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183081   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1183082   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183083   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183084   +   end;
MPRINT(EM_DIAGRAM):   end;
1183085   +end;
MPRINT(EM_DIAGRAM):   end;
1183086   +
1183087   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1183088   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1183089   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1183090   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1183091   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183092   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183093   +end;
MPRINT(EM_DIAGRAM):   end;
1183094   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183095   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183096   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1183097   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183098   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1183099   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1183100   +   end;
MPRINT(EM_DIAGRAM):   end;
1183101   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1183102   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1183103   +   end;
MPRINT(EM_DIAGRAM):   end;
1183104   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183105   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1183106   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183107   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183108   +   end;
MPRINT(EM_DIAGRAM):   end;
1183109   +end;
MPRINT(EM_DIAGRAM):   end;
1183110   +
1183111   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1183112   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1183113   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1183114   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1183115   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183116   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183117   +end;
MPRINT(EM_DIAGRAM):   end;
1183118   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183119   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183120   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1183121   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183122   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1183123   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1183124   +   end;
MPRINT(EM_DIAGRAM):   end;
1183125   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1183126   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1183127   +   end;
MPRINT(EM_DIAGRAM):   end;
1183128   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183129   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1183130   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183131   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183132   +   end;
MPRINT(EM_DIAGRAM):   end;
1183133   +end;
MPRINT(EM_DIAGRAM):   end;
1183134   +
1183135   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1183136   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1183137   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1183138   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1183139   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183140   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183141   +end;
MPRINT(EM_DIAGRAM):   end;
1183142   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183143   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183144   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1183145   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183146   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1183147   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1183148   +   end;
MPRINT(EM_DIAGRAM):   end;
1183149   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1183150   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1183151   +   end;
MPRINT(EM_DIAGRAM):   end;
1183152   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183153   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1183154   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183155   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183156   +   end;
MPRINT(EM_DIAGRAM):   end;
1183157   +end;
MPRINT(EM_DIAGRAM):   end;
1183158   +
1183159   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1183160   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1183161   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1183162   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1183163   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183164   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183165   +end;
MPRINT(EM_DIAGRAM):   end;
1183166   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183167   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1183168   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1183169   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183170   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1183171   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1183172   +   end;
MPRINT(EM_DIAGRAM):   end;
1183173   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1183174   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1183175   +   end;
MPRINT(EM_DIAGRAM):   end;
1183176   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183177   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1183178   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183179   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183180   +   end;
MPRINT(EM_DIAGRAM):   end;
1183181   +end;
MPRINT(EM_DIAGRAM):   end;
1183182   +
1183183   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1183184   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1183185   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1183186   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1183187   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1183188   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1183189   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1183190   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1183191   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1183192   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1183193   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1183194   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1183195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183197   +end;
MPRINT(EM_DIAGRAM):   end;
1183198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183199   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1183200   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1183201   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183202   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1183203   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1183204   +   end;
MPRINT(EM_DIAGRAM):   end;
1183205   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1183206   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1183207   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1183208   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1183209   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1183210   +   end;
MPRINT(EM_DIAGRAM):   end;
1183211   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1183212   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1183213   +   end;
MPRINT(EM_DIAGRAM):   end;
1183214   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1183215   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1183216   +   end;
MPRINT(EM_DIAGRAM):   end;
1183217   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1183218   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1183219   +   end;
MPRINT(EM_DIAGRAM):   end;
1183220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183221   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1183222   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1183223   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1183224   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1183225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183227   +   end;
MPRINT(EM_DIAGRAM):   end;
1183228   +end;
MPRINT(EM_DIAGRAM):   end;
1183229   +
1183230   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1183231   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1183232   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1183233   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1183234   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1183235   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1183236   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1183237   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1183238   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1183239   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1183240   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1183241   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1183242   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1183243   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183244   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183245   +end;
MPRINT(EM_DIAGRAM):   end;
1183246   +else do;
MPRINT(EM_DIAGRAM):   else do;
1183247   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1183248   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1183249   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1183250   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1183251   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1183252   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1183253   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1183254   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1183255   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1183256   +         end;
MPRINT(EM_DIAGRAM):   end;
1183257   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1183258   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1183259   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1183260   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1183261   +            end;
MPRINT(EM_DIAGRAM):   end;
1183262   +         end;
MPRINT(EM_DIAGRAM):   end;
1183263   +      end;
MPRINT(EM_DIAGRAM):   end;
1183264   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1183265   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1183266   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1183267   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1183268   +         end;
MPRINT(EM_DIAGRAM):   end;
1183269   +      end;
MPRINT(EM_DIAGRAM):   end;
1183270   +   end;
MPRINT(EM_DIAGRAM):   end;
1183271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1183272   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1183273   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1183274   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1183275   +      end;
MPRINT(EM_DIAGRAM):   end;
1183276   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1183277   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1183278   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1183279   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1183280   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1183281   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1183282   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1183283   +         end;
MPRINT(EM_DIAGRAM):   end;
1183284   +      end;
MPRINT(EM_DIAGRAM):   end;
1183285   +   end;
MPRINT(EM_DIAGRAM):   end;
1183286   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1183287   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1183288   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1183289   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1183290   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1183291   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1183292   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183293   +   end;
MPRINT(EM_DIAGRAM):   end;
1183294   +end;
MPRINT(EM_DIAGRAM):   end;
1183295   +
1183296   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183297   +*** Checking missing input Interval
1183298   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1183299   +
1183300   +IF NMISS(
1183301   +   AcceptedCmpTotal ,
1183302   +   Age ,
1183303   +   Frq ,
1183304   +   Income ,
1183305   +   Kidhome ,
1183306   +   MntFishProducts ,
1183307   +   MntFruits ,
1183308   +   MntGoldProds ,
1183309   +   MntSweetProducts ,
1183310   +   MonthsAsCustomer ,
1183311   +   NumDealsPurchases ,
1183312   +   NumWebVisitsMonth ,
1183313   +   RFMstat ,
1183314   +   RMntFrq ,
1183315   +   Recency ,
1183316   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1183317   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1183318   +
1183319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183320   +END;
MPRINT(EM_DIAGRAM):   END;
1183321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183322   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1183323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183324   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1183325   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1183326   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1183327   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1183328   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1183329   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1183330   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1183331   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1183332   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1183333   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1183334   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1183335   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1183336   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1183337   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1183338   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1183339   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1183340   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1183341   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1183342   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1183343   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1183344   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1183345   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1183346   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1183347   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1183348   +END;
MPRINT(EM_DIAGRAM):   END;
1183349   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1183350   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1183351   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1183352   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1183353   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1183354   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1183355   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1183356   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1183357   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1183358   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1183359   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1183360   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1183361   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1183362   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1183363   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1183364   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1183365   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1183366   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1183367   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1183368   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1183369   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1183370   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1183371   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1183372   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1183373   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1183374   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1183375   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1183376   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1183377   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1183378   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1183379   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1183380   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1183381   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1183382   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1183383   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1183384   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1183385   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1183386   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1183387   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1183388   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1183389   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1183390   +END;
MPRINT(EM_DIAGRAM):   END;
1183391   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183392   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1183393   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183394   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183395   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1183396   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183397   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183398   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1183399   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183400   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1183401   +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
1183402   +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
1183403   +        S_Income  +    -0.29829037747286 * S_Kidhome
1183404   +          +    -0.18720823453547 * S_MntFishProducts
1183405   +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
1183406   +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
1183407   +          +    -0.06646294977493 * S_MonthsAsCustomer
1183408   +          +    -0.37026551859537 * S_NumDealsPurchases
1183409   +          +    -0.14222086870703 * S_NumWebVisitsMonth
1183410   +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
1183411   +        S_RMntFrq  +     0.16089693413185 * S_Recency
1183412   +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
1183413   +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
1183414   +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
1183415   +        S_Income  +    -0.83201267605135 * S_Kidhome
1183416   +          +    -0.09483355610222 * S_MntFishProducts
1183417   +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
1183418   +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
1183419   +          +     0.36008195182034 * S_MonthsAsCustomer
1183420   +          +    -0.13663022832818 * S_NumDealsPurchases
1183421   +          +    -0.43055337001488 * S_NumWebVisitsMonth
1183422   +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
1183423   +        S_RMntFrq  +    -0.13626348763752 * S_Recency
1183424   +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
1183425   +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
1183426   +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
1183427   +        S_Income  +     0.25780281448124 * S_Kidhome
1183428   +          +     0.04440164182166 * S_MntFishProducts
1183429   +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
1183430   +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
1183431   +          +     0.11601256317603 * S_MonthsAsCustomer
1183432   +          +    -0.06382091961731 * S_NumDealsPurchases
1183433   +          +    -0.31707488359351 * S_NumWebVisitsMonth
1183434   +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
1183435   +        S_RMntFrq  +     0.39922359779347 * S_Recency
1183436   +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
1183437   +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
1183438   +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
1183439   +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
1183440   +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
1183441   +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
1183442   +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
1183443   +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
1183444   +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
1183445   +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
1183446   +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
1183447   +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
1183448   +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
1183449   +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
1183450   +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
1183451   +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
1183452   +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
1183453   +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
1183454   +        EducationGraduation  +    -0.22350316846433 * EducationMaster
1183455   +          +     0.18754186259114 * Marital_StatusDivorced
1183456   +          +    -0.11988223819284 * Marital_StatusMarried
1183457   +          +    -0.02283707816223 * Marital_StatusSingle
1183458   +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
1183459   +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
1183460   +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
1183461   +        EducationGraduation  +    -0.24880728981933 * EducationMaster
1183462   +          +    -0.28983318463941 * Marital_StatusDivorced
1183463   +          +    -0.74851149560881 * Marital_StatusMarried
1183464   +          +      0.7618336919202 * Marital_StatusSingle
1183465   +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
1183466   +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
1183467   +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
1183468   +        EducationGraduation  +     0.20925521527006 * EducationMaster
1183469   +          +    -0.33639004627791 * Marital_StatusDivorced
1183470   +          +     0.12327415586833 * Marital_StatusMarried
1183471   +          +      0.0060971946845 * Marital_StatusSingle
1183472   +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
1183473   +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
1183474   +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
1183475   +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
1183476   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1183477   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1183478   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1183479   +END;
MPRINT(EM_DIAGRAM):   END;
1183480   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1183481   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1183482   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1183483   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1183484   +END;
MPRINT(EM_DIAGRAM):   END;
1183485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183486   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1183487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183488   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1183489   +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
1183490   +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
1183491   +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
1183492   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1183493   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1183494   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1183495   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1183496   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1183497   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1183498   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1183499   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1183500   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1183501   +END;
MPRINT(EM_DIAGRAM):   END;
1183502   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1183503   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1183504   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1183505   +END;
MPRINT(EM_DIAGRAM):   END;
1183506   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1183507   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1183508   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1183509   +END;
MPRINT(EM_DIAGRAM):   END;
1183510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183511   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1183512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1183513   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1183514   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1183515   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1183516   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1183517   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1183518   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1183519   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1183520   +END;
MPRINT(EM_DIAGRAM):   END;
1183521   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1183522   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1183523   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1183524   +drop
1183525   +H11
1183526   +H12
1183527   +H13
1183528   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1183529   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1183530    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1183531    quit;
1183532    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1183533    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1183534    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1183535    retain ID 2 Node "Neural38";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural38";
1183536    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1183537    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183538    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1183539    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183540    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1745 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1745 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183541    proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural38_variableset out=_temp2(keep=NAME CREATOR);
1183542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL38_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183544    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183545    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1183546    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1183547    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183548    proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural38_train out=_meta(keep=NAME) noprint;
1183549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1183550    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1183551    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183552    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183553    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183554    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1183555    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183556    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183557    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1183558    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1183558  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 937 rows and 5 columns.

1183559    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183560    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1183561    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 937 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 937 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183562    filename _pref
1183562  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1183563    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1183564    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1183565   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1183566   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1183567   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1183568   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1183569   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1183570   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1183571    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1183572    quit;
1183573    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1183574    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1183575    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1183576    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1183577    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1183578    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183579    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1183580    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183581    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183582    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1183583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183585    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183586    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1183587    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1183588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183589    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1183590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1183591    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1183592    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183593    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183594    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183595    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1183596    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183597    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183598    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1183599    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1183599  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1183600    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183601    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1183602    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183603    filename _pref
1183603  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1183604    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1183605    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1183606   +
1183607   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1183608   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1183608  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1183609   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1183610   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1183611   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1183612   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1183613   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1183614    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1183615    quit;
1183616    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1183617    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1183618    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1183619    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1183620    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1183621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183622    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1183623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183625    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1183626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183629    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1183630    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1183631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183632    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1183633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183634    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1183635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183637    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183638    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1183639    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183640    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183641    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1183642    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1183642  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1183643    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183644    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1183645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 980 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183646    filename _pref
1183646  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1183647    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1183648    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1183649   +
1183650   +
1183651   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1183652   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1183653   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1183654   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1183655   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1183656   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183657   +
1183658   +
1183659   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1183660   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1183661   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1183662   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1183663   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1183664   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183665   +
1183666   +
1183667   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1183668   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1183669   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1183670   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1183671   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1183672   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183673   +
1183674   +
1183675   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1183676   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1183677   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1183678   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1183679   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1183680   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183681   +
1183682   +
1183683   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1183684   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1183685   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1183686   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1183687   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1183688   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183689   +
1183690   +
1183691   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1183692   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1183693   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1183694   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1183695   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1183696   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183697   +
1183698   +
1183699   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1183700   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1183701   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1183702   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1183703   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1183704   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183705   +
1183706   +
1183707   +length _FILTERFMT8  $200;
The SAS System

MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1183708   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1183709   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1183710   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1183711   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1183712   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1183713   +if
1183714   +_FILTERNORM1 not in ( '.')
1183715   + and
1183716   +_FILTERNORM2 not in ( '.')
1183717   + and
1183718   +_FILTERNORM3 not in ( '.')
1183719   + and
1183720   +_FILTERNORM4 not in ( '.')
1183721   + and
1183722   +_FILTERNORM5 not in ( '.')
1183723   + and
1183724   +_FILTERNORM6 not in ( '.')
1183725   + and
1183726   +_FILTERNORM7 not in ( ' ')
1183727   + and
1183728   +_FILTERNORM8 not in ( ' ')
1183729   +and
1183730   +( Dt_Customer ne .)
1183731   +and ( Income ne . and (Income<=107000))
1183732   +and ( Kidhome ne .)
1183733   +and ( MntFishProducts ne .)
1183734   +and ( MntFruits ne .)
1183735   +and ( MntGoldProds ne .)
1183736   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1183737   +and ( MntSweetProducts ne .)
1183738   +and ( MntWines ne .)
1183739   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1183740   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1183741   +and ( NumStorePurchases ne .)
1183742   +and ( NumWebPurchases ne .)
1183743   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1183744   +and ( Recency ne .)
1183745   +and ( Teenhome ne .)
1183746   +and ( Year_Birth ne .)
1183747   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1183748   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1183749   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1183750   +end;
MPRINT(EM_DIAGRAM):   end;
1183751   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1183752   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1183753    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1183754    quit;
1183755    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1183756    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1183757    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1183758    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1183759    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1183760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183761    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1183762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183763    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183764    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1183765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183767    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183768    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1183769    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1183770    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183771    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1183772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183773    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1183774    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183775    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183776    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1183777    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1183778    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1183779    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183780    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1183781    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1183781  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1183782    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183783    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1183784    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1046 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183785    %macro varDept(fcmpdata=,id=);
1183786    %global nobs&id scoreFlag&id;
1183787    %let scoreFlag&id = 0;
1183788    %if &id=1 or ^&fcmpStart %then %do;
1183789    proc sort data=&fcmpdata out=_temp&id nodupkey;
1183790    by NAME;
1183791    where id=&id and LHS in( %let j=1;
1183792    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1183793    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1183794    "&var" %let j = %eval(&j+1);
1183795    %end;
1183796    );
1183797    run;
1183798    %let dsid = %sysfunc(open(_temp&id));
1183799    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1183800    %let dsid = %sysfunc(close(&dsid));
1183801    %if &&nobs&id %then %do;
1183802    %let scoreFlag&id = 1;
1183803    %let fcmpStart = 1;
1183804    %end;
1183805    %else %let fcmpStart = 0;
1183806    %end;
1183807    %else %do;
1183808    proc sort data=&fcmpdata out=_tempid;
1183809    where id=&id;
1183810    by LHS;
1183811    run;
1183812    %let dsid = %sysfunc(open(_tempid));
1183813    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1183814    %let dsid = %sysfunc(close(&dsid));
1183815    %if ^&&nobs&id %then %do;
1183816    proc datasets lib=work nolist;
1183817    delete _tempid;
1183818    run;
1183819    quit;
1183820    %end;
1183821    %else %do;
1183822    data _tempAll;
1183823    set %let j=%eval(&id-1);
1183824    %do x=1 %to &j;
1183825    %if &&nobs&x %then %do;
1183826    _temp&x %end;
1183827    %end;
1183828    ;
1183829    run;
1183830    proc sql;
1183831    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1183831  ! work._tempid p2 where p.name=p2.lhs;
1183832    quit;
1183833    data _temp&id;
1183834    set _temp&id;
1183835    where LHS ne '' and NAME ne '' and Node ne '';
1183836    run;
1183837    proc datasets lib=work nolist;
1183838    delete _tempAll;
1183839    run;
1183840    %let dsid = %sysfunc(open(_temp&id));
1183841    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1183842    %let dsid = %sysfunc(close(&dsid));
1183843    %if ^&&nobs&id %then %do;
1183844    proc datasets lib=work nolist;
1183845    delete _temp&id;
1183846    run;
1183847    quit;
1183848    %end;
1183849    %else %do;
1183850    %let scoreFlag&id = 1;
1183851    data _temp&id;
1183852    set _temp&id;
1183853    where LHS ne NAME and node ne '';
1183854    run;
1183855    %let dsid = %sysfunc(open(_temp&id));
1183856    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1183857    %let dsid = %sysfunc(close(&dsid));
1183858    %if ^&&nobs&id %then %do;
1183859    proc datasets lib=work nolist;
1183860    delete _temp&id;
1183861    run;
1183862    quit;
1183863    %end;
1183864    %else %do;
1183865    proc sort data=_temp&id nodupkey;
1183866    by LHS NAME;
1183867    run;
1183868    %end;
1183869    %end;
1183870    %end;
1183871    %end;
1183872    %mend varDept;
1183873    %macro optCode(outdata=fcmpdata);
1183874    %global fcmpStart;
1183875    %let fcmpStart = 0;
1183876    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1183877    %let NumNodes=9;
1183878    %do k=1 %to &NumNodes;
1183879    %vardept(fcmpdata=&outdata, id=&k);
1183880    %end;
1183881    %mend optCode;
1183882    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1183883    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1183884    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1183885    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1183886    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183887    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1183888    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1183889    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1183890    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1183891    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1183892    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1183892  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1183893    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1183894    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1183895    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1183896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1183897    filename _pref
1183897  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas";
1183898    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1183899    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural39\EMPUBLISHSCORE.sas.
1183900   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1183901   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1183902   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1183903   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1183904   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1183905   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1183906   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1183907   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1183908   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1183909   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1183910   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1183911   +LENGTH _WARN_ $4
1183912   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1183913   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1183914   +
1183915   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1183916   +
1183917   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1183918   +
1183919   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1183920   +
1183921   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1183922   +
1183923   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1183924   +
1183925   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1183926   +
1183927   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1183928   +
1183929   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1183930   +
1183931   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1183932   +
1183933   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1183934   +
1183935   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1183936   +
1183937   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1183938   +
1183939   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1183940   +
1183941   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1183942   +
1183943   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1183944   +
1183945   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1183946   +
1183947   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1183948   +
1183949   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1183950   +
1183951   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1183952   +
1183953   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1183954   +
1183955   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1183956   +
1183957   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1183958   +
1183959   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1183960   +
1183961   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1183962   +
1183963   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1183964   +
1183965   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1183966   +
1183967   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1183968   +
1183969   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1183970   +
1183971   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1183972   +
1183973   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1183974   +
1183975   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1183976   +
1183977   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1183978   +
1183979   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1183980   +
1183981   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1183982   +
1183983   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1183984   +
1183985   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1183986   +
1183987   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1183988   +
1183989   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1183990   +
1183991   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1183992   +
1183993   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1183994   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1183995   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1183996   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1183997   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1183998   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1183999   +end;
MPRINT(EM_DIAGRAM):   end;
1184000   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184001   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184002   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1184003   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184004   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184005   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1184006   +   end;
MPRINT(EM_DIAGRAM):   end;
1184007   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184008   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1184009   +   end;
MPRINT(EM_DIAGRAM):   end;
1184010   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184011   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1184012   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184013   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184014   +   end;
MPRINT(EM_DIAGRAM):   end;
1184015   +end;
MPRINT(EM_DIAGRAM):   end;
1184016   +
1184017   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1184018   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1184019   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1184020   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1184021   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184022   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184023   +end;
MPRINT(EM_DIAGRAM):   end;
1184024   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184025   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184026   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1184027   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184028   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184029   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1184030   +   end;
MPRINT(EM_DIAGRAM):   end;
1184031   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184032   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1184033   +   end;
MPRINT(EM_DIAGRAM):   end;
1184034   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184035   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1184036   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184037   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184038   +   end;
MPRINT(EM_DIAGRAM):   end;
1184039   +end;
MPRINT(EM_DIAGRAM):   end;
1184040   +
1184041   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1184042   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1184043   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1184044   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1184045   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184046   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184047   +end;
MPRINT(EM_DIAGRAM):   end;
1184048   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184049   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184050   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1184051   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184052   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184053   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1184054   +   end;
MPRINT(EM_DIAGRAM):   end;
1184055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184056   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1184057   +   end;
MPRINT(EM_DIAGRAM):   end;
1184058   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184059   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1184060   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184061   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184062   +   end;
MPRINT(EM_DIAGRAM):   end;
1184063   +end;
MPRINT(EM_DIAGRAM):   end;
1184064   +
1184065   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1184066   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1184067   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1184068   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1184069   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184070   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184071   +end;
MPRINT(EM_DIAGRAM):   end;
1184072   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184073   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184074   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1184075   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184076   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184077   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1184078   +   end;
MPRINT(EM_DIAGRAM):   end;
1184079   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184080   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1184081   +   end;
MPRINT(EM_DIAGRAM):   end;
1184082   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184083   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1184084   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184085   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184086   +   end;
MPRINT(EM_DIAGRAM):   end;
1184087   +end;
MPRINT(EM_DIAGRAM):   end;
1184088   +
1184089   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1184090   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1184091   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1184092   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1184093   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184094   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184095   +end;
MPRINT(EM_DIAGRAM):   end;
1184096   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184097   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184098   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1184099   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184100   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184101   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1184102   +   end;
MPRINT(EM_DIAGRAM):   end;
1184103   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184104   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1184105   +   end;
MPRINT(EM_DIAGRAM):   end;
1184106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184107   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1184108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184110   +   end;
MPRINT(EM_DIAGRAM):   end;
1184111   +end;
MPRINT(EM_DIAGRAM):   end;
1184112   +
1184113   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1184114   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1184115   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1184116   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1184117   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184118   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184119   +end;
MPRINT(EM_DIAGRAM):   end;
1184120   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184121   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184122   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1184123   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184124   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1184125   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1184126   +   end;
MPRINT(EM_DIAGRAM):   end;
1184127   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1184128   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1184129   +   end;
MPRINT(EM_DIAGRAM):   end;
1184130   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184131   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1184132   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184133   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184134   +   end;
MPRINT(EM_DIAGRAM):   end;
1184135   +end;
MPRINT(EM_DIAGRAM):   end;
1184136   +
1184137   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1184138   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1184139   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1184140   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1184141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184143   +end;
MPRINT(EM_DIAGRAM):   end;
1184144   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184145   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1184146   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1184147   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184148   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1184149   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1184150   +   end;
MPRINT(EM_DIAGRAM):   end;
1184151   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1184152   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1184153   +   end;
MPRINT(EM_DIAGRAM):   end;
1184154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184155   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1184156   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184157   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184158   +   end;
MPRINT(EM_DIAGRAM):   end;
1184159   +end;
MPRINT(EM_DIAGRAM):   end;
1184160   +
1184161   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1184162   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1184163   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1184164   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1184165   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1184166   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1184167   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1184168   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1184169   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1184170   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1184171   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1184172   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1184173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184175   +end;
MPRINT(EM_DIAGRAM):   end;
1184176   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184177   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1184178   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1184179   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184180   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1184181   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1184182   +   end;
MPRINT(EM_DIAGRAM):   end;
1184183   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1184184   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1184185   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1184186   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1184187   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1184188   +   end;
MPRINT(EM_DIAGRAM):   end;
1184189   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1184190   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1184191   +   end;
MPRINT(EM_DIAGRAM):   end;
1184192   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1184193   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1184194   +   end;
MPRINT(EM_DIAGRAM):   end;
1184195   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1184196   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1184197   +   end;
MPRINT(EM_DIAGRAM):   end;
1184198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184199   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1184200   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1184201   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1184202   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1184203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184205   +   end;
MPRINT(EM_DIAGRAM):   end;
1184206   +end;
MPRINT(EM_DIAGRAM):   end;
1184207   +
1184208   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1184209   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1184210   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1184211   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1184212   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1184213   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1184214   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1184215   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1184216   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1184217   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1184218   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1184219   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1184220   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1184221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1184222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184223   +end;
MPRINT(EM_DIAGRAM):   end;
1184224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1184225   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1184226   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1184227   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1184228   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1184229   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1184230   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1184231   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1184232   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1184233   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184234   +         end;
MPRINT(EM_DIAGRAM):   end;
1184235   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1184236   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1184237   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1184238   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184239   +            end;
MPRINT(EM_DIAGRAM):   end;
1184240   +         end;
MPRINT(EM_DIAGRAM):   end;
1184241   +      end;
MPRINT(EM_DIAGRAM):   end;
1184242   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1184243   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1184244   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1184245   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184246   +         end;
MPRINT(EM_DIAGRAM):   end;
1184247   +      end;
MPRINT(EM_DIAGRAM):   end;
1184248   +   end;
MPRINT(EM_DIAGRAM):   end;
1184249   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1184250   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1184251   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1184252   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184253   +      end;
MPRINT(EM_DIAGRAM):   end;
1184254   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1184255   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1184256   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1184257   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1184258   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1184259   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1184260   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1184261   +         end;
MPRINT(EM_DIAGRAM):   end;
1184262   +      end;
MPRINT(EM_DIAGRAM):   end;
1184263   +   end;
MPRINT(EM_DIAGRAM):   end;
1184264   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1184265   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1184266   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1184267   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1184268   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1184269   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1184270   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184271   +   end;
MPRINT(EM_DIAGRAM):   end;
1184272   +end;
MPRINT(EM_DIAGRAM):   end;
1184273   +
1184274   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184275   +*** Checking missing input Interval
1184276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1184277   +
1184278   +IF NMISS(
1184279   +   AcceptedCmpTotal ,
1184280   +   Age ,
1184281   +   Frq ,
1184282   +   Income ,
1184283   +   Kidhome ,
1184284   +   MntFishProducts ,
1184285   +   MntFruits ,
1184286   +   MntGoldProds ,
1184287   +   MntSweetProducts ,
1184288   +   MonthsAsCustomer ,
1184289   +   NumDealsPurchases ,
1184290   +   NumWebVisitsMonth ,
1184291   +   RFMstat ,
1184292   +   RMntFrq ,
1184293   +   Recency ,
1184294   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1184295   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1184296   +
1184297   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1184298   +END;
MPRINT(EM_DIAGRAM):   END;
1184299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184300   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1184301   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184302   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1184303   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1184304   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1184305   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1184306   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1184307   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1184308   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1184309   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1184310   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1184311   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1184312   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1184313   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1184314   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1184315   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1184316   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1184317   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1184318   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1184319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1184320   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1184321   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1184322   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1184323   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1184324   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1184325   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1184326   +END;
MPRINT(EM_DIAGRAM):   END;
1184327   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1184328   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1184329   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1184330   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1184331   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1184332   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1184333   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1184334   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1184335   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1184336   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1184337   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1184338   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1184339   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1184340   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1184341   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1184342   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1184343   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1184344   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1184345   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1184346   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1184347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1184348   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1184349   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1184350   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1184351   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1184352   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1184353   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1184354   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1184355   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1184356   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1184357   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1184358   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1184359   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1184360   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1184361   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1184362   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1184363   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1184364   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1184365   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1184366   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1184367   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1184368   +END;
MPRINT(EM_DIAGRAM):   END;
1184369   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184370   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1184371   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184372   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184373   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1184374   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184376   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1184377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184378   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1184379   +   H11  =    -0.61879380889194 * S_AcceptedCmpTotal  +    -0.09795242603477 *
1184380   +        S_Age  +     0.36103250822255 * S_Frq  +     0.08899052794394 *
1184381   +        S_Income  +     0.25564250606874 * S_Kidhome
1184382   +          +    -0.02786629817134 * S_MntFishProducts
1184383   +          +     0.13529614728112 * S_MntFruits  +     0.19622442891821 *
1184384   +        S_MntGoldProds  +     0.14107929478218 * S_MntSweetProducts
1184385   +          +    -0.29199173107007 * S_MonthsAsCustomer
1184386   +          +    -0.59759788962473 * S_NumDealsPurchases
1184387   +          +     -0.3788422274482 * S_NumWebVisitsMonth
1184388   +          +    -0.06743318112874 * S_RFMstat  +      0.2833264895355 *
1184389   +        S_RMntFrq  +     0.70854972350771 * S_Recency
1184390   +          +     0.11936327488967 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.61879380889194 * S_AcceptedCmpTotal + -0.09795242603477 * S_Age 
+ 0.36103250822255 * S_Frq + 0.08899052794394 * S_Income + 0.25564250606874 * S_Kidhome + 
-0.02786629817134 * S_MntFishProducts + 0.13529614728112 * S_MntFruits + 0.19622442891821 * 
S_MntGoldProds + 0.14107929478218 * S_MntSweetProducts + -0.29199173107007 * 
S_MonthsAsCustomer + -0.59759788962473 * S_NumDealsPurchases + -0.3788422274482 * 
S_NumWebVisitsMonth + -0.06743318112874 * S_RFMstat + 0.2833264895355 * S_RMntFrq + 
0.70854972350771 * S_Recency + 0.11936327488967 * S_Teenhome ;
1184391   +   H12  =    -0.18766983828727 * S_AcceptedCmpTotal  +       0.517042669033 *
1184392   +        S_Age  +     1.02262972068559 * S_Frq  +     0.38007459198406 *
1184393   +        S_Income  +     0.07328887474153 * S_Kidhome
1184394   +          +    -0.23284570213322 * S_MntFishProducts
1184395   +          +     0.02838864374624 * S_MntFruits  +    -0.07574618602845 *
1184396   +        S_MntGoldProds  +    -0.41131707239504 * S_MntSweetProducts
1184397   +          +     0.29669594858185 * S_MonthsAsCustomer
1184398   +          +    -0.51220833966596 * S_NumDealsPurchases
1184399   +          +    -0.72293271444385 * S_NumWebVisitsMonth
1184400   +          +    -0.20562458645044 * S_RFMstat  +    -0.52495075768839 *
1184401   +        S_RMntFrq  +      1.0795232419354 * S_Recency
1184402   +          +    -0.18997953891579 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18766983828727 * S_AcceptedCmpTotal + 0.517042669033 * S_Age + 
1.02262972068559 * S_Frq + 0.38007459198406 * S_Income + 0.07328887474153 * S_Kidhome + 
-0.23284570213322 * S_MntFishProducts + 0.02838864374624 * S_MntFruits + -0.07574618602845 * 
S_MntGoldProds + -0.41131707239504 * S_MntSweetProducts + 0.29669594858185 * 
S_MonthsAsCustomer + -0.51220833966596 * S_NumDealsPurchases + -0.72293271444385 * 
S_NumWebVisitsMonth + -0.20562458645044 * S_RFMstat + -0.52495075768839 * S_RMntFrq + 
1.0795232419354 * S_Recency + -0.18997953891579 * S_Teenhome ;
1184403   +   H13  =    -0.49159501579895 * S_AcceptedCmpTotal  +    -0.16293971978781 *
1184404   +        S_Age  +    -0.02977525702894 * S_Frq  +    -0.78728568889664 *
1184405   +        S_Income  +    -0.68209910558389 * S_Kidhome
1184406   +          +     0.23366174254474 * S_MntFishProducts
1184407   +          +    -0.08764688950673 * S_MntFruits  +    -0.38895649975347 *
1184408   +        S_MntGoldProds  +     0.02270546080284 * S_MntSweetProducts
1184409   +          +    -0.05759532204753 * S_MonthsAsCustomer
1184410   +          +    -0.30170163047261 * S_NumDealsPurchases
1184411   +          +    -0.57711437834603 * S_NumWebVisitsMonth
1184412   +          +    -0.09851659878757 * S_RFMstat  +    -0.20102310575519 *
1184413   +        S_RMntFrq  +     0.80994896921796 * S_Recency
1184414   +          +     0.32766576826101 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.49159501579895 * S_AcceptedCmpTotal + -0.16293971978781 * S_Age 
+ -0.02977525702894 * S_Frq + -0.78728568889664 * S_Income + -0.68209910558389 * S_Kidhome + 
0.23366174254474 * S_MntFishProducts + -0.08764688950673 * S_MntFruits + -0.38895649975347 * 
S_MntGoldProds + 0.02270546080284 * S_MntSweetProducts + -0.05759532204753 * 
S_MonthsAsCustomer + -0.30170163047261 * S_NumDealsPurchases + -0.57711437834603 * 
S_NumWebVisitsMonth + -0.09851659878757 * S_RFMstat + -0.20102310575519 * S_RMntFrq + 
0.80994896921796 * S_Recency + 0.32766576826101 * S_Teenhome ;
1184415   +   H14  =    -0.11122937165995 * S_AcceptedCmpTotal  +     0.06859829254058 *
1184416   +        S_Age  +    -0.60966071706708 * S_Frq  +    -1.00949681880427 *
1184417   +        S_Income  +     0.67855138873039 * S_Kidhome
1184418   +          +    -0.05297743313476 * S_MntFishProducts
1184419   +          +     0.21613302257797 * S_MntFruits  +     0.03843790921347 *
1184420   +        S_MntGoldProds  +     0.25543771093558 * S_MntSweetProducts
1184421   +          +    -0.15817861274553 * S_MonthsAsCustomer
1184422   +          +     0.25133066233725 * S_NumDealsPurchases
1184423   +          +     0.08802636187267 * S_NumWebVisitsMonth
1184424   +          +    -0.04637957487976 * S_RFMstat  +    -0.31656429052936 *
1184425   +        S_RMntFrq  +      0.7228272496527 * S_Recency
1184426   +          +     0.58629319995218 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.11122937165995 * S_AcceptedCmpTotal + 0.06859829254058 * S_Age 
+ -0.60966071706708 * S_Frq + -1.00949681880427 * S_Income + 0.67855138873039 * S_Kidhome + 
-0.05297743313476 * S_MntFishProducts + 0.21613302257797 * S_MntFruits + 0.03843790921347 * 
S_MntGoldProds + 0.25543771093558 * S_MntSweetProducts + -0.15817861274553 * 
S_MonthsAsCustomer + 0.25133066233725 * S_NumDealsPurchases + 0.08802636187267 * 
S_NumWebVisitsMonth + -0.04637957487976 * S_RFMstat + -0.31656429052936 * S_RMntFrq + 
0.7228272496527 * S_Recency + 0.58629319995218 * S_Teenhome ;
1184427   +   H11  = H11  +     0.23190135069025 * AcceptedCmp10
1184428   +          +     0.04686213078143 * AcceptedCmp20  +     0.17662818955575 *
1184429   +        AcceptedCmp30  +     0.03498741067378 * AcceptedCmp40
1184430   +          +     0.61042747626768 * AcceptedCmp50  +    -0.12810871081838 *
1184431   +        Complain0  +     0.03047400476944 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.23190135069025 * AcceptedCmp10 + 0.04686213078143 * 
AcceptedCmp20 + 0.17662818955575 * AcceptedCmp30 + 0.03498741067378 * AcceptedCmp40 + 
0.61042747626768 * AcceptedCmp50 + -0.12810871081838 * Complain0 + 0.03047400476944 * 
HigherEducationBinary0 ;
1184432   +   H12  = H12  +     0.53873807658752 * AcceptedCmp10
1184433   +          +     0.29840055428915 * AcceptedCmp20  +     0.52740574468702 *
1184434   +        AcceptedCmp30  +     0.27242279016627 * AcceptedCmp40
1184435   +          +     0.07126269343217 * AcceptedCmp50  +    -0.14631570192286 *
1184436   +        Complain0  +     0.16629352334811 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.53873807658752 * AcceptedCmp10 + 0.29840055428915 * 
AcceptedCmp20 + 0.52740574468702 * AcceptedCmp30 + 0.27242279016627 * AcceptedCmp40 + 
0.07126269343217 * AcceptedCmp50 + -0.14631570192286 * Complain0 + 0.16629352334811 * 
HigherEducationBinary0 ;
1184437   +   H13  = H13  +     0.09118941740461 * AcceptedCmp10
1184438   +          +     0.04178457860358 * AcceptedCmp20  +     0.48487479920901 *
1184439   +        AcceptedCmp30  +    -0.80910928087974 * AcceptedCmp40
1184440   +          +      0.4667831985075 * AcceptedCmp50  +    -0.29601289494349 *
1184441   +        Complain0  +     0.10690006738431 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.09118941740461 * AcceptedCmp10 + 0.04178457860358 * 
AcceptedCmp20 + 0.48487479920901 * AcceptedCmp30 + -0.80910928087974 * AcceptedCmp40 + 
0.4667831985075 * AcceptedCmp50 + -0.29601289494349 * Complain0 + 0.10690006738431 * 
HigherEducationBinary0 ;
1184442   +   H14  = H14  +     0.21382858049752 * AcceptedCmp10
1184443   +          +     0.12652392800261 * AcceptedCmp20  +     0.30403608200617 *
1184444   +        AcceptedCmp30  +     0.51966382166521 * AcceptedCmp40
1184445   +          +    -0.14518145187533 * AcceptedCmp50  +     0.27045295957801 *
1184446   +        Complain0  +    -0.49307163723406 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.21382858049752 * AcceptedCmp10 + 0.12652392800261 * 
AcceptedCmp20 + 0.30403608200617 * AcceptedCmp30 + 0.51966382166521 * AcceptedCmp40 + 
-0.14518145187533 * AcceptedCmp50 + 0.27045295957801 * Complain0 + -0.49307163723406 * 
HigherEducationBinary0 ;
1184447   +   H11  = H11  +    -0.15292649085097 * Education2n_Cycle
1184448   +          +     0.00016605452926 * EducationBasic  +    -0.04208965271063 *
1184449   +        EducationGraduation  +    -0.05433922630608 * EducationMaster
1184450   +          +      0.0528075343138 * Marital_StatusDivorced
1184451   +          +    -0.08269844855231 * Marital_StatusMarried
1184452   +          +     0.43411839786169 * Marital_StatusSingle
1184453   +          +     0.38324605489754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15292649085097 * Education2n_Cycle + 0.00016605452926 * 
EducationBasic + -0.04208965271063 * EducationGraduation + -0.05433922630608 * EducationMaster 
+ 0.0528075343138 * Marital_StatusDivorced + -0.08269844855231 * Marital_StatusMarried + 
0.43411839786169 * Marital_StatusSingle + 0.38324605489754 * Marital_StatusTogether ;
1184454   +   H12  = H12  +      0.3082578019648 * Education2n_Cycle
1184455   +          +    -0.01380127751108 * EducationBasic  +    -0.11076736066311 *
1184456   +        EducationGraduation  +     -0.1586948328241 * EducationMaster
1184457   +          +    -0.12842912869907 * Marital_StatusDivorced
1184458   +          +     0.11838814754642 * Marital_StatusMarried
1184459   +          +     0.01184261900927 * Marital_StatusSingle
1184460   +          +     0.14066273070318 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.3082578019648 * Education2n_Cycle + -0.01380127751108 * 
EducationBasic + -0.11076736066311 * EducationGraduation + -0.1586948328241 * EducationMaster 
+ -0.12842912869907 * Marital_StatusDivorced + 0.11838814754642 * Marital_StatusMarried + 
0.01184261900927 * Marital_StatusSingle + 0.14066273070318 * Marital_StatusTogether ;
1184461   +   H13  = H13  +     0.02861254390946 * Education2n_Cycle
1184462   +          +      0.4349807830691 * EducationBasic  +    -0.31346964692246 *
1184463   +        EducationGraduation  +      0.0620488761517 * EducationMaster
1184464   +          +    -0.22110722201709 * Marital_StatusDivorced
1184465   +          +      0.1355339029843 * Marital_StatusMarried
1184466   +          +    -0.33157273596382 * Marital_StatusSingle
1184467   +          +    -0.19725820483372 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02861254390946 * Education2n_Cycle + 0.4349807830691 * 
EducationBasic + -0.31346964692246 * EducationGraduation + 0.0620488761517 * EducationMaster + 
-0.22110722201709 * Marital_StatusDivorced + 0.1355339029843 * Marital_StatusMarried + 
-0.33157273596382 * Marital_StatusSingle + -0.19725820483372 * Marital_StatusTogether ;
1184468   +   H14  = H14  +    -0.15196350137644 * Education2n_Cycle
1184469   +          +     0.11143610044897 * EducationBasic  +    -0.23356442851658 *
1184470   +        EducationGraduation  +     0.26881272673711 * EducationMaster
1184471   +          +    -0.21663247467797 * Marital_StatusDivorced
1184472   +          +     1.11468603898508 * Marital_StatusMarried
1184473   +          +    -0.84252388146943 * Marital_StatusSingle
1184474   +          +     0.91707021954171 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.15196350137644 * Education2n_Cycle + 0.11143610044897 * 
EducationBasic + -0.23356442851658 * EducationGraduation + 0.26881272673711 * EducationMaster 
+ -0.21663247467797 * Marital_StatusDivorced + 1.11468603898508 * Marital_StatusMarried + 
-0.84252388146943 * Marital_StatusSingle + 0.91707021954171 * Marital_StatusTogether ;
1184475   +   H11  =     0.69752617990443 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.69752617990443 + H11 ;
1184476   +   H12  =     0.88932226025287 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88932226025287 + H12 ;
1184477   +   H13  =    -0.23351093325425 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.23351093325425 + H13 ;
1184478   +   H14  =      1.5565991209041 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 1.5565991209041 + H14 ;
1184479   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1184480   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1184481   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1184482   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1184483   +END;
MPRINT(EM_DIAGRAM):   END;
1184484   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1184485   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1184486   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1184487   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1184488   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1184489   +END;
MPRINT(EM_DIAGRAM):   END;
1184490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184491   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1184492   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184493   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1184494   +   P_DepVar1  =    -1.10683009838286 * H11  +    -1.85294488833715 * H12
1184495   +          +    -2.73624761150933 * H13  +    -2.51103548718704 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.10683009838286 * H11 + -1.85294488833715 * H12 + 
-2.73624761150933 * H13 + -2.51103548718704 * H14 ;
1184496   +   P_DepVar1  =    -0.86309949021709 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.86309949021709 + P_DepVar1 ;
1184497   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1184498   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1184499   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1184500   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1184501   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1184502   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1184503   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1184504   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1184505   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1184506   +END;
MPRINT(EM_DIAGRAM):   END;
1184507   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1184508   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1184509   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1184510   +END;
MPRINT(EM_DIAGRAM):   END;
1184511   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1184512   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1184513   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1184514   +END;
MPRINT(EM_DIAGRAM):   END;
1184515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184516   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1184517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1184518   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1184519   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1184520   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1184521   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1184522   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1184523   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1184524   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1184525   +END;
MPRINT(EM_DIAGRAM):   END;
1184526   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1184527   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1184528   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1184529   +drop
1184530   +H11
1184531   +H12
1184532   +H13
1184533   +H14
1184534   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1184535   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1184536    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1184537    quit;
1184538    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1184539    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1184540    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1184541    retain ID 2 Node "Neural39";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural39";
1184542    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1184543    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184544    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1184545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184546    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1891 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1891 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184547    proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural39_variableset out=_temp2(keep=NAME CREATOR);
1184548    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184549    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL39_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1184550    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184551    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1184552    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1184553    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184554    proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural39_train out=_meta(keep=NAME) noprint;
1184555    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1184556    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1184557    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184558    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184559    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184560    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1184561    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184562    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184563    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1184564    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1184564  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 987 rows and 5 columns.

1184565    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184566    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1184567    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 987 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 987 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184568    filename _pref
1184568  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1184569    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1184570    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1184571   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184572   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1184573   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1184574   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1184575   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1184576   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1184577    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1184578    quit;
1184579    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1184580    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1184581    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1184582    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1184583    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1184584    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184585    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1184586    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184587    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1184588    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1184589    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184591    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184592    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1184593    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1184594    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184595    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1184596    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1184597    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1184598    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184599    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184600    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184601    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1184602    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184603    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184604    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1184605    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1184605  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1184606    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1184607    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1184608    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 991 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184609    filename _pref
1184609  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1184610    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1184611    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1184612   +
1184613   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1184614   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1184614  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1184615   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1184616   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1184617   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1184618   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1184619   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1184620    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1184621    quit;
1184622    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1184623    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1184624    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1184625    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1184626    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1184627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184628    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1184629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184630    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184631    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1184632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1184634    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184635    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1184636    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1184637    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184638    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1184639    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184640    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1184641    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184642    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184643    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184644    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1184645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184646    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184647    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1184648    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1184648  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1184649    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184650    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1184651    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1030 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184652    filename _pref
1184652  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1184653    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1184654    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1184655   +
1184656   +
1184657   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1184658   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1184659   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1184660   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1184661   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1184662   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184663   +
1184664   +
1184665   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1184666   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1184667   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1184668   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1184669   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1184670   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184671   +
1184672   +
1184673   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1184674   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1184675   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1184676   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1184677   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1184678   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184679   +
1184680   +
1184681   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1184682   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1184683   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1184684   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1184685   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1184686   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184687   +
1184688   +
1184689   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1184690   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1184691   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1184692   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1184693   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1184694   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184695   +
1184696   +
1184697   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1184698   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1184699   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1184700   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1184701   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1184702   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184703   +
1184704   +
1184705   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1184706   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1184707   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1184708   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1184709   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1184710   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184711   +
1184712   +
1184713   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1184714   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1184715   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1184716   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1184717   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1184718   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1184719   +if
1184720   +_FILTERNORM1 not in ( '.')
1184721   + and
1184722   +_FILTERNORM2 not in ( '.')
1184723   + and
1184724   +_FILTERNORM3 not in ( '.')
1184725   + and
1184726   +_FILTERNORM4 not in ( '.')
1184727   + and
1184728   +_FILTERNORM5 not in ( '.')
1184729   + and
1184730   +_FILTERNORM6 not in ( '.')
1184731   + and
1184732   +_FILTERNORM7 not in ( ' ')
1184733   + and
1184734   +_FILTERNORM8 not in ( ' ')
1184735   +and
1184736   +( Dt_Customer ne .)
1184737   +and ( Income ne . and (Income<=107000))
1184738   +and ( Kidhome ne .)
1184739   +and ( MntFishProducts ne .)
1184740   +and ( MntFruits ne .)
1184741   +and ( MntGoldProds ne .)
1184742   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1184743   +and ( MntSweetProducts ne .)
1184744   +and ( MntWines ne .)
1184745   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1184746   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1184747   +and ( NumStorePurchases ne .)
1184748   +and ( NumWebPurchases ne .)
1184749   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1184750   +and ( Recency ne .)
1184751   +and ( Teenhome ne .)
1184752   +and ( Year_Birth ne .)
1184753   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1184754   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1184755   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1184756   +end;
MPRINT(EM_DIAGRAM):   end;
1184757   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1184758   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1184759    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1184760    quit;
1184761    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1184762    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1184763    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1184764    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1184765    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1184766    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184767    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1184768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184770    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1184771    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184772    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1184773    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184774    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1184775    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1184776    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184777    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1184778    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1184779    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1184780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184781    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184782    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1184783    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1184784    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1184785    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184786    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1184787    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1184787  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1184788    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1184789    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1184790    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1096 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184791    %macro varDept(fcmpdata=,id=);
1184792    %global nobs&id scoreFlag&id;
1184793    %let scoreFlag&id = 0;
1184794    %if &id=1 or ^&fcmpStart %then %do;
1184795    proc sort data=&fcmpdata out=_temp&id nodupkey;
1184796    by NAME;
1184797    where id=&id and LHS in( %let j=1;
1184798    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1184799    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1184800    "&var" %let j = %eval(&j+1);
1184801    %end;
1184802    );
1184803    run;
1184804    %let dsid = %sysfunc(open(_temp&id));
1184805    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1184806    %let dsid = %sysfunc(close(&dsid));
1184807    %if &&nobs&id %then %do;
1184808    %let scoreFlag&id = 1;
1184809    %let fcmpStart = 1;
1184810    %end;
1184811    %else %let fcmpStart = 0;
1184812    %end;
1184813    %else %do;
1184814    proc sort data=&fcmpdata out=_tempid;
1184815    where id=&id;
1184816    by LHS;
1184817    run;
1184818    %let dsid = %sysfunc(open(_tempid));
1184819    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1184820    %let dsid = %sysfunc(close(&dsid));
1184821    %if ^&&nobs&id %then %do;
1184822    proc datasets lib=work nolist;
1184823    delete _tempid;
1184824    run;
1184825    quit;
1184826    %end;
1184827    %else %do;
1184828    data _tempAll;
1184829    set %let j=%eval(&id-1);
1184830    %do x=1 %to &j;
1184831    %if &&nobs&x %then %do;
1184832    _temp&x %end;
1184833    %end;
1184834    ;
1184835    run;
1184836    proc sql;
1184837    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1184837  ! work._tempid p2 where p.name=p2.lhs;
1184838    quit;
1184839    data _temp&id;
1184840    set _temp&id;
1184841    where LHS ne '' and NAME ne '' and Node ne '';
1184842    run;
1184843    proc datasets lib=work nolist;
1184844    delete _tempAll;
1184845    run;
1184846    %let dsid = %sysfunc(open(_temp&id));
1184847    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1184848    %let dsid = %sysfunc(close(&dsid));
1184849    %if ^&&nobs&id %then %do;
1184850    proc datasets lib=work nolist;
1184851    delete _temp&id;
1184852    run;
1184853    quit;
1184854    %end;
1184855    %else %do;
1184856    %let scoreFlag&id = 1;
1184857    data _temp&id;
1184858    set _temp&id;
1184859    where LHS ne NAME and node ne '';
1184860    run;
1184861    %let dsid = %sysfunc(open(_temp&id));
1184862    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1184863    %let dsid = %sysfunc(close(&dsid));
1184864    %if ^&&nobs&id %then %do;
1184865    proc datasets lib=work nolist;
1184866    delete _temp&id;
1184867    run;
1184868    quit;
1184869    %end;
1184870    %else %do;
1184871    proc sort data=_temp&id nodupkey;
1184872    by LHS NAME;
1184873    run;
1184874    %end;
1184875    %end;
1184876    %end;
1184877    %end;
1184878    %mend varDept;
1184879    %macro optCode(outdata=fcmpdata);
1184880    %global fcmpStart;
1184881    %let fcmpStart = 0;
1184882    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1184883    %let NumNodes=9;
1184884    %do k=1 %to &NumNodes;
1184885    %vardept(fcmpdata=&outdata, id=&k);
1184886    %end;
1184887    %mend optCode;
1184888    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1184889    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1184890    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1184891    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1184892    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184893    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1184894    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1184895    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1184896    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184897    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1184898    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1184898  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1184899    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1184900    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1184901    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1184902    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1184903    filename _pref
1184903  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas";
1184904    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1184905    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural40\EMPUBLISHSCORE.sas.
1184906   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1184907   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1184908   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1184909   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1184910   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1184911   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1184912   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1184913   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1184914   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1184915   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1184916   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1184917   +LENGTH _WARN_ $4
1184918   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1184919   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1184920   +
1184921   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1184922   +
1184923   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1184924   +
1184925   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1184926   +
1184927   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1184928   +
1184929   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1184930   +
1184931   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1184932   +
1184933   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1184934   +
1184935   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1184936   +
1184937   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1184938   +
1184939   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1184940   +
1184941   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1184942   +
1184943   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1184944   +
1184945   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1184946   +
1184947   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1184948   +
1184949   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1184950   +
1184951   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1184952   +
1184953   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1184954   +
1184955   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1184956   +
1184957   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1184958   +
1184959   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1184960   +
1184961   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1184962   +
1184963   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1184964   +
1184965   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1184966   +
1184967   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1184968   +
1184969   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1184970   +
1184971   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1184972   +
1184973   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1184974   +
1184975   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1184976   +
1184977   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1184978   +
1184979   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1184980   +
1184981   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1184982   +
1184983   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1184984   +
1184985   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1184986   +
1184987   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1184988   +
1184989   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1184990   +
1184991   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1184992   +
1184993   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1184994   +
1184995   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1184996   +
1184997   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1184998   +
1184999   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1185000   +
1185001   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1185002   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1185003   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1185004   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1185005   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185006   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185007   +end;
MPRINT(EM_DIAGRAM):   end;
1185008   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185009   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185010   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1185011   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185012   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185013   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1185014   +   end;
MPRINT(EM_DIAGRAM):   end;
1185015   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185016   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1185017   +   end;
MPRINT(EM_DIAGRAM):   end;
1185018   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185019   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1185020   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185021   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185022   +   end;
MPRINT(EM_DIAGRAM):   end;
1185023   +end;
MPRINT(EM_DIAGRAM):   end;
1185024   +
1185025   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1185026   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1185027   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1185028   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1185029   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185030   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185031   +end;
MPRINT(EM_DIAGRAM):   end;
1185032   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185033   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185034   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1185035   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185036   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185037   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1185038   +   end;
MPRINT(EM_DIAGRAM):   end;
1185039   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185040   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1185041   +   end;
MPRINT(EM_DIAGRAM):   end;
1185042   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185043   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1185044   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185045   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185046   +   end;
MPRINT(EM_DIAGRAM):   end;
1185047   +end;
MPRINT(EM_DIAGRAM):   end;
1185048   +
1185049   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1185050   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1185051   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1185052   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1185053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185055   +end;
MPRINT(EM_DIAGRAM):   end;
1185056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185057   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185058   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1185059   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185060   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185061   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1185062   +   end;
MPRINT(EM_DIAGRAM):   end;
1185063   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185064   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1185065   +   end;
MPRINT(EM_DIAGRAM):   end;
1185066   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185067   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1185068   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185069   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185070   +   end;
MPRINT(EM_DIAGRAM):   end;
1185071   +end;
MPRINT(EM_DIAGRAM):   end;
1185072   +
1185073   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1185074   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1185075   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1185076   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1185077   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185078   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185079   +end;
MPRINT(EM_DIAGRAM):   end;
1185080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185081   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185082   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1185083   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185084   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185085   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1185086   +   end;
MPRINT(EM_DIAGRAM):   end;
1185087   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185088   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1185089   +   end;
MPRINT(EM_DIAGRAM):   end;
1185090   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185091   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1185092   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185093   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185094   +   end;
MPRINT(EM_DIAGRAM):   end;
1185095   +end;
MPRINT(EM_DIAGRAM):   end;
1185096   +
1185097   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1185098   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1185099   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1185100   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1185101   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185102   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185103   +end;
MPRINT(EM_DIAGRAM):   end;
1185104   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185105   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185106   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1185107   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185108   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185109   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1185110   +   end;
MPRINT(EM_DIAGRAM):   end;
1185111   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185112   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1185113   +   end;
MPRINT(EM_DIAGRAM):   end;
1185114   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185115   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1185116   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185117   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185118   +   end;
MPRINT(EM_DIAGRAM):   end;
1185119   +end;
MPRINT(EM_DIAGRAM):   end;
1185120   +
1185121   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1185122   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1185123   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1185124   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1185125   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185126   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185127   +end;
MPRINT(EM_DIAGRAM):   end;
1185128   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185129   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185130   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1185131   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185132   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1185133   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1185134   +   end;
MPRINT(EM_DIAGRAM):   end;
1185135   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1185136   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1185137   +   end;
MPRINT(EM_DIAGRAM):   end;
1185138   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185139   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1185140   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185141   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185142   +   end;
MPRINT(EM_DIAGRAM):   end;
1185143   +end;
MPRINT(EM_DIAGRAM):   end;
1185144   +
1185145   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1185146   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1185147   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1185148   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1185149   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185150   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185151   +end;
MPRINT(EM_DIAGRAM):   end;
1185152   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185153   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1185154   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1185155   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185156   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1185157   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1185158   +   end;
MPRINT(EM_DIAGRAM):   end;
1185159   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1185160   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1185161   +   end;
MPRINT(EM_DIAGRAM):   end;
1185162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185163   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1185164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185166   +   end;
MPRINT(EM_DIAGRAM):   end;
1185167   +end;
MPRINT(EM_DIAGRAM):   end;
1185168   +
1185169   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1185170   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1185171   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1185172   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1185173   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1185174   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1185175   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1185176   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1185177   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1185178   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1185179   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1185180   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1185181   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185182   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185183   +end;
MPRINT(EM_DIAGRAM):   end;
1185184   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185185   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1185186   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1185187   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185188   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1185189   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1185190   +   end;
MPRINT(EM_DIAGRAM):   end;
1185191   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1185192   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1185193   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1185194   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1185195   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1185196   +   end;
MPRINT(EM_DIAGRAM):   end;
1185197   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1185198   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1185199   +   end;
MPRINT(EM_DIAGRAM):   end;
1185200   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1185201   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1185202   +   end;
MPRINT(EM_DIAGRAM):   end;
1185203   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1185204   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1185205   +   end;
MPRINT(EM_DIAGRAM):   end;
1185206   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185207   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1185208   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1185209   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1185210   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1185211   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185212   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185213   +   end;
MPRINT(EM_DIAGRAM):   end;
1185214   +end;
MPRINT(EM_DIAGRAM):   end;
1185215   +
1185216   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1185217   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1185218   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1185219   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1185220   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1185221   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1185222   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1185223   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1185224   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1185225   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1185226   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1185227   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1185228   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1185229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1185230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185231   +end;
MPRINT(EM_DIAGRAM):   end;
1185232   +else do;
MPRINT(EM_DIAGRAM):   else do;
1185233   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1185234   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1185235   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1185236   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1185237   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1185238   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1185239   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1185240   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1185241   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1185242   +         end;
MPRINT(EM_DIAGRAM):   end;
1185243   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1185244   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1185245   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1185246   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1185247   +            end;
MPRINT(EM_DIAGRAM):   end;
1185248   +         end;
MPRINT(EM_DIAGRAM):   end;
1185249   +      end;
MPRINT(EM_DIAGRAM):   end;
1185250   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1185251   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1185252   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1185253   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1185254   +         end;
MPRINT(EM_DIAGRAM):   end;
1185255   +      end;
MPRINT(EM_DIAGRAM):   end;
1185256   +   end;
MPRINT(EM_DIAGRAM):   end;
1185257   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1185258   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1185259   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1185260   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1185261   +      end;
MPRINT(EM_DIAGRAM):   end;
1185262   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1185263   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1185264   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1185265   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1185266   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1185267   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1185268   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1185269   +         end;
MPRINT(EM_DIAGRAM):   end;
1185270   +      end;
MPRINT(EM_DIAGRAM):   end;
1185271   +   end;
MPRINT(EM_DIAGRAM):   end;
1185272   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1185273   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1185274   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1185275   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1185276   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1185277   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1185278   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185279   +   end;
MPRINT(EM_DIAGRAM):   end;
1185280   +end;
MPRINT(EM_DIAGRAM):   end;
1185281   +
1185282   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185283   +*** Checking missing input Interval
1185284   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1185285   +
1185286   +IF NMISS(
1185287   +   AcceptedCmpTotal ,
1185288   +   Age ,
1185289   +   Frq ,
1185290   +   Income ,
1185291   +   Kidhome ,
1185292   +   MntFishProducts ,
1185293   +   MntFruits ,
1185294   +   MntGoldProds ,
1185295   +   MntSweetProducts ,
1185296   +   MonthsAsCustomer ,
1185297   +   NumDealsPurchases ,
1185298   +   NumWebVisitsMonth ,
1185299   +   RFMstat ,
1185300   +   RMntFrq ,
1185301   +   Recency ,
1185302   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1185303   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1185304   +
1185305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1185306   +END;
MPRINT(EM_DIAGRAM):   END;
1185307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185308   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1185309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185310   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185311   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1185312   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1185313   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1185314   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1185315   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1185316   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1185317   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1185318   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1185319   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1185320   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1185321   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1185322   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1185323   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1185324   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1185325   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1185326   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1185327   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1185328   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1185329   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1185330   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1185331   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1185332   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1185333   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1185334   +END;
MPRINT(EM_DIAGRAM):   END;
1185335   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185336   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1185337   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1185338   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1185339   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1185340   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1185341   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1185342   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1185343   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1185344   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1185345   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1185346   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1185347   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1185348   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1185349   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1185350   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1185351   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1185352   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1185353   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1185354   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1185355   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1185356   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1185357   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1185358   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1185359   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1185360   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1185361   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1185362   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1185363   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1185364   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1185365   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1185366   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1185367   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1185368   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1185369   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1185370   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1185371   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1185372   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1185373   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1185374   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1185375   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1185376   +END;
MPRINT(EM_DIAGRAM):   END;
1185377   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185378   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1185379   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185381   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1185382   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185383   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185384   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1185385   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185387   +   H11  =      0.0175934799517 * S_AcceptedCmpTotal  +     0.05885450913465 *
1185388   +        S_Age  +    -0.17194721523787 * S_Frq  +    -0.82356228294539 *
1185389   +        S_Income  +     0.39869341630865 * S_Kidhome
1185390   +          +    -0.04263586382867 * S_MntFishProducts
1185391   +          +     0.02697365132515 * S_MntFruits  +     0.04818007940845 *
1185392   +        S_MntGoldProds  +      0.1933390486387 * S_MntSweetProducts
1185393   +          +    -0.14308588367026 * S_MonthsAsCustomer
1185394   +          +    -0.01053346972758 * S_NumDealsPurchases
1185395   +          +    -0.02308351901024 * S_NumWebVisitsMonth
1185396   +          +     0.00403225397753 * S_RFMstat  +    -0.21691316840182 *
1185397   +        S_RMntFrq  +     0.53938373050534 * S_Recency
1185398   +          +     0.55541282723709 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.0175934799517 * S_AcceptedCmpTotal + 0.05885450913465 * S_Age + 
-0.17194721523787 * S_Frq + -0.82356228294539 * S_Income + 0.39869341630865 * S_Kidhome + 
-0.04263586382867 * S_MntFishProducts + 0.02697365132515 * S_MntFruits + 0.04818007940845 * 
S_MntGoldProds + 0.1933390486387 * S_MntSweetProducts + -0.14308588367026 * S_MonthsAsCustomer 
+ -0.01053346972758 * S_NumDealsPurchases + -0.02308351901024 * S_NumWebVisitsMonth + 
0.00403225397753 * S_RFMstat + -0.21691316840182 * S_RMntFrq + 0.53938373050534 * S_Recency + 
0.55541282723709 * S_Teenhome ;
1185399   +   H12  =    -0.31735811206172 * S_AcceptedCmpTotal  +    -0.13976815294846 *
1185400   +        S_Age  +    -0.11928757030551 * S_Frq  +    -0.03597478449162 *
1185401   +        S_Income  +     0.31514301668626 * S_Kidhome
1185402   +          +    -0.05723808748191 * S_MntFishProducts
1185403   +          +     0.04545715816601 * S_MntFruits  +     0.19006209866265 *
1185404   +        S_MntGoldProds  +     0.34690576354698 * S_MntSweetProducts
1185405   +          +    -0.48738730918684 * S_MonthsAsCustomer
1185406   +          +     0.31545795225489 * S_NumDealsPurchases
1185407   +          +     0.24686603252864 * S_NumWebVisitsMonth
1185408   +          +     0.29857007170218 * S_RFMstat  +    -0.01009427724752 *
1185409   +        S_RMntFrq  +    -0.48894693883774 * S_Recency
1185410   +          +    -0.32384426712368 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.31735811206172 * S_AcceptedCmpTotal + -0.13976815294846 * S_Age 
+ -0.11928757030551 * S_Frq + -0.03597478449162 * S_Income + 0.31514301668626 * S_Kidhome + 
-0.05723808748191 * S_MntFishProducts + 0.04545715816601 * S_MntFruits + 0.19006209866265 * 
S_MntGoldProds + 0.34690576354698 * S_MntSweetProducts + -0.48738730918684 * 
S_MonthsAsCustomer + 0.31545795225489 * S_NumDealsPurchases + 0.24686603252864 * 
S_NumWebVisitsMonth + 0.29857007170218 * S_RFMstat + -0.01009427724752 * S_RMntFrq + 
-0.48894693883774 * S_Recency + -0.32384426712368 * S_Teenhome ;
1185411   +   H13  =    -0.67705794412683 * S_AcceptedCmpTotal  +     -0.1538815804864 *
1185412   +        S_Age  +    -0.32580272740463 * S_Frq  +    -0.42829033761305 *
1185413   +        S_Income  +    -0.48452563006855 * S_Kidhome
1185414   +          +      0.1638851163007 * S_MntFishProducts
1185415   +          +      0.0664068987141 * S_MntFruits  +    -0.54942999951449 *
1185416   +        S_MntGoldProds  +    -0.03119903843323 * S_MntSweetProducts
1185417   +          +    -0.09008316729574 * S_MonthsAsCustomer
1185418   +          +    -0.45452883452999 * S_NumDealsPurchases
1185419   +          +    -0.51499533680205 * S_NumWebVisitsMonth
1185420   +          +    -0.31380282266424 * S_RFMstat  +    -0.49525143192723 *
1185421   +        S_RMntFrq  +     0.78729387300328 * S_Recency
1185422   +          +    -0.00915408985389 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.67705794412683 * S_AcceptedCmpTotal + -0.1538815804864 * S_Age 
+ -0.32580272740463 * S_Frq + -0.42829033761305 * S_Income + -0.48452563006855 * S_Kidhome + 
0.1638851163007 * S_MntFishProducts + 0.0664068987141 * S_MntFruits + -0.54942999951449 * 
S_MntGoldProds + -0.03119903843323 * S_MntSweetProducts + -0.09008316729574 * 
S_MonthsAsCustomer + -0.45452883452999 * S_NumDealsPurchases + -0.51499533680205 * 
S_NumWebVisitsMonth + -0.31380282266424 * S_RFMstat + -0.49525143192723 * S_RMntFrq + 
0.78729387300328 * S_Recency + -0.00915408985389 * S_Teenhome ;
1185423   +   H14  =     0.38318271090494 * S_AcceptedCmpTotal  +     0.06739638561066 *
1185424   +        S_Age  +     0.06912614028701 * S_Frq  +     0.14095220260271 *
1185425   +        S_Income  +    -0.62959343200613 * S_Kidhome
1185426   +          +    -0.08953561593231 * S_MntFishProducts
1185427   +          +    -0.17218233364246 * S_MntFruits  +    -0.00637076803669 *
1185428   +        S_MntGoldProds  +    -0.30194599011284 * S_MntSweetProducts
1185429   +          +    -0.04786752357029 * S_MonthsAsCustomer
1185430   +          +     0.01658790214447 * S_NumDealsPurchases
1185431   +          +     0.60508225698649 * S_NumWebVisitsMonth
1185432   +          +     0.24353060507938 * S_RFMstat  +    -0.16860031884486 *
1185433   +        S_RMntFrq  +    -0.74371082820398 * S_Recency
1185434   +          +    -0.33551735128078 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.38318271090494 * S_AcceptedCmpTotal + 0.06739638561066 * S_Age + 
0.06912614028701 * S_Frq + 0.14095220260271 * S_Income + -0.62959343200613 * S_Kidhome + 
-0.08953561593231 * S_MntFishProducts + -0.17218233364246 * S_MntFruits + -0.00637076803669 * 
S_MntGoldProds + -0.30194599011284 * S_MntSweetProducts + -0.04786752357029 * 
S_MonthsAsCustomer + 0.01658790214447 * S_NumDealsPurchases + 0.60508225698649 * 
S_NumWebVisitsMonth + 0.24353060507938 * S_RFMstat + -0.16860031884486 * S_RMntFrq + 
-0.74371082820398 * S_Recency + -0.33551735128078 * S_Teenhome ;
1185435   +   H15  =    -0.33857166416401 * S_AcceptedCmpTotal  +     0.16520608022036 *
1185436   +        S_Age  +     0.94641603263172 * S_Frq  +     0.27973805141234 *
1185437   +        S_Income  +    -0.02417847760857 * S_Kidhome
1185438   +          +    -0.15499190740194 * S_MntFishProducts
1185439   +          +     0.06053779821593 * S_MntFruits  +     0.01880479324025 *
1185440   +        S_MntGoldProds  +    -0.12339726666832 * S_MntSweetProducts
1185441   +          +     0.03507116553703 * S_MonthsAsCustomer
1185442   +          +    -0.55190381693021 * S_NumDealsPurchases
1185443   +          +    -0.59332657995985 * S_NumWebVisitsMonth
1185444   +          +    -0.06593374840561 * S_RFMstat  +     -0.1695910963416 *
1185445   +        S_RMntFrq  +     0.67557246434122 * S_Recency
1185446   +          +    -0.18658362303394 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.33857166416401 * S_AcceptedCmpTotal + 0.16520608022036 * S_Age 
+ 0.94641603263172 * S_Frq + 0.27973805141234 * S_Income + -0.02417847760857 * S_Kidhome + 
-0.15499190740194 * S_MntFishProducts + 0.06053779821593 * S_MntFruits + 0.01880479324025 * 
S_MntGoldProds + -0.12339726666832 * S_MntSweetProducts + 0.03507116553703 * 
S_MonthsAsCustomer + -0.55190381693021 * S_NumDealsPurchases + -0.59332657995985 * 
S_NumWebVisitsMonth + -0.06593374840561 * S_RFMstat + -0.1695910963416 * S_RMntFrq + 
0.67557246434122 * S_Recency + -0.18658362303394 * S_Teenhome ;
1185447   +   H11  = H11  +     0.33421746514492 * AcceptedCmp10
1185448   +          +     0.40665603760529 * AcceptedCmp20  +     0.31091046539166 *
1185449   +        AcceptedCmp30  +     0.31067810471417 * AcceptedCmp40
1185450   +          +     0.23230606314386 * AcceptedCmp50  +     0.16336773428886 *
1185451   +        Complain0  +    -0.30987882500611 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.33421746514492 * AcceptedCmp10 + 0.40665603760529 * 
AcceptedCmp20 + 0.31091046539166 * AcceptedCmp30 + 0.31067810471417 * AcceptedCmp40 + 
0.23230606314386 * AcceptedCmp50 + 0.16336773428886 * Complain0 + -0.30987882500611 * 
HigherEducationBinary0 ;
1185452   +   H12  = H12  +     0.15837463939449 * AcceptedCmp10
1185453   +          +    -0.01452684677445 * AcceptedCmp20  +    -0.18194082864383 *
1185454   +        AcceptedCmp30  +     0.10656170173016 * AcceptedCmp40
1185455   +          +     0.27710912124072 * AcceptedCmp50  +     0.21438736172214 *
1185456   +        Complain0  +      0.2669951422121 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.15837463939449 * AcceptedCmp10 + -0.01452684677445 * 
AcceptedCmp20 + -0.18194082864383 * AcceptedCmp30 + 0.10656170173016 * AcceptedCmp40 + 
0.27710912124072 * AcceptedCmp50 + 0.21438736172214 * Complain0 + 0.2669951422121 * 
HigherEducationBinary0 ;
1185457   +   H13  = H13  +    -0.11101425179048 * AcceptedCmp10
1185458   +          +    -0.13751555879468 * AcceptedCmp20  +     0.15733527433639 *
1185459   +        AcceptedCmp30  +    -0.09214109408136 * AcceptedCmp40
1185460   +          +     0.20478673178439 * AcceptedCmp50  +    -0.28890027497717 *
1185461   +        Complain0  +     0.12242984309847 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11101425179048 * AcceptedCmp10 + -0.13751555879468 * 
AcceptedCmp20 + 0.15733527433639 * AcceptedCmp30 + -0.09214109408136 * AcceptedCmp40 + 
0.20478673178439 * AcceptedCmp50 + -0.28890027497717 * Complain0 + 0.12242984309847 * 
HigherEducationBinary0 ;
1185462   +   H14  = H14  +     0.23187291622457 * AcceptedCmp10
1185463   +          +    -0.00683976547266 * AcceptedCmp20  +    -0.31710598764248 *
1185464   +        AcceptedCmp30  +     0.01758514221597 * AcceptedCmp40
1185465   +          +     0.01100509244187 * AcceptedCmp50  +     0.18584999296157 *
1185466   +        Complain0  +     0.02524550049258 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.23187291622457 * AcceptedCmp10 + -0.00683976547266 * 
AcceptedCmp20 + -0.31710598764248 * AcceptedCmp30 + 0.01758514221597 * AcceptedCmp40 + 
0.01100509244187 * AcceptedCmp50 + 0.18584999296157 * Complain0 + 0.02524550049258 * 
HigherEducationBinary0 ;
1185467   +   H15  = H15  +     0.53220831693924 * AcceptedCmp10
1185468   +          +     0.01983211122446 * AcceptedCmp20  +      0.4704897795251 *
1185469   +        AcceptedCmp30  +    -0.05798671810245 * AcceptedCmp40
1185470   +          +      0.2900384423652 * AcceptedCmp50  +     0.05796705496261 *
1185471   +        Complain0  +     0.17745347141736 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53220831693924 * AcceptedCmp10 + 0.01983211122446 * 
AcceptedCmp20 + 0.4704897795251 * AcceptedCmp30 + -0.05798671810245 * AcceptedCmp40 + 
0.2900384423652 * AcceptedCmp50 + 0.05796705496261 * Complain0 + 0.17745347141736 * 
HigherEducationBinary0 ;
1185472   +   H11  = H11  +     0.02871001640043 * Education2n_Cycle
1185473   +          +    -0.13470776546868 * EducationBasic  +    -0.09722995474504 *
1185474   +        EducationGraduation  +     0.23764107317064 * EducationMaster
1185475   +          +    -0.41654638301737 * Marital_StatusDivorced
1185476   +          +     0.65956207700583 * Marital_StatusMarried
1185477   +          +    -0.52573042887166 * Marital_StatusSingle
1185478   +          +     0.70466028872575 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02871001640043 * Education2n_Cycle + -0.13470776546868 * 
EducationBasic + -0.09722995474504 * EducationGraduation + 0.23764107317064 * EducationMaster 
+ -0.41654638301737 * Marital_StatusDivorced + 0.65956207700583 * Marital_StatusMarried + 
-0.52573042887166 * Marital_StatusSingle + 0.70466028872575 * Marital_StatusTogether ;
1185479   +   H12  = H12  +    -0.18219729356622 * Education2n_Cycle
1185480   +          +    -0.04034334204744 * EducationBasic  +     0.26266153233615 *
1185481   +        EducationGraduation  +     0.04617834975571 * EducationMaster
1185482   +          +    -0.32313846862799 * Marital_StatusDivorced
1185483   +          +     0.15910539009887 * Marital_StatusMarried
1185484   +          +     0.28781821946114 * Marital_StatusSingle
1185485   +          +    -0.31451367898445 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.18219729356622 * Education2n_Cycle + -0.04034334204744 * 
EducationBasic + 0.26266153233615 * EducationGraduation + 0.04617834975571 * EducationMaster + 
-0.32313846862799 * Marital_StatusDivorced + 0.15910539009887 * Marital_StatusMarried + 
0.28781821946114 * Marital_StatusSingle + -0.31451367898445 * Marital_StatusTogether ;
1185486   +   H13  = H13  +     0.03267721493849 * Education2n_Cycle
1185487   +          +     0.16906837093601 * EducationBasic  +    -0.24874822218195 *
1185488   +        EducationGraduation  +    -0.16815820019721 * EducationMaster
1185489   +          +    -0.06481096024989 * Marital_StatusDivorced
1185490   +          +    -0.01184060710261 * Marital_StatusMarried
1185491   +          +    -0.04932258474026 * Marital_StatusSingle
1185492   +          +     -0.1515388053958 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.03267721493849 * Education2n_Cycle + 0.16906837093601 * 
EducationBasic + -0.24874822218195 * EducationGraduation + -0.16815820019721 * EducationMaster 
+ -0.06481096024989 * Marital_StatusDivorced + -0.01184060710261 * Marital_StatusMarried + 
-0.04932258474026 * Marital_StatusSingle + -0.1515388053958 * Marital_StatusTogether ;
1185493   +   H14  = H14  +     0.04382537081818 * Education2n_Cycle
1185494   +          +     0.09896945976445 * EducationBasic  +      0.2410849324915 *
1185495   +        EducationGraduation  +    -0.17878202935912 * EducationMaster
1185496   +          +      0.2062190716357 * Marital_StatusDivorced
1185497   +          +      -0.523160668609 * Marital_StatusMarried
1185498   +          +     0.50687401816278 * Marital_StatusSingle
1185499   +          +    -0.14896192891933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.04382537081818 * Education2n_Cycle + 0.09896945976445 * 
EducationBasic + 0.2410849324915 * EducationGraduation + -0.17878202935912 * EducationMaster + 
0.2062190716357 * Marital_StatusDivorced + -0.523160668609 * Marital_StatusMarried + 
0.50687401816278 * Marital_StatusSingle + -0.14896192891933 * Marital_StatusTogether ;
1185500   +   H15  = H15  +    -0.08178258730533 * Education2n_Cycle
1185501   +          +      0.2352291498146 * EducationBasic  +     0.00142061419661 *
1185502   +        EducationGraduation  +      0.0248100493803 * EducationMaster
1185503   +          +     -0.1386176879533 * Marital_StatusDivorced
1185504   +          +    -0.17611433777439 * Marital_StatusMarried
1185505   +          +     0.09908348348999 * Marital_StatusSingle
1185506   +          +     0.03642332762739 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.08178258730533 * Education2n_Cycle + 0.2352291498146 * 
EducationBasic + 0.00142061419661 * EducationGraduation + 0.0248100493803 * EducationMaster + 
-0.1386176879533 * Marital_StatusDivorced + -0.17611433777439 * Marital_StatusMarried + 
0.09908348348999 * Marital_StatusSingle + 0.03642332762739 * Marital_StatusTogether ;
1185507   +   H11  =     0.45628072516851 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.45628072516851 + H11 ;
1185508   +   H12  =    -0.95695553300305 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.95695553300305 + H12 ;
1185509   +   H13  =    -0.44156518168947 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.44156518168947 + H13 ;
1185510   +   H14  =      0.5435213841731 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.5435213841731 + H14 ;
1185511   +   H15  =     0.82816554742793 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.82816554742793 + H15 ;
1185512   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1185513   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1185514   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1185515   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1185516   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1185517   +END;
MPRINT(EM_DIAGRAM):   END;
1185518   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185519   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1185520   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1185521   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1185522   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1185523   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1185524   +END;
MPRINT(EM_DIAGRAM):   END;
1185525   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185526   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1185527   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185528   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1185529   +   P_DepVar1  =    -3.08501570662701 * H11  +     0.89180279281701 * H12
1185530   +          +    -2.65199906073292 * H13  +     1.47191997336768 * H14
1185531   +          +     -1.9303334635002 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.08501570662701 * H11 + 0.89180279281701 * H12 + 
-2.65199906073292 * H13 + 1.47191997336768 * H14 + -1.9303334635002 * H15 ;
1185532   +   P_DepVar1  =    -1.84416627670626 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.84416627670626 + P_DepVar1 ;
1185533   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1185534   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1185535   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1185536   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1185537   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1185538   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1185539   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1185540   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1185541   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1185542   +END;
MPRINT(EM_DIAGRAM):   END;
1185543   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1185544   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1185545   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1185546   +END;
MPRINT(EM_DIAGRAM):   END;
1185547   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1185548   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1185549   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1185550   +END;
MPRINT(EM_DIAGRAM):   END;
1185551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185552   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1185553   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1185554   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1185555   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1185556   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1185557   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1185558   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1185559   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1185560   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1185561   +END;
MPRINT(EM_DIAGRAM):   END;
1185562   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1185563   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1185564   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1185565   +drop
1185566   +H11
1185567   +H12
1185568   +H13
1185569   +H14
1185570   +H15
1185571   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1185572   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1185573    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1185574    quit;
1185575    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1185576    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1185577    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1185578    retain ID 2 Node "Neural40";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural40";
1185579    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1185580    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185581    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1185582    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185583    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2037 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2037 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185584    proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural40_variableset out=_temp2(keep=NAME CREATOR);
1185585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185586    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL40_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185587    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185588    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1185589    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1185590    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185591    proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural40_train out=_meta(keep=NAME) noprint;
1185592    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1185593    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1185594    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185595    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185596    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185597    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1185598    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185599    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185600    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1185601    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1185601  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1037 rows and 5 columns.

1185602    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185603    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1185604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1037 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1037 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185605    filename _pref
1185605  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1185606    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1185607    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1185608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185609   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1185610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1185611   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1185612   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1185613   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1185614    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1185615    quit;
1185616    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1185617    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1185618    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1185619    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1185620    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1185621    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185622    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1185623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185624    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185625    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1185626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185627    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185628    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185629    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1185630    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1185631    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185632    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1185633    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1185634    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1185635    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185636    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185637    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185638    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1185639    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185640    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185641    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1185642    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1185642  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1185643    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185644    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1185645    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1041 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185646    filename _pref
1185646  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1185647    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1185648    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1185649   +
1185650   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1185651   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1185651  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1185652   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1185653   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1185654   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1185655   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1185656   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1185657    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1185658    quit;
1185659    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1185660    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1185661    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1185662    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1185663    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1185664    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185665    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1185666    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185667    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185668    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1185669    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185670    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185671    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185672    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1185673    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1185674    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185675    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1185676    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185677    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1185678    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185679    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185680    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185681    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1185682    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185683    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185684    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1185685    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1185685  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1185686    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185687    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1185688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1080 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185689    filename _pref
1185689  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1185690    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1185691    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1185692   +
1185693   +
1185694   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1185695   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1185696   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1185697   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1185698   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1185699   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185700   +
1185701   +
1185702   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1185703   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1185704   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1185705   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1185706   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1185707   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185708   +
1185709   +
1185710   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1185711   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1185712   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1185713   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1185714   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1185715   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185716   +
1185717   +
1185718   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1185719   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1185720   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1185721   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1185722   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1185723   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185724   +
1185725   +
1185726   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1185727   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1185728   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1185729   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1185730   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1185731   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185732   +
1185733   +
1185734   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1185735   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1185736   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1185737   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1185738   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1185739   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185740   +
1185741   +
1185742   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1185743   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1185744   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1185745   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1185746   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1185747   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185748   +
1185749   +
1185750   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1185751   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1185752   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1185753   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1185754   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1185755   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1185756   +if
1185757   +_FILTERNORM1 not in ( '.')
1185758   + and
1185759   +_FILTERNORM2 not in ( '.')
1185760   + and
1185761   +_FILTERNORM3 not in ( '.')
1185762   + and
1185763   +_FILTERNORM4 not in ( '.')
1185764   + and
1185765   +_FILTERNORM5 not in ( '.')
1185766   + and
1185767   +_FILTERNORM6 not in ( '.')
1185768   + and
1185769   +_FILTERNORM7 not in ( ' ')
1185770   + and
1185771   +_FILTERNORM8 not in ( ' ')
1185772   +and
1185773   +( Dt_Customer ne .)
1185774   +and ( Income ne . and (Income<=107000))
1185775   +and ( Kidhome ne .)
1185776   +and ( MntFishProducts ne .)
1185777   +and ( MntFruits ne .)
1185778   +and ( MntGoldProds ne .)
1185779   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1185780   +and ( MntSweetProducts ne .)
1185781   +and ( MntWines ne .)
1185782   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1185783   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1185784   +and ( NumStorePurchases ne .)
1185785   +and ( NumWebPurchases ne .)
1185786   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1185787   +and ( Recency ne .)
1185788   +and ( Teenhome ne .)
1185789   +and ( Year_Birth ne .)
1185790   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1185791   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1185792   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1185793   +end;
MPRINT(EM_DIAGRAM):   end;
1185794   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1185795   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1185796    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1185797    quit;
1185798    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1185799    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1185800    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1185801    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1185802    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1185803    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185804    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1185805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185806    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185807    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1185808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185809    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185810    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185811    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1185812    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1185813    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185814    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1185815    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185816    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1185817    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185818    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185819    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1185820    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1185821    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1185822    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185823    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1185824    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1185824  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1185825    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185826    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1185827    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1146 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185828    %macro varDept(fcmpdata=,id=);
1185829    %global nobs&id scoreFlag&id;
1185830    %let scoreFlag&id = 0;
1185831    %if &id=1 or ^&fcmpStart %then %do;
1185832    proc sort data=&fcmpdata out=_temp&id nodupkey;
1185833    by NAME;
1185834    where id=&id and LHS in( %let j=1;
1185835    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1185836    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1185837    "&var" %let j = %eval(&j+1);
1185838    %end;
1185839    );
1185840    run;
1185841    %let dsid = %sysfunc(open(_temp&id));
1185842    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1185843    %let dsid = %sysfunc(close(&dsid));
1185844    %if &&nobs&id %then %do;
1185845    %let scoreFlag&id = 1;
1185846    %let fcmpStart = 1;
1185847    %end;
1185848    %else %let fcmpStart = 0;
1185849    %end;
1185850    %else %do;
1185851    proc sort data=&fcmpdata out=_tempid;
1185852    where id=&id;
1185853    by LHS;
1185854    run;
1185855    %let dsid = %sysfunc(open(_tempid));
1185856    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1185857    %let dsid = %sysfunc(close(&dsid));
1185858    %if ^&&nobs&id %then %do;
1185859    proc datasets lib=work nolist;
1185860    delete _tempid;
1185861    run;
1185862    quit;
1185863    %end;
1185864    %else %do;
1185865    data _tempAll;
1185866    set %let j=%eval(&id-1);
1185867    %do x=1 %to &j;
1185868    %if &&nobs&x %then %do;
1185869    _temp&x %end;
1185870    %end;
1185871    ;
1185872    run;
1185873    proc sql;
1185874    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1185874  ! work._tempid p2 where p.name=p2.lhs;
1185875    quit;
1185876    data _temp&id;
1185877    set _temp&id;
1185878    where LHS ne '' and NAME ne '' and Node ne '';
1185879    run;
1185880    proc datasets lib=work nolist;
1185881    delete _tempAll;
1185882    run;
1185883    %let dsid = %sysfunc(open(_temp&id));
1185884    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1185885    %let dsid = %sysfunc(close(&dsid));
1185886    %if ^&&nobs&id %then %do;
1185887    proc datasets lib=work nolist;
1185888    delete _temp&id;
1185889    run;
1185890    quit;
1185891    %end;
1185892    %else %do;
1185893    %let scoreFlag&id = 1;
1185894    data _temp&id;
1185895    set _temp&id;
1185896    where LHS ne NAME and node ne '';
1185897    run;
1185898    %let dsid = %sysfunc(open(_temp&id));
1185899    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1185900    %let dsid = %sysfunc(close(&dsid));
1185901    %if ^&&nobs&id %then %do;
1185902    proc datasets lib=work nolist;
1185903    delete _temp&id;
1185904    run;
1185905    quit;
1185906    %end;
1185907    %else %do;
1185908    proc sort data=_temp&id nodupkey;
1185909    by LHS NAME;
1185910    run;
1185911    %end;
1185912    %end;
1185913    %end;
1185914    %end;
1185915    %mend varDept;
1185916    %macro optCode(outdata=fcmpdata);
1185917    %global fcmpStart;
1185918    %let fcmpStart = 0;
1185919    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1185920    %let NumNodes=9;
1185921    %do k=1 %to &NumNodes;
1185922    %vardept(fcmpdata=&outdata, id=&k);
1185923    %end;
1185924    %mend optCode;
1185925    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1185926    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1185927    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1185928    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1185929    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185930    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1185931    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1185932    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1185933    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1185934    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1185935    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1185935  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1185936    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1185937    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1185938    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1185939    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1185940    filename _pref
1185940  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas";
1185941    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1185942    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural41\EMPUBLISHSCORE.sas.
1185943   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1185944   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1185945   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1185946   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1185947   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1185948   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1185949   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1185950   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1185951   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1185952   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1185953   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1185954   +LENGTH _WARN_ $4
1185955   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1185956   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1185957   +
1185958   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1185959   +
1185960   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1185961   +
1185962   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1185963   +
1185964   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1185965   +
1185966   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1185967   +
1185968   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1185969   +
1185970   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1185971   +
1185972   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1185973   +
1185974   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1185975   +
1185976   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1185977   +
1185978   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1185979   +
1185980   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1185981   +
1185982   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1185983   +
1185984   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1185985   +
1185986   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1185987   +
1185988   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1185989   +
1185990   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1185991   +
1185992   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1185993   +
1185994   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1185995   +
1185996   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1185997   +
1185998   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1185999   +
1186000   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1186001   +
1186002   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1186003   +
1186004   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1186005   +
1186006   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1186007   +
1186008   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1186009   +
1186010   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1186011   +
1186012   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1186013   +
1186014   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1186015   +
1186016   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1186017   +
1186018   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1186019   +
1186020   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1186021   +
1186022   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1186023   +
1186024   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1186025   +
1186026   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1186027   +
1186028   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1186029   +
1186030   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1186031   +
1186032   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1186033   +
1186034   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1186035   +
1186036   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1186037   +
1186038   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1186039   +
1186040   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1186041   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1186042   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1186043   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1186044   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186045   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186046   +end;
MPRINT(EM_DIAGRAM):   end;
1186047   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186048   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186049   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1186050   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186051   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186052   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1186053   +   end;
MPRINT(EM_DIAGRAM):   end;
1186054   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186055   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1186056   +   end;
MPRINT(EM_DIAGRAM):   end;
1186057   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186058   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1186059   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186060   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186061   +   end;
MPRINT(EM_DIAGRAM):   end;
1186062   +end;
MPRINT(EM_DIAGRAM):   end;
1186063   +
1186064   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1186065   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1186066   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1186067   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1186068   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186069   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186070   +end;
MPRINT(EM_DIAGRAM):   end;
1186071   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186072   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186073   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1186074   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186075   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186076   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1186077   +   end;
MPRINT(EM_DIAGRAM):   end;
1186078   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186079   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1186080   +   end;
MPRINT(EM_DIAGRAM):   end;
1186081   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186082   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1186083   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186084   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186085   +   end;
MPRINT(EM_DIAGRAM):   end;
1186086   +end;
MPRINT(EM_DIAGRAM):   end;
1186087   +
1186088   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1186089   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1186090   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1186091   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1186092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186094   +end;
MPRINT(EM_DIAGRAM):   end;
1186095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186097   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1186098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186099   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186100   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1186101   +   end;
MPRINT(EM_DIAGRAM):   end;
1186102   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186103   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1186104   +   end;
MPRINT(EM_DIAGRAM):   end;
1186105   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186106   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1186107   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186108   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186109   +   end;
MPRINT(EM_DIAGRAM):   end;
1186110   +end;
MPRINT(EM_DIAGRAM):   end;
1186111   +
1186112   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1186113   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1186114   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1186115   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1186116   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186117   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186118   +end;
MPRINT(EM_DIAGRAM):   end;
1186119   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186120   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186121   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1186122   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186123   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186124   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1186125   +   end;
MPRINT(EM_DIAGRAM):   end;
1186126   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186127   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1186128   +   end;
MPRINT(EM_DIAGRAM):   end;
1186129   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186130   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1186131   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186132   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186133   +   end;
MPRINT(EM_DIAGRAM):   end;
1186134   +end;
MPRINT(EM_DIAGRAM):   end;
1186135   +
1186136   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1186137   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1186138   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1186139   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1186140   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186141   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186142   +end;
MPRINT(EM_DIAGRAM):   end;
1186143   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186144   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186145   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1186146   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186147   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186148   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1186149   +   end;
MPRINT(EM_DIAGRAM):   end;
1186150   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186151   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1186152   +   end;
MPRINT(EM_DIAGRAM):   end;
1186153   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186154   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1186155   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186156   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186157   +   end;
MPRINT(EM_DIAGRAM):   end;
1186158   +end;
MPRINT(EM_DIAGRAM):   end;
1186159   +
1186160   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1186161   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1186162   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1186163   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1186164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186166   +end;
MPRINT(EM_DIAGRAM):   end;
1186167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186169   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1186170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186171   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1186172   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1186173   +   end;
MPRINT(EM_DIAGRAM):   end;
1186174   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1186175   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1186176   +   end;
MPRINT(EM_DIAGRAM):   end;
1186177   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186178   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1186179   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186180   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186181   +   end;
MPRINT(EM_DIAGRAM):   end;
1186182   +end;
MPRINT(EM_DIAGRAM):   end;
1186183   +
1186184   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1186185   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1186186   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1186187   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1186188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186190   +end;
MPRINT(EM_DIAGRAM):   end;
1186191   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1186193   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1186194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186195   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1186196   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1186197   +   end;
MPRINT(EM_DIAGRAM):   end;
1186198   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1186199   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1186200   +   end;
MPRINT(EM_DIAGRAM):   end;
1186201   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186202   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1186203   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186204   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186205   +   end;
MPRINT(EM_DIAGRAM):   end;
1186206   +end;
MPRINT(EM_DIAGRAM):   end;
1186207   +
1186208   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1186209   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1186210   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1186211   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1186212   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1186213   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1186214   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1186215   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1186216   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1186217   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1186218   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1186219   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1186220   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186221   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186222   +end;
MPRINT(EM_DIAGRAM):   end;
1186223   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186224   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1186225   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1186226   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186227   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1186228   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1186229   +   end;
MPRINT(EM_DIAGRAM):   end;
1186230   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1186231   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1186232   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1186233   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1186234   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1186235   +   end;
MPRINT(EM_DIAGRAM):   end;
1186236   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1186237   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1186238   +   end;
MPRINT(EM_DIAGRAM):   end;
1186239   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1186240   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1186241   +   end;
MPRINT(EM_DIAGRAM):   end;
1186242   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1186243   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1186244   +   end;
MPRINT(EM_DIAGRAM):   end;
1186245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186246   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1186247   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1186248   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1186249   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1186250   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186251   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186252   +   end;
MPRINT(EM_DIAGRAM):   end;
1186253   +end;
MPRINT(EM_DIAGRAM):   end;
1186254   +
1186255   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1186256   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1186257   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1186258   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1186259   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1186260   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1186261   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1186262   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1186263   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1186264   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1186265   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1186266   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1186267   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1186268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1186269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186270   +end;
MPRINT(EM_DIAGRAM):   end;
1186271   +else do;
MPRINT(EM_DIAGRAM):   else do;
1186272   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1186273   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1186274   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1186275   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1186276   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1186277   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1186278   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1186279   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1186280   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186281   +         end;
MPRINT(EM_DIAGRAM):   end;
1186282   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1186283   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1186284   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1186285   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186286   +            end;
MPRINT(EM_DIAGRAM):   end;
1186287   +         end;
MPRINT(EM_DIAGRAM):   end;
1186288   +      end;
MPRINT(EM_DIAGRAM):   end;
1186289   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1186290   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1186291   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1186292   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186293   +         end;
MPRINT(EM_DIAGRAM):   end;
1186294   +      end;
MPRINT(EM_DIAGRAM):   end;
1186295   +   end;
MPRINT(EM_DIAGRAM):   end;
1186296   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1186297   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1186298   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1186299   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186300   +      end;
MPRINT(EM_DIAGRAM):   end;
1186301   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1186302   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1186303   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1186304   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1186305   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1186306   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1186307   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1186308   +         end;
MPRINT(EM_DIAGRAM):   end;
1186309   +      end;
MPRINT(EM_DIAGRAM):   end;
1186310   +   end;
MPRINT(EM_DIAGRAM):   end;
1186311   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1186312   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1186313   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1186314   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1186315   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1186316   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1186317   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186318   +   end;
MPRINT(EM_DIAGRAM):   end;
1186319   +end;
MPRINT(EM_DIAGRAM):   end;
1186320   +
1186321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186322   +*** Checking missing input Interval
1186323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1186324   +
1186325   +IF NMISS(
1186326   +   AcceptedCmpTotal ,
1186327   +   Age ,
1186328   +   Frq ,
1186329   +   Income ,
1186330   +   Kidhome ,
1186331   +   MntFishProducts ,
1186332   +   MntFruits ,
1186333   +   MntGoldProds ,
1186334   +   MntSweetProducts ,
1186335   +   MonthsAsCustomer ,
1186336   +   NumDealsPurchases ,
1186337   +   NumWebVisitsMonth ,
1186338   +   RFMstat ,
1186339   +   RMntFrq ,
1186340   +   Recency ,
1186341   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1186342   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1186343   +
1186344   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1186345   +END;
MPRINT(EM_DIAGRAM):   END;
1186346   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186347   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1186348   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186349   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186350   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1186351   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1186352   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1186353   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1186354   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1186355   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1186356   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1186357   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1186358   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1186359   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1186360   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1186361   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1186362   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1186363   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1186364   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1186365   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1186366   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1186367   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1186368   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1186369   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1186370   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1186371   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1186372   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1186373   +END;
MPRINT(EM_DIAGRAM):   END;
1186374   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186375   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1186376   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1186377   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1186378   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1186379   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1186380   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1186381   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1186382   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1186383   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1186384   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1186385   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1186386   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1186387   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1186388   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1186389   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1186390   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1186391   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1186392   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1186393   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1186394   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1186395   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1186396   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1186397   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1186398   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1186399   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1186400   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1186401   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1186402   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1186403   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1186404   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1186405   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1186406   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1186407   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1186408   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1186409   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1186410   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1186411   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1186412   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1186413   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1186414   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1186415   +END;
MPRINT(EM_DIAGRAM):   END;
1186416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186417   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1186418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186419   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186420   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1186421   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186422   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186423   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1186424   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186425   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186426   +   H11  =     0.00008202203841 * S_AcceptedCmpTotal  +    -0.13126483592154 *
1186427   +        S_Age  +    -0.18503379491116 * S_Frq  +      0.0037482920266 *
1186428   +        S_Income  +    -0.52684337240504 * S_Kidhome
1186429   +          +     0.07835956947085 * S_MntFishProducts
1186430   +          +    -0.04668308882455 * S_MntFruits  +     0.05311471984852 *
1186431   +        S_MntGoldProds  +    -0.39576933150762 * S_MntSweetProducts
1186432   +          +    -0.44463888327841 * S_MonthsAsCustomer
1186433   +          +    -0.20310227710644 * S_NumDealsPurchases
1186434   +          +     0.06594467408568 * S_NumWebVisitsMonth
1186435   +          +      0.1351556470497 * S_RFMstat  +    -0.29446460505048 *
1186436   +        S_RMntFrq  +    -0.68878207173764 * S_Recency
1186437   +          +    -0.29241927123525 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.00008202203841 * S_AcceptedCmpTotal + -0.13126483592154 * S_Age 
+ -0.18503379491116 * S_Frq + 0.0037482920266 * S_Income + -0.52684337240504 * S_Kidhome + 
0.07835956947085 * S_MntFishProducts + -0.04668308882455 * S_MntFruits + 0.05311471984852 * 
S_MntGoldProds + -0.39576933150762 * S_MntSweetProducts + -0.44463888327841 * 
S_MonthsAsCustomer + -0.20310227710644 * S_NumDealsPurchases + 0.06594467408568 * 
S_NumWebVisitsMonth + 0.1351556470497 * S_RFMstat + -0.29446460505048 * S_RMntFrq + 
-0.68878207173764 * S_Recency + -0.29241927123525 * S_Teenhome ;
1186438   +   H12  =     0.38864749644126 * S_AcceptedCmpTotal  +    -0.01077611135972 *
1186439   +        S_Age  +     0.24187074268223 * S_Frq  +     0.64180191864108 *
1186440   +        S_Income  +     0.91025818069308 * S_Kidhome
1186441   +          +     0.26585860774761 * S_MntFishProducts
1186442   +          +     -0.3087386188037 * S_MntFruits  +     0.14643568534568 *
1186443   +        S_MntGoldProds  +     0.23763200275034 * S_MntSweetProducts
1186444   +          +    -0.12421403342454 * S_MonthsAsCustomer
1186445   +          +     0.66931066909347 * S_NumDealsPurchases
1186446   +          +     0.35050056776957 * S_NumWebVisitsMonth
1186447   +          +     0.16127659142199 * S_RFMstat  +     0.04112742589329 *
1186448   +        S_RMntFrq  +    -0.83075146355987 * S_Recency
1186449   +          +    -0.37723917156575 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.38864749644126 * S_AcceptedCmpTotal + -0.01077611135972 * S_Age 
+ 0.24187074268223 * S_Frq + 0.64180191864108 * S_Income + 0.91025818069308 * S_Kidhome + 
0.26585860774761 * S_MntFishProducts + -0.3087386188037 * S_MntFruits + 0.14643568534568 * 
S_MntGoldProds + 0.23763200275034 * S_MntSweetProducts + -0.12421403342454 * 
S_MonthsAsCustomer + 0.66931066909347 * S_NumDealsPurchases + 0.35050056776957 * 
S_NumWebVisitsMonth + 0.16127659142199 * S_RFMstat + 0.04112742589329 * S_RMntFrq + 
-0.83075146355987 * S_Recency + -0.37723917156575 * S_Teenhome ;
1186450   +   H13  =     0.02339384767281 * S_AcceptedCmpTotal  +    -0.17700567590774 *
1186451   +        S_Age  +    -0.38060509731554 * S_Frq  +    -0.86026143079344 *
1186452   +        S_Income  +     0.63027536562783 * S_Kidhome
1186453   +          +     0.15303249164566 * S_MntFishProducts
1186454   +          +    -0.04780128957622 * S_MntFruits  +    -0.02064261038049 *
1186455   +        S_MntGoldProds  +     0.26238383938455 * S_MntSweetProducts
1186456   +          +    -0.21006970062531 * S_MonthsAsCustomer
1186457   +          +      0.2955774677605 * S_NumDealsPurchases
1186458   +          +    -0.15769947513958 * S_NumWebVisitsMonth
1186459   +          +    -0.02874776268384 * S_RFMstat  +     -0.3955429869434 *
1186460   +        S_RMntFrq  +      0.3744122250079 * S_Recency
1186461   +          +     0.58295521976226 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 0.02339384767281 * S_AcceptedCmpTotal + -0.17700567590774 * S_Age 
+ -0.38060509731554 * S_Frq + -0.86026143079344 * S_Income + 0.63027536562783 * S_Kidhome + 
0.15303249164566 * S_MntFishProducts + -0.04780128957622 * S_MntFruits + -0.02064261038049 * 
S_MntGoldProds + 0.26238383938455 * S_MntSweetProducts + -0.21006970062531 * 
S_MonthsAsCustomer + 0.2955774677605 * S_NumDealsPurchases + -0.15769947513958 * 
S_NumWebVisitsMonth + -0.02874776268384 * S_RFMstat + -0.3955429869434 * S_RMntFrq + 
0.3744122250079 * S_Recency + 0.58295521976226 * S_Teenhome ;
1186462   +   H14  =    -0.22800152627721 * S_AcceptedCmpTotal  +     0.27991667815594 *
1186463   +        S_Age  +     0.89001922321833 * S_Frq  +     0.17467731177386 *
1186464   +        S_Income  +    -0.00985947331416 * S_Kidhome
1186465   +          +    -0.27114701164817 * S_MntFishProducts
1186466   +          +     0.32554392037328 * S_MntFruits  +     0.06705670808471 *
1186467   +        S_MntGoldProds  +     -0.3590087223323 * S_MntSweetProducts
1186468   +          +    -0.02702818828921 * S_MonthsAsCustomer
1186469   +          +    -0.63381188911946 * S_NumDealsPurchases
1186470   +          +    -0.86143000704363 * S_NumWebVisitsMonth
1186471   +          +    -0.16788755655818 * S_RFMstat  +    -0.09712800982817 *
1186472   +        S_RMntFrq  +     0.61892338869919 * S_Recency
1186473   +          +    -0.21544816860839 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.22800152627721 * S_AcceptedCmpTotal + 0.27991667815594 * S_Age 
+ 0.89001922321833 * S_Frq + 0.17467731177386 * S_Income + -0.00985947331416 * S_Kidhome + 
-0.27114701164817 * S_MntFishProducts + 0.32554392037328 * S_MntFruits + 0.06705670808471 * 
S_MntGoldProds + -0.3590087223323 * S_MntSweetProducts + -0.02702818828921 * 
S_MonthsAsCustomer + -0.63381188911946 * S_NumDealsPurchases + -0.86143000704363 * 
S_NumWebVisitsMonth + -0.16788755655818 * S_RFMstat + -0.09712800982817 * S_RMntFrq + 
0.61892338869919 * S_Recency + -0.21544816860839 * S_Teenhome ;
1186474   +   H15  =      0.0846389232492 * S_AcceptedCmpTotal  +    -0.03933692648164 *
1186475   +        S_Age  +     0.26004669807852 * S_Frq  +     0.30306661543325 *
1186476   +        S_Income  +    -0.24206929946772 * S_Kidhome
1186477   +          +    -0.19039689229491 * S_MntFishProducts
1186478   +          +    -0.22957509816007 * S_MntFruits  +    -0.35006912387254 *
1186479   +        S_MntGoldProds  +    -0.02737135204648 * S_MntSweetProducts
1186480   +          +     0.03815221487927 * S_MonthsAsCustomer
1186481   +          +    -0.43579024169696 * S_NumDealsPurchases
1186482   +          +    -0.27796253880432 * S_NumWebVisitsMonth
1186483   +          +     0.15010895791429 * S_RFMstat  +     0.24377797912725 *
1186484   +        S_RMntFrq  +     0.50547916383425 * S_Recency
1186485   +          +    -0.22622962943787 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = 0.0846389232492 * S_AcceptedCmpTotal + -0.03933692648164 * S_Age + 
0.26004669807852 * S_Frq + 0.30306661543325 * S_Income + -0.24206929946772 * S_Kidhome + 
-0.19039689229491 * S_MntFishProducts + -0.22957509816007 * S_MntFruits + -0.35006912387254 * 
S_MntGoldProds + -0.02737135204648 * S_MntSweetProducts + 0.03815221487927 * 
S_MonthsAsCustomer + -0.43579024169696 * S_NumDealsPurchases + -0.27796253880432 * 
S_NumWebVisitsMonth + 0.15010895791429 * S_RFMstat + 0.24377797912725 * S_RMntFrq + 
0.50547916383425 * S_Recency + -0.22622962943787 * S_Teenhome ;
1186486   +   H16  =     0.03788304209102 * S_AcceptedCmpTotal  +    -0.27022676521755 *
1186487   +        S_Age  +    -0.17480141247917 * S_Frq  +     0.53345624791204 *
1186488   +        S_Income  +    -0.25736924536467 * S_Kidhome
1186489   +          +    -0.04400855145817 * S_MntFishProducts
1186490   +          +    -0.06651358259718 * S_MntFruits  +     -0.0117104183032 *
1186491   +        S_MntGoldProds  +    -0.02790266219853 * S_MntSweetProducts
1186492   +          +     0.00265986106691 * S_MonthsAsCustomer
1186493   +          +     0.27331919080312 * S_NumDealsPurchases
1186494   +          +     0.22836119952787 * S_NumWebVisitsMonth
1186495   +          +     0.09245783028838 * S_RFMstat  +     0.10223459152488 *
1186496   +        S_RMntFrq  +    -0.90398250269857 * S_Recency
1186497   +          +     -0.2621421532112 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = 0.03788304209102 * S_AcceptedCmpTotal + -0.27022676521755 * S_Age 
+ -0.17480141247917 * S_Frq + 0.53345624791204 * S_Income + -0.25736924536467 * S_Kidhome + 
-0.04400855145817 * S_MntFishProducts + -0.06651358259718 * S_MntFruits + -0.0117104183032 * 
S_MntGoldProds + -0.02790266219853 * S_MntSweetProducts + 0.00265986106691 * 
S_MonthsAsCustomer + 0.27331919080312 * S_NumDealsPurchases + 0.22836119952787 * 
S_NumWebVisitsMonth + 0.09245783028838 * S_RFMstat + 0.10223459152488 * S_RMntFrq + 
-0.90398250269857 * S_Recency + -0.2621421532112 * S_Teenhome ;
1186498   +   H11  = H11  +     0.24155985997122 * AcceptedCmp10
1186499   +          +     0.02727843300562 * AcceptedCmp20  +     0.05990453920581 *
1186500   +        AcceptedCmp30  +    -0.43469138041411 * AcceptedCmp40
1186501   +          +     0.00076050589964 * AcceptedCmp50  +     0.43307119233671 *
1186502   +        Complain0  +     0.23242177664865 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.24155985997122 * AcceptedCmp10 + 0.02727843300562 * 
AcceptedCmp20 + 0.05990453920581 * AcceptedCmp30 + -0.43469138041411 * AcceptedCmp40 + 
0.00076050589964 * AcceptedCmp50 + 0.43307119233671 * Complain0 + 0.23242177664865 * 
HigherEducationBinary0 ;
1186503   +   H12  = H12  +     0.04034689771488 * AcceptedCmp10
1186504   +          +    -0.01358747117911 * AcceptedCmp20  +    -0.29883922116453 *
1186505   +        AcceptedCmp30  +     0.58794258522438 * AcceptedCmp40
1186506   +          +    -0.40659406037079 * AcceptedCmp50  +     0.59068991602469 *
1186507   +        Complain0  +     -0.3122461557933 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.04034689771488 * AcceptedCmp10 + -0.01358747117911 * 
AcceptedCmp20 + -0.29883922116453 * AcceptedCmp30 + 0.58794258522438 * AcceptedCmp40 + 
-0.40659406037079 * AcceptedCmp50 + 0.59068991602469 * Complain0 + -0.3122461557933 * 
HigherEducationBinary0 ;
1186508   +   H13  = H13  +     0.49941486221932 * AcceptedCmp10
1186509   +          +     0.42891153022885 * AcceptedCmp20  +     0.28744085742243 *
1186510   +        AcceptedCmp30  +     0.54657253664873 * AcceptedCmp40
1186511   +          +     0.10655487579255 * AcceptedCmp50  +     0.11223153893952 *
1186512   +        Complain0  +    -0.44704943665138 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.49941486221932 * AcceptedCmp10 + 0.42891153022885 * 
AcceptedCmp20 + 0.28744085742243 * AcceptedCmp30 + 0.54657253664873 * AcceptedCmp40 + 
0.10655487579255 * AcceptedCmp50 + 0.11223153893952 * Complain0 + -0.44704943665138 * 
HigherEducationBinary0 ;
1186513   +   H14  = H14  +     0.70510583713907 * AcceptedCmp10
1186514   +          +     0.04052111261969 * AcceptedCmp20  +     0.76301816100625 *
1186515   +        AcceptedCmp30  +     0.09753552533639 * AcceptedCmp40
1186516   +          +     0.40999088454383 * AcceptedCmp50  +     0.19278448059725 *
1186517   +        Complain0  +     0.09127136236268 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.70510583713907 * AcceptedCmp10 + 0.04052111261969 * 
AcceptedCmp20 + 0.76301816100625 * AcceptedCmp30 + 0.09753552533639 * AcceptedCmp40 + 
0.40999088454383 * AcceptedCmp50 + 0.19278448059725 * Complain0 + 0.09127136236268 * 
HigherEducationBinary0 ;
1186518   +   H15  = H15  +     0.30535300313392 * AcceptedCmp10
1186519   +          +    -0.01605332227631 * AcceptedCmp20  +     0.09278623651632 *
1186520   +        AcceptedCmp30  +     0.03468239765482 * AcceptedCmp40
1186521   +          +     0.19720723485806 * AcceptedCmp50  +    -0.32364247007443 *
1186522   +        Complain0  +    -0.20695533150084 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.30535300313392 * AcceptedCmp10 + -0.01605332227631 * 
AcceptedCmp20 + 0.09278623651632 * AcceptedCmp30 + 0.03468239765482 * AcceptedCmp40 + 
0.19720723485806 * AcceptedCmp50 + -0.32364247007443 * Complain0 + -0.20695533150084 * 
HigherEducationBinary0 ;
1186523   +   H16  = H16  +    -0.19354253973215 * AcceptedCmp10
1186524   +          +     0.01566685138596 * AcceptedCmp20  +    -0.28250218144785 *
1186525   +        AcceptedCmp30  +    -0.13118265240955 * AcceptedCmp40
1186526   +          +    -0.03808858956936 * AcceptedCmp50  +    -0.19850701105147 *
1186527   +        Complain0  +     0.14297616111345 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.19354253973215 * AcceptedCmp10 + 0.01566685138596 * 
AcceptedCmp20 + -0.28250218144785 * AcceptedCmp30 + -0.13118265240955 * AcceptedCmp40 + 
-0.03808858956936 * AcceptedCmp50 + -0.19850701105147 * Complain0 + 0.14297616111345 * 
HigherEducationBinary0 ;
1186528   +   H11  = H11  +     0.05082493200436 * Education2n_Cycle
1186529   +          +    -0.08192239267323 * EducationBasic  +    -0.01445849926378 *
1186530   +        EducationGraduation  +     0.01459143816519 * EducationMaster
1186531   +          +     0.12502276672336 * Marital_StatusDivorced
1186532   +          +    -0.02606508453741 * Marital_StatusMarried
1186533   +          +      0.0418850245266 * Marital_StatusSingle
1186534   +          +     0.02050996572132 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.05082493200436 * Education2n_Cycle + -0.08192239267323 * 
EducationBasic + -0.01445849926378 * EducationGraduation + 0.01459143816519 * EducationMaster 
+ 0.12502276672336 * Marital_StatusDivorced + -0.02606508453741 * Marital_StatusMarried + 
0.0418850245266 * Marital_StatusSingle + 0.02050996572132 * Marital_StatusTogether ;
1186535   +   H12  = H12  +     -0.1900759238575 * Education2n_Cycle
1186536   +          +     0.13535241443003 * EducationBasic  +    -0.00199771592906 *
1186537   +        EducationGraduation  +     0.00476193515914 * EducationMaster
1186538   +          +      0.1943860669795 * Marital_StatusDivorced
1186539   +          +     -0.1529596261268 * Marital_StatusMarried
1186540   +          +     0.24187461301348 * Marital_StatusSingle
1186541   +          +     0.09157538589749 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.1900759238575 * Education2n_Cycle + 0.13535241443003 * 
EducationBasic + -0.00199771592906 * EducationGraduation + 0.00476193515914 * EducationMaster 
+ 0.1943860669795 * Marital_StatusDivorced + -0.1529596261268 * Marital_StatusMarried + 
0.24187461301348 * Marital_StatusSingle + 0.09157538589749 * Marital_StatusTogether ;
1186542   +   H13  = H13  +     0.02140936656506 * Education2n_Cycle
1186543   +          +     0.05845427475503 * EducationBasic  +    -0.44298208278895 *
1186544   +        EducationGraduation  +     0.17149477011717 * EducationMaster
1186545   +          +    -0.19677652422622 * Marital_StatusDivorced
1186546   +          +     0.75897106429478 * Marital_StatusMarried
1186547   +          +    -0.66692260284833 * Marital_StatusSingle
1186548   +          +     0.58287349221333 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02140936656506 * Education2n_Cycle + 0.05845427475503 * 
EducationBasic + -0.44298208278895 * EducationGraduation + 0.17149477011717 * EducationMaster 
+ -0.19677652422622 * Marital_StatusDivorced + 0.75897106429478 * Marital_StatusMarried + 
-0.66692260284833 * Marital_StatusSingle + 0.58287349221333 * Marital_StatusTogether ;
1186549   +   H14  = H14  +     0.18801855635785 * Education2n_Cycle
1186550   +          +    -0.06231007239836 * EducationBasic  +    -0.26915940640311 *
1186551   +        EducationGraduation  +    -0.30689797876717 * EducationMaster
1186552   +          +    -0.18964222971122 * Marital_StatusDivorced
1186553   +          +    -0.15222045956879 * Marital_StatusMarried
1186554   +          +     0.15455795695595 * Marital_StatusSingle
1186555   +          +    -0.04060840399479 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.18801855635785 * Education2n_Cycle + -0.06231007239836 * 
EducationBasic + -0.26915940640311 * EducationGraduation + -0.30689797876717 * EducationMaster 
+ -0.18964222971122 * Marital_StatusDivorced + -0.15222045956879 * Marital_StatusMarried + 
0.15455795695595 * Marital_StatusSingle + -0.04060840399479 * Marital_StatusTogether ;
1186556   +   H15  = H15  +    -0.12131367369042 * Education2n_Cycle
1186557   +          +     0.20547688844423 * EducationBasic  +     0.04965529549437 *
1186558   +        EducationGraduation  +    -0.21811990669176 * EducationMaster
1186559   +          +    -0.10122776921995 * Marital_StatusDivorced
1186560   +          +     0.14126755564161 * Marital_StatusMarried
1186561   +          +    -0.18463644418978 * Marital_StatusSingle
1186562   +          +     0.23071597384519 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.12131367369042 * Education2n_Cycle + 0.20547688844423 * 
EducationBasic + 0.04965529549437 * EducationGraduation + -0.21811990669176 * EducationMaster 
+ -0.10122776921995 * Marital_StatusDivorced + 0.14126755564161 * Marital_StatusMarried + 
-0.18463644418978 * Marital_StatusSingle + 0.23071597384519 * Marital_StatusTogether ;
1186563   +   H16  = H16  +     0.02961881390411 * Education2n_Cycle
1186564   +          +    -0.46228434914367 * EducationBasic  +    -0.08513280071643 *
1186565   +        EducationGraduation  +    -0.20159542694386 * EducationMaster
1186566   +          +     0.05009431660662 * Marital_StatusDivorced
1186567   +          +    -0.38407798045329 * Marital_StatusMarried
1186568   +          +      0.3035257398654 * Marital_StatusSingle
1186569   +          +    -0.27725923319119 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02961881390411 * Education2n_Cycle + -0.46228434914367 * 
EducationBasic + -0.08513280071643 * EducationGraduation + -0.20159542694386 * EducationMaster 
+ 0.05009431660662 * Marital_StatusDivorced + -0.38407798045329 * Marital_StatusMarried + 
0.3035257398654 * Marital_StatusSingle + -0.27725923319119 * Marital_StatusTogether ;
1186570   +   H11  =      1.3960587011002 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.3960587011002 + H11 ;
1186571   +   H12  =     0.18947019063375 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.18947019063375 + H12 ;
1186572   +   H13  =     0.55907472867898 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.55907472867898 + H13 ;
1186573   +   H14  =     0.28336290184268 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.28336290184268 + H14 ;
1186574   +   H15  =     1.08919536550159 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.08919536550159 + H15 ;
1186575   +   H16  =    -0.22538308534609 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.22538308534609 + H16 ;
1186576   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1186577   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1186578   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1186579   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1186580   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1186581   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1186582   +END;
MPRINT(EM_DIAGRAM):   END;
1186583   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186584   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1186585   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1186586   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1186587   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1186588   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1186589   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1186590   +END;
MPRINT(EM_DIAGRAM):   END;
1186591   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186592   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1186593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186594   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1186595   +   P_DepVar1  =      1.1921632715983 * H11  +     2.38386446186622 * H12
1186596   +          +    -2.42409896638067 * H13  +    -2.19084949788904 * H14
1186597   +          +      -0.380575449439 * H15  +     1.17350595805971 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.1921632715983 * H11 + 2.38386446186622 * H12 + 
-2.42409896638067 * H13 + -2.19084949788904 * H14 + -0.380575449439 * H15 + 1.17350595805971 * 
H16 ;
1186598   +   P_DepVar1  =    -1.70154799161574 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.70154799161574 + P_DepVar1 ;
1186599   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1186600   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1186601   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1186602   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1186603   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1186604   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1186605   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1186606   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1186607   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1186608   +END;
MPRINT(EM_DIAGRAM):   END;
1186609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1186610   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1186611   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1186612   +END;
MPRINT(EM_DIAGRAM):   END;
1186613   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1186614   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1186615   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1186616   +END;
MPRINT(EM_DIAGRAM):   END;
1186617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186618   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1186619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1186620   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1186621   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1186622   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1186623   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1186624   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1186625   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1186626   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1186627   +END;
MPRINT(EM_DIAGRAM):   END;
1186628   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1186629   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1186630   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1186631   +drop
1186632   +H11
1186633   +H12
1186634   +H13
1186635   +H14
1186636   +H15
1186637   +H16
1186638   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1186639   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1186640    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1186641    quit;
1186642    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1186643    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1186644    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1186645    retain ID 2 Node "Neural41";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural41";
1186646    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1186647    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186648    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1186649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186650    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2183 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2183 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186651    proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural41_variableset out=_temp2(keep=NAME CREATOR);
1186652    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186653    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL41_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186654    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186655    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1186656    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1186657    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186658    proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural41_train out=_meta(keep=NAME) noprint;
1186659    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186660    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1186661    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186662    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186663    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186664    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1186665    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186666    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186667    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1186668    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1186668  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1087 rows and 5 columns.

1186669    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186670    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1186671    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1087 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1087 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186672    filename _pref
1186672  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1186673    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1186674    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1186675   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186676   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1186677   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1186678   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1186679   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1186680   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1186681    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1186682    quit;
1186683    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1186684    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1186685    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1186686    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1186687    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1186688    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186689    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1186690    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186691    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186692    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1186693    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186694    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186695    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186696    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1186697    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1186698    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186699    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1186700    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1186701    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1186702    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186703    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186704    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186705    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1186706    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186707    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186708    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1186709    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1186709  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1186710    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186711    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1186712    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1091 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186713    filename _pref
1186713  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1186714    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1186715    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1186716   +
1186717   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1186718   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1186718  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1186719   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1186720   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1186721   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1186722   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1186723   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1186724    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1186725    quit;
1186726    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1186727    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1186728    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1186729    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1186730    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1186731    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186732    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1186733    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186734    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186735    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1186736    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186737    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186738    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186739    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1186740    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1186741    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186742    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1186743    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186744    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1186745    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186746    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186747    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186748    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1186749    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186750    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186751    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1186752    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1186752  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1186753    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186754    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1186755    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1130 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186756    filename _pref
1186756  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1186757    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1186758    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1186759   +
1186760   +
1186761   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1186762   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1186763   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1186764   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1186765   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1186766   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186767   +
1186768   +
1186769   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1186770   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1186771   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1186772   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1186773   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1186774   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186775   +
1186776   +
1186777   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1186778   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1186779   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1186780   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1186781   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1186782   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186783   +
1186784   +
1186785   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1186786   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1186787   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1186788   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1186789   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1186790   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186791   +
1186792   +
1186793   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1186794   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1186795   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1186796   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1186797   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1186798   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186799   +
1186800   +
1186801   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1186802   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1186803   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1186804   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1186805   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1186806   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186807   +
1186808   +
1186809   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1186810   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1186811   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1186812   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1186813   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1186814   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186815   +
1186816   +
1186817   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1186818   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1186819   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1186820   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1186821   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1186822   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1186823   +if
1186824   +_FILTERNORM1 not in ( '.')
1186825   + and
1186826   +_FILTERNORM2 not in ( '.')
1186827   + and
1186828   +_FILTERNORM3 not in ( '.')
1186829   + and
1186830   +_FILTERNORM4 not in ( '.')
1186831   + and
1186832   +_FILTERNORM5 not in ( '.')
1186833   + and
1186834   +_FILTERNORM6 not in ( '.')
1186835   + and
1186836   +_FILTERNORM7 not in ( ' ')
1186837   + and
1186838   +_FILTERNORM8 not in ( ' ')
1186839   +and
1186840   +( Dt_Customer ne .)
1186841   +and ( Income ne . and (Income<=107000))
1186842   +and ( Kidhome ne .)
1186843   +and ( MntFishProducts ne .)
1186844   +and ( MntFruits ne .)
1186845   +and ( MntGoldProds ne .)
1186846   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1186847   +and ( MntSweetProducts ne .)
1186848   +and ( MntWines ne .)
1186849   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1186850   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1186851   +and ( NumStorePurchases ne .)
1186852   +and ( NumWebPurchases ne .)
1186853   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1186854   +and ( Recency ne .)
1186855   +and ( Teenhome ne .)
1186856   +and ( Year_Birth ne .)
1186857   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1186858   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1186859   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1186860   +end;
MPRINT(EM_DIAGRAM):   end;
1186861   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1186862   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1186863    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1186864    quit;
1186865    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1186866    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1186867    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1186868    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1186869    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1186870    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186871    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1186872    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186873    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186874    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1186875    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186876    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186877    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186878    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1186879    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1186880    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186881    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1186882    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1186883    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1186884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186885    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1186886    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1186887    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1186888    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1186889    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186890    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1186891    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1186891  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1186892    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186893    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1186894    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1196 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186895    %macro varDept(fcmpdata=,id=);
1186896    %global nobs&id scoreFlag&id;
1186897    %let scoreFlag&id = 0;
1186898    %if &id=1 or ^&fcmpStart %then %do;
1186899    proc sort data=&fcmpdata out=_temp&id nodupkey;
1186900    by NAME;
1186901    where id=&id and LHS in( %let j=1;
1186902    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1186903    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1186904    "&var" %let j = %eval(&j+1);
1186905    %end;
1186906    );
1186907    run;
1186908    %let dsid = %sysfunc(open(_temp&id));
1186909    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1186910    %let dsid = %sysfunc(close(&dsid));
1186911    %if &&nobs&id %then %do;
1186912    %let scoreFlag&id = 1;
1186913    %let fcmpStart = 1;
1186914    %end;
1186915    %else %let fcmpStart = 0;
1186916    %end;
1186917    %else %do;
1186918    proc sort data=&fcmpdata out=_tempid;
1186919    where id=&id;
1186920    by LHS;
1186921    run;
1186922    %let dsid = %sysfunc(open(_tempid));
1186923    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1186924    %let dsid = %sysfunc(close(&dsid));
1186925    %if ^&&nobs&id %then %do;
1186926    proc datasets lib=work nolist;
1186927    delete _tempid;
1186928    run;
1186929    quit;
1186930    %end;
1186931    %else %do;
1186932    data _tempAll;
1186933    set %let j=%eval(&id-1);
1186934    %do x=1 %to &j;
1186935    %if &&nobs&x %then %do;
1186936    _temp&x %end;
1186937    %end;
1186938    ;
1186939    run;
1186940    proc sql;
1186941    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1186941  ! work._tempid p2 where p.name=p2.lhs;
1186942    quit;
1186943    data _temp&id;
1186944    set _temp&id;
1186945    where LHS ne '' and NAME ne '' and Node ne '';
1186946    run;
1186947    proc datasets lib=work nolist;
1186948    delete _tempAll;
1186949    run;
1186950    %let dsid = %sysfunc(open(_temp&id));
1186951    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1186952    %let dsid = %sysfunc(close(&dsid));
1186953    %if ^&&nobs&id %then %do;
1186954    proc datasets lib=work nolist;
1186955    delete _temp&id;
1186956    run;
1186957    quit;
1186958    %end;
1186959    %else %do;
1186960    %let scoreFlag&id = 1;
1186961    data _temp&id;
1186962    set _temp&id;
1186963    where LHS ne NAME and node ne '';
1186964    run;
1186965    %let dsid = %sysfunc(open(_temp&id));
1186966    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1186967    %let dsid = %sysfunc(close(&dsid));
1186968    %if ^&&nobs&id %then %do;
1186969    proc datasets lib=work nolist;
1186970    delete _temp&id;
1186971    run;
1186972    quit;
1186973    %end;
1186974    %else %do;
1186975    proc sort data=_temp&id nodupkey;
1186976    by LHS NAME;
1186977    run;
1186978    %end;
1186979    %end;
1186980    %end;
1186981    %end;
1186982    %mend varDept;
1186983    %macro optCode(outdata=fcmpdata);
1186984    %global fcmpStart;
1186985    %let fcmpStart = 0;
1186986    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1186987    %let NumNodes=9;
1186988    %do k=1 %to &NumNodes;
1186989    %vardept(fcmpdata=&outdata, id=&k);
1186990    %end;
1186991    %mend optCode;
1186992    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1186993    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1186994    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1186995    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1186996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1186997    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1186998    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1186999    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1187000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187001    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1187002    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1187002  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1187003    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187004    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1187005    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1187006    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187007    filename _pref
1187007  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas";
1187008    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1187009    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural36\EMPUBLISHSCORE.sas.
1187010   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187011   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1187012   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1187013   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1187014   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1187015   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1187016   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1187017   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1187018   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1187019   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1187020   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1187021   +LENGTH _WARN_ $4
1187022   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1187023   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1187024   +
1187025   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1187026   +
1187027   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1187028   +
1187029   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1187030   +
1187031   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1187032   +
1187033   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1187034   +
1187035   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1187036   +
1187037   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1187038   +
1187039   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1187040   +
1187041   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1187042   +
1187043   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1187044   +
1187045   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1187046   +
1187047   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1187048   +
1187049   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1187050   +
1187051   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1187052   +
1187053   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1187054   +
1187055   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1187056   +
1187057   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1187058   +
1187059   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1187060   +
1187061   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1187062   +
1187063   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1187064   +
1187065   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1187066   +
1187067   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1187068   +
1187069   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1187070   +
1187071   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1187072   +
1187073   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1187074   +
1187075   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1187076   +
1187077   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1187078   +
1187079   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1187080   +
1187081   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1187082   +
1187083   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1187084   +
1187085   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1187086   +
1187087   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1187088   +
1187089   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1187090   +
1187091   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1187092   +
1187093   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1187094   +
1187095   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1187096   +
1187097   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1187098   +
1187099   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1187100   +
1187101   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1187102   +
1187103   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1187104   +
1187105   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1187106   +
1187107   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1187108   +
1187109   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1187110   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1187111   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1187112   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187113   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187114   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187115   +end;
MPRINT(EM_DIAGRAM):   end;
1187116   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187117   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187118   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1187119   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187120   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187121   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1187122   +   end;
MPRINT(EM_DIAGRAM):   end;
1187123   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187124   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1187125   +   end;
MPRINT(EM_DIAGRAM):   end;
1187126   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187127   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1187128   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187129   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187130   +   end;
MPRINT(EM_DIAGRAM):   end;
1187131   +end;
MPRINT(EM_DIAGRAM):   end;
1187132   +
1187133   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1187134   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1187135   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1187136   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187139   +end;
MPRINT(EM_DIAGRAM):   end;
1187140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187141   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187142   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1187143   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187144   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187145   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1187146   +   end;
MPRINT(EM_DIAGRAM):   end;
1187147   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187148   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1187149   +   end;
MPRINT(EM_DIAGRAM):   end;
1187150   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187151   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1187152   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187153   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187154   +   end;
MPRINT(EM_DIAGRAM):   end;
1187155   +end;
MPRINT(EM_DIAGRAM):   end;
1187156   +
1187157   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1187158   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1187159   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1187160   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187161   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187162   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187163   +end;
MPRINT(EM_DIAGRAM):   end;
1187164   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187165   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187166   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1187167   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187168   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187169   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1187170   +   end;
MPRINT(EM_DIAGRAM):   end;
1187171   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187172   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1187173   +   end;
MPRINT(EM_DIAGRAM):   end;
1187174   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187175   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1187176   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187177   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187178   +   end;
MPRINT(EM_DIAGRAM):   end;
1187179   +end;
MPRINT(EM_DIAGRAM):   end;
1187180   +
1187181   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1187182   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1187183   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1187184   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187187   +end;
MPRINT(EM_DIAGRAM):   end;
1187188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187189   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187190   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1187191   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187192   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187193   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1187194   +   end;
MPRINT(EM_DIAGRAM):   end;
1187195   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187196   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1187197   +   end;
MPRINT(EM_DIAGRAM):   end;
1187198   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187199   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1187200   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187201   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187202   +   end;
MPRINT(EM_DIAGRAM):   end;
1187203   +end;
MPRINT(EM_DIAGRAM):   end;
1187204   +
1187205   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1187206   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1187207   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1187208   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187211   +end;
MPRINT(EM_DIAGRAM):   end;
1187212   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187213   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187214   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1187215   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187216   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187217   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1187218   +   end;
MPRINT(EM_DIAGRAM):   end;
1187219   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187220   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1187221   +   end;
MPRINT(EM_DIAGRAM):   end;
1187222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187223   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1187224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187226   +   end;
MPRINT(EM_DIAGRAM):   end;
1187227   +end;
MPRINT(EM_DIAGRAM):   end;
1187228   +
1187229   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1187230   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1187231   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1187232   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187235   +end;
MPRINT(EM_DIAGRAM):   end;
1187236   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187237   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187238   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1187239   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187240   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1187241   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1187242   +   end;
MPRINT(EM_DIAGRAM):   end;
1187243   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1187244   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1187245   +   end;
MPRINT(EM_DIAGRAM):   end;
1187246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187247   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1187248   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187249   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187250   +   end;
MPRINT(EM_DIAGRAM):   end;
1187251   +end;
MPRINT(EM_DIAGRAM):   end;
1187252   +
1187253   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1187254   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1187255   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1187256   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187257   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187258   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187259   +end;
MPRINT(EM_DIAGRAM):   end;
1187260   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187261   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1187262   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1187263   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187264   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1187265   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1187266   +   end;
MPRINT(EM_DIAGRAM):   end;
1187267   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1187268   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1187269   +   end;
MPRINT(EM_DIAGRAM):   end;
1187270   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187271   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1187272   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187273   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187274   +   end;
MPRINT(EM_DIAGRAM):   end;
1187275   +end;
MPRINT(EM_DIAGRAM):   end;
1187276   +
1187277   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1187278   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1187279   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187280   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1187281   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1187282   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1187283   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1187284   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1187285   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187286   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187287   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187288   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187289   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187290   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187291   +end;
MPRINT(EM_DIAGRAM):   end;
1187292   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187293   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1187294   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1187295   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187296   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1187297   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1187298   +   end;
MPRINT(EM_DIAGRAM):   end;
1187299   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1187300   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1187301   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1187302   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1187303   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1187304   +   end;
MPRINT(EM_DIAGRAM):   end;
1187305   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1187306   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1187307   +   end;
MPRINT(EM_DIAGRAM):   end;
1187308   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1187309   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1187310   +   end;
MPRINT(EM_DIAGRAM):   end;
1187311   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1187312   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1187313   +   end;
MPRINT(EM_DIAGRAM):   end;
1187314   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187315   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1187316   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1187317   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1187318   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1187319   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187320   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187321   +   end;
MPRINT(EM_DIAGRAM):   end;
1187322   +end;
MPRINT(EM_DIAGRAM):   end;
1187323   +
1187324   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1187325   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1187326   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1187327   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1187328   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1187329   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1187330   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1187331   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1187332   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1187333   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187334   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187335   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187336   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187337   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1187338   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187339   +end;
MPRINT(EM_DIAGRAM):   end;
1187340   +else do;
MPRINT(EM_DIAGRAM):   else do;
1187341   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1187342   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1187343   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1187344   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1187345   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1187346   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1187347   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1187348   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1187349   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187350   +         end;
MPRINT(EM_DIAGRAM):   end;
1187351   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1187352   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1187353   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1187354   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187355   +            end;
MPRINT(EM_DIAGRAM):   end;
1187356   +         end;
MPRINT(EM_DIAGRAM):   end;
1187357   +      end;
MPRINT(EM_DIAGRAM):   end;
1187358   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187359   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1187360   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1187361   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187362   +         end;
MPRINT(EM_DIAGRAM):   end;
1187363   +      end;
MPRINT(EM_DIAGRAM):   end;
1187364   +   end;
MPRINT(EM_DIAGRAM):   end;
1187365   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1187366   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1187367   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1187368   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187369   +      end;
MPRINT(EM_DIAGRAM):   end;
1187370   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1187371   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1187372   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1187373   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1187374   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1187375   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1187376   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1187377   +         end;
MPRINT(EM_DIAGRAM):   end;
1187378   +      end;
MPRINT(EM_DIAGRAM):   end;
1187379   +   end;
MPRINT(EM_DIAGRAM):   end;
1187380   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1187381   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1187382   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1187383   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1187384   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1187385   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1187386   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187387   +   end;
MPRINT(EM_DIAGRAM):   end;
1187388   +end;
MPRINT(EM_DIAGRAM):   end;
1187389   +
1187390   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187391   +*** Checking missing input Interval
1187392   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1187393   +
1187394   +IF NMISS(
1187395   +   AcceptedCmpTotal ,
1187396   +   Age ,
1187397   +   Frq ,
1187398   +   Income ,
1187399   +   Kidhome ,
1187400   +   MntFishProducts ,
1187401   +   MntFruits ,
1187402   +   MntGoldProds ,
1187403   +   MntSweetProducts ,
1187404   +   MonthsAsCustomer ,
1187405   +   NumDealsPurchases ,
1187406   +   NumWebVisitsMonth ,
1187407   +   RFMstat ,
1187408   +   RMntFrq ,
1187409   +   Recency ,
1187410   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1187411   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1187412   +
1187413   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1187414   +END;
MPRINT(EM_DIAGRAM):   END;
1187415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187416   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1187417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187418   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187419   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187420   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187421   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187422   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187423   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187424   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187425   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187426   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187427   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187428   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187429   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1187430   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187431   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187432   +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1187433   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1187434   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187435   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187436   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187437   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187438   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187439   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187440   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187441   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187442   +END;
MPRINT(EM_DIAGRAM):   END;
1187443   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187444   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1187445   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1187446   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1187447   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1187448   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1187449   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1187450   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1187451   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1187452   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1187453   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1187454   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1187455   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1187456   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1187457   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1187458   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1187459   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1187460   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1187461   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1187462   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1187463   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1187464   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1187465   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1187466   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1187467   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1187468   +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
1187469   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
1187470   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1187471   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1187472   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1187473   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1187474   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1187475   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1187476   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1187477   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1187478   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1187479   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1187480   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1187481   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1187482   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1187483   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1187484   +END;
MPRINT(EM_DIAGRAM):   END;
1187485   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187486   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1187487   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187488   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187489   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1187490   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187492   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1187493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187494   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187495   +   H11  =     0.36102409886134 * S_AcceptedCmpTotal  +     0.13395156650326 *
1187496   +        S_Age  +    -0.24538302428059 * S_Frq  +    -0.11572058197557 *
1187497   +        S_Income  +     0.21790378443814 * S_Kidhome
1187498   +          +    -0.08134586316395 * S_MntFishProducts
1187499   +          +     -0.2688648060203 * S_MntFruits  +    -0.25880035211038 *
1187500   +        S_MntGoldProds  +     0.07531502626045 * S_MntSweetProducts
1187501   +          +     0.21726816930291 * S_MonthsAsCustomer
1187502   +          +    -0.21824241156847 * S_NumDealsPurchases
1187503   +          +     0.07727563921761 * S_NumWebVisitsMonth
1187504   +          +     0.09027808324069 * S_RFMstat  +     -0.0189462843628 *
1187505   +        S_RMntFrq  +     0.15658915596853 * S_Recency
1187506   +          +     0.18680606168417 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.36102409886134 * S_AcceptedCmpTotal + 0.13395156650326 * S_Age + 
-0.24538302428059 * S_Frq + -0.11572058197557 * S_Income + 0.21790378443814 * S_Kidhome + 
-0.08134586316395 * S_MntFishProducts + -0.2688648060203 * S_MntFruits + -0.25880035211038 * 
S_MntGoldProds + 0.07531502626045 * S_MntSweetProducts + 0.21726816930291 * S_MonthsAsCustomer 
+ -0.21824241156847 * S_NumDealsPurchases + 0.07727563921761 * S_NumWebVisitsMonth + 
0.09027808324069 * S_RFMstat + -0.0189462843628 * S_RMntFrq + 0.15658915596853 * S_Recency + 
0.18680606168417 * S_Teenhome ;
1187507   +   H12  =    -0.50461866181934 * S_AcceptedCmpTotal  +     0.01266437730767 *
1187508   +        S_Age  +     0.02534169432751 * S_Frq  +    -0.89441458532035 *
1187509   +        S_Income  +    -0.51036141680293 * S_Kidhome
1187510   +          +     0.10879858722875 * S_MntFishProducts
1187511   +          +    -0.05639987269313 * S_MntFruits  +    -0.43702228668285 *
1187512   +        S_MntGoldProds  +     0.18909754042399 * S_MntSweetProducts
1187513   +          +    -0.11392977531374 * S_MonthsAsCustomer
1187514   +          +     -0.5318843752274 * S_NumDealsPurchases
1187515   +          +    -0.65796537312585 * S_NumWebVisitsMonth
1187516   +          +    -0.29571612685484 * S_RFMstat  +     -0.0801458884647 *
1187517   +        S_RMntFrq  +     0.73429478940872 * S_Recency
1187518   +          +     0.28950334189528 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.50461866181934 * S_AcceptedCmpTotal + 0.01266437730767 * S_Age 
+ 0.02534169432751 * S_Frq + -0.89441458532035 * S_Income + -0.51036141680293 * S_Kidhome + 
0.10879858722875 * S_MntFishProducts + -0.05639987269313 * S_MntFruits + -0.43702228668285 * 
S_MntGoldProds + 0.18909754042399 * S_MntSweetProducts + -0.11392977531374 * 
S_MonthsAsCustomer + -0.5318843752274 * S_NumDealsPurchases + -0.65796537312585 * 
S_NumWebVisitsMonth + -0.29571612685484 * S_RFMstat + -0.0801458884647 * S_RMntFrq + 
0.73429478940872 * S_Recency + 0.28950334189528 * S_Teenhome ;
1187519   +   H13  =    -0.22612994964695 * S_AcceptedCmpTotal  +     0.04392639924073 *
1187520   +        S_Age  +     0.32974877429932 * S_Frq  +    -0.26990824722212 *
1187521   +        S_Income  +     0.59254092901621 * S_Kidhome
1187522   +          +    -0.20448500725841 * S_MntFishProducts
1187523   +          +     0.09904900315476 * S_MntFruits  +     0.33085368683805 *
1187524   +        S_MntGoldProds  +     0.19272280339022 * S_MntSweetProducts
1187525   +          +     0.75084411765835 * S_MonthsAsCustomer
1187526   +          +     -0.0387146296237 * S_NumDealsPurchases
1187527   +          +    -0.28387522584505 * S_NumWebVisitsMonth
1187528   +          +    -0.15204072409221 * S_RFMstat  +     0.09340123133096 *
1187529   +        S_RMntFrq  +     0.82636976290684 * S_Recency
1187530   +          +     0.37810091232378 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.22612994964695 * S_AcceptedCmpTotal + 0.04392639924073 * S_Age 
+ 0.32974877429932 * S_Frq + -0.26990824722212 * S_Income + 0.59254092901621 * S_Kidhome + 
-0.20448500725841 * S_MntFishProducts + 0.09904900315476 * S_MntFruits + 0.33085368683805 * 
S_MntGoldProds + 0.19272280339022 * S_MntSweetProducts + 0.75084411765835 * S_MonthsAsCustomer 
+ -0.0387146296237 * S_NumDealsPurchases + -0.28387522584505 * S_NumWebVisitsMonth + 
-0.15204072409221 * S_RFMstat + 0.09340123133096 * S_RMntFrq + 0.82636976290684 * S_Recency + 
0.37810091232378 * S_Teenhome ;
1187531   +   H14  =    -0.30228547708859 * S_AcceptedCmpTotal  +     0.03241560550242 *
1187532   +        S_Age  +     0.84298653991521 * S_Frq  +     0.08457309547848 *
1187533   +        S_Income  +    -0.00122834275949 * S_Kidhome
1187534   +          +    -0.27566379985337 * S_MntFishProducts
1187535   +          +     0.22439349557664 * S_MntFruits  +     -0.2238462316234 *
1187536   +        S_MntGoldProds  +     0.10162320730644 * S_MntSweetProducts
1187537   +          +    -0.04164317708211 * S_MonthsAsCustomer
1187538   +          +    -0.69362879353268 * S_NumDealsPurchases
1187539   +          +    -0.42590146496797 * S_NumWebVisitsMonth
1187540   +          +    -0.14963136795323 * S_RFMstat  +    -0.12684701620224 *
1187541   +        S_RMntFrq  +     0.84758472963267 * S_Recency
1187542   +          +     0.11712588251204 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.30228547708859 * S_AcceptedCmpTotal + 0.03241560550242 * S_Age 
+ 0.84298653991521 * S_Frq + 0.08457309547848 * S_Income + -0.00122834275949 * S_Kidhome + 
-0.27566379985337 * S_MntFishProducts + 0.22439349557664 * S_MntFruits + -0.2238462316234 * 
S_MntGoldProds + 0.10162320730644 * S_MntSweetProducts + -0.04164317708211 * 
S_MonthsAsCustomer + -0.69362879353268 * S_NumDealsPurchases + -0.42590146496797 * 
S_NumWebVisitsMonth + -0.14963136795323 * S_RFMstat + -0.12684701620224 * S_RMntFrq + 
0.84758472963267 * S_Recency + 0.11712588251204 * S_Teenhome ;
1187543   +   H15  =    -0.07826142783822 * S_AcceptedCmpTotal  +     0.02869519269506 *
1187544   +        S_Age  +     0.47709626753648 * S_Frq  +     0.77626478438802 *
1187545   +        S_Income  +    -0.52116533001423 * S_Kidhome
1187546   +          +     -0.0164127050263 * S_MntFishProducts
1187547   +          +    -0.21044074963391 * S_MntFruits  +    -0.01106715629962 *
1187548   +        S_MntGoldProds  +    -0.04742180634458 * S_MntSweetProducts
1187549   +          +     0.24190773546087 * S_MonthsAsCustomer
1187550   +          +    -0.20709839635746 * S_NumDealsPurchases
1187551   +          +    -0.03892039672539 * S_NumWebVisitsMonth
1187552   +          +     0.01844174922581 * S_RFMstat  +     0.33852543335405 *
1187553   +        S_RMntFrq  +    -0.44935213795722 * S_Recency
1187554   +          +     -0.6298368435821 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.07826142783822 * S_AcceptedCmpTotal + 0.02869519269506 * S_Age 
+ 0.47709626753648 * S_Frq + 0.77626478438802 * S_Income + -0.52116533001423 * S_Kidhome + 
-0.0164127050263 * S_MntFishProducts + -0.21044074963391 * S_MntFruits + -0.01106715629962 * 
S_MntGoldProds + -0.04742180634458 * S_MntSweetProducts + 0.24190773546087 * 
S_MonthsAsCustomer + -0.20709839635746 * S_NumDealsPurchases + -0.03892039672539 * 
S_NumWebVisitsMonth + 0.01844174922581 * S_RFMstat + 0.33852543335405 * S_RMntFrq + 
-0.44935213795722 * S_Recency + -0.6298368435821 * S_Teenhome ;
1187555   +   H16  =    -0.38278200147216 * S_AcceptedCmpTotal  +     0.10976543329989 *
1187556   +        S_Age  +    -0.17634499366273 * S_Frq  +    -0.00464219628456 *
1187557   +        S_Income  +     0.02656798188894 * S_Kidhome
1187558   +          +     0.30126647035438 * S_MntFishProducts
1187559   +          +    -0.15329042297108 * S_MntFruits  +     0.34485619618635 *
1187560   +        S_MntGoldProds  +    -0.02131109278943 * S_MntSweetProducts
1187561   +          +     0.02225077975252 * S_MonthsAsCustomer
1187562   +          +    -0.25574607065737 * S_NumDealsPurchases
1187563   +          +    -0.17649073415066 * S_NumWebVisitsMonth
1187564   +          +    -0.05940264496746 * S_RFMstat  +    -0.10060551243835 *
1187565   +        S_RMntFrq  +    -0.26823576982436 * S_Recency
1187566   +          +    -0.02089829217347 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.38278200147216 * S_AcceptedCmpTotal + 0.10976543329989 * S_Age 
+ -0.17634499366273 * S_Frq + -0.00464219628456 * S_Income + 0.02656798188894 * S_Kidhome + 
0.30126647035438 * S_MntFishProducts + -0.15329042297108 * S_MntFruits + 0.34485619618635 * 
S_MntGoldProds + -0.02131109278943 * S_MntSweetProducts + 0.02225077975252 * 
S_MonthsAsCustomer + -0.25574607065737 * S_NumDealsPurchases + -0.17649073415066 * 
S_NumWebVisitsMonth + -0.05940264496746 * S_RFMstat + -0.10060551243835 * S_RMntFrq + 
-0.26823576982436 * S_Recency + -0.02089829217347 * S_Teenhome ;
1187567   +   H17  =     0.19294816663728 * S_AcceptedCmpTotal  +    -0.36492507147362 *
1187568   +        S_Age  +     -0.5026822541815 * S_Frq  +    -0.48143237402929 *
1187569   +        S_Income  +     0.24859715564668 * S_Kidhome
1187570   +          +    -0.25170385966484 * S_MntFishProducts
1187571   +          +     0.32613161868695 * S_MntFruits  +     0.13394374893255 *
1187572   +        S_MntGoldProds  +     0.48416151380913 * S_MntSweetProducts
1187573   +          +     0.05219342683802 * S_MonthsAsCustomer
1187574   +          +     0.43291262348863 * S_NumDealsPurchases
1187575   +          +     0.56350506449265 * S_NumWebVisitsMonth
1187576   +          +     0.07050038692379 * S_RFMstat  +     0.09321760948671 *
1187577   +        S_RMntFrq  +      -0.582152401129 * S_Recency
1187578   +          +     0.37123217787922 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H17 = 0.19294816663728 * S_AcceptedCmpTotal + -0.36492507147362 * S_Age 
+ -0.5026822541815 * S_Frq + -0.48143237402929 * S_Income + 0.24859715564668 * S_Kidhome + 
-0.25170385966484 * S_MntFishProducts + 0.32613161868695 * S_MntFruits + 0.13394374893255 * 
S_MntGoldProds + 0.48416151380913 * S_MntSweetProducts + 0.05219342683802 * S_MonthsAsCustomer 
+ 0.43291262348863 * S_NumDealsPurchases + 0.56350506449265 * S_NumWebVisitsMonth + 
0.07050038692379 * S_RFMstat + 0.09321760948671 * S_RMntFrq + -0.582152401129 * S_Recency + 
0.37123217787922 * S_Teenhome ;
1187579   +   H11  = H11  +     0.19124500210188 * AcceptedCmp10
1187580   +          +    -0.07164186578541 * AcceptedCmp20  +     0.21783016367597 *
1187581   +        AcceptedCmp30  +     0.21148394728435 * AcceptedCmp40
1187582   +          +    -0.03026880266191 * AcceptedCmp50  +    -0.07201946966594 *
1187583   +        Complain0  +     0.01809478462337 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.19124500210188 * AcceptedCmp10 + -0.07164186578541 * 
AcceptedCmp20 + 0.21783016367597 * AcceptedCmp30 + 0.21148394728435 * AcceptedCmp40 + 
-0.03026880266191 * AcceptedCmp50 + -0.07201946966594 * Complain0 + 0.01809478462337 * 
HigherEducationBinary0 ;
1187584   +   H12  = H12  +    -0.08224648561215 * AcceptedCmp10
1187585   +          +    -0.04262229291512 * AcceptedCmp20  +     0.31730600734378 *
1187586   +        AcceptedCmp30  +    -0.50103336510524 * AcceptedCmp40
1187587   +          +     0.14654032457963 * AcceptedCmp50  +     -0.3081029727525 *
1187588   +        Complain0  +     0.33420373179467 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.08224648561215 * AcceptedCmp10 + -0.04262229291512 * 
AcceptedCmp20 + 0.31730600734378 * AcceptedCmp30 + -0.50103336510524 * AcceptedCmp40 + 
0.14654032457963 * AcceptedCmp50 + -0.3081029727525 * Complain0 + 0.33420373179467 * 
HigherEducationBinary0 ;
1187589   +   H13  = H13  +     -0.2675286852338 * AcceptedCmp10
1187590   +          +     0.00293684627092 * AcceptedCmp20  +     0.17042784679702 *
1187591   +        AcceptedCmp30  +    -0.03300348487228 * AcceptedCmp40
1187592   +          +     0.18139562224546 * AcceptedCmp50  +     -0.5876653777255 *
1187593   +        Complain0  +      -0.348312724013 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.2675286852338 * AcceptedCmp10 + 0.00293684627092 * 
AcceptedCmp20 + 0.17042784679702 * AcceptedCmp30 + -0.03300348487228 * AcceptedCmp40 + 
0.18139562224546 * AcceptedCmp50 + -0.5876653777255 * Complain0 + -0.348312724013 * 
HigherEducationBinary0 ;
1187594   +   H14  = H14  +     0.62345895952335 * AcceptedCmp10
1187595   +          +     0.06420128732689 * AcceptedCmp20  +     0.32944172885024 *
1187596   +        AcceptedCmp30  +    -0.04719511461619 * AcceptedCmp40
1187597   +          +     0.61833640682482 * AcceptedCmp50  +     -0.0006656764006 *
1187598   +        Complain0  +    -0.12356778452039 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.62345895952335 * AcceptedCmp10 + 0.06420128732689 * 
AcceptedCmp20 + 0.32944172885024 * AcceptedCmp30 + -0.04719511461619 * AcceptedCmp40 + 
0.61833640682482 * AcceptedCmp50 + -0.0006656764006 * Complain0 + -0.12356778452039 * 
HigherEducationBinary0 ;
1187599   +   H15  = H15  +    -0.43202592233127 * AcceptedCmp10
1187600   +          +    -0.35346067325701 * AcceptedCmp20  +    -0.29446055239371 *
1187601   +        AcceptedCmp30  +     -0.6355060868005 * AcceptedCmp40
1187602   +          +     0.08763000125481 * AcceptedCmp50  +    -0.55439066852712 *
1187603   +        Complain0  +     0.37078134908454 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.43202592233127 * AcceptedCmp10 + -0.35346067325701 * 
AcceptedCmp20 + -0.29446055239371 * AcceptedCmp30 + -0.6355060868005 * AcceptedCmp40 + 
0.08763000125481 * AcceptedCmp50 + -0.55439066852712 * Complain0 + 0.37078134908454 * 
HigherEducationBinary0 ;
1187604   +   H16  = H16  +    -0.10522820178908 * AcceptedCmp10
1187605   +          +     0.20645125728354 * AcceptedCmp20  +     0.34040121966792 *
1187606   +        AcceptedCmp30  +    -0.02259616994399 * AcceptedCmp40
1187607   +          +    -0.22123397523195 * AcceptedCmp50  +    -0.37258892216723 *
1187608   +        Complain0  +     0.14107103807235 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.10522820178908 * AcceptedCmp10 + 0.20645125728354 * 
AcceptedCmp20 + 0.34040121966792 * AcceptedCmp30 + -0.02259616994399 * AcceptedCmp40 + 
-0.22123397523195 * AcceptedCmp50 + -0.37258892216723 * Complain0 + 0.14107103807235 * 
HigherEducationBinary0 ;
1187609   +   H17  = H17  +    -0.09096203784003 * AcceptedCmp10
1187610   +          +    -0.04735484605229 * AcceptedCmp20  +     -0.4485810761844 *
1187611   +        AcceptedCmp30  +     0.10362320405529 * AcceptedCmp40
1187612   +          +    -0.05214433990448 * AcceptedCmp50  +    -0.19339827696554 *
1187613   +        Complain0  +    -0.21246690264814 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.09096203784003 * AcceptedCmp10 + -0.04735484605229 * 
AcceptedCmp20 + -0.4485810761844 * AcceptedCmp30 + 0.10362320405529 * AcceptedCmp40 + 
-0.05214433990448 * AcceptedCmp50 + -0.19339827696554 * Complain0 + -0.21246690264814 * 
HigherEducationBinary0 ;
1187614   +   H11  = H11  +    -0.16759278562529 * Education2n_Cycle
1187615   +          +    -0.31449574789464 * EducationBasic  +     0.13281408830843 *
1187616   +        EducationGraduation  +      0.0199258483942 * EducationMaster
1187617   +          +     0.03245181998921 * Marital_StatusDivorced
1187618   +          +     0.29722741247663 * Marital_StatusMarried
1187619   +          +    -0.05683085497262 * Marital_StatusSingle
1187620   +          +     0.27914630307932 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.16759278562529 * Education2n_Cycle + -0.31449574789464 * 
EducationBasic + 0.13281408830843 * EducationGraduation + 0.0199258483942 * EducationMaster + 
0.03245181998921 * Marital_StatusDivorced + 0.29722741247663 * Marital_StatusMarried + 
-0.05683085497262 * Marital_StatusSingle + 0.27914630307932 * Marital_StatusTogether ;
1187621   +   H12  = H12  +    -0.10709422401859 * Education2n_Cycle
1187622   +          +     0.25457515905931 * EducationBasic  +    -0.26018740430941 *
1187623   +        EducationGraduation  +     0.05808954602972 * EducationMaster
1187624   +          +    -0.13095826187081 * Marital_StatusDivorced
1187625   +          +     0.29509760197193 * Marital_StatusMarried
1187626   +          +    -0.21019918550166 * Marital_StatusSingle
1187627   +          +     0.12557122666089 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.10709422401859 * Education2n_Cycle + 0.25457515905931 * 
EducationBasic + -0.26018740430941 * EducationGraduation + 0.05808954602972 * EducationMaster 
+ -0.13095826187081 * Marital_StatusDivorced + 0.29509760197193 * Marital_StatusMarried + 
-0.21019918550166 * Marital_StatusSingle + 0.12557122666089 * Marital_StatusTogether ;
1187628   +   H13  = H13  +     0.16189957128414 * Education2n_Cycle
1187629   +          +    -0.08593025695878 * EducationBasic  +     0.11065463845302 *
1187630   +        EducationGraduation  +    -0.23434271231945 * EducationMaster
1187631   +          +     0.03746692643939 * Marital_StatusDivorced
1187632   +          +     0.03482798841727 * Marital_StatusMarried
1187633   +          +     0.16645207250571 * Marital_StatusSingle
1187634   +          +    -0.40169040281111 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.16189957128414 * Education2n_Cycle + -0.08593025695878 * 
EducationBasic + 0.11065463845302 * EducationGraduation + -0.23434271231945 * EducationMaster 
+ 0.03746692643939 * Marital_StatusDivorced + 0.03482798841727 * Marital_StatusMarried + 
0.16645207250571 * Marital_StatusSingle + -0.40169040281111 * Marital_StatusTogether ;
1187635   +   H14  = H14  +      0.0929589076858 * Education2n_Cycle
1187636   +          +     0.17576896755796 * EducationBasic  +    -0.08548079761525 *
1187637   +        EducationGraduation  +     -0.0086494793343 * EducationMaster
1187638   +          +     -0.0753971504765 * Marital_StatusDivorced
1187639   +          +     0.20446719655724 * Marital_StatusMarried
1187640   +          +     0.21472836757686 * Marital_StatusSingle
1187641   +          +     0.25097210445128 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.0929589076858 * Education2n_Cycle + 0.17576896755796 * 
EducationBasic + -0.08548079761525 * EducationGraduation + -0.0086494793343 * EducationMaster 
+ -0.0753971504765 * Marital_StatusDivorced + 0.20446719655724 * Marital_StatusMarried + 
0.21472836757686 * Marital_StatusSingle + 0.25097210445128 * Marital_StatusTogether ;
1187642   +   H15  = H15  +     0.05613706593293 * Education2n_Cycle
1187643   +          +     0.15733773983498 * EducationBasic  +     0.18710928885666 *
1187644   +        EducationGraduation  +    -0.40226962940436 * EducationMaster
1187645   +          +     0.16191937298215 * Marital_StatusDivorced
1187646   +          +    -0.81780658848614 * Marital_StatusMarried
1187647   +          +     0.84981159748349 * Marital_StatusSingle
1187648   +          +    -0.81246154443713 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.05613706593293 * Education2n_Cycle + 0.15733773983498 * 
EducationBasic + 0.18710928885666 * EducationGraduation + -0.40226962940436 * EducationMaster 
+ 0.16191937298215 * Marital_StatusDivorced + -0.81780658848614 * Marital_StatusMarried + 
0.84981159748349 * Marital_StatusSingle + -0.81246154443713 * Marital_StatusTogether ;
1187649   +   H16  = H16  +    -0.15143146742513 * Education2n_Cycle
1187650   +          +    -0.32039616194876 * EducationBasic  +     0.14759493683433 *
1187651   +        EducationGraduation  +    -0.24148020292763 * EducationMaster
1187652   +          +    -0.01766312280073 * Marital_StatusDivorced
1187653   +          +     0.04455346003394 * Marital_StatusMarried
1187654   +          +    -0.05433982251127 * Marital_StatusSingle
1187655   +          +     0.07585750304293 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.15143146742513 * Education2n_Cycle + -0.32039616194876 * 
EducationBasic + 0.14759493683433 * EducationGraduation + -0.24148020292763 * EducationMaster 
+ -0.01766312280073 * Marital_StatusDivorced + 0.04455346003394 * Marital_StatusMarried + 
-0.05433982251127 * Marital_StatusSingle + 0.07585750304293 * Marital_StatusTogether ;
1187656   +   H17  = H17  +    -0.18844639887236 * Education2n_Cycle
1187657   +          +     0.31793429928185 * EducationBasic  +     0.21885580860665 *
1187658   +        EducationGraduation  +      0.1367538666381 * EducationMaster
1187659   +          +        0.22905595967 * Marital_StatusDivorced
1187660   +          +      0.1024998677695 * Marital_StatusMarried
1187661   +          +    -0.07752101768018 * Marital_StatusSingle
1187662   +          +    -0.19408218868635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.18844639887236 * Education2n_Cycle + 0.31793429928185 * 
EducationBasic + 0.21885580860665 * EducationGraduation + 0.1367538666381 * EducationMaster + 
0.22905595967 * Marital_StatusDivorced + 0.1024998677695 * Marital_StatusMarried + 
-0.07752101768018 * Marital_StatusSingle + -0.19408218868635 * Marital_StatusTogether ;
1187663   +   H11  =     1.31548476078312 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.31548476078312 + H11 ;
1187664   +   H12  =     0.20389286508203 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.20389286508203 + H12 ;
1187665   +   H13  =    -0.77820109969785 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.77820109969785 + H13 ;
1187666   +   H14  =     0.85462770897247 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.85462770897247 + H14 ;
1187667   +   H15  =    -0.15190484788676 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.15190484788676 + H15 ;
1187668   +   H16  =     -0.7146854381659 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.7146854381659 + H16 ;
1187669   +   H17  =    -1.06220893322882 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = -1.06220893322882 + H17 ;
1187670   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1187671   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1187672   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1187673   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1187674   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1187675   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1187676   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1187677   +END;
MPRINT(EM_DIAGRAM):   END;
1187678   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187679   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1187680   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1187681   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1187682   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1187683   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1187684   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1187685   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1187686   +END;
MPRINT(EM_DIAGRAM):   END;
1187687   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187688   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1187689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187690   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1187691   +   P_DepVar1  =    -0.11628699177184 * H11  +    -2.70843270240794 * H12
1187692   +          +    -1.81814079406916 * H13  +    -1.84852165774564 * H14
1187693   +          +     2.53533827620448 * H15  +    -0.20106950795136 * H16
1187694   +          +     1.26058098194871 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.11628699177184 * H11 + -2.70843270240794 * H12 + 
-1.81814079406916 * H13 + -1.84852165774564 * H14 + 2.53533827620448 * H15 + -0.20106950795136 
* H16 + 1.26058098194871 * H17 ;
1187695   +   P_DepVar1  =    -1.66152267043508 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.66152267043508 + P_DepVar1 ;
1187696   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1187697   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1187698   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1187699   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
The SAS System

MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1187700   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1187701   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1187702   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1187703   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1187704   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1187705   +END;
MPRINT(EM_DIAGRAM):   END;
1187706   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1187707   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1187708   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1187709   +END;
MPRINT(EM_DIAGRAM):   END;
1187710   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1187711   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1187712   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1187713   +END;
MPRINT(EM_DIAGRAM):   END;
1187714   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187715   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1187716   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1187717   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1187718   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1187719   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1187720   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1187721   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1187722   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1187723   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1187724   +END;
MPRINT(EM_DIAGRAM):   END;
1187725   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187726   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1187727   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1187728   +drop
1187729   +H11
1187730   +H12
1187731   +H13
1187732   +H14
1187733   +H15
1187734   +H16
1187735   +H17
1187736   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1187737   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187738    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187739    quit;
1187740    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1187741    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1187742    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1187743    retain ID 2 Node "Neural36";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural36";
1187744    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1187745    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2329 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2329 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187746    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1187747    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187748    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2329 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2329 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187749    proc sort data=EMWS8.Neural36_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural36_variableset out=_temp2(keep=NAME CREATOR);
1187750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187751    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL36_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187752    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187753    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1187754    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1187755    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187756    proc contents data=EMWS8.Neural36_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural36_train out=_meta(keep=NAME) noprint;
1187757    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187758    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1187759    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187760    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187761    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187762    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1187763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187764    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187765    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1187766    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1187766  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 1137 rows and 5 columns.

1187767    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187768    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1187769    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 1137 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1137 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187770    filename _pref
1187770  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1187771    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1187772    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1187773   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187774   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1187775   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1187776   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1187777   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1187778   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187779    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187780    quit;
1187781    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1187782    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1187783    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1187784    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1187785    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1187786    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187787    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1187788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187789    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187790    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1187791    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187792    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187793    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187794    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1187795    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1187796    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187797    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1187798    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1187799    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1187800    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187801    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187802    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187803    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1187804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187805    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187806    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1187807    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1187807  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1187808    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187809    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1187810    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1141 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187811    filename _pref
1187811  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1187812    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1187813    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1187814   +
1187815   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1187816   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1187816  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1187817   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1187818   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1187819   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1187820   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1187821   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187822    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187823    quit;
1187824    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1187825    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1187826    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1187827    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1187828    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1187829    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187830    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1187831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187832    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187833    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1187834    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187835    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187836    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187837    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1187838    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1187839    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187840    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1187841    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187842    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1187843    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187844    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187845    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187846    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1187847    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187848    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187849    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1187850    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1187850  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1187851    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187852    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1187853    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1180 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187854    filename _pref
1187854  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1187855    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1187856    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1187857   +
1187858   +
1187859   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1187860   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1187861   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1187862   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1187863   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1187864   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187865   +
1187866   +
1187867   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1187868   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1187869   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1187870   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1187871   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1187872   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187873   +
1187874   +
1187875   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1187876   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1187877   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1187878   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1187879   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1187880   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187881   +
1187882   +
1187883   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1187884   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1187885   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1187886   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1187887   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1187888   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187889   +
1187890   +
1187891   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1187892   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1187893   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1187894   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1187895   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1187896   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187897   +
1187898   +
1187899   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1187900   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1187901   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1187902   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1187903   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1187904   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187905   +
1187906   +
1187907   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1187908   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1187909   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1187910   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1187911   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1187912   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187913   +
1187914   +
1187915   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1187916   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1187917   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1187918   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1187919   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1187920   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1187921   +if
1187922   +_FILTERNORM1 not in ( '.')
1187923   + and
1187924   +_FILTERNORM2 not in ( '.')
1187925   + and
1187926   +_FILTERNORM3 not in ( '.')
1187927   + and
1187928   +_FILTERNORM4 not in ( '.')
1187929   + and
1187930   +_FILTERNORM5 not in ( '.')
1187931   + and
1187932   +_FILTERNORM6 not in ( '.')
1187933   + and
1187934   +_FILTERNORM7 not in ( ' ')
1187935   + and
1187936   +_FILTERNORM8 not in ( ' ')
1187937   +and
1187938   +( Dt_Customer ne .)
1187939   +and ( Income ne . and (Income<=107000))
1187940   +and ( Kidhome ne .)
1187941   +and ( MntFishProducts ne .)
1187942   +and ( MntFruits ne .)
1187943   +and ( MntGoldProds ne .)
1187944   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1187945   +and ( MntSweetProducts ne .)
1187946   +and ( MntWines ne .)
1187947   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1187948   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1187949   +and ( NumStorePurchases ne .)
1187950   +and ( NumWebPurchases ne .)
1187951   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1187952   +and ( Recency ne .)
1187953   +and ( Teenhome ne .)
1187954   +and ( Year_Birth ne .)
1187955   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1187956   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1187957   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1187958   +end;
MPRINT(EM_DIAGRAM):   end;
1187959   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1187960   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1187961    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1187962    quit;
1187963    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1187964    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1187965    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1187966    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1187967    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1187968    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187969    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1187970    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187972    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1187973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187974    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187975    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187976    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1187977    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1187978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187979    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1187980    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187981    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1187982    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187984    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1187985    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1187986    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1187987    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187988    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1187989    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1187989  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1187990    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1187991    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1187992    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 1246 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1187993    %macro varDept(fcmpdata=,id=);
1187994    %global nobs&id scoreFlag&id;
1187995    %let scoreFlag&id = 0;
1187996    %if &id=1 or ^&fcmpStart %then %do;
1187997    proc sort data=&fcmpdata out=_temp&id nodupkey;
1187998    by NAME;
1187999    where id=&id and LHS in( %let j=1;
1188000    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1188001    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1188002    "&var" %let j = %eval(&j+1);
1188003    %end;
1188004    );
1188005    run;
1188006    %let dsid = %sysfunc(open(_temp&id));
1188007    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188008    %let dsid = %sysfunc(close(&dsid));
1188009    %if &&nobs&id %then %do;
1188010    %let scoreFlag&id = 1;
1188011    %let fcmpStart = 1;
1188012    %end;
1188013    %else %let fcmpStart = 0;
1188014    %end;
1188015    %else %do;
1188016    proc sort data=&fcmpdata out=_tempid;
1188017    where id=&id;
1188018    by LHS;
1188019    run;
1188020    %let dsid = %sysfunc(open(_tempid));
1188021    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188022    %let dsid = %sysfunc(close(&dsid));
1188023    %if ^&&nobs&id %then %do;
1188024    proc datasets lib=work nolist;
1188025    delete _tempid;
1188026    run;
1188027    quit;
1188028    %end;
1188029    %else %do;
1188030    data _tempAll;
1188031    set %let j=%eval(&id-1);
1188032    %do x=1 %to &j;
1188033    %if &&nobs&x %then %do;
1188034    _temp&x %end;
1188035    %end;
1188036    ;
1188037    run;
1188038    proc sql;
1188039    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1188039  ! work._tempid p2 where p.name=p2.lhs;
1188040    quit;
1188041    data _temp&id;
1188042    set _temp&id;
1188043    where LHS ne '' and NAME ne '' and Node ne '';
1188044    run;
1188045    proc datasets lib=work nolist;
1188046    delete _tempAll;
1188047    run;
1188048    %let dsid = %sysfunc(open(_temp&id));
1188049    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188050    %let dsid = %sysfunc(close(&dsid));
1188051    %if ^&&nobs&id %then %do;
1188052    proc datasets lib=work nolist;
1188053    delete _temp&id;
1188054    run;
1188055    quit;
1188056    %end;
1188057    %else %do;
1188058    %let scoreFlag&id = 1;
1188059    data _temp&id;
1188060    set _temp&id;
1188061    where LHS ne NAME and node ne '';
1188062    run;
1188063    %let dsid = %sysfunc(open(_temp&id));
1188064    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188065    %let dsid = %sysfunc(close(&dsid));
1188066    %if ^&&nobs&id %then %do;
1188067    proc datasets lib=work nolist;
1188068    delete _temp&id;
1188069    run;
1188070    quit;
1188071    %end;
1188072    %else %do;
1188073    proc sort data=_temp&id nodupkey;
1188074    by LHS NAME;
1188075    run;
1188076    %end;
1188077    %end;
1188078    %end;
1188079    %end;
1188080    %mend varDept;
1188081    %macro optCode(outdata=fcmpdata);
1188082    %global fcmpStart;
1188083    %let fcmpStart = 0;
1188084    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1188085    %let NumNodes=9;
1188086    %do k=1 %to &NumNodes;
1188087    %vardept(fcmpdata=&outdata, id=&k);
1188088    %end;
1188089    %mend optCode;
1188090    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 106 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 79 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 27 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 27 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 29 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 33 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 33 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 33 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 62 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1188091    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1188092    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1188093    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1188094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188095    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1188096    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1188097    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1188098    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188099    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1188100    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1188100  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.

1188101    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188102    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1188103    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1188104    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188105    filename _pref
1188105  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas";
1188106    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1188107    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Reg11\EMPUBLISHSCORE.sas.
1188108   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1188109   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1188110   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1188111   +
1188112   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1188113   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1188114   +
1188115   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1188116   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1188117   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1188118   +array REG11DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG11DRF [2] $12 _temporary_ ('1' '0' );
1188119   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1188120   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1188121   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1188122   +ARRAY REG11DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG11DRU[2] _TEMPORARY_ (1 0);
1188123   +
1188124   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1188125   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1188126   +
1188127   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1188128   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1188129   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188130   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188131   +end;
MPRINT(EM_DIAGRAM):   end;
1188132   +
1188133   +*** Check Age for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Age for missing values ;
1188134   +if missing( Age ) then do;
MPRINT(EM_DIAGRAM):   if missing( Age ) then do;
1188135   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188136   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188137   +end;
MPRINT(EM_DIAGRAM):   end;
1188138   +
1188139   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1188140   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1188141   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188142   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188143   +end;
MPRINT(EM_DIAGRAM):   end;
1188144   +
1188145   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1188146   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1188147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188149   +end;
MPRINT(EM_DIAGRAM):   end;
1188150   +
1188151   +*** Check NumDealsPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDealsPurchases for missing values ;
1188152   +if missing( NumDealsPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDealsPurchases ) then do;
1188153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188155   +end;
MPRINT(EM_DIAGRAM):   end;
1188156   +
1188157   +*** Check NumWebVisitsMonth for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebVisitsMonth for missing values ;
1188158   +if missing( NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebVisitsMonth ) then do;
1188159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188161   +end;
MPRINT(EM_DIAGRAM):   end;
1188162   +
1188163   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1188164   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1188165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188167   +end;
MPRINT(EM_DIAGRAM):   end;
1188168   +
1188169   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1188170   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1188171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188173   +end;
MPRINT(EM_DIAGRAM):   end;
1188174   +
1188175   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1188176   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1188177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188179   +end;
MPRINT(EM_DIAGRAM):   end;
1188180   +
1188181   +*** Check Teenhome for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Teenhome for missing values ;
1188182   +if missing( Teenhome ) then do;
MPRINT(EM_DIAGRAM):   if missing( Teenhome ) then do;
1188183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188185   +end;
MPRINT(EM_DIAGRAM):   end;
1188186   +
1188187   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1188188   +drop _3_0 ;
MPRINT(EM_DIAGRAM):   drop _3_0 ;
1188189   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1188190   +   _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1188191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188193   +end;
MPRINT(EM_DIAGRAM):   end;
1188194   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188195   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188196   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1188197   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188198   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188199   +      _3_0 = 1;
MPRINT(EM_DIAGRAM):   _3_0 = 1;
1188200   +   end;
MPRINT(EM_DIAGRAM):   end;
1188201   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188202   +      _3_0 = -1;
MPRINT(EM_DIAGRAM):   _3_0 = -1;
1188203   +   end;
MPRINT(EM_DIAGRAM):   end;
1188204   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188205   +      _3_0 = .;
MPRINT(EM_DIAGRAM):   _3_0 = .;
1188206   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188207   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188208   +   end;
MPRINT(EM_DIAGRAM):   end;
1188209   +end;
MPRINT(EM_DIAGRAM):   end;
1188210   +
1188211   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1188212   +drop _4_0 ;
MPRINT(EM_DIAGRAM):   drop _4_0 ;
1188213   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1188214   +   _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1188215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188217   +end;
MPRINT(EM_DIAGRAM):   end;
1188218   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188219   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1188220   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1188221   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188222   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1188223   +      _4_0 = 1;
MPRINT(EM_DIAGRAM):   _4_0 = 1;
1188224   +   end;
MPRINT(EM_DIAGRAM):   end;
1188225   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1188226   +      _4_0 = -1;
MPRINT(EM_DIAGRAM):   _4_0 = -1;
1188227   +   end;
MPRINT(EM_DIAGRAM):   end;
1188228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188229   +      _4_0 = .;
MPRINT(EM_DIAGRAM):   _4_0 = .;
1188230   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188231   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188232   +   end;
MPRINT(EM_DIAGRAM):   end;
1188233   +end;
MPRINT(EM_DIAGRAM):   end;
1188234   +
1188235   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1188236   +drop _9_0 _9_1 _9_2 _9_3 ;
MPRINT(EM_DIAGRAM):   drop _9_0 _9_1 _9_2 _9_3 ;
1188237   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1188238   +_9_0 = 0;
MPRINT(EM_DIAGRAM):   _9_0 = 0;
1188239   +_9_1 = 0;
MPRINT(EM_DIAGRAM):   _9_1 = 0;
1188240   +_9_2 = 0;
MPRINT(EM_DIAGRAM):   _9_2 = 0;
1188241   +_9_3 = 0;
MPRINT(EM_DIAGRAM):   _9_3 = 0;
1188242   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1188243   +   _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1188244   +   _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1188245   +   _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1188246   +   _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1188247   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1188248   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188249   +end;
MPRINT(EM_DIAGRAM):   end;
1188250   +else do;
MPRINT(EM_DIAGRAM):   else do;
1188251   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1188252   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1188253   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1188254   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1188255   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1188256   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1188257   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1188258   +            _9_0 = 1;
MPRINT(EM_DIAGRAM):   _9_0 = 1;
1188259   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188260   +         end;
MPRINT(EM_DIAGRAM):   end;
1188261   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1188262   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1188263   +               _9_1 = 1;
MPRINT(EM_DIAGRAM):   _9_1 = 1;
1188264   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188265   +            end;
MPRINT(EM_DIAGRAM):   end;
1188266   +         end;
MPRINT(EM_DIAGRAM):   end;
1188267   +      end;
MPRINT(EM_DIAGRAM):   end;
1188268   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1188269   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1188270   +            _9_2 = 1;
MPRINT(EM_DIAGRAM):   _9_2 = 1;
1188271   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188272   +         end;
MPRINT(EM_DIAGRAM):   end;
1188273   +      end;
MPRINT(EM_DIAGRAM):   end;
1188274   +   end;
MPRINT(EM_DIAGRAM):   end;
1188275   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1188276   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1188277   +         _9_3 = 1;
MPRINT(EM_DIAGRAM):   _9_3 = 1;
1188278   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188279   +      end;
MPRINT(EM_DIAGRAM):   end;
1188280   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1188281   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1188282   +            _9_0 = -1;
MPRINT(EM_DIAGRAM):   _9_0 = -1;
1188283   +            _9_1 = -1;
MPRINT(EM_DIAGRAM):   _9_1 = -1;
1188284   +            _9_2 = -1;
MPRINT(EM_DIAGRAM):   _9_2 = -1;
1188285   +            _9_3 = -1;
MPRINT(EM_DIAGRAM):   _9_3 = -1;
1188286   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1188287   +         end;
MPRINT(EM_DIAGRAM):   end;
1188288   +      end;
MPRINT(EM_DIAGRAM):   end;
1188289   +   end;
MPRINT(EM_DIAGRAM):   end;
1188290   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1188291   +      _9_0 = .;
MPRINT(EM_DIAGRAM):   _9_0 = .;
1188292   +      _9_1 = .;
MPRINT(EM_DIAGRAM):   _9_1 = .;
1188293   +      _9_2 = .;
MPRINT(EM_DIAGRAM):   _9_2 = .;
1188294   +      _9_3 = .;
MPRINT(EM_DIAGRAM):   _9_3 = .;
1188295   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1188296   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1188297   +   end;
MPRINT(EM_DIAGRAM):   end;
1188298   +end;
MPRINT(EM_DIAGRAM):   end;
1188299   +
1188300   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1188301   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1188302   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1188303   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1188304   +   goto REG11DR1;
MPRINT(EM_DIAGRAM):   goto REG11DR1;
1188305   +end;
MPRINT(EM_DIAGRAM):   end;
1188306   +
1188307   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1188308   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1188309   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1188310   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1188311   +
1188312   +***  Effect: AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp3 ;
1188313   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1188314   +_LP0 = _LP0 + (   -0.21402292491598) * _TEMP * _3_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21402292491598) * _TEMP * _3_0;
1188315   +
1188316   +***  Effect: AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmp4 ;
1188317   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1188318   +_LP0 = _LP0 + (    0.20181176396468) * _TEMP * _4_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.20181176396468) * _TEMP * _4_0;
1188319   +
1188320   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1188321   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1188322   +_LP0 = _LP0 + (    1.01331254975906 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.01331254975906 * _TEMP);
1188323   +
1188324   +***  Effect: Age ;
MPRINT(EM_DIAGRAM):   *** Effect: Age ;
1188325   +_TEMP = Age ;
MPRINT(EM_DIAGRAM):   _TEMP = Age ;
1188326   +_LP0 = _LP0 + (   -0.00968312823761 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00968312823761 * _TEMP);
1188327   +
1188328   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1188329   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1188330   +_LP0 = _LP0 + (   -0.03456417718144 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03456417718144 * _TEMP);
1188331   +
1188332   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1188333   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1188334   +_LP0 = _LP0 + (    0.00002539988923 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00002539988923 * _TEMP);
1188335   +
1188336   +***  Effect: Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: Marital_Status ;
1188337   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1188338   +_LP0 = _LP0 + (    0.11081046192241) * _TEMP * _9_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.11081046192241) * _TEMP * _9_0;
1188339   +_LP0 = _LP0 + (   -0.36385893866909) * _TEMP * _9_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.36385893866909) * _TEMP * _9_1;
1188340   +_LP0 = _LP0 + (    0.25486771612086) * _TEMP * _9_2;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.25486771612086) * _TEMP * _9_2;
1188341   +_LP0 = _LP0 + (   -0.40515143447522) * _TEMP * _9_3;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.40515143447522) * _TEMP * _9_3;
1188342   +
1188343   +***  Effect: NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDealsPurchases ;
1188344   +_TEMP = NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDealsPurchases ;
1188345   +_LP0 = _LP0 + (    0.21113804572457 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21113804572457 * _TEMP);
1188346   +
1188347   +***  Effect: NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebVisitsMonth ;
1188348   +_TEMP = NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebVisitsMonth ;
1188349   +_LP0 = _LP0 + (    0.17412114550604 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.17412114550604 * _TEMP);
1188350   +
1188351   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1188352   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1188353   +_LP0 = _LP0 + (    0.00006841011087 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00006841011087 * _TEMP);
1188354   +
1188355   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1188356   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1188357   +_LP0 = _LP0 + (    0.00529455452809 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00529455452809 * _TEMP);
1188358   +
1188359   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1188360   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1188361   +_LP0 = _LP0 + (   -0.03257124268465 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03257124268465 * _TEMP);
1188362   +
1188363   +***  Effect: Teenhome ;
MPRINT(EM_DIAGRAM):   *** Effect: Teenhome ;
1188364   +_TEMP = Teenhome ;
MPRINT(EM_DIAGRAM):   _TEMP = Teenhome ;
1188365   +_LP0 = _LP0 + (   -0.71325798797505 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.71325798797505 * _TEMP);
1188366   +
1188367   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1188368   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1188369   +_P0 = probnorm((   -2.04830407754231) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( -2.04830407754231) + _LP0);
1188370   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1188371   +
1188372   +REG11DR1:
1188373   +
1188374   +
1188375   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG11DR1: *** Posterior Probabilities and Predicted Level;
1188376   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1188377   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1188378   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1188379   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1188380   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1188381   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1188382   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1188383   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1188384   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1188385   +end;
MPRINT(EM_DIAGRAM):   end;
1188386   +I_DepVar = REG11DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG11DRF[_IY];
1188387   +U_DepVar = REG11DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG11DRU[_IY];
1188388   +
1188389   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1188390   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1188391   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1188392    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1188393    quit;
1188394    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1188395    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1188396    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1188397    retain ID 2 Node "Reg11";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg11";
1188398    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1188399    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 342 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 342 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188400    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1188401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188402    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 342 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 342 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188403    proc sort data=EMWS8.Reg11_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg11_variableset out=_temp2(keep=NAME CREATOR);
1188404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188405    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.REG11_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188406    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188407    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1188408    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1188409    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188410    proc contents data=EMWS8.Reg11_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg11_train out=_meta(keep=NAME) noprint;
1188411    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1188412    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1188413    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188414    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188415    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188416    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1188417    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188418    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188419    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1188420    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1188420  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 178 rows and 5 columns.

1188421    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188422    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1188423    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 178 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188424    filename _pref
1188424  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1188425    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1188426    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1188427   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188428   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1188429   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1188430   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1188431   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1188432   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1188433    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1188434    quit;
1188435    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1188436    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1188437    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1188438    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1188439    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1188440    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188441    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1188442    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188443    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188444    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1188445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188446    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188447    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188448    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1188449    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1188450    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188451    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1188452    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

1188453    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1188454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188455    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188456    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188457    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1188458    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188459    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188460    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1188461    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1188461  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1188462    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188463    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1188464    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 182 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188465    filename _pref
1188465  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1188466    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1188467    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1188468   +
1188469   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1188470   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1188470  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1188471   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1188472   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1188473   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1188474   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1188475   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1188476    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1188477    quit;
1188478    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1188479    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1188480    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1188481    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1188482    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1188483    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188484    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1188485    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188486    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188487    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1188488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188489    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188490    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188491    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1188492    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1188493    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188494    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1188495    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188496    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1188497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188498    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1188499    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188500    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1188501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188502    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188503    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1188504    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1188504  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1188505    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188506    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1188507    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 221 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188508    filename _pref
1188508  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1188509    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1188510    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1188511   +
1188512   +
1188513   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1188514   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1188515   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1188516   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1188517   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1188518   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188519   +
1188520   +
1188521   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1188522   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1188523   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1188524   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1188525   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1188526   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188527   +
1188528   +
1188529   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1188530   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1188531   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1188532   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1188533   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1188534   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188535   +
1188536   +
1188537   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1188538   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1188539   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1188540   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1188541   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1188542   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188543   +
1188544   +
1188545   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1188546   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1188547   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1188548   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1188549   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1188550   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188551   +
1188552   +
1188553   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1188554   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1188555   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1188556   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1188557   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1188558   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188559   +
1188560   +
1188561   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1188562   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1188563   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1188564   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1188565   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1188566   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188567   +
1188568   +
1188569   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1188570   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1188571   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1188572   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1188573   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1188574   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1188575   +if
1188576   +_FILTERNORM1 not in ( '.')
1188577   + and
1188578   +_FILTERNORM2 not in ( '.')
1188579   + and
1188580   +_FILTERNORM3 not in ( '.')
1188581   + and
1188582   +_FILTERNORM4 not in ( '.')
1188583   + and
1188584   +_FILTERNORM5 not in ( '.')
1188585   + and
1188586   +_FILTERNORM6 not in ( '.')
1188587   + and
1188588   +_FILTERNORM7 not in ( ' ')
1188589   + and
1188590   +_FILTERNORM8 not in ( ' ')
1188591   +and
1188592   +( Dt_Customer ne .)
1188593   +and ( Income ne . and (Income<=107000))
1188594   +and ( Kidhome ne .)
1188595   +and ( MntFishProducts ne .)
1188596   +and ( MntFruits ne .)
1188597   +and ( MntGoldProds ne .)
1188598   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1188599   +and ( MntSweetProducts ne .)
1188600   +and ( MntWines ne .)
1188601   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1188602   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1188603   +and ( NumStorePurchases ne .)
1188604   +and ( NumWebPurchases ne .)
1188605   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1188606   +and ( Recency ne .)
1188607   +and ( Teenhome ne .)
1188608   +and ( Year_Birth ne .)
1188609   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1188610   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1188611   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1188612   +end;
MPRINT(EM_DIAGRAM):   end;
1188613   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1188614   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1188615    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1188616    quit;
1188617    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1188618    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1188619    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1188620    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1188621    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1188622    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188623    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1188624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188625    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188626    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1188627    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188628    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188629    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188630    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1188631    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1188632    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188633    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1188634    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188635    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1188636    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188637    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188638    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1188639    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1188640    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1188641    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188642    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1188643    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1188643  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1188644    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1188645    proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl24_FCMP data=_tempx;
1188646    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL24_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL24_FCMP has 287 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1188647    %macro varDept(fcmpdata=,id=);
1188648    %global nobs&id scoreFlag&id;
1188649    %let scoreFlag&id = 0;
1188650    %if &id=1 or ^&fcmpStart %then %do;
1188651    proc sort data=&fcmpdata out=_temp&id nodupkey;
1188652    by NAME;
1188653    where id=&id and LHS in( %let j=1;
1188654    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1188655    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1188656    "&var" %let j = %eval(&j+1);
1188657    %end;
1188658    );
1188659    run;
1188660    %let dsid = %sysfunc(open(_temp&id));
1188661    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188662    %let dsid = %sysfunc(close(&dsid));
1188663    %if &&nobs&id %then %do;
1188664    %let scoreFlag&id = 1;
1188665    %let fcmpStart = 1;
1188666    %end;
1188667    %else %let fcmpStart = 0;
1188668    %end;
1188669    %else %do;
1188670    proc sort data=&fcmpdata out=_tempid;
1188671    where id=&id;
1188672    by LHS;
1188673    run;
1188674    %let dsid = %sysfunc(open(_tempid));
1188675    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188676    %let dsid = %sysfunc(close(&dsid));
1188677    %if ^&&nobs&id %then %do;
1188678    proc datasets lib=work nolist;
1188679    delete _tempid;
1188680    run;
1188681    quit;
1188682    %end;
1188683    %else %do;
1188684    data _tempAll;
1188685    set %let j=%eval(&id-1);
1188686    %do x=1 %to &j;
1188687    %if &&nobs&x %then %do;
1188688    _temp&x %end;
1188689    %end;
1188690    ;
1188691    run;
1188692    proc sql;
1188693    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1188693  ! work._tempid p2 where p.name=p2.lhs;
1188694    quit;
1188695    data _temp&id;
1188696    set _temp&id;
1188697    where LHS ne '' and NAME ne '' and Node ne '';
1188698    run;
1188699    proc datasets lib=work nolist;
1188700    delete _tempAll;
1188701    run;
1188702    %let dsid = %sysfunc(open(_temp&id));
1188703    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188704    %let dsid = %sysfunc(close(&dsid));
1188705    %if ^&&nobs&id %then %do;
1188706    proc datasets lib=work nolist;
1188707    delete _temp&id;
1188708    run;
1188709    quit;
1188710    %end;
1188711    %else %do;
1188712    %let scoreFlag&id = 1;
1188713    data _temp&id;
1188714    set _temp&id;
1188715    where LHS ne NAME and node ne '';
1188716    run;
1188717    %let dsid = %sysfunc(open(_temp&id));
1188718    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1188719    %let dsid = %sysfunc(close(&dsid));
1188720    %if ^&&nobs&id %then %do;
1188721    proc datasets lib=work nolist;
1188722    delete _temp&id;
1188723    run;
1188724    quit;
1188725    %end;
1188726    %else %do;
1188727    proc sort data=_temp&id nodupkey;
1188728    by LHS NAME;
1188729    run;
1188730    %end;
1188731    %end;
1188732    %end;
1188733    %end;
1188734    %mend varDept;
1188735    %macro optCode(outdata=fcmpdata);
1188736    %global fcmpStart;
1188737    %let fcmpStart = 0;
1188738    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1188739    %let NumNodes=9;
1188740    %do k=1 %to &NumNodes;
1188741    %vardept(fcmpdata=&outdata, id=&k);
1188742    %end;
1188743    %mend optCode;
1188744    %optcode(outData=EMWS8.Ensmbl24_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 52 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 32 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;

NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 32 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp6 ;
MPRINT(VARDEPT):   run;

NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 32 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 45 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl24_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1188745    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1188746    * Ensmbl24: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Computing metadata for TRAIN data;
1188747    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL24_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl24\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl24_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl24_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl24_TRAIN out=WORK.M31YY3SW noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31YY3SW;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M31YY3SW(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M31YY3SW;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M31YY3SW;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3DAPCQL NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2L3P0UK(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   set WORK.M3DAPCQL;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural37_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural37_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl24";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl24";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl24: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl24";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1189067    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1189068    set EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl24_EMINFO;
1189069    where DATA='Ensmbl24' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl24' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1189070    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL24_EMINFO.
      WHERE (DATA='Ensmbl24') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

1189071    data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl24_EMINFO;
1189072    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1189073    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1189074    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1189078    run;
1189079    data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMINFO;
1189080    set EMWS8.Ensmbl24_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl24_EMINFO WORK.MODELTEMP_INFO;
1189081    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189082    proc sort data = EMWS8.Ensmbl24_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl24_EMINFO NOTHREADS;
1189083    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189084    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

1189085    proc sort data = EMWS8.Neural37_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural37_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1189086    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189087    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL37_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189088    proc sort data = EMWS8.Ensmbl24_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl24_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1189089    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189090    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL24_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189091    data EMWS8.Ensmbl24_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl24_EMINFO;
1189092    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1189093    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1189094    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL24_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1189095    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1189096    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1189097    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1189098    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.ENSMBL24_TRAIN.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL24_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
