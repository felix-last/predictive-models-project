MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.30 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.30 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0QYFR1V 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0QYFR1V new;
MPRINT(EM_DIAGRAM):   run;
1219364    data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
1219365    set EMWS8.Neural38_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_OUTKEY;
1219366    if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
1219367    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set EMWS8.NEURAL38_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1219368    filename emflow
1219368  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1219369    *------------------------------------------------------------*;
1219370    * Neural38: Scoring DATA data;
1219371    *------------------------------------------------------------*;
1219372    data EMWS8.Neural38_TRAIN
1219373    / view=EMWS8.Neural38_TRAIN
1219374    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_TRAIN / view=EMWS8.Neural38_TRAIN ;
1219375    set EMWS8.Meta3_TRAIN
1219376    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
1219377    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas.
1219378   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1219379   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1219380   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1219381   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1219382   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1219383   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1219384   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1219385   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1219386   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1219387   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1219388   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1219389   +LENGTH _WARN_ $4
1219390   +      F_DepVar  $ 12
1219391   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1219392   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1219393   +
1219394   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1219395   +
1219396   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1219397   +
1219398   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1219399   +
1219400   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1219401   +
1219402   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1219403   +
1219404   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1219405   +
1219406   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1219407   +
1219408   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1219409   +
1219410   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1219411   +
1219412   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1219413   +
1219414   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1219415   +
1219416   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1219417   +
1219418   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1219419   +
1219420   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1219421   +
1219422   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1219423   +
1219424   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1219425   +
1219426   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1219427   +
1219428   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1219429   +
1219430   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1219431   +
1219432   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1219433   +
1219434   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1219435   +
1219436   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1219437   +
1219438   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1219439   +
1219440   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1219441   +
1219442   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1219443   +
1219444   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1219445   +
1219446   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1219447   +
1219448   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1219449   +
1219450   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1219451   +
1219452   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1219453   +
1219454   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1219455   +
1219456   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1219457   +
1219458   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1219459   +
1219460   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1219461   +
1219462   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1219463   +
1219464   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1219465   +
1219466   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1219467   +
1219468   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1219469   +
1219470   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1219471   +
1219472   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1219473   +
1219474   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1219475   +
1219476   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1219477   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1219478   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1219479   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1219480   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219481   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219482   +end;
MPRINT(EM_DIAGRAM):   end;
1219483   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219484   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219485   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1219486   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219487   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219488   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1219489   +   end;
MPRINT(EM_DIAGRAM):   end;
1219490   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219491   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1219492   +   end;
MPRINT(EM_DIAGRAM):   end;
1219493   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219494   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1219495   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219496   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219497   +   end;
MPRINT(EM_DIAGRAM):   end;
1219498   +end;
MPRINT(EM_DIAGRAM):   end;
1219499   +
1219500   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1219501   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1219502   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1219503   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1219504   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219505   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219506   +end;
MPRINT(EM_DIAGRAM):   end;
1219507   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219508   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219509   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1219510   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219511   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219512   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1219513   +   end;
MPRINT(EM_DIAGRAM):   end;
1219514   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219515   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1219516   +   end;
MPRINT(EM_DIAGRAM):   end;
1219517   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219518   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1219519   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219520   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219521   +   end;
MPRINT(EM_DIAGRAM):   end;
1219522   +end;
MPRINT(EM_DIAGRAM):   end;
1219523   +
1219524   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1219525   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1219526   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1219527   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1219528   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219529   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219530   +end;
MPRINT(EM_DIAGRAM):   end;
1219531   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219532   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219533   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1219534   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219535   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219536   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1219537   +   end;
MPRINT(EM_DIAGRAM):   end;
1219538   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219539   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1219540   +   end;
MPRINT(EM_DIAGRAM):   end;
1219541   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219542   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1219543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219545   +   end;
MPRINT(EM_DIAGRAM):   end;
1219546   +end;
MPRINT(EM_DIAGRAM):   end;
1219547   +
1219548   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1219549   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1219550   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1219551   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1219552   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219554   +end;
MPRINT(EM_DIAGRAM):   end;
1219555   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219556   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219557   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1219558   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219559   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219560   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1219561   +   end;
MPRINT(EM_DIAGRAM):   end;
1219562   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219563   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1219564   +   end;
MPRINT(EM_DIAGRAM):   end;
1219565   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219566   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1219567   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219568   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219569   +   end;
MPRINT(EM_DIAGRAM):   end;
1219570   +end;
MPRINT(EM_DIAGRAM):   end;
1219571   +
1219572   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1219573   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1219574   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1219575   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1219576   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219578   +end;
MPRINT(EM_DIAGRAM):   end;
1219579   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219580   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219581   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1219582   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219583   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219584   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1219585   +   end;
MPRINT(EM_DIAGRAM):   end;
1219586   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219587   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1219588   +   end;
MPRINT(EM_DIAGRAM):   end;
1219589   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219590   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1219591   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219592   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219593   +   end;
MPRINT(EM_DIAGRAM):   end;
1219594   +end;
MPRINT(EM_DIAGRAM):   end;
1219595   +
1219596   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1219597   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1219598   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1219599   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1219600   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219601   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219602   +end;
MPRINT(EM_DIAGRAM):   end;
1219603   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219604   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219605   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1219606   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219607   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1219608   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1219609   +   end;
MPRINT(EM_DIAGRAM):   end;
1219610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1219611   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1219612   +   end;
MPRINT(EM_DIAGRAM):   end;
1219613   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219614   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1219615   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219616   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219617   +   end;
MPRINT(EM_DIAGRAM):   end;
1219618   +end;
MPRINT(EM_DIAGRAM):   end;
1219619   +
1219620   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1219621   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1219622   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1219623   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1219624   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219625   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219626   +end;
MPRINT(EM_DIAGRAM):   end;
1219627   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219628   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1219629   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1219630   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219631   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1219632   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1219633   +   end;
MPRINT(EM_DIAGRAM):   end;
1219634   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1219635   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1219636   +   end;
MPRINT(EM_DIAGRAM):   end;
1219637   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219638   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1219639   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219640   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219641   +   end;
MPRINT(EM_DIAGRAM):   end;
1219642   +end;
MPRINT(EM_DIAGRAM):   end;
1219643   +
1219644   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1219645   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1219646   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1219647   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1219648   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1219649   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1219650   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1219651   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1219652   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1219653   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1219654   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1219655   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1219656   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219657   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219658   +end;
MPRINT(EM_DIAGRAM):   end;
1219659   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219660   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1219661   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1219662   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219663   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1219664   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1219665   +   end;
MPRINT(EM_DIAGRAM):   end;
1219666   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1219667   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1219668   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1219669   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1219670   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1219671   +   end;
MPRINT(EM_DIAGRAM):   end;
1219672   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1219673   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1219674   +   end;
MPRINT(EM_DIAGRAM):   end;
1219675   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1219676   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1219677   +   end;
MPRINT(EM_DIAGRAM):   end;
1219678   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1219679   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1219680   +   end;
MPRINT(EM_DIAGRAM):   end;
1219681   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219682   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1219683   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1219684   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1219685   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1219686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219688   +   end;
MPRINT(EM_DIAGRAM):   end;
1219689   +end;
MPRINT(EM_DIAGRAM):   end;
1219690   +
1219691   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1219692   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1219693   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1219694   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1219695   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1219696   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1219697   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1219698   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1219699   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1219700   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1219701   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1219702   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1219703   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1219704   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1219705   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219706   +end;
MPRINT(EM_DIAGRAM):   end;
1219707   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219708   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1219709   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1219710   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219711   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1219712   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1219713   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1219714   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1219715   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1219716   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219717   +         end;
MPRINT(EM_DIAGRAM):   end;
1219718   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1219719   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1219720   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1219721   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219722   +            end;
MPRINT(EM_DIAGRAM):   end;
1219723   +         end;
MPRINT(EM_DIAGRAM):   end;
1219724   +      end;
MPRINT(EM_DIAGRAM):   end;
1219725   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1219726   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1219727   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1219728   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219729   +         end;
MPRINT(EM_DIAGRAM):   end;
1219730   +      end;
MPRINT(EM_DIAGRAM):   end;
1219731   +   end;
MPRINT(EM_DIAGRAM):   end;
1219732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219733   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1219734   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1219735   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219736   +      end;
MPRINT(EM_DIAGRAM):   end;
1219737   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1219738   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1219739   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1219740   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1219741   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1219742   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1219743   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1219744   +         end;
MPRINT(EM_DIAGRAM):   end;
1219745   +      end;
MPRINT(EM_DIAGRAM):   end;
1219746   +   end;
MPRINT(EM_DIAGRAM):   end;
1219747   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1219748   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1219749   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1219750   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1219751   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1219752   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1219753   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219754   +   end;
MPRINT(EM_DIAGRAM):   end;
1219755   +end;
MPRINT(EM_DIAGRAM):   end;
1219756   +
1219757   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219758   +*** Checking missing input Interval
1219759   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1219760   +
1219761   +IF NMISS(
1219762   +   AcceptedCmpTotal ,
1219763   +   Age ,
1219764   +   Frq ,
1219765   +   Income ,
1219766   +   Kidhome ,
1219767   +   MntFishProducts ,
1219768   +   MntFruits ,
1219769   +   MntGoldProds ,
1219770   +   MntSweetProducts ,
1219771   +   MonthsAsCustomer ,
1219772   +   NumDealsPurchases ,
1219773   +   NumWebVisitsMonth ,
1219774   +   RFMstat ,
1219775   +   RMntFrq ,
1219776   +   Recency ,
1219777   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1219778   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1219779   +
1219780   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1219781   +END;
MPRINT(EM_DIAGRAM):   END;
1219782   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219783   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1219784   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219785   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219786   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1219787   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1219788   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1219789   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1219790   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1219791   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1219792   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1219793   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1219794   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1219795   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1219796   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1219797   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1219798   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1219799   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1219800   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1219801   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1219802   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1219803   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1219804   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1219805   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1219806   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1219807   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1219808   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1219809   +END;
MPRINT(EM_DIAGRAM):   END;
1219810   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219811   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1219812   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1219813   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1219814   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1219815   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1219816   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1219817   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1219818   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1219819   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1219820   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1219821   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1219822   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1219823   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1219824   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1219825   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1219826   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1219827   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1219828   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1219829   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1219830   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1219831   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1219832   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1219833   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1219834   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1219835   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1219836   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1219837   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1219838   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1219839   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1219840   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1219841   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1219842   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1219843   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1219844   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1219845   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1219846   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1219847   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1219848   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1219849   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1219850   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1219851   +END;
MPRINT(EM_DIAGRAM):   END;
1219852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219853   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1219854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219855   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219856   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1219857   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219859   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1219860   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219861   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219862   +   H11  =    -0.07939278387837 * S_AcceptedCmpTotal  +    -0.02790902024984 *
1219863   +        S_Age  +     0.40100840853714 * S_Frq  +     0.04432219183455 *
1219864   +        S_Income  +    -0.30219239382398 * S_Kidhome
The SAS System

1219865   +          +    -0.19432749686172 * S_MntFishProducts
1219866   +          +    -0.22103205349698 * S_MntFruits  +    -0.17971639907174 *
1219867   +        S_MntGoldProds  +     0.06706063176219 * S_MntSweetProducts
1219868   +          +    -0.06461990802389 * S_MonthsAsCustomer
1219869   +          +     -0.3783005817403 * S_NumDealsPurchases
1219870   +          +    -0.16339485784748 * S_NumWebVisitsMonth
1219871   +          +    -0.14712191436986 * S_RFMstat  +    -0.19045100842469 *
1219872   +        S_RMntFrq  +     0.18339671113489 * S_Recency
1219873   +          +     -0.0926217862823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.07939278387837 * S_AcceptedCmpTotal + -0.02790902024984 * S_Age 
+ 0.40100840853714 * S_Frq + 0.04432219183455 * S_Income + -0.30219239382398 * S_Kidhome + 
-0.19432749686172 * S_MntFishProducts + -0.22103205349698 * S_MntFruits + -0.17971639907174 * 
S_MntGoldProds + 0.06706063176219 * S_MntSweetProducts + -0.06461990802389 * 
S_MonthsAsCustomer + -0.3783005817403 * S_NumDealsPurchases + -0.16339485784748 * 
S_NumWebVisitsMonth + -0.14712191436986 * S_RFMstat + -0.19045100842469 * S_RMntFrq + 
0.18339671113489 * S_Recency + -0.0926217862823 * S_Teenhome ;
1219874   +   H12  =    -1.08824651645594 * S_AcceptedCmpTotal  +     0.17686645093121 *
1219875   +        S_Age  +     1.35317207989883 * S_Frq  +     0.88138422987418 *
1219876   +        S_Income  +    -0.84990904276539 * S_Kidhome
1219877   +          +    -0.10200829265034 * S_MntFishProducts
1219878   +          +    -0.31753011084752 * S_MntFruits  +    -0.18249877124557 *
1219879   +        S_MntGoldProds  +     0.06150349061089 * S_MntSweetProducts
1219880   +          +      0.3716090242476 * S_MonthsAsCustomer
1219881   +          +    -0.14174807996351 * S_NumDealsPurchases
1219882   +          +    -0.42393482037755 * S_NumWebVisitsMonth
1219883   +          +     -0.2268215763235 * S_RFMstat  +     0.30128162296924 *
1219884   +        S_RMntFrq  +    -0.15766803203419 * S_Recency
1219885   +          +      -0.876771580659 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.08824651645594 * S_AcceptedCmpTotal + 0.17686645093121 * S_Age 
+ 1.35317207989883 * S_Frq + 0.88138422987418 * S_Income + -0.84990904276539 * S_Kidhome + 
-0.10200829265034 * S_MntFishProducts + -0.31753011084752 * S_MntFruits + -0.18249877124557 * 
S_MntGoldProds + 0.06150349061089 * S_MntSweetProducts + 0.3716090242476 * S_MonthsAsCustomer 
+ -0.14174807996351 * S_NumDealsPurchases + -0.42393482037755 * S_NumWebVisitsMonth + 
-0.2268215763235 * S_RFMstat + 0.30128162296924 * S_RMntFrq + -0.15766803203419 * S_Recency + 
-0.876771580659 * S_Teenhome ;
1219886   +   H13  =    -0.19745247224429 * S_AcceptedCmpTotal  +     0.12296649801431 *
1219887   +        S_Age  +     0.30380054301284 * S_Frq  +    -0.20561851411928 *
1219888   +        S_Income  +     0.26862281584112 * S_Kidhome
1219889   +          +     0.04085557903506 * S_MntFishProducts
1219890   +          +     0.04667626132377 * S_MntFruits  +     0.00814736574913 *
1219891   +        S_MntGoldProds  +     0.03678719281756 * S_MntSweetProducts
1219892   +          +     0.12149827716086 * S_MonthsAsCustomer
1219893   +          +    -0.07579622934099 * S_NumDealsPurchases
1219894   +          +    -0.32766887199758 * S_NumWebVisitsMonth
1219895   +          +    -0.03884372682505 * S_RFMstat  +     0.12404964867543 *
1219896   +        S_RMntFrq  +     0.41695593982518 * S_Recency
1219897   +          +     0.13451509125058 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19745247224429 * S_AcceptedCmpTotal + 0.12296649801431 * S_Age 
+ 0.30380054301284 * S_Frq + -0.20561851411928 * S_Income + 0.26862281584112 * S_Kidhome + 
0.04085557903506 * S_MntFishProducts + 0.04667626132377 * S_MntFruits + 0.00814736574913 * 
S_MntGoldProds + 0.03678719281756 * S_MntSweetProducts + 0.12149827716086 * S_MonthsAsCustomer 
+ -0.07579622934099 * S_NumDealsPurchases + -0.32766887199758 * S_NumWebVisitsMonth + 
-0.03884372682505 * S_RFMstat + 0.12404964867543 * S_RMntFrq + 0.41695593982518 * S_Recency + 
0.13451509125058 * S_Teenhome ;
1219898   +   H11  = H11  +     1.35675382808415 * AcceptedCmp10
1219899   +          +    -0.11002433103629 * AcceptedCmp20  +     0.16502607393478 *
1219900   +        AcceptedCmp30  +    -0.05600642331364 * AcceptedCmp40
1219901   +          +     0.26058548958497 * AcceptedCmp50  +     0.13475990783818 *
1219902   +        Complain0  +     0.15296527049289 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.35675382808415 * AcceptedCmp10 + -0.11002433103629 * 
AcceptedCmp20 + 0.16502607393478 * AcceptedCmp30 + -0.05600642331364 * AcceptedCmp40 + 
0.26058548958497 * AcceptedCmp50 + 0.13475990783818 * Complain0 + 0.15296527049289 * 
HigherEducationBinary0 ;
1219903   +   H12  = H12  +     0.42439916481327 * AcceptedCmp10
1219904   +          +    -0.47117316697286 * AcceptedCmp20  +    -1.01563221321538 *
1219905   +        AcceptedCmp30  +    -1.22683651578342 * AcceptedCmp40
1219906   +          +    -0.01409161983154 * AcceptedCmp50  +    -0.17319143351034 *
1219907   +        Complain0  +     0.28531428296946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42439916481327 * AcceptedCmp10 + -0.47117316697286 * 
AcceptedCmp20 + -1.01563221321538 * AcceptedCmp30 + -1.22683651578342 * AcceptedCmp40 + 
-0.01409161983154 * AcceptedCmp50 + -0.17319143351034 * Complain0 + 0.28531428296946 * 
HigherEducationBinary0 ;
1219908   +   H13  = H13  +    -0.11940443900972 * AcceptedCmp10
1219909   +          +      0.2224729234506 * AcceptedCmp20  +     0.03960779259064 *
1219910   +        AcceptedCmp30  +    -0.04759970138444 * AcceptedCmp40
1219911   +          +     0.16012787279007 * AcceptedCmp50  +    -0.13128086861277 *
1219912   +        Complain0  +    -0.02106084686016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11940443900972 * AcceptedCmp10 + 0.2224729234506 * 
AcceptedCmp20 + 0.03960779259064 * AcceptedCmp30 + -0.04759970138444 * AcceptedCmp40 + 
0.16012787279007 * AcceptedCmp50 + -0.13128086861277 * Complain0 + -0.02106084686016 * 
HigherEducationBinary0 ;
1219913   +   H11  = H11  +     0.15724732214889 * Education2n_Cycle
1219914   +          +    -0.28073637806204 * EducationBasic  +     0.02543245889885 *
1219915   +        EducationGraduation  +    -0.21977763409467 * EducationMaster
1219916   +          +     0.18154308480365 * Marital_StatusDivorced
1219917   +          +    -0.11784929451382 * Marital_StatusMarried
1219918   +          +    -0.03444604215162 * Marital_StatusSingle
1219919   +          +    -0.09935331889933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.15724732214889 * Education2n_Cycle + -0.28073637806204 * 
EducationBasic + 0.02543245889885 * EducationGraduation + -0.21977763409467 * EducationMaster 
+ 0.18154308480365 * Marital_StatusDivorced + -0.11784929451382 * Marital_StatusMarried + 
-0.03444604215162 * Marital_StatusSingle + -0.09935331889933 * Marital_StatusTogether ;
1219920   +   H12  = H12  +    -0.09625341975755 * Education2n_Cycle
1219921   +          +     0.22223800760549 * EducationBasic  +     0.08854547546091 *
1219922   +        EducationGraduation  +    -0.24475078378526 * EducationMaster
1219923   +          +      -0.287562557272 * Marital_StatusDivorced
1219924   +          +    -0.76767006991581 * Marital_StatusMarried
1219925   +          +     0.77400843024053 * Marital_StatusSingle
1219926   +          +    -0.82922593841016 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.09625341975755 * Education2n_Cycle + 0.22223800760549 * 
EducationBasic + 0.08854547546091 * EducationGraduation + -0.24475078378526 * EducationMaster 
+ -0.287562557272 * Marital_StatusDivorced + -0.76767006991581 * Marital_StatusMarried + 
0.77400843024053 * Marital_StatusSingle + -0.82922593841016 * Marital_StatusTogether ;
1219927   +   H13  = H13  +    -0.26037905844091 * Education2n_Cycle
1219928   +          +     0.28758815759567 * EducationBasic  +    -0.08361705669925 *
1219929   +        EducationGraduation  +     0.21183311472173 * EducationMaster
1219930   +          +    -0.34952991031177 * Marital_StatusDivorced
1219931   +          +     0.12643424122152 * Marital_StatusMarried
1219932   +          +     0.01053756602964 * Marital_StatusSingle
1219933   +          +     0.09967720854979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26037905844091 * Education2n_Cycle + 0.28758815759567 * 
EducationBasic + -0.08361705669925 * EducationGraduation + 0.21183311472173 * EducationMaster 
+ -0.34952991031177 * Marital_StatusDivorced + 0.12643424122152 * Marital_StatusMarried + 
0.01053756602964 * Marital_StatusSingle + 0.09967720854979 * Marital_StatusTogether ;
1219934   +   H11  =    -1.18043244750249 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18043244750249 + H11 ;
1219935   +   H12  =    -0.93677267255394 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.93677267255394 + H12 ;
1219936   +   H13  =    -0.12554919906064 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12554919906064 + H13 ;
1219937   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1219938   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1219939   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1219940   +END;
MPRINT(EM_DIAGRAM):   END;
1219941   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219942   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1219943   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1219944   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1219945   +END;
MPRINT(EM_DIAGRAM):   END;
1219946   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219947   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1219948   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1219949   +
1219950   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1219951   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1219952   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1219953   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1219954   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1219955   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1219956   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1219957   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1219958   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1219959   +end;
MPRINT(EM_DIAGRAM):   end;
1219960   +else do;
MPRINT(EM_DIAGRAM):   else do;
1219961   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1219962   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1219963   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1219964   +   end;
MPRINT(EM_DIAGRAM):   end;
1219965   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1219966   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1219967   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1219968   +   end;
MPRINT(EM_DIAGRAM):   end;
1219969   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1219970   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1219971   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1219972   +   end;
MPRINT(EM_DIAGRAM):   end;
1219973   +end;
MPRINT(EM_DIAGRAM):   end;
1219974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1219975   +   P_DepVar1  =    -5.01943942685766 * H11  +      5.1452509354081 * H12
1219976   +          +     -6.1441433712978 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.01943942685766 * H11 + 5.1452509354081 * H12 + 
-6.1441433712978 * H13 ;
1219977   +   P_DepVar1  =    -0.23070454336851 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23070454336851 + P_DepVar1 ;
1219978   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1219979   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1219980   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1219981   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1219982   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1219983   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1219984   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1219985   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1219986   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1219987   +END;
MPRINT(EM_DIAGRAM):   END;
1219988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1219989   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1219990   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1219991   +END;
MPRINT(EM_DIAGRAM):   END;
1219992   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1219993   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1219994   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1219995   +END;
MPRINT(EM_DIAGRAM):   END;
1219996   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1219997   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1219998   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1219999   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1220000   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1220001   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1220002   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1220003   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220004   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1220005   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220006   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1220007   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1220008   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1220009   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1220010   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1220011   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1220012   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1220013   +END;
MPRINT(EM_DIAGRAM):   END;
1220014   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220015   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1220016   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220017   +drop
1220018   +H11
1220019   +H12
1220020   +H13
1220021   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1220022   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220023    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220024    quit;
1220025    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1220026    filename emflow
1220026  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1220027    *------------------------------------------------------------*;
1220028    * Neural38: Scoring VALIDATE data;
1220029    *------------------------------------------------------------*;
1220030    data EMWS8.Neural38_VALIDATE
1220031    / view=EMWS8.Neural38_VALIDATE
1220032    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_VALIDATE / view=EMWS8.Neural38_VALIDATE ;
1220033    set EMWS8.Meta3_VALIDATE
1220034    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
1220035    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas.
1220036   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1220037   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1220038   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1220039   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1220040   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1220041   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1220042   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1220043   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1220044   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1220045   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1220046   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1220047   +LENGTH _WARN_ $4
1220048   +      F_DepVar  $ 12
1220049   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1220050   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1220051   +
1220052   +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
1220053   +
1220054   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1220055   +
1220056   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1220057   +
1220058   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1220059   +
1220060   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1220061   +
1220062   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1220063   +
1220064   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1220065   +
1220066   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1220067   +
1220068   +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
1220069   +
1220070   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1220071   +
1220072   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1220073   +
1220074   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1220075   +
1220076   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1220077   +
1220078   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1220079   +
1220080   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1220081   +
1220082   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1220083   +
1220084   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1220085   +
1220086   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1220087   +
1220088   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1220089   +
1220090   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1220091   +
1220092   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1220093   +
1220094   +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
1220095   +
1220096   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1220097   +
1220098   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1220099   +
1220100   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1220101   +
1220102   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1220103   +
1220104   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1220105   +
1220106   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1220107   +
1220108   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1220109   +
1220110   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1220111   +
1220112   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1220113   +
1220114   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1220115   +
1220116   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1220117   +
1220118   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1220119   +
1220120   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1220121   +
1220122   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1220123   +
1220124   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1220125   +
1220126   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1220127   +
1220128   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1220129   +
1220130   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1220131   +
1220132   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1220133   +
1220134   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1220135   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1220136   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1220137   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1220138   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220139   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220140   +end;
MPRINT(EM_DIAGRAM):   end;
1220141   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220142   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220143   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1220144   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220145   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220146   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1220147   +   end;
MPRINT(EM_DIAGRAM):   end;
1220148   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220149   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1220150   +   end;
MPRINT(EM_DIAGRAM):   end;
1220151   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220152   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1220153   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220154   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220155   +   end;
MPRINT(EM_DIAGRAM):   end;
1220156   +end;
MPRINT(EM_DIAGRAM):   end;
1220157   +
1220158   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1220159   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1220160   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1220161   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1220162   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220163   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220164   +end;
MPRINT(EM_DIAGRAM):   end;
1220165   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220166   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220167   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1220168   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220169   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220170   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1220171   +   end;
MPRINT(EM_DIAGRAM):   end;
1220172   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220173   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1220174   +   end;
MPRINT(EM_DIAGRAM):   end;
1220175   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220176   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1220177   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220178   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220179   +   end;
MPRINT(EM_DIAGRAM):   end;
1220180   +end;
MPRINT(EM_DIAGRAM):   end;
1220181   +
1220182   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1220183   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1220184   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1220185   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1220186   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220188   +end;
MPRINT(EM_DIAGRAM):   end;
1220189   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220190   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220191   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1220192   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220193   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220194   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1220195   +   end;
MPRINT(EM_DIAGRAM):   end;
1220196   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220197   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1220198   +   end;
MPRINT(EM_DIAGRAM):   end;
1220199   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220200   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1220201   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220202   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220203   +   end;
MPRINT(EM_DIAGRAM):   end;
1220204   +end;
MPRINT(EM_DIAGRAM):   end;
1220205   +
1220206   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1220207   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1220208   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1220209   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1220210   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220211   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220212   +end;
MPRINT(EM_DIAGRAM):   end;
1220213   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220214   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220215   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1220216   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220217   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220218   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1220219   +   end;
MPRINT(EM_DIAGRAM):   end;
1220220   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220221   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1220222   +   end;
MPRINT(EM_DIAGRAM):   end;
1220223   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220224   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1220225   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220226   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220227   +   end;
MPRINT(EM_DIAGRAM):   end;
1220228   +end;
MPRINT(EM_DIAGRAM):   end;
1220229   +
1220230   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1220231   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1220232   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1220233   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1220234   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220236   +end;
MPRINT(EM_DIAGRAM):   end;
1220237   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220238   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220239   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1220240   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220241   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220242   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1220243   +   end;
MPRINT(EM_DIAGRAM):   end;
1220244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220245   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1220246   +   end;
MPRINT(EM_DIAGRAM):   end;
1220247   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220248   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1220249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220251   +   end;
MPRINT(EM_DIAGRAM):   end;
1220252   +end;
MPRINT(EM_DIAGRAM):   end;
1220253   +
1220254   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1220255   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1220256   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1220257   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1220258   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220259   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220260   +end;
MPRINT(EM_DIAGRAM):   end;
1220261   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220262   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220263   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1220264   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220265   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1220266   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1220267   +   end;
MPRINT(EM_DIAGRAM):   end;
1220268   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1220269   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1220270   +   end;
MPRINT(EM_DIAGRAM):   end;
1220271   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220272   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1220273   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220274   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220275   +   end;
MPRINT(EM_DIAGRAM):   end;
1220276   +end;
MPRINT(EM_DIAGRAM):   end;
1220277   +
1220278   +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
1220279   +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
1220280   +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
1220281   +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1220282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220284   +end;
MPRINT(EM_DIAGRAM):   end;
1220285   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220286   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1220287   +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
1220288   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220289   +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
1220290   +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
1220291   +   end;
MPRINT(EM_DIAGRAM):   end;
1220292   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1220293   +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
1220294   +   end;
MPRINT(EM_DIAGRAM):   end;
1220295   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220296   +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
1220297   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220298   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220299   +   end;
MPRINT(EM_DIAGRAM):   end;
1220300   +end;
MPRINT(EM_DIAGRAM):   end;
1220301   +
1220302   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1220303   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1220304   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1220305   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1220306   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1220307   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1220308   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1220309   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1220310   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1220311   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1220312   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1220313   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1220314   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220315   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220316   +end;
MPRINT(EM_DIAGRAM):   end;
1220317   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220318   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1220319   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1220320   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220321   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1220322   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1220323   +   end;
MPRINT(EM_DIAGRAM):   end;
1220324   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1220325   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1220326   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1220327   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1220328   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1220329   +   end;
MPRINT(EM_DIAGRAM):   end;
1220330   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1220331   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1220332   +   end;
MPRINT(EM_DIAGRAM):   end;
1220333   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1220334   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1220335   +   end;
MPRINT(EM_DIAGRAM):   end;
1220336   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1220337   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1220338   +   end;
MPRINT(EM_DIAGRAM):   end;
1220339   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220340   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1220341   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1220342   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1220343   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1220344   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220345   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220346   +   end;
MPRINT(EM_DIAGRAM):   end;
1220347   +end;
MPRINT(EM_DIAGRAM):   end;
1220348   +
1220349   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1220350   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1220351   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1220352   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1220353   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1220354   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1220355   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1220356   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1220357   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1220358   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1220359   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1220360   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1220361   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1220362   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1220363   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220364   +end;
MPRINT(EM_DIAGRAM):   end;
1220365   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220366   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1220367   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1220368   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220369   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1220370   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1220371   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1220372   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1220373   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1220374   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220375   +         end;
MPRINT(EM_DIAGRAM):   end;
1220376   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1220377   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1220378   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1220379   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220380   +            end;
MPRINT(EM_DIAGRAM):   end;
1220381   +         end;
MPRINT(EM_DIAGRAM):   end;
1220382   +      end;
MPRINT(EM_DIAGRAM):   end;
1220383   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1220384   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1220385   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1220386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220387   +         end;
MPRINT(EM_DIAGRAM):   end;
1220388   +      end;
MPRINT(EM_DIAGRAM):   end;
1220389   +   end;
MPRINT(EM_DIAGRAM):   end;
1220390   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220391   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1220392   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1220393   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220394   +      end;
MPRINT(EM_DIAGRAM):   end;
1220395   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1220396   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1220397   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1220398   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1220399   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1220400   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1220401   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1220402   +         end;
MPRINT(EM_DIAGRAM):   end;
1220403   +      end;
MPRINT(EM_DIAGRAM):   end;
1220404   +   end;
MPRINT(EM_DIAGRAM):   end;
1220405   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1220406   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1220407   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1220408   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1220409   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1220410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1220411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220412   +   end;
MPRINT(EM_DIAGRAM):   end;
1220413   +end;
MPRINT(EM_DIAGRAM):   end;
1220414   +
1220415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220416   +*** Checking missing input Interval
1220417   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1220418   +
1220419   +IF NMISS(
1220420   +   AcceptedCmpTotal ,
1220421   +   Age ,
1220422   +   Frq ,
1220423   +   Income ,
1220424   +   Kidhome ,
1220425   +   MntFishProducts ,
1220426   +   MntFruits ,
1220427   +   MntGoldProds ,
1220428   +   MntSweetProducts ,
1220429   +   MonthsAsCustomer ,
1220430   +   NumDealsPurchases ,
1220431   +   NumWebVisitsMonth ,
1220432   +   RFMstat ,
1220433   +   RMntFrq ,
1220434   +   Recency ,
1220435   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
1220436   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1220437   +
1220438   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1220439   +END;
MPRINT(EM_DIAGRAM):   END;
1220440   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220441   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1220442   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220443   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220444   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1220445   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1220446   +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1220447   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1220448   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1220449   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1220450   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1220451   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1220452   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1220453   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1220454   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1220455   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1220456   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1220457   +   S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1220458   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1220459   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1220460   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1220461   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1220462   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1220463   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1220464   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1220465   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1220466   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1220467   +END;
MPRINT(EM_DIAGRAM):   END;
1220468   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220469   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1220470   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1220471   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
1220472   +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
1220473   +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
1220474   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1220475   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1220476   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1220477   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1220478   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1220479   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1220480   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1220481   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1220482   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1220483   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1220484   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1220485   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1220486   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1220487   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1220488   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1220489   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1220490   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1220491   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1220492   +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
1220493   +   ELSE S_MonthsAsCustomer  =    -4.93133031507839 +     0.05900664899872 *
1220494   +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.93133031507839 + 0.05900664899872 * 
MonthsAsCustomer ;
1220495   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1220496   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1220497   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1220498   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1220499   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1220500   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1220501   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1220502   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1220503   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1220504   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1220505   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1220506   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1220507   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1220508   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1220509   +END;
MPRINT(EM_DIAGRAM):   END;
1220510   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220511   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1220512   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220514   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1220515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220517   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1220518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220519   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220520   +   H11  =    -0.07939278387837 * S_AcceptedCmpTotal  +    -0.02790902024984 *
1220521   +        S_Age  +     0.40100840853714 * S_Frq  +     0.04432219183455 *
1220522   +        S_Income  +    -0.30219239382398 * S_Kidhome
1220523   +          +    -0.19432749686172 * S_MntFishProducts
1220524   +          +    -0.22103205349698 * S_MntFruits  +    -0.17971639907174 *
1220525   +        S_MntGoldProds  +     0.06706063176219 * S_MntSweetProducts
1220526   +          +    -0.06461990802389 * S_MonthsAsCustomer
1220527   +          +     -0.3783005817403 * S_NumDealsPurchases
1220528   +          +    -0.16339485784748 * S_NumWebVisitsMonth
1220529   +          +    -0.14712191436986 * S_RFMstat  +    -0.19045100842469 *
1220530   +        S_RMntFrq  +     0.18339671113489 * S_Recency
1220531   +          +     -0.0926217862823 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.07939278387837 * S_AcceptedCmpTotal + -0.02790902024984 * S_Age 
+ 0.40100840853714 * S_Frq + 0.04432219183455 * S_Income + -0.30219239382398 * S_Kidhome + 
-0.19432749686172 * S_MntFishProducts + -0.22103205349698 * S_MntFruits + -0.17971639907174 * 
S_MntGoldProds + 0.06706063176219 * S_MntSweetProducts + -0.06461990802389 * 
S_MonthsAsCustomer + -0.3783005817403 * S_NumDealsPurchases + -0.16339485784748 * 
S_NumWebVisitsMonth + -0.14712191436986 * S_RFMstat + -0.19045100842469 * S_RMntFrq + 
0.18339671113489 * S_Recency + -0.0926217862823 * S_Teenhome ;
1220532   +   H12  =    -1.08824651645594 * S_AcceptedCmpTotal  +     0.17686645093121 *
1220533   +        S_Age  +     1.35317207989883 * S_Frq  +     0.88138422987418 *
1220534   +        S_Income  +    -0.84990904276539 * S_Kidhome
1220535   +          +    -0.10200829265034 * S_MntFishProducts
1220536   +          +    -0.31753011084752 * S_MntFruits  +    -0.18249877124557 *
1220537   +        S_MntGoldProds  +     0.06150349061089 * S_MntSweetProducts
1220538   +          +      0.3716090242476 * S_MonthsAsCustomer
1220539   +          +    -0.14174807996351 * S_NumDealsPurchases
1220540   +          +    -0.42393482037755 * S_NumWebVisitsMonth
1220541   +          +     -0.2268215763235 * S_RFMstat  +     0.30128162296924 *
1220542   +        S_RMntFrq  +    -0.15766803203419 * S_Recency
1220543   +          +      -0.876771580659 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.08824651645594 * S_AcceptedCmpTotal + 0.17686645093121 * S_Age 
+ 1.35317207989883 * S_Frq + 0.88138422987418 * S_Income + -0.84990904276539 * S_Kidhome + 
-0.10200829265034 * S_MntFishProducts + -0.31753011084752 * S_MntFruits + -0.18249877124557 * 
S_MntGoldProds + 0.06150349061089 * S_MntSweetProducts + 0.3716090242476 * S_MonthsAsCustomer 
+ -0.14174807996351 * S_NumDealsPurchases + -0.42393482037755 * S_NumWebVisitsMonth + 
-0.2268215763235 * S_RFMstat + 0.30128162296924 * S_RMntFrq + -0.15766803203419 * S_Recency + 
-0.876771580659 * S_Teenhome ;
1220544   +   H13  =    -0.19745247224429 * S_AcceptedCmpTotal  +     0.12296649801431 *
1220545   +        S_Age  +     0.30380054301284 * S_Frq  +    -0.20561851411928 *
1220546   +        S_Income  +     0.26862281584112 * S_Kidhome
1220547   +          +     0.04085557903506 * S_MntFishProducts
1220548   +          +     0.04667626132377 * S_MntFruits  +     0.00814736574913 *
1220549   +        S_MntGoldProds  +     0.03678719281756 * S_MntSweetProducts
1220550   +          +     0.12149827716086 * S_MonthsAsCustomer
1220551   +          +    -0.07579622934099 * S_NumDealsPurchases
1220552   +          +    -0.32766887199758 * S_NumWebVisitsMonth
1220553   +          +    -0.03884372682505 * S_RFMstat  +     0.12404964867543 *
1220554   +        S_RMntFrq  +     0.41695593982518 * S_Recency
1220555   +          +     0.13451509125058 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19745247224429 * S_AcceptedCmpTotal + 0.12296649801431 * S_Age 
+ 0.30380054301284 * S_Frq + -0.20561851411928 * S_Income + 0.26862281584112 * S_Kidhome + 
0.04085557903506 * S_MntFishProducts + 0.04667626132377 * S_MntFruits + 0.00814736574913 * 
S_MntGoldProds + 0.03678719281756 * S_MntSweetProducts + 0.12149827716086 * S_MonthsAsCustomer 
+ -0.07579622934099 * S_NumDealsPurchases + -0.32766887199758 * S_NumWebVisitsMonth + 
-0.03884372682505 * S_RFMstat + 0.12404964867543 * S_RMntFrq + 0.41695593982518 * S_Recency + 
0.13451509125058 * S_Teenhome ;
1220556   +   H11  = H11  +     1.35675382808415 * AcceptedCmp10
1220557   +          +    -0.11002433103629 * AcceptedCmp20  +     0.16502607393478 *
1220558   +        AcceptedCmp30  +    -0.05600642331364 * AcceptedCmp40
1220559   +          +     0.26058548958497 * AcceptedCmp50  +     0.13475990783818 *
1220560   +        Complain0  +     0.15296527049289 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.35675382808415 * AcceptedCmp10 + -0.11002433103629 * 
AcceptedCmp20 + 0.16502607393478 * AcceptedCmp30 + -0.05600642331364 * AcceptedCmp40 + 
0.26058548958497 * AcceptedCmp50 + 0.13475990783818 * Complain0 + 0.15296527049289 * 
HigherEducationBinary0 ;
1220561   +   H12  = H12  +     0.42439916481327 * AcceptedCmp10
1220562   +          +    -0.47117316697286 * AcceptedCmp20  +    -1.01563221321538 *
1220563   +        AcceptedCmp30  +    -1.22683651578342 * AcceptedCmp40
1220564   +          +    -0.01409161983154 * AcceptedCmp50  +    -0.17319143351034 *
1220565   +        Complain0  +     0.28531428296946 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.42439916481327 * AcceptedCmp10 + -0.47117316697286 * 
AcceptedCmp20 + -1.01563221321538 * AcceptedCmp30 + -1.22683651578342 * AcceptedCmp40 + 
-0.01409161983154 * AcceptedCmp50 + -0.17319143351034 * Complain0 + 0.28531428296946 * 
HigherEducationBinary0 ;
1220566   +   H13  = H13  +    -0.11940443900972 * AcceptedCmp10
1220567   +          +      0.2224729234506 * AcceptedCmp20  +     0.03960779259064 *
1220568   +        AcceptedCmp30  +    -0.04759970138444 * AcceptedCmp40
1220569   +          +     0.16012787279007 * AcceptedCmp50  +    -0.13128086861277 *
1220570   +        Complain0  +    -0.02106084686016 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11940443900972 * AcceptedCmp10 + 0.2224729234506 * 
AcceptedCmp20 + 0.03960779259064 * AcceptedCmp30 + -0.04759970138444 * AcceptedCmp40 + 
0.16012787279007 * AcceptedCmp50 + -0.13128086861277 * Complain0 + -0.02106084686016 * 
HigherEducationBinary0 ;
1220571   +   H11  = H11  +     0.15724732214889 * Education2n_Cycle
1220572   +          +    -0.28073637806204 * EducationBasic  +     0.02543245889885 *
1220573   +        EducationGraduation  +    -0.21977763409467 * EducationMaster
1220574   +          +     0.18154308480365 * Marital_StatusDivorced
1220575   +          +    -0.11784929451382 * Marital_StatusMarried
1220576   +          +    -0.03444604215162 * Marital_StatusSingle
1220577   +          +    -0.09935331889933 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.15724732214889 * Education2n_Cycle + -0.28073637806204 * 
EducationBasic + 0.02543245889885 * EducationGraduation + -0.21977763409467 * EducationMaster 
+ 0.18154308480365 * Marital_StatusDivorced + -0.11784929451382 * Marital_StatusMarried + 
-0.03444604215162 * Marital_StatusSingle + -0.09935331889933 * Marital_StatusTogether ;
1220578   +   H12  = H12  +    -0.09625341975755 * Education2n_Cycle
1220579   +          +     0.22223800760549 * EducationBasic  +     0.08854547546091 *
1220580   +        EducationGraduation  +    -0.24475078378526 * EducationMaster
1220581   +          +      -0.287562557272 * Marital_StatusDivorced
1220582   +          +    -0.76767006991581 * Marital_StatusMarried
1220583   +          +     0.77400843024053 * Marital_StatusSingle
1220584   +          +    -0.82922593841016 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.09625341975755 * Education2n_Cycle + 0.22223800760549 * 
EducationBasic + 0.08854547546091 * EducationGraduation + -0.24475078378526 * EducationMaster 
+ -0.287562557272 * Marital_StatusDivorced + -0.76767006991581 * Marital_StatusMarried + 
0.77400843024053 * Marital_StatusSingle + -0.82922593841016 * Marital_StatusTogether ;
1220585   +   H13  = H13  +    -0.26037905844091 * Education2n_Cycle
1220586   +          +     0.28758815759567 * EducationBasic  +    -0.08361705669925 *
1220587   +        EducationGraduation  +     0.21183311472173 * EducationMaster
1220588   +          +    -0.34952991031177 * Marital_StatusDivorced
1220589   +          +     0.12643424122152 * Marital_StatusMarried
1220590   +          +     0.01053756602964 * Marital_StatusSingle
1220591   +          +     0.09967720854979 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26037905844091 * Education2n_Cycle + 0.28758815759567 * 
EducationBasic + -0.08361705669925 * EducationGraduation + 0.21183311472173 * EducationMaster 
+ -0.34952991031177 * Marital_StatusDivorced + 0.12643424122152 * Marital_StatusMarried + 
0.01053756602964 * Marital_StatusSingle + 0.09967720854979 * Marital_StatusTogether ;
1220592   +   H11  =    -1.18043244750249 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.18043244750249 + H11 ;
1220593   +   H12  =    -0.93677267255394 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.93677267255394 + H12 ;
1220594   +   H13  =    -0.12554919906064 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12554919906064 + H13 ;
1220595   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1220596   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1220597   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1220598   +END;
MPRINT(EM_DIAGRAM):   END;
1220599   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220600   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1220601   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1220602   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1220603   +END;
MPRINT(EM_DIAGRAM):   END;
1220604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220605   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1220606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220607   +
1220608   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1220609   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1220610   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1220611   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1220612   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1220613   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1220614   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1220615   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1220616   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1220617   +end;
MPRINT(EM_DIAGRAM):   end;
1220618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1220619   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1220620   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1220621   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1220622   +   end;
MPRINT(EM_DIAGRAM):   end;
1220623   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1220624   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1220625   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1220626   +   end;
MPRINT(EM_DIAGRAM):   end;
1220627   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1220628   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1220629   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1220630   +   end;
MPRINT(EM_DIAGRAM):   end;
1220631   +end;
MPRINT(EM_DIAGRAM):   end;
1220632   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1220633   +   P_DepVar1  =    -5.01943942685766 * H11  +      5.1452509354081 * H12
1220634   +          +     -6.1441433712978 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.01943942685766 * H11 + 5.1452509354081 * H12 + 
-6.1441433712978 * H13 ;
1220635   +   P_DepVar1  =    -0.23070454336851 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.23070454336851 + P_DepVar1 ;
1220636   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1220637   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1220638   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1220639   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1220640   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1220641   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1220642   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1220643   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1220644   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1220645   +END;
MPRINT(EM_DIAGRAM):   END;
1220646   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1220647   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1220648   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1220649   +END;
MPRINT(EM_DIAGRAM):   END;
1220650   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1220651   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1220652   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1220653   +END;
MPRINT(EM_DIAGRAM):   END;
1220654   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1220655   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1220656   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1220657   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1220658   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1220659   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1220660   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1220661   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220662   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1220663   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1220664   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1220665   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1220666   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1220667   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1220668   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1220669   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1220670   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1220671   +END;
MPRINT(EM_DIAGRAM):   END;
1220672   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220673   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1220674   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1220675   +drop
1220676   +H11
1220677   +H12
1220678   +H13
1220679   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1220680   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1220681    run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1220682    quit;
1220683    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1220684    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1220685    * Neural38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural38: Computing metadata for TRAIN data;
1220686    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural38_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural38_TRAIN out=WORK.M2Z7MIPX noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z7MIPX;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z7MIPX(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2Z7MIPX;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2Z7MIPX;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3T2W3HC NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1M_AGVT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   set WORK.M3T2W3HC;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1220998    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1220999    set EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO;
1221000    where DATA='Neural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1221001    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL38_EMINFO.
      WHERE (DATA='Neural38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221002    data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural38_EMINFO;
1221003    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1221004    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1221005    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1221009    run;
1221010    data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_EMINFO;
1221011    set EMWS8.Neural38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO WORK.MODELTEMP_INFO;
1221012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221013    proc sort data = EMWS8.Neural38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural38_EMINFO NOTHREADS;
1221014    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1221015    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221016    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1221017    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1221018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1221019    proc sort data = EMWS8.Neural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1221020    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1221021    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221022    data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_EMINFO;
1221023    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1221024    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1221025    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1221026    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1221027    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1221028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1221029    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.NEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL38_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
