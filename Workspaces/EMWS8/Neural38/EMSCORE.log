MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "20.06 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                20.06 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O38WVU4K 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O38WVU4K new;
MPRINT(EM_DIAGRAM):   run;
875104     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
875105     set EMWS8.Neural38_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_OUTKEY;
875106     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
875107     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.NEURAL38_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

875108     filename emflow
875108   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
875109     *------------------------------------------------------------*;
875110     * Neural38: Scoring DATA data;
875111     *------------------------------------------------------------*;
875112     data EMWS8.Neural38_TRAIN
875113     / view=EMWS8.Neural38_TRAIN
875114     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_TRAIN / view=EMWS8.Neural38_TRAIN ;
875115     set EMWS8.Meta3_TRAIN
875116     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
875117     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas.
875118    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
875119    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
875120    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
875121    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
875122    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
875123    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
875124    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
875125    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
875126    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
875127    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
875128    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
875129    +LENGTH _WARN_ $4
875130    +      F_DepVar  $ 12
875131    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
875132    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
875133    +
875134    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
875135    +
875136    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
875137    +
875138    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
875139    +
875140    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
875141    +
875142    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
875143    +
875144    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
875145    +
875146    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
875147    +
875148    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
875149    +
875150    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
875151    +
875152    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
875153    +
875154    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
875155    +
875156    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
875157    +
875158    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
875159    +
875160    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
875161    +
875162    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
875163    +
875164    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
875165    +
875166    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
875167    +
875168    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
875169    +
875170    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
875171    +
875172    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
875173    +
875174    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
875175    +
875176    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
875177    +
875178    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
875179    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
875180    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
875181    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
875182    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
875183    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
875184    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
875185    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
875186    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
875187    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
875188    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
875189    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
875190    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
875191    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875192    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875193    +end;
MPRINT(EM_DIAGRAM):   end;
875194    +else do;
MPRINT(EM_DIAGRAM):   else do;
875195    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
875196    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
875197    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875198    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
875199    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
875200    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
875201    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
875202    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
875203    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875204    +         end;
MPRINT(EM_DIAGRAM):   end;
875205    +         else do;
MPRINT(EM_DIAGRAM):   else do;
875206    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
875207    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
875208    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875209    +            end;
MPRINT(EM_DIAGRAM):   end;
875210    +         end;
MPRINT(EM_DIAGRAM):   end;
875211    +      end;
MPRINT(EM_DIAGRAM):   end;
875212    +      else do;
MPRINT(EM_DIAGRAM):   else do;
875213    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
875214    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
875215    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875216    +         end;
MPRINT(EM_DIAGRAM):   end;
875217    +      end;
MPRINT(EM_DIAGRAM):   end;
875218    +   end;
MPRINT(EM_DIAGRAM):   end;
875219    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875220    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
875221    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
875222    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875223    +      end;
MPRINT(EM_DIAGRAM):   end;
875224    +      else do;
MPRINT(EM_DIAGRAM):   else do;
875225    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
875226    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
875227    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
875228    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
875229    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
875230    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875231    +         end;
MPRINT(EM_DIAGRAM):   end;
875232    +      end;
MPRINT(EM_DIAGRAM):   end;
875233    +   end;
MPRINT(EM_DIAGRAM):   end;
875234    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
875235    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
875236    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
875237    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
875238    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
875239    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875240    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875241    +   end;
MPRINT(EM_DIAGRAM):   end;
875242    +end;
MPRINT(EM_DIAGRAM):   end;
875243    +
875244    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875245    +*** Checking missing input Interval
875246    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
875247    +
875248    +IF NMISS(
875249    +   AcceptedCmpTotal ,
875250    +   Frq ,
875251    +   Mnt ,
875252    +   MntMeatProducts ,
875253    +   NumCatalogPurchases ,
875254    +   NumDealsPurchases ,
875255    +   NumWebVisitsMonth ,
875256    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
875257    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
875258    +
875259    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875260    +END;
MPRINT(EM_DIAGRAM):   END;
875261    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875262    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
875263    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875264    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
875265    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
875266    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
875267    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
875268    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
875269    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
875270    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
875271    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
875272    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
875273    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
875274    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
875275    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
875276    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
875277    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
875278    +END;
MPRINT(EM_DIAGRAM):   END;
875279    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
875280    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
875281    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
875282    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
875283    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
875284    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
875285    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
875286    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
875287    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
875288    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
875289    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
875290    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
875291    +   ELSE S_NumCatalogPurchases
875292    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
875293    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
875294    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
875295    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
875296    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
875297    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
875298    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
875299    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
875300    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
875301    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
875302    +END;
MPRINT(EM_DIAGRAM):   END;
875303    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875304    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
875305    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875306    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875307    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
875308    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875309    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
875310    +   H11  =     0.34791411686966 * S_AcceptedCmpTotal  +    -0.23391211252939 *
875311    +        S_Frq  +    -0.26441594137717 * S_Mnt  +     0.33219210183448 *
875312    +        S_MntMeatProducts  +     0.39293107642303 * S_NumCatalogPurchases
875313    +          +     -0.0874104055528 * S_NumDealsPurchases
875314    +          +     0.38061843402146 * S_NumWebVisitsMonth
875315    +          +    -0.53641900491501 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.34791411686966 * S_AcceptedCmpTotal + -0.23391211252939 * S_Frq 
+ -0.26441594137717 * S_Mnt + 0.33219210183448 * S_MntMeatProducts + 0.39293107642303 * 
S_NumCatalogPurchases + -0.0874104055528 * S_NumDealsPurchases + 0.38061843402146 * 
S_NumWebVisitsMonth + -0.53641900491501 * S_Recency ;
875316    +   H12  =    -0.26490916236607 * S_AcceptedCmpTotal  +     1.11436425123729 *
875317    +        S_Frq  +     0.93982153262993 * S_Mnt  +    -0.78673803421188 *
875318    +        S_MntMeatProducts  +    -0.62594991296386 * S_NumCatalogPurchases
875319    +          +     -0.2474448411116 * S_NumDealsPurchases
875320    +          +    -0.48008871645153 * S_NumWebVisitsMonth
875321    +          +     0.51881465804068 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.26490916236607 * S_AcceptedCmpTotal + 1.11436425123729 * S_Frq 
+ 0.93982153262993 * S_Mnt + -0.78673803421188 * S_MntMeatProducts + -0.62594991296386 * 
S_NumCatalogPurchases + -0.2474448411116 * S_NumDealsPurchases + -0.48008871645153 * 
S_NumWebVisitsMonth + 0.51881465804068 * S_Recency ;
875322    +   H13  =    -0.13428887267972 * S_AcceptedCmpTotal  +    -0.06788537051133 *
875323    +        S_Frq  +      0.7228747455579 * S_Mnt  +     0.82582132919911 *
875324    +        S_MntMeatProducts  +    -0.05452439443333 * S_NumCatalogPurchases
875325    +          +     0.07275875508436 * S_NumDealsPurchases
875326    +          +    -0.27096321525823 * S_NumWebVisitsMonth
875327    +          +     0.30369609662437 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.13428887267972 * S_AcceptedCmpTotal + -0.06788537051133 * S_Frq 
+ 0.7228747455579 * S_Mnt + 0.82582132919911 * S_MntMeatProducts + -0.05452439443333 * 
S_NumCatalogPurchases + 0.07275875508436 * S_NumDealsPurchases + -0.27096321525823 * 
S_NumWebVisitsMonth + 0.30369609662437 * S_Recency ;
875328    +   H11  = H11  +     0.09962594950417 * Marital_StatusDivorced
875329    +          +    -0.39811088642001 * Marital_StatusMarried
875330    +          +     0.34442876937307 * Marital_StatusSingle
875331    +          +    -0.37723471140153 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.09962594950417 * Marital_StatusDivorced + 
-0.39811088642001 * Marital_StatusMarried + 0.34442876937307 * Marital_StatusSingle + 
-0.37723471140153 * Marital_StatusTogether ;
875332    +   H12  = H12  +     -0.2814135909433 * Marital_StatusDivorced
875333    +          +     0.01311453827944 * Marital_StatusMarried
875334    +          +     0.11351645979055 * Marital_StatusSingle
875335    +          +    -0.01593854210754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.2814135909433 * Marital_StatusDivorced + 0.01311453827944 
* Marital_StatusMarried + 0.11351645979055 * Marital_StatusSingle + -0.01593854210754 * 
Marital_StatusTogether ;
875336    +   H13  = H13  +    -0.20425294741237 * Marital_StatusDivorced
875337    +          +     0.17319479392905 * Marital_StatusMarried
875338    +          +    -0.06020326643773 * Marital_StatusSingle
875339    +          +     0.10944961328273 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.20425294741237 * Marital_StatusDivorced + 
0.17319479392905 * Marital_StatusMarried + -0.06020326643773 * Marital_StatusSingle + 
0.10944961328273 * Marital_StatusTogether ;
875340    +   H11  =    -1.12385540378981 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.12385540378981 + H11 ;
875341    +   H12  =     1.67965903278343 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.67965903278343 + H12 ;
875342    +   H13  =     2.03523504688609 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.03523504688609 + H13 ;
875343    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
875344    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
875345    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
875346    +END;
MPRINT(EM_DIAGRAM):   END;
875347    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
875348    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
875349    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
875350    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
875351    +END;
MPRINT(EM_DIAGRAM):   END;
875352    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875353    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
875354    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875355    +
875356    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
875357    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
875358    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
875359    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
875360    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
875361    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875362    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
875363    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
875364    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
875365    +end;
MPRINT(EM_DIAGRAM):   end;
875366    +else do;
MPRINT(EM_DIAGRAM):   else do;
875367    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
875368    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
875369    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
875370    +   end;
MPRINT(EM_DIAGRAM):   end;
875371    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
875372    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
875373    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
875374    +   end;
MPRINT(EM_DIAGRAM):   end;
875375    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875376    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
875377    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
875378    +   end;
MPRINT(EM_DIAGRAM):   end;
875379    +end;
MPRINT(EM_DIAGRAM):   end;
875380    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
875381    +   P_DepVar1  =      12.848427471628 * H11  +    -16.5024428440136 * H12
875382    +          +     34.6930435552053 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.848427471628 * H11 + -16.5024428440136 * H12 + 
34.6930435552053 * H13 ;
875383    +   P_DepVar1  =    -12.6192504677794 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.6192504677794 + P_DepVar1 ;
875384    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
875385    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
875386    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
875387    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
875388    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
875389    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
875390    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
875391    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
875392    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
875393    +END;
MPRINT(EM_DIAGRAM):   END;
875394    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
875395    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
875396    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
875397    +END;
MPRINT(EM_DIAGRAM):   END;
875398    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
875399    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
875400    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
875401    +END;
MPRINT(EM_DIAGRAM):   END;
875402    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
875403    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
875404    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
875405    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
875406    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
875407    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
875408    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
875409    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875410    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
875411    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875412    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
875413    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
875414    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
875415    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
875416    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
875417    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
875418    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
875419    +END;
MPRINT(EM_DIAGRAM):   END;
875420    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
875421    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
875422    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
875423    +drop
875424    +H11
875425    +H12
875426    +H13
875427    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
875428    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
875429     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
875430     quit;
875431     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
875432     filename emflow
875432   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
875433     *------------------------------------------------------------*;
875434     * Neural38: Scoring VALIDATE data;
875435     *------------------------------------------------------------*;
875436     data EMWS8.Neural38_VALIDATE
875437     / view=EMWS8.Neural38_VALIDATE
875438     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_VALIDATE / view=EMWS8.Neural38_VALIDATE ;
875439     set EMWS8.Meta3_VALIDATE
875440     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
875441     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas.
875442    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
875443    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
875444    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
875445    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
875446    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
875447    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
875448    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
875449    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
875450    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
875451    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
875452    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
875453    +LENGTH _WARN_ $4
875454    +      F_DepVar  $ 12
875455    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
875456    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
875457    +
875458    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
875459    +
875460    +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
875461    +
875462    +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
875463    +
875464    +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
875465    +
875466    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
875467    +
875468    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
875469    +
875470    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
875471    +
875472    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
875473    +
875474    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
875475    +
875476    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
875477    +
875478    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
875479    +
875480    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
875481    +
875482    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
875483    +
875484    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
875485    +
875486    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
875487    +
875488    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
875489    +
875490    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
875491    +
875492    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
875493    +
875494    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
875495    +
875496    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
875497    +
875498    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
875499    +
875500    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
875501    +
875502    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
875503    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
875504    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
875505    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
875506    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
875507    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
875508    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
875509    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
875510    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
875511    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
875512    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
875513    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
875514    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
875515    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
875516    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875517    +end;
MPRINT(EM_DIAGRAM):   end;
875518    +else do;
MPRINT(EM_DIAGRAM):   else do;
875519    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
875520    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
875521    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875522    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
875523    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
875524    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
875525    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
875526    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
875527    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875528    +         end;
MPRINT(EM_DIAGRAM):   end;
875529    +         else do;
MPRINT(EM_DIAGRAM):   else do;
875530    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
875531    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
875532    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875533    +            end;
MPRINT(EM_DIAGRAM):   end;
875534    +         end;
MPRINT(EM_DIAGRAM):   end;
875535    +      end;
MPRINT(EM_DIAGRAM):   end;
875536    +      else do;
MPRINT(EM_DIAGRAM):   else do;
875537    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
875538    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
875539    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875540    +         end;
MPRINT(EM_DIAGRAM):   end;
875541    +      end;
MPRINT(EM_DIAGRAM):   end;
875542    +   end;
MPRINT(EM_DIAGRAM):   end;
875543    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875544    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
875545    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
875546    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875547    +      end;
MPRINT(EM_DIAGRAM):   end;
875548    +      else do;
MPRINT(EM_DIAGRAM):   else do;
875549    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
875550    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
875551    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
875552    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
875553    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
875554    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
875555    +         end;
MPRINT(EM_DIAGRAM):   end;
875556    +      end;
MPRINT(EM_DIAGRAM):   end;
875557    +   end;
MPRINT(EM_DIAGRAM):   end;
875558    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
875559    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
875560    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
875561    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
875562    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
875563    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
875564    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875565    +   end;
MPRINT(EM_DIAGRAM):   end;
875566    +end;
MPRINT(EM_DIAGRAM):   end;
875567    +
875568    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875569    +*** Checking missing input Interval
875570    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
875571    +
875572    +IF NMISS(
875573    +   AcceptedCmpTotal ,
875574    +   Frq ,
875575    +   Mnt ,
875576    +   MntMeatProducts ,
875577    +   NumCatalogPurchases ,
875578    +   NumDealsPurchases ,
875579    +   NumWebVisitsMonth ,
875580    +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Mnt , MntMeatProducts , 
NumCatalogPurchases , NumDealsPurchases , NumWebVisitsMonth , Recency ) THEN DO;
875581    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
875582    +
875583    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
875584    +END;
MPRINT(EM_DIAGRAM):   END;
875585    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875586    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
875587    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875588    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
875589    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
875590    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
875591    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
875592    +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
875593    +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
875594    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
875595    +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
875596    +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
875597    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
875598    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
875599    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
875600    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
875601    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
875602    +END;
MPRINT(EM_DIAGRAM):   END;
875603    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
875604    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
875605    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
875606    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
875607    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
875608    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
875609    +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
875610    +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
875611    +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
875612    +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
875613    +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
875614    +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
875615    +   ELSE S_NumCatalogPurchases
875616    +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
875617    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
875618    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
875619    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
875620    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
875621    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
875622    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
875623    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
875624    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
875625    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
875626    +END;
MPRINT(EM_DIAGRAM):   END;
875627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875628    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
875629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875630    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875631    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
875632    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875633    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
875634    +   H11  =     0.34791411686966 * S_AcceptedCmpTotal  +    -0.23391211252939 *
875635    +        S_Frq  +    -0.26441594137717 * S_Mnt  +     0.33219210183448 *
875636    +        S_MntMeatProducts  +     0.39293107642303 * S_NumCatalogPurchases
875637    +          +     -0.0874104055528 * S_NumDealsPurchases
875638    +          +     0.38061843402146 * S_NumWebVisitsMonth
875639    +          +    -0.53641900491501 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.34791411686966 * S_AcceptedCmpTotal + -0.23391211252939 * S_Frq 
+ -0.26441594137717 * S_Mnt + 0.33219210183448 * S_MntMeatProducts + 0.39293107642303 * 
S_NumCatalogPurchases + -0.0874104055528 * S_NumDealsPurchases + 0.38061843402146 * 
S_NumWebVisitsMonth + -0.53641900491501 * S_Recency ;
875640    +   H12  =    -0.26490916236607 * S_AcceptedCmpTotal  +     1.11436425123729 *
875641    +        S_Frq  +     0.93982153262993 * S_Mnt  +    -0.78673803421188 *
875642    +        S_MntMeatProducts  +    -0.62594991296386 * S_NumCatalogPurchases
875643    +          +     -0.2474448411116 * S_NumDealsPurchases
875644    +          +    -0.48008871645153 * S_NumWebVisitsMonth
875645    +          +     0.51881465804068 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.26490916236607 * S_AcceptedCmpTotal + 1.11436425123729 * S_Frq 
+ 0.93982153262993 * S_Mnt + -0.78673803421188 * S_MntMeatProducts + -0.62594991296386 * 
S_NumCatalogPurchases + -0.2474448411116 * S_NumDealsPurchases + -0.48008871645153 * 
S_NumWebVisitsMonth + 0.51881465804068 * S_Recency ;
875646    +   H13  =    -0.13428887267972 * S_AcceptedCmpTotal  +    -0.06788537051133 *
875647    +        S_Frq  +      0.7228747455579 * S_Mnt  +     0.82582132919911 *
875648    +        S_MntMeatProducts  +    -0.05452439443333 * S_NumCatalogPurchases
875649    +          +     0.07275875508436 * S_NumDealsPurchases
875650    +          +    -0.27096321525823 * S_NumWebVisitsMonth
875651    +          +     0.30369609662437 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.13428887267972 * S_AcceptedCmpTotal + -0.06788537051133 * S_Frq 
+ 0.7228747455579 * S_Mnt + 0.82582132919911 * S_MntMeatProducts + -0.05452439443333 * 
S_NumCatalogPurchases + 0.07275875508436 * S_NumDealsPurchases + -0.27096321525823 * 
S_NumWebVisitsMonth + 0.30369609662437 * S_Recency ;
875652    +   H11  = H11  +     0.09962594950417 * Marital_StatusDivorced
875653    +          +    -0.39811088642001 * Marital_StatusMarried
875654    +          +     0.34442876937307 * Marital_StatusSingle
875655    +          +    -0.37723471140153 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.09962594950417 * Marital_StatusDivorced + 
-0.39811088642001 * Marital_StatusMarried + 0.34442876937307 * Marital_StatusSingle + 
-0.37723471140153 * Marital_StatusTogether ;
875656    +   H12  = H12  +     -0.2814135909433 * Marital_StatusDivorced
875657    +          +     0.01311453827944 * Marital_StatusMarried
875658    +          +     0.11351645979055 * Marital_StatusSingle
875659    +          +    -0.01593854210754 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.2814135909433 * Marital_StatusDivorced + 0.01311453827944 
* Marital_StatusMarried + 0.11351645979055 * Marital_StatusSingle + -0.01593854210754 * 
Marital_StatusTogether ;
875660    +   H13  = H13  +    -0.20425294741237 * Marital_StatusDivorced
875661    +          +     0.17319479392905 * Marital_StatusMarried
875662    +          +    -0.06020326643773 * Marital_StatusSingle
875663    +          +     0.10944961328273 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.20425294741237 * Marital_StatusDivorced + 
0.17319479392905 * Marital_StatusMarried + -0.06020326643773 * Marital_StatusSingle + 
0.10944961328273 * Marital_StatusTogether ;
875664    +   H11  =    -1.12385540378981 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.12385540378981 + H11 ;
875665    +   H12  =     1.67965903278343 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.67965903278343 + H12 ;
875666    +   H13  =     2.03523504688609 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.03523504688609 + H13 ;
875667    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
875668    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
875669    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
875670    +END;
MPRINT(EM_DIAGRAM):   END;
875671    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
875672    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
875673    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
875674    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
875675    +END;
MPRINT(EM_DIAGRAM):   END;
875676    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875677    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
875678    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875679    +
875680    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
875681    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
875682    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
875683    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
875684    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
875685    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
875686    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
875687    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
875688    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
875689    +end;
MPRINT(EM_DIAGRAM):   end;
875690    +else do;
MPRINT(EM_DIAGRAM):   else do;
875691    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
875692    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
875693    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
875694    +   end;
MPRINT(EM_DIAGRAM):   end;
875695    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
875696    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
875697    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
875698    +   end;
MPRINT(EM_DIAGRAM):   end;
875699    +   else do;
MPRINT(EM_DIAGRAM):   else do;
875700    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
875701    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
875702    +   end;
MPRINT(EM_DIAGRAM):   end;
875703    +end;
MPRINT(EM_DIAGRAM):   end;
875704    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
875705    +   P_DepVar1  =      12.848427471628 * H11  +    -16.5024428440136 * H12
875706    +          +     34.6930435552053 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 12.848427471628 * H11 + -16.5024428440136 * H12 + 
34.6930435552053 * H13 ;
875707    +   P_DepVar1  =    -12.6192504677794 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -12.6192504677794 + P_DepVar1 ;
875708    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
875709    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
875710    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
875711    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
875712    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
875713    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
875714    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
875715    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
875716    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
875717    +END;
MPRINT(EM_DIAGRAM):   END;
875718    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
875719    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
875720    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
875721    +END;
MPRINT(EM_DIAGRAM):   END;
875722    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
875723    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
875724    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
875725    +END;
MPRINT(EM_DIAGRAM):   END;
875726    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
875727    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
875728    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
875729    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
875730    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
875731    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
875732    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
875733    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875734    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
875735    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
875736    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
875737    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
875738    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
875739    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
875740    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
875741    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
875742    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
875743    +END;
MPRINT(EM_DIAGRAM):   END;
875744    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
875745    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
875746    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
875747    +drop
875748    +H11
875749    +H12
875750    +H13
875751    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
875752    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
875753     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_DIAGRAM):   quit;
875754     quit;
875755     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
875756     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
875757     * Neural38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural38: Computing metadata for TRAIN data;
875758     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural38_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural38_TRAIN out=WORK.M0BCBGTB noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BCBGTB;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0BCBGTB(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0BCBGTB;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0BCBGTB;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3WYOQGQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3M8PGG3(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M3WYOQGQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
876070     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
876071     set EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO;
876072     where DATA='Neural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
876073     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL38_EMINFO.
      WHERE (DATA='Neural38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

876074     data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural38_EMINFO;
876075     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
876076     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
876077     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   run;
876081     run;
876082     data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_EMINFO;
876083     set EMWS8.Neural38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO WORK.MODELTEMP_INFO;
876084     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

876085     proc sort data = EMWS8.Neural38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural38_EMINFO NOTHREADS;
876086     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
876087     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

876088     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
876089     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
876090     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

876091     proc sort data = EMWS8.Neural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
876092     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
876093     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

876094     data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_EMINFO;
876095     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
876096     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
876097     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

876098     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
876099     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
876100     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
876101     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: View EMWS8.NEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL38_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
