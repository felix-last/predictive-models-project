MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.22 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                17.22 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1RE8JBW 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1RE8JBW new;
MPRINT(EM_DIAGRAM):   run;
183475     data work.outkey;
MPRINT(EM_DIAGRAM):    data work.outkey;
183476     set EMWS8.Neural38_OUTKEY;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_OUTKEY;
183477     if upcase(ROLE) = 'HIDDEN';
MPRINT(EM_DIAGRAM):   if upcase(ROLE) = 'HIDDEN';
183478     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 46 observations read from the data set EMWS8.NEURAL38_OUTKEY.
NOTE: The data set WORK.OUTKEY has 3 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

183479     filename emflow
183479   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
183480     *------------------------------------------------------------*;
183481     * Neural38: Scoring DATA data;
183482     *------------------------------------------------------------*;
183483     data EMWS8.Neural38_TRAIN
183484     / view=EMWS8.Neural38_TRAIN
183485     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_TRAIN / view=EMWS8.Neural38_TRAIN ;
183486     set EMWS8.Meta3_TRAIN
183487     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_TRAIN ;
183488     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas.
183489    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
183490    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
183491    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
183492    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
183493    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
183494    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
183495    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
183496    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
183497    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
183498    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
183499    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
183500    +LENGTH _WARN_ $4
183501    +      F_DepVar  $ 12
183502    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
183503    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
183504    +
183505    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
183506    +
183507    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
183508    +
183509    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
183510    +
183511    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
183512    +
183513    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
183514    +
183515    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
183516    +
183517    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
183518    +
183519    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
183520    +
183521    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
183522    +
183523    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
183524    +
183525    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
183526    +
183527    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
183528    +
183529    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
183530    +
183531    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
183532    +
183533    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
183534    +
183535    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
183536    +
183537    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
183538    +
183539    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
183540    +
183541    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
183542    +
183543    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
183544    +
183545    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
183546    +
183547    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
183548    +
183549    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
183550    +
183551    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
183552    +
183553    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
183554    +
183555    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
183556    +
183557    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
183558    +
183559    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
183560    +
183561    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
183562    +
183563    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
183564    +
183565    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
183566    +
183567    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
183568    +
183569    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
183570    +
183571    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
183572    +
183573    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
183574    +
183575    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
183576    +
183577    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
183578    +
183579    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
183580    +
183581    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
183582    +
183583    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
183584    +
183585    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
183586    +
183587    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
183588    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
183589    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
183590    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
183591    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183592    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183593    +end;
MPRINT(EM_DIAGRAM):   end;
183594    +else do;
MPRINT(EM_DIAGRAM):   else do;
183595    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183596    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
183597    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183598    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183599    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
183600    +   end;
MPRINT(EM_DIAGRAM):   end;
183601    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183602    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
183603    +   end;
MPRINT(EM_DIAGRAM):   end;
183604    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183605    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
183606    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183607    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183608    +   end;
MPRINT(EM_DIAGRAM):   end;
183609    +end;
MPRINT(EM_DIAGRAM):   end;
183610    +
183611    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
183612    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
183613    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
183614    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
183615    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183616    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183617    +end;
MPRINT(EM_DIAGRAM):   end;
183618    +else do;
MPRINT(EM_DIAGRAM):   else do;
183619    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183620    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
183621    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183622    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183623    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
183624    +   end;
MPRINT(EM_DIAGRAM):   end;
183625    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183626    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
183627    +   end;
MPRINT(EM_DIAGRAM):   end;
183628    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183629    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
183630    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183631    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183632    +   end;
MPRINT(EM_DIAGRAM):   end;
183633    +end;
MPRINT(EM_DIAGRAM):   end;
183634    +
183635    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
183636    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
183637    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
183638    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
183639    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183640    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183641    +end;
MPRINT(EM_DIAGRAM):   end;
183642    +else do;
MPRINT(EM_DIAGRAM):   else do;
183643    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183644    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
183645    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183646    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183647    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
183648    +   end;
MPRINT(EM_DIAGRAM):   end;
183649    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183650    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
183651    +   end;
MPRINT(EM_DIAGRAM):   end;
183652    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183653    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
183654    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183655    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183656    +   end;
MPRINT(EM_DIAGRAM):   end;
183657    +end;
MPRINT(EM_DIAGRAM):   end;
183658    +
183659    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
183660    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
183661    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
183662    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
183663    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183664    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183665    +end;
MPRINT(EM_DIAGRAM):   end;
183666    +else do;
MPRINT(EM_DIAGRAM):   else do;
183667    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183668    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
183669    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183670    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183671    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
183672    +   end;
MPRINT(EM_DIAGRAM):   end;
183673    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183674    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
183675    +   end;
MPRINT(EM_DIAGRAM):   end;
183676    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183677    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
183678    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183679    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183680    +   end;
MPRINT(EM_DIAGRAM):   end;
183681    +end;
MPRINT(EM_DIAGRAM):   end;
183682    +
183683    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
183684    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
183685    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
183686    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
183687    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183688    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183689    +end;
MPRINT(EM_DIAGRAM):   end;
183690    +else do;
MPRINT(EM_DIAGRAM):   else do;
183691    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183692    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
183693    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183694    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183695    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
183696    +   end;
MPRINT(EM_DIAGRAM):   end;
183697    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183698    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
183699    +   end;
MPRINT(EM_DIAGRAM):   end;
183700    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183701    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
183702    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183703    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183704    +   end;
MPRINT(EM_DIAGRAM):   end;
183705    +end;
MPRINT(EM_DIAGRAM):   end;
183706    +
183707    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
183708    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
183709    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
183710    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
183711    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183712    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183713    +end;
MPRINT(EM_DIAGRAM):   end;
183714    +else do;
MPRINT(EM_DIAGRAM):   else do;
183715    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183716    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
183717    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183718    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
183719    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
183720    +   end;
MPRINT(EM_DIAGRAM):   end;
183721    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
183722    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
183723    +   end;
MPRINT(EM_DIAGRAM):   end;
183724    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183725    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
183726    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183727    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183728    +   end;
MPRINT(EM_DIAGRAM):   end;
183729    +end;
MPRINT(EM_DIAGRAM):   end;
183730    +
183731    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
183732    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
183733    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
183734    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
183735    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183736    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183737    +end;
MPRINT(EM_DIAGRAM):   end;
183738    +else do;
MPRINT(EM_DIAGRAM):   else do;
183739    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
183740    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
183741    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183742    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
183743    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
183744    +   end;
MPRINT(EM_DIAGRAM):   end;
183745    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
183746    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
183747    +   end;
MPRINT(EM_DIAGRAM):   end;
183748    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183749    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
183750    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183751    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183752    +   end;
MPRINT(EM_DIAGRAM):   end;
183753    +end;
MPRINT(EM_DIAGRAM):   end;
183754    +
183755    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
183756    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
183757    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
183758    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
183759    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
183760    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
183761    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
183762    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
183763    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
183764    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
183765    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
183766    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
183767    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183768    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183769    +end;
MPRINT(EM_DIAGRAM):   end;
183770    +else do;
MPRINT(EM_DIAGRAM):   else do;
183771    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
183772    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
183773    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183774    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
183775    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
183776    +   end;
MPRINT(EM_DIAGRAM):   end;
183777    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
183778    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
183779    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
183780    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
183781    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
183782    +   end;
MPRINT(EM_DIAGRAM):   end;
183783    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
183784    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
183785    +   end;
MPRINT(EM_DIAGRAM):   end;
183786    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
183787    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
183788    +   end;
MPRINT(EM_DIAGRAM):   end;
183789    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
183790    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
183791    +   end;
MPRINT(EM_DIAGRAM):   end;
183792    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183793    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
183794    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
183795    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
183796    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
183797    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183798    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183799    +   end;
MPRINT(EM_DIAGRAM):   end;
183800    +end;
MPRINT(EM_DIAGRAM):   end;
183801    +
183802    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
183803    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
183804    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
183805    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
183806    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
183807    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
183808    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
183809    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
183810    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
183811    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
183812    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
183813    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
183814    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
183815    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
183816    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183817    +end;
MPRINT(EM_DIAGRAM):   end;
183818    +else do;
MPRINT(EM_DIAGRAM):   else do;
183819    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
183820    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
183821    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
183822    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
183823    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
183824    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
183825    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
183826    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
183827    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183828    +         end;
MPRINT(EM_DIAGRAM):   end;
183829    +         else do;
MPRINT(EM_DIAGRAM):   else do;
183830    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
183831    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
183832    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183833    +            end;
MPRINT(EM_DIAGRAM):   end;
183834    +         end;
MPRINT(EM_DIAGRAM):   end;
183835    +      end;
MPRINT(EM_DIAGRAM):   end;
183836    +      else do;
MPRINT(EM_DIAGRAM):   else do;
183837    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
183838    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
183839    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183840    +         end;
MPRINT(EM_DIAGRAM):   end;
183841    +      end;
MPRINT(EM_DIAGRAM):   end;
183842    +   end;
MPRINT(EM_DIAGRAM):   end;
183843    +   else do;
MPRINT(EM_DIAGRAM):   else do;
183844    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
183845    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
183846    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183847    +      end;
MPRINT(EM_DIAGRAM):   end;
183848    +      else do;
MPRINT(EM_DIAGRAM):   else do;
183849    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
183850    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
183851    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
183852    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
183853    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
183854    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
183855    +         end;
MPRINT(EM_DIAGRAM):   end;
183856    +      end;
MPRINT(EM_DIAGRAM):   end;
183857    +   end;
MPRINT(EM_DIAGRAM):   end;
183858    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
183859    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
183860    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
183861    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
183862    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
183863    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
183864    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183865    +   end;
MPRINT(EM_DIAGRAM):   end;
183866    +end;
MPRINT(EM_DIAGRAM):   end;
183867    +
183868    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183869    +*** Checking missing input Interval
183870    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
183871    +
183872    +IF NMISS(
183873    +   AcceptedCmpTotal ,
183874    +   Age ,
183875    +   Frq ,
183876    +   Income ,
183877    +   Kidhome ,
183878    +   MntFishProducts ,
183879    +   MntFruits ,
183880    +   MntGoldProds ,
183881    +   MntSweetProducts ,
183882    +   MonthsAsCustomer ,
183883    +   NumDealsPurchases ,
183884    +   NumWebVisitsMonth ,
183885    +   RFMstat ,
183886    +   RMntFrq ,
183887    +   Recency ,
183888    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
183889    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
183890    +
183891    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
183892    +END;
MPRINT(EM_DIAGRAM):   END;
183893    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183894    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
183895    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183896    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
183897    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
183898    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
183899    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
183900    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
183901    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
183902    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
183903    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
183904    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
183905    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
183906    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
183907    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
183908    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
183909    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
183910    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
183911    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
183912    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
183913    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
183914    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
183915    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
183916    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
183917    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
183918    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
183919    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
183920    +END;
MPRINT(EM_DIAGRAM):   END;
183921    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
183922    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
183923    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
183924    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
183925    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
183926    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
183927    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
183928    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
183929    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
183930    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
183931    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
183932    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
183933    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
183934    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
183935    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
183936    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
183937    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
183938    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
183939    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
183940    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
183941    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
183942    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
183943    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
183944    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
183945    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
183946    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
183947    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
183948    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
183949    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
183950    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
183951    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
183952    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
183953    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
183954    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
183955    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
183956    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
183957    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
183958    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
183959    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
183960    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
183961    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
183962    +END;
MPRINT(EM_DIAGRAM):   END;
183963    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183964    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
183965    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183966    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183967    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
183968    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183969    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183970    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
183971    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
183972    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
183973    +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
183974    +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
183975    +        S_Income  +    -0.29829037747286 * S_Kidhome
183976    +          +    -0.18720823453547 * S_MntFishProducts
183977    +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
183978    +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
183979    +          +    -0.06646294977493 * S_MonthsAsCustomer
183980    +          +    -0.37026551859537 * S_NumDealsPurchases
183981    +          +    -0.14222086870703 * S_NumWebVisitsMonth
183982    +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
183983    +        S_RMntFrq  +     0.16089693413185 * S_Recency
183984    +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
183985    +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
183986    +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
183987    +        S_Income  +    -0.83201267605135 * S_Kidhome
183988    +          +    -0.09483355610222 * S_MntFishProducts
183989    +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
183990    +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
183991    +          +     0.36008195182034 * S_MonthsAsCustomer
183992    +          +    -0.13663022832818 * S_NumDealsPurchases
183993    +          +    -0.43055337001488 * S_NumWebVisitsMonth
183994    +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
183995    +        S_RMntFrq  +    -0.13626348763752 * S_Recency
183996    +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
183997    +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
183998    +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
183999    +        S_Income  +     0.25780281448124 * S_Kidhome
184000    +          +     0.04440164182166 * S_MntFishProducts
184001    +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
184002    +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
184003    +          +     0.11601256317603 * S_MonthsAsCustomer
184004    +          +    -0.06382091961731 * S_NumDealsPurchases
184005    +          +    -0.31707488359351 * S_NumWebVisitsMonth
184006    +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
184007    +        S_RMntFrq  +     0.39922359779347 * S_Recency
184008    +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
184009    +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
184010    +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
184011    +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
184012    +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
184013    +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
184014    +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
184015    +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
184016    +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
184017    +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
184018    +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
184019    +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
184020    +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
184021    +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
184022    +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
184023    +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
184024    +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
184025    +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
184026    +        EducationGraduation  +    -0.22350316846433 * EducationMaster
184027    +          +     0.18754186259114 * Marital_StatusDivorced
184028    +          +    -0.11988223819284 * Marital_StatusMarried
184029    +          +    -0.02283707816223 * Marital_StatusSingle
184030    +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
184031    +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
184032    +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
184033    +        EducationGraduation  +    -0.24880728981933 * EducationMaster
184034    +          +    -0.28983318463941 * Marital_StatusDivorced
184035    +          +    -0.74851149560881 * Marital_StatusMarried
184036    +          +      0.7618336919202 * Marital_StatusSingle
184037    +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
184038    +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
184039    +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
184040    +        EducationGraduation  +     0.20925521527006 * EducationMaster
184041    +          +    -0.33639004627791 * Marital_StatusDivorced
184042    +          +     0.12327415586833 * Marital_StatusMarried
184043    +          +      0.0060971946845 * Marital_StatusSingle
184044    +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
184045    +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
184046    +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
184047    +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
184048    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
184049    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
184050    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
184051    +END;
MPRINT(EM_DIAGRAM):   END;
184052    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184053    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
184054    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
184055    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
184056    +END;
MPRINT(EM_DIAGRAM):   END;
184057    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184058    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
184059    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184060    +
184061    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
184062    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
184063    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
184064    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
184065    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
184066    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184067    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
184068    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
184069    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
184070    +end;
MPRINT(EM_DIAGRAM):   end;
184071    +else do;
MPRINT(EM_DIAGRAM):   else do;
184072    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
184073    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
184074    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
184075    +   end;
MPRINT(EM_DIAGRAM):   end;
184076    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
184077    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
184078    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
184079    +   end;
MPRINT(EM_DIAGRAM):   end;
184080    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184081    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
184082    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
184083    +   end;
MPRINT(EM_DIAGRAM):   end;
184084    +end;
MPRINT(EM_DIAGRAM):   end;
184085    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184086    +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
184087    +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
184088    +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
184089    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
184090    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
184091    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
184092    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
184093    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
184094    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
184095    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
184096    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
184097    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
184098    +END;
MPRINT(EM_DIAGRAM):   END;
184099    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184100    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
184101    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
184102    +END;
MPRINT(EM_DIAGRAM):   END;
184103    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
184104    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
184105    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
184106    +END;
MPRINT(EM_DIAGRAM):   END;
184107    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
184108    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
184109    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
184110    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
184111    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
184112    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
184113    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
184114    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184115    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
184116    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184117    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
184118    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
184119    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
184120    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
184121    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
184122    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
184123    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
184124    +END;
MPRINT(EM_DIAGRAM):   END;
184125    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
184126    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
184127    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
184128    +drop
184129    +H11
184130    +H12
184131    +H13
184132    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
184133    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
184134     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL38_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
184135     quit;
184136     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
184137     filename emflow
184137   ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
184138     *------------------------------------------------------------*;
184139     * Neural38: Scoring VALIDATE data;
184140     *------------------------------------------------------------*;
184141     data EMWS8.Neural38_VALIDATE
184142     / view=EMWS8.Neural38_VALIDATE
184143     ;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_VALIDATE / view=EMWS8.Neural38_VALIDATE ;
184144     set EMWS8.Meta3_VALIDATE
184145     ;
MPRINT(EM_DIAGRAM):   set EMWS8.Meta3_VALIDATE ;
184146     %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural38\EMFLOWSCORE.sas.
184147    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
184148    +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
184149    +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
184150    +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
184151    + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
184152    + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
184153    + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
184154    + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
184155    + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
184156    + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
184157    + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
184158    +LENGTH _WARN_ $4
184159    +      F_DepVar  $ 12
184160    +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
184161    +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
184162    +
184163    +      label S_Age = 'Standard: Age' ;
MPRINT(EM_DIAGRAM):   label S_Age = 'Standard: Age' ;
184164    +
184165    +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
184166    +
184167    +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
184168    +
184169    +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
184170    +
184171    +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
184172    +
184173    +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
184174    +
184175    +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
184176    +
184177    +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
184178    +
184179    +      label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
MPRINT(EM_DIAGRAM):   label S_MonthsAsCustomer = 'Standard: MonthsAsCustomer' ;
184180    +
184181    +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
184182    +
184183    +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
184184    +
184185    +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
184186    +
184187    +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
184188    +
184189    +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
184190    +
184191    +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
184192    +
184193    +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
184194    +
184195    +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
184196    +
184197    +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
184198    +
184199    +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
184200    +
184201    +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
184202    +
184203    +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
184204    +
184205    +      label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
MPRINT(EM_DIAGRAM):   label HigherEducationBinary0 = 'Dummy: HigherEducationBinary=0' ;
184206    +
184207    +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
184208    +
184209    +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
184210    +
184211    +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
184212    +
184213    +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
184214    +
184215    +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
184216    +
184217    +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
184218    +
184219    +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
184220    +
184221    +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
184222    +
184223    +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
184224    +
184225    +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
184226    +
184227    +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
184228    +
184229    +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
184230    +
184231    +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
184232    +
184233    +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
184234    +
184235    +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
184236    +
184237    +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
184238    +
184239    +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
184240    +
184241    +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
184242    +
184243    +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
184244    +
184245    +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
184246    +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
184247    +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
184248    +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
184249    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184250    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184251    +end;
MPRINT(EM_DIAGRAM):   end;
184252    +else do;
MPRINT(EM_DIAGRAM):   else do;
184253    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184254    +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
184255    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184256    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184257    +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
184258    +   end;
MPRINT(EM_DIAGRAM):   end;
184259    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184260    +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
184261    +   end;
MPRINT(EM_DIAGRAM):   end;
184262    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184263    +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
184264    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184265    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184266    +   end;
MPRINT(EM_DIAGRAM):   end;
184267    +end;
MPRINT(EM_DIAGRAM):   end;
184268    +
184269    +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
184270    +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
184271    +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
184272    +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
184273    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184274    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184275    +end;
MPRINT(EM_DIAGRAM):   end;
184276    +else do;
MPRINT(EM_DIAGRAM):   else do;
184277    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184278    +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
184279    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184280    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184281    +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
184282    +   end;
MPRINT(EM_DIAGRAM):   end;
184283    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184284    +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
184285    +   end;
MPRINT(EM_DIAGRAM):   end;
184286    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184287    +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
184288    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184289    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184290    +   end;
MPRINT(EM_DIAGRAM):   end;
184291    +end;
MPRINT(EM_DIAGRAM):   end;
184292    +
184293    +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
184294    +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
184295    +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
184296    +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
184297    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184298    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184299    +end;
MPRINT(EM_DIAGRAM):   end;
184300    +else do;
MPRINT(EM_DIAGRAM):   else do;
184301    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184302    +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
184303    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184304    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184305    +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
184306    +   end;
MPRINT(EM_DIAGRAM):   end;
184307    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184308    +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
184309    +   end;
MPRINT(EM_DIAGRAM):   end;
184310    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184311    +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
184312    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184313    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184314    +   end;
MPRINT(EM_DIAGRAM):   end;
184315    +end;
MPRINT(EM_DIAGRAM):   end;
184316    +
184317    +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
184318    +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
184319    +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
184320    +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
184321    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184322    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184323    +end;
MPRINT(EM_DIAGRAM):   end;
184324    +else do;
MPRINT(EM_DIAGRAM):   else do;
184325    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184326    +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
184327    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184328    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184329    +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
184330    +   end;
MPRINT(EM_DIAGRAM):   end;
184331    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184332    +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
184333    +   end;
MPRINT(EM_DIAGRAM):   end;
184334    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184335    +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
184336    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184337    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184338    +   end;
MPRINT(EM_DIAGRAM):   end;
184339    +end;
MPRINT(EM_DIAGRAM):   end;
184340    +
184341    +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
184342    +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
184343    +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
184344    +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
184345    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184346    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184347    +end;
MPRINT(EM_DIAGRAM):   end;
184348    +else do;
MPRINT(EM_DIAGRAM):   else do;
184349    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184350    +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
184351    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184352    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184353    +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
184354    +   end;
MPRINT(EM_DIAGRAM):   end;
184355    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184356    +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
184357    +   end;
MPRINT(EM_DIAGRAM):   end;
184358    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184359    +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
184360    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184361    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184362    +   end;
MPRINT(EM_DIAGRAM):   end;
184363    +end;
MPRINT(EM_DIAGRAM):   end;
184364    +
184365    +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
184366    +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
184367    +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
184368    +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
184369    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184370    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184371    +end;
MPRINT(EM_DIAGRAM):   end;
184372    +else do;
MPRINT(EM_DIAGRAM):   else do;
184373    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184374    +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
184375    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184376    +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
184377    +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
184378    +   end;
MPRINT(EM_DIAGRAM):   end;
184379    +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
184380    +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
184381    +   end;
MPRINT(EM_DIAGRAM):   end;
184382    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184383    +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
184384    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184385    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184386    +   end;
MPRINT(EM_DIAGRAM):   end;
184387    +end;
MPRINT(EM_DIAGRAM):   end;
184388    +
184389    +*** Generate dummy variables for HigherEducationBinary ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for HigherEducationBinary ;
184390    +drop HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   drop HigherEducationBinary0 ;
184391    +if missing( HigherEducationBinary ) then do;
MPRINT(EM_DIAGRAM):   if missing( HigherEducationBinary ) then do;
184392    +   HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
184393    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184394    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184395    +end;
MPRINT(EM_DIAGRAM):   end;
184396    +else do;
MPRINT(EM_DIAGRAM):   else do;
184397    +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
184398    +   _dm12 = put( HigherEducationBinary , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( HigherEducationBinary , BEST12. );
184399    +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184400    +   if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '1' then do;
184401    +      HigherEducationBinary0 = -1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = -1;
184402    +   end;
MPRINT(EM_DIAGRAM):   end;
184403    +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
184404    +      HigherEducationBinary0 = 1;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = 1;
184405    +   end;
MPRINT(EM_DIAGRAM):   end;
184406    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184407    +      HigherEducationBinary0 = .;
MPRINT(EM_DIAGRAM):   HigherEducationBinary0 = .;
184408    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184409    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184410    +   end;
MPRINT(EM_DIAGRAM):   end;
184411    +end;
MPRINT(EM_DIAGRAM):   end;
184412    +
184413    +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
184414    +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
184415    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
184416    +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
184417    +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
184418    +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
184419    +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
184420    +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
184421    +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
184422    +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
184423    +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
184424    +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
184425    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184426    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184427    +end;
MPRINT(EM_DIAGRAM):   end;
184428    +else do;
MPRINT(EM_DIAGRAM):   else do;
184429    +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
184430    +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
184431    +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184432    +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
184433    +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
184434    +   end;
MPRINT(EM_DIAGRAM):   end;
184435    +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
184436    +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
184437    +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
184438    +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
184439    +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
184440    +   end;
MPRINT(EM_DIAGRAM):   end;
184441    +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
184442    +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
184443    +   end;
MPRINT(EM_DIAGRAM):   end;
184444    +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
184445    +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
184446    +   end;
MPRINT(EM_DIAGRAM):   end;
184447    +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
184448    +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
184449    +   end;
MPRINT(EM_DIAGRAM):   end;
184450    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184451    +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
184452    +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
184453    +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
184454    +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
184455    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184456    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184457    +   end;
MPRINT(EM_DIAGRAM):   end;
184458    +end;
MPRINT(EM_DIAGRAM):   end;
184459    +
184460    +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
184461    +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
184462    +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
184463    +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
184464    +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
184465    +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
184466    +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
184467    +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
184468    +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
184469    +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
184470    +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
184471    +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
184472    +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
184473    +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
184474    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184475    +end;
MPRINT(EM_DIAGRAM):   end;
184476    +else do;
MPRINT(EM_DIAGRAM):   else do;
184477    +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
184478    +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
184479    +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184480    +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
184481    +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
184482    +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
184483    +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
184484    +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
184485    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184486    +         end;
MPRINT(EM_DIAGRAM):   end;
184487    +         else do;
MPRINT(EM_DIAGRAM):   else do;
184488    +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
184489    +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
184490    +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184491    +            end;
MPRINT(EM_DIAGRAM):   end;
184492    +         end;
MPRINT(EM_DIAGRAM):   end;
184493    +      end;
MPRINT(EM_DIAGRAM):   end;
184494    +      else do;
MPRINT(EM_DIAGRAM):   else do;
184495    +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
184496    +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
184497    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184498    +         end;
MPRINT(EM_DIAGRAM):   end;
184499    +      end;
MPRINT(EM_DIAGRAM):   end;
184500    +   end;
MPRINT(EM_DIAGRAM):   end;
184501    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184502    +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
184503    +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
184504    +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184505    +      end;
MPRINT(EM_DIAGRAM):   end;
184506    +      else do;
MPRINT(EM_DIAGRAM):   else do;
184507    +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
184508    +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
184509    +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
184510    +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
184511    +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
184512    +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
184513    +         end;
MPRINT(EM_DIAGRAM):   end;
184514    +      end;
MPRINT(EM_DIAGRAM):   end;
184515    +   end;
MPRINT(EM_DIAGRAM):   end;
184516    +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
184517    +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
184518    +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
184519    +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
184520    +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
184521    +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
184522    +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184523    +   end;
MPRINT(EM_DIAGRAM):   end;
184524    +end;
MPRINT(EM_DIAGRAM):   end;
184525    +
184526    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184527    +*** Checking missing input Interval
184528    +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
184529    +
184530    +IF NMISS(
184531    +   AcceptedCmpTotal ,
184532    +   Age ,
184533    +   Frq ,
184534    +   Income ,
184535    +   Kidhome ,
184536    +   MntFishProducts ,
184537    +   MntFruits ,
184538    +   MntGoldProds ,
184539    +   MntSweetProducts ,
184540    +   MonthsAsCustomer ,
184541    +   NumDealsPurchases ,
184542    +   NumWebVisitsMonth ,
184543    +   RFMstat ,
184544    +   RMntFrq ,
184545    +   Recency ,
184546    +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Age , Frq , Income , Kidhome , 
MntFishProducts , MntFruits , MntGoldProds , MntSweetProducts , MonthsAsCustomer , 
NumDealsPurchases , NumWebVisitsMonth , RFMstat , RMntFrq , Recency , Teenhome ) THEN DO;
184547    +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
184548    +
184549    +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
184550    +END;
MPRINT(EM_DIAGRAM):   END;
184551    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184552    +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
184553    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184554    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184555    +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
184556    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
184557    +   S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
184558    +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
184559    +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
184560    +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
184561    +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
184562    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
184563    +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
184564    +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
184565    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
184566    +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
184567    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
184568    +   S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
184569    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
184570    +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
184571    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
184572    +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
184573    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
184574    +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
184575    +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
184576    +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
184577    +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
184578    +END;
MPRINT(EM_DIAGRAM):   END;
184579    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184580    +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
184581    +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
184582    +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 * 
AcceptedCmpTotal ;
184583    +   IF MISSING( Age ) THEN S_Age  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Age ) THEN S_Age = . ;
184584    +   ELSE S_Age  =    -3.91319138389466 +     0.08289609202857 * Age ;
MPRINT(EM_DIAGRAM):   ELSE S_Age = -3.91319138389466 + 0.08289609202857 * Age ;
184585    +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
184586    +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
184587    +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
184588    +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
184589    +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
184590    +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
184591    +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
184592    +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
184593    +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
184594    +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
184595    +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
184596    +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
184597    +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
184598    +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
184599    +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
184600    +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
184601    +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
184602    +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
184603    +   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MonthsAsCustomer ) THEN S_MonthsAsCustomer = . ;
184604    +   ELSE S_MonthsAsCustomer  =    -4.92768414840297 +     0.05901745637787 *
184605    +        MonthsAsCustomer ;
MPRINT(EM_DIAGRAM):   ELSE S_MonthsAsCustomer = -4.92768414840297 + 0.05901745637787 * 
MonthsAsCustomer ;
184606    +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
184607    +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
184608    +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
184609    +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
184610    +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
184611    +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
184612    +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
184613    +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
184614    +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
184615    +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
184616    +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
184617    +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
184618    +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
184619    +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
184620    +END;
MPRINT(EM_DIAGRAM):   END;
184621    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184622    +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
184623    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184624    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184625    +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
184626    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184627    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184628    +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
184629    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184630    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184631    +   H11  =    -0.05939653438507 * S_AcceptedCmpTotal  +    -0.03097621866927 *
184632    +        S_Age  +     0.38549836561373 * S_Frq  +     0.04529710170514 *
184633    +        S_Income  +    -0.29829037747286 * S_Kidhome
184634    +          +    -0.18720823453547 * S_MntFishProducts
184635    +          +    -0.21050293648727 * S_MntFruits  +    -0.17024743813518 *
184636    +        S_MntGoldProds  +     0.06568676148572 * S_MntSweetProducts
184637    +          +    -0.06646294977493 * S_MonthsAsCustomer
184638    +          +    -0.37026551859537 * S_NumDealsPurchases
184639    +          +    -0.14222086870703 * S_NumWebVisitsMonth
184640    +          +    -0.13771028020173 * S_RFMstat  +    -0.18058593739947 *
184641    +        S_RMntFrq  +     0.16089693413185 * S_Recency
184642    +          +    -0.09296281260919 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.05939653438507 * S_AcceptedCmpTotal + -0.03097621866927 * S_Age 
+ 0.38549836561373 * S_Frq + 0.04529710170514 * S_Income + -0.29829037747286 * S_Kidhome + 
-0.18720823453547 * S_MntFishProducts + -0.21050293648727 * S_MntFruits + -0.17024743813518 * 
S_MntGoldProds + 0.06568676148572 * S_MntSweetProducts + -0.06646294977493 * 
S_MonthsAsCustomer + -0.37026551859537 * S_NumDealsPurchases + -0.14222086870703 * 
S_NumWebVisitsMonth + -0.13771028020173 * S_RFMstat + -0.18058593739947 * S_RMntFrq + 
0.16089693413185 * S_Recency + -0.09296281260919 * S_Teenhome ;
184643    +   H12  =    -1.07525876494597 * S_AcceptedCmpTotal  +     0.17274493487957 *
184644    +        S_Age  +     1.31699360143525 * S_Frq  +      0.8506314580981 *
184645    +        S_Income  +    -0.83201267605135 * S_Kidhome
184646    +          +    -0.09483355610222 * S_MntFishProducts
184647    +          +    -0.31816096382562 * S_MntFruits  +    -0.18054381770991 *
184648    +        S_MntGoldProds  +     0.05267776627167 * S_MntSweetProducts
184649    +          +     0.36008195182034 * S_MonthsAsCustomer
184650    +          +    -0.13663022832818 * S_NumDealsPurchases
184651    +          +    -0.43055337001488 * S_NumWebVisitsMonth
184652    +          +    -0.20985567596746 * S_RFMstat  +     0.29271762840275 *
184653    +        S_RMntFrq  +    -0.13626348763752 * S_Recency
184654    +          +    -0.85691575464107 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -1.07525876494597 * S_AcceptedCmpTotal + 0.17274493487957 * S_Age 
+ 1.31699360143525 * S_Frq + 0.8506314580981 * S_Income + -0.83201267605135 * S_Kidhome + 
-0.09483355610222 * S_MntFishProducts + -0.31816096382562 * S_MntFruits + -0.18054381770991 * 
S_MntGoldProds + 0.05267776627167 * S_MntSweetProducts + 0.36008195182034 * S_MonthsAsCustomer 
+ -0.13663022832818 * S_NumDealsPurchases + -0.43055337001488 * S_NumWebVisitsMonth + 
-0.20985567596746 * S_RFMstat + 0.29271762840275 * S_RMntFrq + -0.13626348763752 * S_Recency + 
-0.85691575464107 * S_Teenhome ;
184655    +   H13  =    -0.17967871499719 * S_AcceptedCmpTotal  +      0.1189238919833 *
184656    +        S_Age  +      0.2812438420035 * S_Frq  +    -0.19278826529363 *
184657    +        S_Income  +     0.25780281448124 * S_Kidhome
184658    +          +     0.04440164182166 * S_MntFishProducts
184659    +          +     0.04221733494133 * S_MntFruits  +     0.00772772044315 *
184660    +        S_MntGoldProds  +     0.03211863452879 * S_MntSweetProducts
184661    +          +     0.11601256317603 * S_MonthsAsCustomer
184662    +          +    -0.06382091961731 * S_NumDealsPurchases
184663    +          +    -0.31707488359351 * S_NumWebVisitsMonth
184664    +          +    -0.03315899689257 * S_RFMstat  +      0.1166714754638 *
184665    +        S_RMntFrq  +     0.39922359779347 * S_Recency
184666    +          +     0.12723983872652 * S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.17967871499719 * S_AcceptedCmpTotal + 0.1189238919833 * S_Age + 
0.2812438420035 * S_Frq + -0.19278826529363 * S_Income + 0.25780281448124 * S_Kidhome + 
0.04440164182166 * S_MntFishProducts + 0.04221733494133 * S_MntFruits + 0.00772772044315 * 
S_MntGoldProds + 0.03211863452879 * S_MntSweetProducts + 0.11601256317603 * S_MonthsAsCustomer 
+ -0.06382091961731 * S_NumDealsPurchases + -0.31707488359351 * S_NumWebVisitsMonth + 
-0.03315899689257 * S_RFMstat + 0.1166714754638 * S_RMntFrq + 0.39922359779347 * S_Recency + 
0.12723983872652 * S_Teenhome ;
184667    +   H11  = H11  +     1.30972442853005 * AcceptedCmp10
184668    +          +      -0.107725040763 * AcceptedCmp20  +      0.1632298365033 *
184669    +        AcceptedCmp30  +    -0.04285993483605 * AcceptedCmp40
184670    +          +     0.27424410998159 * AcceptedCmp50  +     0.13223002478852 *
184671    +        Complain0  +       0.148007066302 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 1.30972442853005 * AcceptedCmp10 + -0.107725040763 * 
AcceptedCmp20 + 0.1632298365033 * AcceptedCmp30 + -0.04285993483605 * AcceptedCmp40 + 
0.27424410998159 * AcceptedCmp50 + 0.13223002478852 * Complain0 + 0.148007066302 * 
HigherEducationBinary0 ;
184672    +   H12  = H12  +     0.43127584437858 * AcceptedCmp10
184673    +          +    -0.45791405760753 * AcceptedCmp20  +    -0.99939161573095 *
184674    +        AcceptedCmp30  +    -1.19828550777192 * AcceptedCmp40
184675    +          +    -0.01213030081313 * AcceptedCmp50  +    -0.13910242772434 *
184676    +        Complain0  +     0.30067707265993 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.43127584437858 * AcceptedCmp10 + -0.45791405760753 * 
AcceptedCmp20 + -0.99939161573095 * AcceptedCmp30 + -1.19828550777192 * AcceptedCmp40 + 
-0.01213030081313 * AcceptedCmp50 + -0.13910242772434 * Complain0 + 0.30067707265993 * 
HigherEducationBinary0 ;
184677    +   H13  = H13  +    -0.11762761348562 * AcceptedCmp10
184678    +          +      0.2189277190916 * AcceptedCmp20  +     0.04353030554468 *
184679    +        AcceptedCmp30  +    -0.03987223536277 * AcceptedCmp40
184680    +          +     0.15029448487681 * AcceptedCmp50  +      -0.117886738648 *
184681    +        Complain0  +    -0.01645100634446 * HigherEducationBinary0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.11762761348562 * AcceptedCmp10 + 0.2189277190916 * 
AcceptedCmp20 + 0.04353030554468 * AcceptedCmp30 + -0.03987223536277 * AcceptedCmp40 + 
0.15029448487681 * AcceptedCmp50 + -0.117886738648 * Complain0 + -0.01645100634446 * 
HigherEducationBinary0 ;
184682    +   H11  = H11  +     0.16808351038824 * Education2n_Cycle
184683    +          +    -0.29249243891567 * EducationBasic  +     0.02800261669472 *
184684    +        EducationGraduation  +    -0.22350316846433 * EducationMaster
184685    +          +     0.18754186259114 * Marital_StatusDivorced
184686    +          +    -0.11988223819284 * Marital_StatusMarried
184687    +          +    -0.02283707816223 * Marital_StatusSingle
184688    +          +     -0.1005355792805 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16808351038824 * Education2n_Cycle + -0.29249243891567 * 
EducationBasic + 0.02800261669472 * EducationGraduation + -0.22350316846433 * EducationMaster 
+ 0.18754186259114 * Marital_StatusDivorced + -0.11988223819284 * Marital_StatusMarried + 
-0.02283707816223 * Marital_StatusSingle + -0.1005355792805 * Marital_StatusTogether ;
184689    +   H12  = H12  +    -0.12807098247021 * Education2n_Cycle
184690    +          +     0.23889287012189 * EducationBasic  +     0.10996477979775 *
184691    +        EducationGraduation  +    -0.24880728981933 * EducationMaster
184692    +          +    -0.28983318463941 * Marital_StatusDivorced
184693    +          +    -0.74851149560881 * Marital_StatusMarried
184694    +          +      0.7618336919202 * Marital_StatusSingle
184695    +          +    -0.81079042586509 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.12807098247021 * Education2n_Cycle + 0.23889287012189 * 
EducationBasic + 0.10996477979775 * EducationGraduation + -0.24880728981933 * EducationMaster 
+ -0.28983318463941 * Marital_StatusDivorced + -0.74851149560881 * Marital_StatusMarried + 
0.7618336919202 * Marital_StatusSingle + -0.81079042586509 * Marital_StatusTogether ;
184696    +   H13  = H13  +    -0.26305004071484 * Education2n_Cycle
184697    +          +     0.28231626292259 * EducationBasic  +    -0.07308832725307 *
184698    +        EducationGraduation  +     0.20925521527006 * EducationMaster
184699    +          +    -0.33639004627791 * Marital_StatusDivorced
184700    +          +     0.12327415586833 * Marital_StatusMarried
184701    +          +      0.0060971946845 * Marital_StatusSingle
184702    +          +     0.09875322175475 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.26305004071484 * Education2n_Cycle + 0.28231626292259 * 
EducationBasic + -0.07308832725307 * EducationGraduation + 0.20925521527006 * EducationMaster 
+ -0.33639004627791 * Marital_StatusDivorced + 0.12327415586833 * Marital_StatusMarried + 
0.0060971946845 * Marital_StatusSingle + 0.09875322175475 * Marital_StatusTogether ;
184703    +   H11  =    -1.17886598743906 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.17886598743906 + H11 ;
184704    +   H12  =    -0.91184279928765 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91184279928765 + H12 ;
184705    +   H13  =    -0.12019399765604 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.12019399765604 + H13 ;
184706    +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
184707    +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
184708    +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
184709    +END;
MPRINT(EM_DIAGRAM):   END;
184710    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184711    +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
184712    +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
184713    +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
184714    +END;
MPRINT(EM_DIAGRAM):   END;
184715    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184716    +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
184717    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184718    +
184719    +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
184720    +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
184721    +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
184722    +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
184723    +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
184724    +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
184725    +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
184726    +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
184727    +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
184728    +end;
MPRINT(EM_DIAGRAM):   end;
184729    +else do;
MPRINT(EM_DIAGRAM):   else do;
184730    +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
184731    +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
184732    +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
184733    +   end;
MPRINT(EM_DIAGRAM):   end;
184734    +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
184735    +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
184736    +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
184737    +   end;
MPRINT(EM_DIAGRAM):   end;
184738    +   else do;
MPRINT(EM_DIAGRAM):   else do;
184739    +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
184740    +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
184741    +   end;
MPRINT(EM_DIAGRAM):   end;
184742    +end;
MPRINT(EM_DIAGRAM):   end;
184743    +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
184744    +   P_DepVar1  =    -5.25940615604579 * H11  +     5.20640516145161 * H12
184745    +          +    -6.47403374532058 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -5.25940615604579 * H11 + 5.20640516145161 * H12 + 
-6.47403374532058 * H13 ;
184746    +   P_DepVar1  =    -0.12049819292714 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.12049819292714 + P_DepVar1 ;
184747    +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
184748    +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
184749    +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
184750    +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
184751    +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
184752    +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
184753    +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
184754    +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
184755    +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
184756    +END;
MPRINT(EM_DIAGRAM):   END;
184757    +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
184758    +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
184759    +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
184760    +END;
MPRINT(EM_DIAGRAM):   END;
184761    +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
184762    +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
184763    +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
184764    +END;
MPRINT(EM_DIAGRAM):   END;
184765    +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
184766    +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
184767    +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
184768    +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
184769    +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
184770    +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
184771    +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
184772    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184773    +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
184774    +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
184775    +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
184776    +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
184777    +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
184778    +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
184779    +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
184780    +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
184781    +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
184782    +END;
MPRINT(EM_DIAGRAM):   END;
184783    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
184784    +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
184785    +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
184786    +drop
184787    +H11
184788    +H12
184789    +H13
184790    +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
184791    +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
184792     run;

NOTE: DATA STEP view saved on file EMWS8.NEURAL38_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.META3_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
184793     quit;
184794     filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
184795     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
184796     * Neural38: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Neural38: Computing metadata for TRAIN data;
184797     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.NEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural38\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Neural38_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Neural38_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Neural38_TRAIN out=WORK.M34I2VO_ noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34I2VO_;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M34I2VO_(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M34I2VO_;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M34I2VO_;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M17C30UF NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3D5MU73(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   set WORK.M17C30UF;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Meta3_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Meta3_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Neural38";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Neural38";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Neural38";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Neural38: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
185109     data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
185110     set EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO;
185111     where DATA='Neural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Neural38' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
185112     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.NEURAL38_EMINFO.
      WHERE (DATA='Neural38') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

185113     data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Neural38_EMINFO;
185114     length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
185115     input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
185116     cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
185120     run;
185121     data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_EMINFO;
185122     set EMWS8.Neural38_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural38_EMINFO WORK.MODELTEMP_INFO;
185123     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

185124     proc sort data = EMWS8.Neural38_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural38_EMINFO NOTHREADS;
185125     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
185126     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

185127     proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
185128     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
185129     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

185130     proc sort data = EMWS8.Neural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Neural38_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
185131     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
185132     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.NEURAL38_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

185133     data EMWS8.Neural38_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Neural38_EMINFO;
185134     merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
185135     by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
185136     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.NEURAL38_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

185137     proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
185138     delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
185139     run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
185140     quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: View EMWS8.NEURAL38_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
NOTE: View EMWS8.NEURAL38_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
