*------------------------------------------------------------*
User:                Lukas Fahr
Date:                28. April 2016
Time:                17.01 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.57 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                28. April 2016
Time:                16.57 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0IE_H4X
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0IE_H4X new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.57 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMTRAIN.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMSCORE.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMREPORT.log" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMOUTPUT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "16.57 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMTRAIN.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
1169409    proc freq data=EMWS8.AutoNeural21_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.AutoNeural21_VariableSet noprint;
1169410    table ROLE*LEVEL/out=WORK.AutoNeural21META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.AutoNeural21META;
1169411    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL21_VARIABLESET.
NOTE: The data set WORK.AUTONEURAL21META has 6 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1169412    proc print data=WORK.AutoNeural21META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural21META label noobs;
1169413    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1169414    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1169414  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1169414  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1169415    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1169416    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1169417    run;
 
NOTE: There were 6 observations read from the data set WORK.AUTONEURAL21META.
NOTE: The PROCEDURE PRINT printed page 923.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169418    title10;
MPRINT(EM_DIAGRAM):   title10;
1169419    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN
EMWS8.BINNING_TRAIN EMWS8.BINNING_TRAIN EMWS8 BINNING_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.BINNING_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _sortedDecData;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_DepVar_DD;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_DepVar_DD;
MPRINT(EM_DIAGRAM):   _levelorder_=_N_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural21_DepVar_DD;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_DepVar_DD;
MPRINT(EM_DIAGRAM):   merge EMWS8.AutoNeural21_DepVar_DD
_TEMPCLASS(rename=(NMISSPERCENT=TRAINPRIOR FREQUENCY=COUNT));
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural21_DepVar_DD
out=EMWS8.AutoNeural21_DepVar_DD(drop=_levelorder_);
MPRINT(EM_DIAGRAM):   by _levelorder_;
MPRINT(EM_DIAGRAM):   run;
1169466    data WORK.AutoNeural21_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural21_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1169467    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1169468    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1169468  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1169468  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1169469       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1169469  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1169469  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1169470    set EMWS8.AUTONEURAL21_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.AUTONEURAL21_DEPVAR_DM( where=(_TYPE_="TARGET"));
1169471    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1169472    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1169473    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1169474    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1169475    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1169476    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1169477    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1169478    end;
MPRINT(EM_DIAGRAM):   end;
1169479    output;
MPRINT(EM_DIAGRAM):   output;
1169480    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.AUTONEURAL21_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1169481    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1169482    proc print data=WORK.AutoNeural21_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.AutoNeural21_EVENT noobs label;
1169483    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1169484    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1169485    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1169486    run;
 
NOTE: There were 1 observations read from the data set WORK.AUTONEURAL21_EVENT.
NOTE: The PROCEDURE PRINT printed page 924.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169487    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1169488    proc print data = EMWS8.AutoNeural21_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.AutoNeural21_DepVar_DM noobs label;
1169489    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1169490    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1169491    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1169491  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1169491  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1169492    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1169493    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1169494    run;
 
NOTE: There were 7 observations read from the data set EMWS8.AUTONEURAL21_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 925.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169495    title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Preparing metadata for Training;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M3UPBDS6;
MPRINT(EM_DIAGRAM):   set WORK.M3UPBDS6;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (role = 'INPUT' and use = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   run;
1169504    data WORK.M3UPBDS6;
MPRINT(EM_DIAGRAM):    data WORK.M3UPBDS6;
1169505    set WORK.M3UPBDS6 end=eof;
MPRINT(EM_DIAGRAM):   set WORK.M3UPBDS6 end=eof;
1169506    output;
MPRINT(EM_DIAGRAM):   output;
1169507    if eof then do;
MPRINT(EM_DIAGRAM):   if eof then do;
1169508    NAME="";
MPRINT(EM_DIAGRAM):   NAME="";
1169509    ROLE="COST";
MPRINT(EM_DIAGRAM):   ROLE="COST";
1169510    LEVEL="INTERVAL";
MPRINT(EM_DIAGRAM):   LEVEL="INTERVAL";
1169511    TYPE="N";
MPRINT(EM_DIAGRAM):   TYPE="N";
1169512    output;
MPRINT(EM_DIAGRAM):   output;
1169513    end;
MPRINT(EM_DIAGRAM):   end;
1169514    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 19 observations read from the data set WORK.M3UPBDS6.
NOTE: The data set WORK.M3UPBDS6 has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL21_DEPVAR_DD.
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
1169515    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1169516    * AutoNeural21: Create decision matrix;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Create decision matrix;
1169517    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1169518    data WORK.DepVar;
MPRINT(EM_DIAGRAM):   data WORK.DepVar;
1169519      length   DepVar                           $  32
1169520               COUNT                                8
1169521               DATAPRIOR                            8
1169522               TRAINPRIOR                           8
1169523               DECPRIOR                             8
1169524               DECISION1                            8
1169525               DECISION2                            8
1169526               ;
MPRINT(EM_DIAGRAM):   length DepVar $ 32 COUNT 8 DATAPRIOR 8 TRAINPRIOR 8 DECPRIOR 8 DECISION1
8 DECISION2 8 ;
1169527
1169528      label    COUNT="Level Counts"
1169529               DATAPRIOR="Data Proportions"
1169530               TRAINPRIOR="Training Proportions"
1169531               DECPRIOR="Decision Priors"
1169532               DECISION1="1"
1169533               DECISION2="0"
1169534               ;
MPRINT(EM_DIAGRAM):   label COUNT= "Level Counts" DATAPRIOR= "Data Proportions" TRAINPRIOR=
"Training Proportions" DECPRIOR= "Decision Priors" DECISION1= "1" DECISION2= "0" ;
1169535      format   COUNT 10.
1169536               ;
MPRINT(EM_DIAGRAM):   format COUNT 10. ;
1169537    DepVar="1"; COUNT=359; DATAPRIOR=0.151221567; TRAINPRIOR=0.15122156697556;
1169537  ! DECPRIOR=.; DECISION1=1; DECISION2=0;
MPRINT(EM_DIAGRAM):   DepVar="1";
MPRINT(EM_DIAGRAM):   COUNT=359;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.151221567;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.15122156697556;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=1;
MPRINT(EM_DIAGRAM):   DECISION2=0;
1169538    output;
MPRINT(EM_DIAGRAM):   output;
1169539    DepVar="0"; COUNT=2015; DATAPRIOR=0.848778433; TRAINPRIOR=0.84877843302443;
1169539  ! DECPRIOR=.; DECISION1=0; DECISION2=1;
MPRINT(EM_DIAGRAM):   DepVar="0";
MPRINT(EM_DIAGRAM):   COUNT=2015;
MPRINT(EM_DIAGRAM):   DATAPRIOR=0.848778433;
MPRINT(EM_DIAGRAM):   TRAINPRIOR=0.84877843302443;
MPRINT(EM_DIAGRAM):   DECPRIOR=.;
MPRINT(EM_DIAGRAM):   DECISION1=0;
MPRINT(EM_DIAGRAM):   DECISION2=1;
1169540    output;
MPRINT(EM_DIAGRAM):   output;
1169541    ;
MPRINT(EM_DIAGRAM):   ;
1169542    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.DEPVAR has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169543    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1169544    modify DepVar(type=PROFIT label=DepVar);
MPRINT(EM_DIAGRAM):   modify DepVar(type=PROFIT label= DepVar);
MPRINT(EM_DIAGRAM):   label DECISION1= '1';
MPRINT(EM_DIAGRAM):   label DECISION2= '0';
MPRINT(EM_DIAGRAM):   run;
1169545    label DECISION1= '1';
1169546    label DECISION2= '0';
1169547    run;
 
NOTE: MODIFY was successful for WORK.DEPVAR.DATA.
1169548    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1169549    data EM_AutoNeural21;
MPRINT(EM_DIAGRAM):   data EM_AutoNeural21;
1169550    set EMWS8.BINNING_TRAIN(keep=
1169551    DepVar GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1169552    GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1169553    GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1169554    GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency Year_Birth );
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN(keep= DepVar GRP_AcceptedCmp5
GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds
GRP_MntMeatProducts GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases
GRP_NumDistPurchases GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq
GRP_Recency Year_Birth );
1169555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * AutoNeural21: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169556    *------------------------------------------------------------* ;
1169557    * AutoNeural21: DMDBClass Macro ;
1169558    *------------------------------------------------------------* ;
1169559    %macro DMDBClass;
1169560        DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
1169561       GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
1169562       GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
1169563       GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
1169564       GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
1169565    %mend DMDBClass;
1169566    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169567    * AutoNeural21: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural21: DMDBVar Macro ;
1169568    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169569    %macro DMDBVar;
1169570        Year_Birth
1169571    %mend DMDBVar;
1169572    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1169573    * AutoNeural21: Create DMDB;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Create DMDB;
1169574    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1169575    proc dmdb batch data=WORK.EM_AutoNeural21
1169576    dmdbcat=WORK.AutoNeural21_DMDB
1169577    maxlevel = 513
1169578    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=WORK.EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
1169579    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC) GRP_AcceptedCmp5(ASC) GRP_AcceptedCmpTotal(ASC) GRP_Frq(ASC)
GRP_Income(ASC) GRP_Mnt(ASC) GRP_MntFishProducts(ASC) GRP_MntGoldProds(ASC)
GRP_MntMeatProducts(ASC) GRP_MntSweetProducts(ASC) GRP_MntWines(ASC)
GRP_NumCatalogPurchases(ASC) GRP_NumDistPurchases(ASC) GRP_NumWebPurchases(ASC)
GRP_NumWebVisitsMonth(ASC) GRP_RFMstat(ASC) GRP_RMntFrq(ASC) GRP_Recency(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
1169580    var %DMDBVar;
MPRINT(DMDBVAR):   Year_Birth
MPRINT(EM_DIAGRAM):  ;
1169581    target
1169582    DepVar
1169583    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1169584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set WORK.EM_AUTONEURAL21.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1169585    quit;
1169586    *--- end code ---*;
 
1169587    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1169588    * AutoNeural21: Interval Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Interval Inputs Macro ;
1169589    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169590    %macro INTINPUTS;
1169591        Year_Birth
1169592    %mend INTINPUTS;
1169593    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169594    * AutoNeural21: Binary Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Binary Inputs Macro ;
1169595    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169596    %macro BININPUTS;
1169597
1169598    %mend BININPUTS;
1169599    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169600    * AutoNeural21: Nominal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Nominal Inputs Macro ;
1169601    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169602    %macro NOMINPUTS;
1169603        GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income GRP_Mnt
1169604       GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts GRP_MntSweetProducts
1169605       GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases GRP_NumWebPurchases
1169606       GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
1169607    %mend NOMINPUTS;
1169608    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169609    * AutoNeural21: Ordinal Inputs Macro ;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Ordinal Inputs Macro ;
1169610    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1169611    %macro ORDINPUTS;
1169612
1169613    %mend ORDINPUTS;
1169614    * set printing options;
MPRINT(EM_DIAGRAM):   * set printing options;
1169615    ;
MPRINT(EM_DIAGRAM):   ;
1169616    options linesize = 80;
MPRINT(EM_DIAGRAM):   options linesize = 80;
1169617    options pagesize = 6000;
The SAS System
 
MPRINT(EM_DIAGRAM):   options pagesize = 6000;
1169618    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1169619    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1169620    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
1169621    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169622    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_autonet_title  ,
1169622  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "AutoNet";
MPRINT(EM_DIAGRAM):   *;
1169623    *;
 
1169624    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169625    * Autoneural: search / FUNNEL LAYERS;
MPRINT(EM_DIAGRAM):   * Autoneural: search / FUNNEL LAYERS;
1169626    ;
MPRINT(EM_DIAGRAM):   ;
1169627    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169628    *;
MPRINT(EM_DIAGRAM):   *;
 
1169629    *;
MPRINT(EM_DIAGRAM):    *;
1169630    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1169631    validdata=EMWS8.BINNING_VALIDATE
1169632    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1169633    *;
MPRINT(EM_DIAGRAM):   *;
1169634    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1169635    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1169636    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1169637    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1169638    target DepVar / level=NOMINAL id=DepVar
1169639    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1169640    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169641    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1169642    ;
MPRINT(EM_DIAGRAM):   ;
1169643    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169644    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1169645    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1169646    *;
MPRINT(EM_DIAGRAM):   *;
1169647    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1169648    *;
MPRINT(EM_DIAGRAM):   *;
1169649    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169650    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1169650  ! Search # 1 FUNNEL LAYERS trial # 1 : DIRECT : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 1 : DIRECT :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1800
maxiter=50 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 144 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1169651    train estiter=1 outest=_anest outfit=_anfit maxtime=1800 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1169652    tech = Default;
1169653    ;
1169654    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           1.52 seconds
      cpu time            1.51 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           1.53 seconds
      cpu time            1.51 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169655    *;
1169656    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1169657    var _iter_ _aic_ _averr_ _misc_
1169658    _vaverr_ _vmisc_
1169659    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1169660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 926.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169661    *------------------------------------------------------------*;
1169662    * Extract best iteration;
1169663    ;
1169664    *------------------------------------------------------------*;
1169665    %global _iter;
1169666    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1169667    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1169668    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1169669    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1169670    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1169671    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1169672    end;
MPRINT(EM_DIAGRAM):   end;
1169673    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169674    *;
 
1169675    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1169676    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1169677    if _ITER_ eq 49 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 then do;
1169678    output;
MPRINT(EM_DIAGRAM):   output;
1169679    stop;
MPRINT(EM_DIAGRAM):   stop;
1169680    end;
MPRINT(EM_DIAGRAM):   end;
1169681    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 50 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169682    *;
1169683    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1169684    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1169685    if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 49 and _NAME_ eq "OVERALL" then do;
1169686    output;
MPRINT(EM_DIAGRAM):   output;
1169687    stop;
MPRINT(EM_DIAGRAM):   stop;
1169688    end;
MPRINT(EM_DIAGRAM):   end;
1169689    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 100 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169690    *;
MPRINT(EM_DIAGRAM):    *;
1169691    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169692    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1169692  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1169693    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1169694    var _iter_ _aic_ _averr_ _misc_
1169695    _vaverr_ _vmisc_
1169696    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1169697    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 927.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169698    title9;
MPRINT(EM_DIAGRAM):   title9;
1169699    title10;
MPRINT(EM_DIAGRAM):   title10;
1169700    %sysfunc(sasmsg(sashelp.dmine, starthistory_note , NOQUOTE));
MPRINT(EM_DIAGRAM):    * Start history;
MPRINT(EM_DIAGRAM):  ;
1169701    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1169702    length _func_ _status_ _step_ $16;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16;
1169703    label _func_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_function_vlabel  ,
1169703  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _func_ = "Function";
1169704    label _status_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_status_vlabel  ,
1169704  !  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _status_ = "Status";
1169705    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel
1169705  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Iteration";
1169706    label _step_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_step_vlabel  ,
1169706  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _step_ = "Step";
1169707    _func_ = '';
MPRINT(EM_DIAGRAM):   _func_ = '';
1169708    _status_ = '';
MPRINT(EM_DIAGRAM):   _status_ = '';
1169709    _step_ = 'FUNNEL LAYERS 1';
MPRINT(EM_DIAGRAM):   _step_ = 'FUNNEL LAYERS 1';
1169710    set
1169711    _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0))
1169712    ;
MPRINT(EM_DIAGRAM):   set _anfit(where=(_name_ eq 'OVERALL' and _iter_ eq 0)) ;
1169713    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANFIT.
      WHERE (_name_='OVERALL') and (_iter_=0);
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169714    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1169715    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169716    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1169717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169718    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1169719    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169720    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1169721    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169722    *SEARCH: copy estimates and fit to best buffer;
MPRINT(EM_DIAGRAM):    *SEARCH: copy estimates and fit to best buffer;
1169723    ;
MPRINT(EM_DIAGRAM):   ;
1169724    data WORK.SAVEDS_AUTONEUR_1V_72OF;
MPRINT(EM_DIAGRAM):   data WORK.SAVEDS_AUTONEUR_1V_72OF;
1169725    set EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_ESTDS;
1169726    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_ESTDS.
NOTE: The data set WORK.SAVEDS_AUTONEUR_1V_72OF has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169727    data EMWS8.AutoNeural21_BESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_BESTDS;
1169728    set EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_ESTDS;
1169729    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_ESTDS.
NOTE: The data set EMWS8.AUTONEURAL21_BESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169730    data WORK.BFITDS_AUTONEUR_1V_72OF;
MPRINT(EM_DIAGRAM):   data WORK.BFITDS_AUTONEUR_1V_72OF;
1169731    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169732    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.BFITDS_AUTONEUR_1V_72OF has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169733    * Add function info to new history;
MPRINT(EM_DIAGRAM):    * Add function info to new history;
1169734    ;
MPRINT(EM_DIAGRAM):   ;
1169735    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1169736    set EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY;
1169737    _func_ = 'DIRECT';
MPRINT(EM_DIAGRAM):   _func_ = 'DIRECT';
1169738    _status_ = 'initial';
MPRINT(EM_DIAGRAM):   _status_ = 'initial';
1169739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 1 observations and 39
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169740    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1169741    ;
MPRINT(EM_DIAGRAM):   ;
1169742    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1169743    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169744    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1169745    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1169746    _status_ = "candidate";
MPRINT(EM_DIAGRAM):   _status_ = "candidate";
1169747    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1169748    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1169749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169750    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1169751    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1169752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 2 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169753    *;
MPRINT(EM_DIAGRAM):    *;
1169754    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1169755    validdata=EMWS8.BINNING_VALIDATE
1169756    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1169757    *;
MPRINT(EM_DIAGRAM):   *;
1169758    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1169759    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1169760    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1169761    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1169762    target DepVar / level=NOMINAL id=DepVar
1169763    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1169764    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169765    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1169766    ;
MPRINT(EM_DIAGRAM):   ;
1169767    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169768    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1169769    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1169770    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1169771    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1169772    *;
MPRINT(EM_DIAGRAM):   *;
1169773    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1169774    *;
MPRINT(EM_DIAGRAM):   *;
1169775    initial
1169776    ;
MPRINT(EM_DIAGRAM):   initial ;
1169777    *;
MPRINT(EM_DIAGRAM):   *;
1169778    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169779    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1169779  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 796 variables.
MPRINT(EM_DIAGRAM):   *;
1169780    prelim 24 outest=_anpre pretime=37 preiter=25
1169781    tech = Default
1169782    ;
1169783    *;
1169784    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169785    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1169785  ! Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 2 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=899
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 796 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1169786    train estiter=1 outest=_anest outfit=_anfit maxtime=899 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1169787    tech = Default;
1169788    ;
1169789    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           35.24 seconds
      cpu time            34.83 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 928.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           35.25 seconds
      cpu time            34.85 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169790    *;
1169791    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1169792    var _iter_ _aic_ _averr_ _misc_
1169793    _vaverr_ _vmisc_
1169794    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1169795    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 929.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169796    *------------------------------------------------------------*;
1169797    * Extract best iteration;
1169798    ;
1169799    *------------------------------------------------------------*;
1169800    %global _iter;
1169801    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1169802    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1169803    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1169804    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1169805    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1169806    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1169807    end;
MPRINT(EM_DIAGRAM):   end;
1169808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169809    *;
 
1169810    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1169811    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1169812    if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
1169813    output;
MPRINT(EM_DIAGRAM):   output;
1169814    stop;
MPRINT(EM_DIAGRAM):   stop;
1169815    end;
MPRINT(EM_DIAGRAM):   end;
1169816    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 796
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169817    *;
1169818    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1169819    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1169820    if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
1169821    output;
MPRINT(EM_DIAGRAM):   output;
1169822    stop;
MPRINT(EM_DIAGRAM):   stop;
1169823    end;
MPRINT(EM_DIAGRAM):   end;
1169824    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169825    *;
MPRINT(EM_DIAGRAM):    *;
1169826    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169827    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1169827  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1169828    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1169829    var _iter_ _aic_ _averr_ _misc_
1169830    _vaverr_ _vmisc_
1169831    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1169832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 930.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169833    title9;
MPRINT(EM_DIAGRAM):   title9;
1169834    title10;
MPRINT(EM_DIAGRAM):   title10;
1169835    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1169836    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169837    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1169838    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169839    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1169840    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169841    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1169842    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169843    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1169844    ;
MPRINT(EM_DIAGRAM):   ;
1169845    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1169846    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169847    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1169848    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1169849    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1169850    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1169851    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1169852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1169853    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1169854    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1169855    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 3 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169856    *;
MPRINT(EM_DIAGRAM):    *;
1169857    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1169858    validdata=EMWS8.BINNING_VALIDATE
1169859    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1169860    *;
MPRINT(EM_DIAGRAM):   *;
1169861    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1169862    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1169863    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1169864    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1169865    target DepVar / level=NOMINAL id=DepVar
1169866    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1169867    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169868    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1169869    ;
MPRINT(EM_DIAGRAM):   ;
1169870    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169871    Hidden 6 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SINE;
1169872    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1169873    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1169874    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1169875    *;
MPRINT(EM_DIAGRAM):   *;
1169876    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1169877    *;
MPRINT(EM_DIAGRAM):   *;
1169878    initial
1169879    ;
MPRINT(EM_DIAGRAM):   initial ;
1169880    *;
MPRINT(EM_DIAGRAM):   *;
1169881    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169882    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1169882  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=37 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 796 variables.
MPRINT(EM_DIAGRAM):   *;
1169883    prelim 24 outest=_anpre pretime=37 preiter=25
1169884    tech = Default
1169885    ;
1169886    *;
1169887    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169888    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1169888  ! Search # 1 FUNNEL LAYERS trial # 3 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 3 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=890
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 796 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1169889    train estiter=1 outest=_anest outfit=_anfit maxtime=890 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1169890    tech = Default;
1169891    ;
1169892    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           31.24 seconds
      cpu time            30.88 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 931.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           31.24 seconds
      cpu time            30.88 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169893    *;
1169894    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1169895    var _iter_ _aic_ _averr_ _misc_
1169896    _vaverr_ _vmisc_
1169897    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1169898    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 932.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169899    *------------------------------------------------------------*;
1169900    * Extract best iteration;
1169901    ;
1169902    *------------------------------------------------------------*;
1169903    %global _iter;
1169904    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1169905    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1169906    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1169907    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1169908    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1169909    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1169910    end;
MPRINT(EM_DIAGRAM):   end;
1169911    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169912    *;
 
1169913    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1169914    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1169915    if _ITER_ eq 12 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 then do;
1169916    output;
MPRINT(EM_DIAGRAM):   output;
1169917    stop;
MPRINT(EM_DIAGRAM):   stop;
1169918    end;
MPRINT(EM_DIAGRAM):   end;
1169919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 796
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169920    *;
1169921    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1169922    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1169923    if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 12 and _NAME_ eq "OVERALL" then do;
1169924    output;
MPRINT(EM_DIAGRAM):   output;
1169925    stop;
MPRINT(EM_DIAGRAM):   stop;
1169926    end;
MPRINT(EM_DIAGRAM):   end;
1169927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169928    *;
MPRINT(EM_DIAGRAM):    *;
1169929    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169930    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1169930  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1169931    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1169932    var _iter_ _aic_ _averr_ _misc_
1169933    _vaverr_ _vmisc_
1169934    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1169935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 933.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169936    title9;
MPRINT(EM_DIAGRAM):   title9;
1169937    title10;
MPRINT(EM_DIAGRAM):   title10;
1169938    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1169939    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169940    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1169941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169942    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1169943    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169944    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1169945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169946    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1169947    ;
MPRINT(EM_DIAGRAM):   ;
1169948    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1169949    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1169950    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1169951    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1169952    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1169953    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1169954    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1169955    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169956    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1169957    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1169958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 4 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1169959    *;
MPRINT(EM_DIAGRAM):    *;
1169960    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1169961    validdata=EMWS8.BINNING_VALIDATE
1169962    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1169963    *;
MPRINT(EM_DIAGRAM):   *;
1169964    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1169965    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1169966    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1169967    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1169968    target DepVar / level=NOMINAL id=DepVar
1169969    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1169970    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169971    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1169972    ;
MPRINT(EM_DIAGRAM):   ;
1169973    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1169974    Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
1169975    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1169976    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1169977    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1169978    *;
MPRINT(EM_DIAGRAM):   *;
1169979    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1169980    *;
MPRINT(EM_DIAGRAM):   *;
1169981    initial
1169982    ;
MPRINT(EM_DIAGRAM):   initial ;
1169983    *;
MPRINT(EM_DIAGRAM):   *;
1169984    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169985    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1169985  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Prelim";
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 667 variables.
MPRINT(EM_DIAGRAM):   *;
1169986    prelim 24 outest=_anpre pretime=36 preiter=25
1169987    tech = Default
1169988    ;
1169989    *;
1169990    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1169991    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1169991  ! Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 1 FUNNEL LAYERS trial # 4 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=883
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 667 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1169992    train estiter=1 outest=_anest outfit=_anfit maxtime=883 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1169993    tech = Default;
1169994    ;
1169995    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           30.42 seconds
      cpu time            30.13 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 934.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           30.43 seconds
      cpu time            30.17 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1169996    *;
1169997    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1169998    var _iter_ _aic_ _averr_ _misc_
1169999    _vaverr_ _vmisc_
1170000    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 935.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170002    *------------------------------------------------------------*;
1170003    * Extract best iteration;
1170004    ;
1170005    *------------------------------------------------------------*;
1170006    %global _iter;
1170007    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1170008    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1170009    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1170010    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1170011    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1170012    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1170013    end;
MPRINT(EM_DIAGRAM):   end;
1170014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170015    *;
 
1170016    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1170017    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1170018    if _ITER_ eq 7 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 then do;
1170019    output;
MPRINT(EM_DIAGRAM):   output;
1170020    stop;
MPRINT(EM_DIAGRAM):   stop;
1170021    end;
MPRINT(EM_DIAGRAM):   end;
1170022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 667
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170023    *;
1170024    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170025    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1170026    if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 7 and _NAME_ eq "OVERALL" then do;
1170027    output;
MPRINT(EM_DIAGRAM):   output;
1170028    stop;
MPRINT(EM_DIAGRAM):   stop;
1170029    end;
MPRINT(EM_DIAGRAM):   end;
1170030    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 16 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170031    *;
MPRINT(EM_DIAGRAM):    *;
1170032    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170033    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1170033  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1170034    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1170035    var _iter_ _aic_ _averr_ _misc_
1170036    _vaverr_ _vmisc_
1170037    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 936.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170039    title9;
MPRINT(EM_DIAGRAM):   title9;
1170040    title10;
MPRINT(EM_DIAGRAM):   title10;
1170041    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170042    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170043    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170044    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170045    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170046    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170047    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170049    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1170050    ;
MPRINT(EM_DIAGRAM):   ;
1170051    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170052    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170053    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1170054    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1170055    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1170056    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1170057    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1170058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170059    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1170060    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1170061    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 5 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170062    *SEARCH: recall best estimates and fit;
MPRINT(EM_DIAGRAM):    *SEARCH: recall best estimates and fit;
1170063    ;
MPRINT(EM_DIAGRAM):   ;
1170064    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_ESTDS;
1170065    set EMWS8.AutoNeural21_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_BESTDS;
1170066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170067    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170068    set WORK.BFITDS_AUTONEUR_1V_72OF;
MPRINT(EM_DIAGRAM):   set WORK.BFITDS_AUTONEUR_1V_72OF;
1170069    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.BFITDS_AUTONEUR_1V_72OF.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170070    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1170071    ;
MPRINT(EM_DIAGRAM):   ;
1170072    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170073    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170074    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1170075    _func_ = "DIRECT";
MPRINT(EM_DIAGRAM):   _func_ = "DIRECT";
1170076    _status_ = "keep";
MPRINT(EM_DIAGRAM):   _status_ = "keep";
1170077    _step_ = "FUNNEL LAYERS 1";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 1";
1170078    _index_ = 1;
MPRINT(EM_DIAGRAM):   _index_ = 1;
1170079    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170080    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1170081    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1170082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 6 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170083    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170084    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170085    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170086    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 40 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170087    *;
MPRINT(EM_DIAGRAM):    *;
1170088    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1170089    validdata=EMWS8.BINNING_VALIDATE
1170090    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1170091    *;
MPRINT(EM_DIAGRAM):   *;
1170092    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1170093    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1170094    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1170095    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1170096    target DepVar / level=NOMINAL id=DepVar
1170097    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1170098    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170099    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1170100    ;
MPRINT(EM_DIAGRAM):   ;
1170101    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170102    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1170103    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1170104    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170105    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1170106    ;
MPRINT(EM_DIAGRAM):   ;
1170107    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170108    Hidden 6 / id = H1x1_ act=LOG;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=LOG;
1170109    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1170110    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1170111    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1170112    *;
MPRINT(EM_DIAGRAM):   *;
1170113    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1170114    *;
MPRINT(EM_DIAGRAM):   *;
1170115    initial
1170116    inest = EMWS8.AutoNeural21_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural21_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
1170117    ;
MPRINT(EM_DIAGRAM):   ;
1170118    *;
MPRINT(EM_DIAGRAM):   *;
1170119    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170120    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1170120  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Prelim";
1170121    prelim 24 outest=_anpre pretime=36 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default inest = EMWS8.AutoNeural21_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 924 variables.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1170122    tech = Default
1170123    inest = EMWS8.AutoNeural21_ESTDS bylabel
1170124    ;
1170125    *;
1170126    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170127    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1170127  ! Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 1 : LOGISTIC :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=875
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 924 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1170128    train estiter=1 outest=_anest outfit=_anfit maxtime=875 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1170129    tech = Default;
1170130    ;
1170131    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           43.24 seconds
      cpu time            42.91 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 937.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           43.24 seconds
      cpu time            42.91 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170132    *;
1170133    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1170134    var _iter_ _aic_ _averr_ _misc_
1170135    _vaverr_ _vmisc_
1170136    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170137    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 938.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170138    *------------------------------------------------------------*;
1170139    * Extract best iteration;
1170140    ;
1170141    *------------------------------------------------------------*;
1170142    %global _iter;
1170143    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1170144    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1170145    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1170146    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1170147    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1170148    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1170149    end;
MPRINT(EM_DIAGRAM):   end;
1170150    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170151    *;
 
1170152    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1170153    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1170154    if _ITER_ eq 9 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 then do;
1170155    output;
MPRINT(EM_DIAGRAM):   output;
1170156    stop;
MPRINT(EM_DIAGRAM):   stop;
1170157    end;
MPRINT(EM_DIAGRAM):   end;
1170158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 924
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170159    *;
1170160    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170161    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1170162    if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 9 and _NAME_ eq "OVERALL" then do;
1170163    output;
MPRINT(EM_DIAGRAM):   output;
1170164    stop;
MPRINT(EM_DIAGRAM):   stop;
1170165    end;
MPRINT(EM_DIAGRAM):   end;
1170166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170167    *;
MPRINT(EM_DIAGRAM):    *;
1170168    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170169    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1170169  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1170170    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1170171    var _iter_ _aic_ _averr_ _misc_
1170172    _vaverr_ _vmisc_
1170173    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 939.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170175    title9;
MPRINT(EM_DIAGRAM):   title9;
1170176    title10;
MPRINT(EM_DIAGRAM):   title10;
1170177    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170178    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170179    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170180    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170181    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170182    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170183    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170185    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1170186    ;
MPRINT(EM_DIAGRAM):   ;
1170187    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170188    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170189    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1170190    _func_ = "LOGISTIC";
MPRINT(EM_DIAGRAM):   _func_ = "LOGISTIC";
1170191    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1170192    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1170193    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1170194    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170195    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1170196    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1170197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 6 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 7 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170198    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1170199    ;
MPRINT(EM_DIAGRAM):   ;
1170200    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_ESTDS;
1170201    set EMWS8.AutoNeural21_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_BESTDS;
1170202    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170203    *;
MPRINT(EM_DIAGRAM):    *;
1170204    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1170205    validdata=EMWS8.BINNING_VALIDATE
1170206    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1170207    *;
MPRINT(EM_DIAGRAM):   *;
1170208    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1170209    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1170210    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1170211    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1170212    target DepVar / level=NOMINAL id=DepVar
1170213    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1170214    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170215    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1170216    ;
MPRINT(EM_DIAGRAM):   ;
1170217    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170218    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1170219    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1170220    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170221    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1170222    ;
MPRINT(EM_DIAGRAM):   ;
1170223    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170224    Hidden 6 / id = H1x1_ act=SINE;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SINE;
1170225    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1170226    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1170227    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1170228    *;
MPRINT(EM_DIAGRAM):   *;
1170229    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1170230    *;
MPRINT(EM_DIAGRAM):   *;
1170231    initial
1170232    inest = EMWS8.AutoNeural21_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural21_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
1170233    ;
MPRINT(EM_DIAGRAM):   ;
1170234    *;
MPRINT(EM_DIAGRAM):   *;
1170235    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170236    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1170236  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Prelim";
1170237    prelim 24 outest=_anpre pretime=36 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=36 preiter=25 tech =
Default inest = EMWS8.AutoNeural21_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 924 variables.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1170238    tech = Default
1170239    inest = EMWS8.AutoNeural21_ESTDS bylabel
1170240    ;
1170241    *;
1170242    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170243    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1170243  ! Search # 2 FUNNEL LAYERS trial # 2 : SINE : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 2 : SINE :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=864
maxiter=50 tech = Default;
NOTE: Convergence criterion (ABSCONV=0.0020529663) satisfied.
NOTE: The data set WORK._ANEST has 39 observations and 924 variables.
NOTE: The data set WORK._ANFIT has 76 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1170244    train estiter=1 outest=_anest outfit=_anfit maxtime=864 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1170245    tech = Default;
1170246    ;
1170247    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           40.03 seconds
      cpu time            39.74 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 940.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           40.04 seconds
      cpu time            39.76 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170248    *;
1170249    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1170250    var _iter_ _aic_ _averr_ _misc_
1170251    _vaverr_ _vmisc_
1170252    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170253    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 941.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170254    *------------------------------------------------------------*;
1170255    * Extract best iteration;
1170256    ;
1170257    *------------------------------------------------------------*;
1170258    %global _iter;
1170259    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1170260    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1170261    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1170262    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1170263    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1170264    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1170265    end;
MPRINT(EM_DIAGRAM):   end;
1170266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 38 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170267    *;
 
1170268    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1170269    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1170270    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1170271    output;
MPRINT(EM_DIAGRAM):   output;
1170272    stop;
MPRINT(EM_DIAGRAM):   stop;
1170273    end;
MPRINT(EM_DIAGRAM):   end;
1170274    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 924
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170275    *;
1170276    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170277    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1170278    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1170279    output;
MPRINT(EM_DIAGRAM):   output;
1170280    stop;
MPRINT(EM_DIAGRAM):   stop;
1170281    end;
MPRINT(EM_DIAGRAM):   end;
1170282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170283    *;
MPRINT(EM_DIAGRAM):    *;
1170284    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170285    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1170285  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1170286    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1170287    var _iter_ _aic_ _averr_ _misc_
1170288    _vaverr_ _vmisc_
1170289    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170290    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 942.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170291    title9;
MPRINT(EM_DIAGRAM):   title9;
1170292    title10;
MPRINT(EM_DIAGRAM):   title10;
1170293    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170294    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170295    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170297    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170298    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170299    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170301    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1170302    ;
MPRINT(EM_DIAGRAM):   ;
1170303    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170304    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170305    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1170306    _func_ = "SINE";
MPRINT(EM_DIAGRAM):   _func_ = "SINE";
1170307    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1170308    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1170309    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1170310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170311    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1170312    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1170313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 8 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170314    * SEARCH: recall starting estimates;
MPRINT(EM_DIAGRAM):    * SEARCH: recall starting estimates;
1170315    ;
MPRINT(EM_DIAGRAM):   ;
1170316    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_ESTDS;
1170317    set EMWS8.AutoNeural21_BESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_BESTDS;
1170318    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_BESTDS.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170319    *;
MPRINT(EM_DIAGRAM):    *;
1170320    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1170321    validdata=EMWS8.BINNING_VALIDATE
1170322    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1170323    *;
MPRINT(EM_DIAGRAM):   *;
1170324    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1170325    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1170326    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1170327    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1170328    target DepVar / level=NOMINAL id=DepVar
1170329    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1170330    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170331    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1170332    ;
MPRINT(EM_DIAGRAM):   ;
1170333    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170334    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1170335    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1170336    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170337    * Layer #1;
MPRINT(EM_DIAGRAM):   * Layer #1;
1170338    ;
MPRINT(EM_DIAGRAM):   ;
1170339    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170340    Hidden 6 / id = H1x1_ act=SOFTMAX;
MPRINT(EM_DIAGRAM):   Hidden 6 / id = H1x1_ act=SOFTMAX;
1170341    connect interval H1x1_;
MPRINT(EM_DIAGRAM):   connect interval H1x1_;
1170342    connect nominal H1x1_;
MPRINT(EM_DIAGRAM):   connect nominal H1x1_;
1170343    connect H1x1_ DepVar;
MPRINT(EM_DIAGRAM):   connect H1x1_ DepVar;
1170344    *;
MPRINT(EM_DIAGRAM):   *;
1170345    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1170346    *;
MPRINT(EM_DIAGRAM):   *;
1170347    initial
1170348    inest = EMWS8.AutoNeural21_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural21_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
1170349    ;
MPRINT(EM_DIAGRAM):   ;
1170350    *;
MPRINT(EM_DIAGRAM):   *;
1170351    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170352    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_prelim_title  ,NOQUOTE,
1170352  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Prelim";
1170353    prelim 24 outest=_anpre pretime=35 preiter=25
MPRINT(EM_DIAGRAM):   prelim 24 outest=_anpre pretime=35 preiter=25 tech =
Default inest = EMWS8.AutoNeural21_ESTDS bylabel ;
NOTE:  Synchronizing the objectives and the Solution.
NOTE: Convergence criterion (FCONV=0.0001) satisfied.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 25 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANPRE has 49 observations and 795 variables.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
MPRINT(EM_DIAGRAM):   *;
1170354    tech = Default
1170355    inest = EMWS8.AutoNeural21_ESTDS bylabel
1170356    ;
1170357    *;
1170358    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170359    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1170359  ! Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX : ))";
MPRINT(EM_DIAGRAM):   title10 "Search # 2 FUNNEL LAYERS trial # 3 : SOFTMAX :
Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=854
maxiter=50 tech = Default;
WARNING: CONGRA Optimization cannot be completed.
NOTE: CONGRA needs more than 50 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 53 observations and 795 variables.
NOTE: The data set WORK._ANFIT has 104 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1170360    train estiter=1 outest=_anest outfit=_anfit maxtime=854 maxiter=50
MPRINT(EM_DIAGRAM):   run;
1170361    tech = Default;
1170362    ;
1170363    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           41.99 seconds
      cpu time            41.63 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: The PROCEDURE NEURAL printed page 943.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           42.00 seconds
      cpu time            41.63 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170364    *;
1170365    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1170366    var _iter_ _aic_ _averr_ _misc_
1170367    _vaverr_ _vmisc_
1170368    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170369    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 944.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170370    *------------------------------------------------------------*;
1170371    * Extract best iteration;
1170372    ;
1170373    *------------------------------------------------------------*;
1170374    %global _iter;
1170375    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1170376    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1170377    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1170378    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1170379    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1170380    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1170381    end;
MPRINT(EM_DIAGRAM):   end;
1170382    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 52 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170383    *;
 
1170384    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1170385    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1170386    if _ITER_ eq 27 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 then do;
1170387    output;
MPRINT(EM_DIAGRAM):   output;
1170388    stop;
MPRINT(EM_DIAGRAM):   stop;
1170389    end;
MPRINT(EM_DIAGRAM):   end;
1170390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 28 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 795
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170391    *;
1170392    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170393    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1170394    if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 27 and _NAME_ eq "OVERALL" then do;
1170395    output;
MPRINT(EM_DIAGRAM):   output;
1170396    stop;
MPRINT(EM_DIAGRAM):   stop;
1170397    end;
MPRINT(EM_DIAGRAM):   end;
1170398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 56 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170399    *;
MPRINT(EM_DIAGRAM):    *;
1170400    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170401    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1170401  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1170402    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1170403    var _iter_ _aic_ _averr_ _misc_
1170404    _vaverr_ _vmisc_
1170405    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170406    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 945.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170407    title9;
MPRINT(EM_DIAGRAM):   title9;
1170408    title10;
MPRINT(EM_DIAGRAM):   title10;
1170409    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170410    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170411    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170413    data work.tmp_outfit;
MPRINT(EM_DIAGRAM):    data work.tmp_outfit;
1170414    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170415    if _NAME_ = 'OVERALL';
MPRINT(EM_DIAGRAM):   if _NAME_ = 'OVERALL';
1170416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set WORK.TMP_OUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170417    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1170418    ;
MPRINT(EM_DIAGRAM):   ;
1170419    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170420    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170421    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1170422    _func_ = "SOFTMAX";
MPRINT(EM_DIAGRAM):   _func_ = "SOFTMAX";
1170423    _status_ = "reject";
MPRINT(EM_DIAGRAM):   _status_ = "reject";
1170424    _step_ = "FUNNEL LAYERS 2";
MPRINT(EM_DIAGRAM):   _step_ = "FUNNEL LAYERS 2";
1170425    _index_ = 2;
MPRINT(EM_DIAGRAM):   _index_ = 2;
1170426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170427    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1170428    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1170429    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 9 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170430    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1170431    set WORK.SAVEDS_AUTONEUR_1V_72OF;
MPRINT(EM_DIAGRAM):   set WORK.SAVEDS_AUTONEUR_1V_72OF;
1170432    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      WORK.SAVEDS_AUTONEUR_1V_72OF.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170433    *;
MPRINT(EM_DIAGRAM):    *;
1170434    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1170435    validdata=EMWS8.BINNING_VALIDATE
1170436    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1170437    *;
MPRINT(EM_DIAGRAM):   *;
1170438    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1170439    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1170440    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1170441    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1170442    target DepVar / level=NOMINAL id=DepVar
1170443    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1170444    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170445    * Direct connection;
MPRINT(EM_DIAGRAM):   * Direct connection;
1170446    ;
MPRINT(EM_DIAGRAM):   ;
1170447    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170448    connect interval DepVar;
MPRINT(EM_DIAGRAM):   connect interval DepVar;
1170449    connect nominal DepVar;
MPRINT(EM_DIAGRAM):   connect nominal DepVar;
1170450    *;
MPRINT(EM_DIAGRAM):   *;
1170451    netoptions ranscale = 1;
MPRINT(EM_DIAGRAM):   netoptions ranscale = 1;
1170452    *;
MPRINT(EM_DIAGRAM):   *;
1170453    initial
1170454    inest = EMWS8.AutoNeural21_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest = EMWS8.AutoNeural21_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
1170455    ;
MPRINT(EM_DIAGRAM):   ;
1170456    *;
MPRINT(EM_DIAGRAM):   *;
1170457    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170458    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_train_title  ,NOQUOTE,
1170458  ! Final Training))";
MPRINT(EM_DIAGRAM):   title10 "Final Training Training";
MPRINT(EM_DIAGRAM):   train estiter=1 outest=_anest outfit=_anfit maxtime=1687
maxiter=5 tech = Default;
NOTE:  Synchronizing the objectives and the Solution.
WARNING: QUANEW Optimization cannot be completed.
NOTE: QUANEW needs more than 5 iterations or 2147483647 function calls.
NOTE: The data set WORK._ANEST has 8 observations and 144 variables.
NOTE: The data set WORK._ANFIT has 14 observations and 36 variables.
MPRINT(EM_DIAGRAM):   ;
1170459    train estiter=1 outest=_anest outfit=_anfit maxtime=1687 maxiter=5
MPRINT(EM_DIAGRAM):   run;
1170460    tech = Default;
1170461    ;
1170462    run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.41 seconds
      cpu time            0.42 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.42 seconds
      cpu time            0.42 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170463    *;
1170464    proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
MPRINT(EM_DIAGRAM):   proc print data=_anfit(where=(_name_ eq 'OVERALL')) noobs;
1170465    var _iter_ _aic_ _averr_ _misc_
1170466    _vaverr_ _vmisc_
1170467    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170468    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _name_='OVERALL';
NOTE: The PROCEDURE PRINT printed page 946.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Extract best iteration;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170469    *------------------------------------------------------------*;
1170470    * Extract best iteration;
1170471    ;
1170472    *------------------------------------------------------------*;
1170473    %global _iter;
1170474    data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
1170475    set _anfit(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set _anfit(where=(_NAME_ eq 'OVERALL'));
1170476    retain _min 1e+64;
MPRINT(EM_DIAGRAM):   retain _min 1e+64;
1170477    if _VMISC_ < _min then do;
MPRINT(EM_DIAGRAM):   if _VMISC_ < _min then do;
1170478    _min = _VMISC_;
MPRINT(EM_DIAGRAM):   _min = _VMISC_;
1170479    call symput('_iter',put(_ITER_, 6.));
MPRINT(EM_DIAGRAM):   call symput('_iter',put(_ITER_, 6.));
1170480    end;
MPRINT(EM_DIAGRAM):   end;
1170481    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set WORK._ANFIT.
      WHERE _NAME_='OVERALL';
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170482    *;
 
1170483    data EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_ESTDS;
1170484    set _anest;
MPRINT(EM_DIAGRAM):   set _anest;
1170485    if _ITER_ eq 0 then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 then do;
1170486    output;
MPRINT(EM_DIAGRAM):   output;
1170487    stop;
MPRINT(EM_DIAGRAM):   stop;
1170488    end;
MPRINT(EM_DIAGRAM):   end;
1170489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK._ANEST.
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   *;
1170490    *;
1170491    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170492    set _anfit;
MPRINT(EM_DIAGRAM):   set _anfit;
1170493    if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
MPRINT(EM_DIAGRAM):   if _ITER_ eq 0 and _NAME_ eq "OVERALL" then do;
1170494    output;
MPRINT(EM_DIAGRAM):   output;
1170495    stop;
MPRINT(EM_DIAGRAM):   stop;
1170496    end;
MPRINT(EM_DIAGRAM):   end;
1170497    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK._ANFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170498    *;
MPRINT(EM_DIAGRAM):    *;
1170499    title9 " ";
MPRINT(EM_DIAGRAM):   title9 " ";
1170500    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_selectediteration_title
1170500  ! , NOQUOTE, _VMISC_))";
MPRINT(EM_DIAGRAM):   title10 "Selected Iteration based on _VMISC_";
1170501    proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_OUTFIT noobs;
1170502    var _iter_ _aic_ _averr_ _misc_
1170503    _vaverr_ _vmisc_
1170504    ;
MPRINT(EM_DIAGRAM):   var _iter_ _aic_ _averr_ _misc_ _vaverr_ _vmisc_ ;
1170505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The PROCEDURE PRINT printed page 947.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170506    title9;
MPRINT(EM_DIAGRAM):   title9;
1170507    title10;
MPRINT(EM_DIAGRAM):   title10;
1170508    * Accumulate history;
MPRINT(EM_DIAGRAM):    * Accumulate history;
1170509    ;
MPRINT(EM_DIAGRAM):   ;
1170510    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170511    set EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT;
1170512    length _func_ _status_ _step_ $16 _index_ 8;
MPRINT(EM_DIAGRAM):   length _func_ _status_ _step_ $16 _index_ 8;
1170513    _func_ = "";
MPRINT(EM_DIAGRAM):   _func_ = "";
1170514    _status_ = "Final";
MPRINT(EM_DIAGRAM):   _status_ = "Final";
1170515    _step_ = "";
MPRINT(EM_DIAGRAM):   _step_ = "";
1170516    _index_ = 4;
MPRINT(EM_DIAGRAM):   _index_ = 4;
1170517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 1 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170518    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_HISTORY;
1170519    set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY EMWS8.AutoNeural21_OUTFIT;
1170520    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: There were 1 observations read from the data set
      EMWS8.AUTONEURAL21_OUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 10 observations and 40
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170521    title9 " ";
MPRINT(EM_DIAGRAM):    title9 " ";
1170522    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_finaltrainhistory_title
1170522  ! , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Final Training History";
1170523    proc print data=EMWS8.AutoNeural21_HISTORY noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_HISTORY noobs;
1170524    var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
1170525    _vaverr_ _vmisc_
1170526    ;
MPRINT(EM_DIAGRAM):   var _step_ _func_ _status_ _iter_ _averr_ _misc_ _aic_
_vaverr_ _vmisc_ ;
1170527    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: The PROCEDURE PRINT printed page 948.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170528    data work.keep_history;
MPRINT(EM_DIAGRAM):   data work.keep_history;
1170529    set EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY;
1170530    if _status_='keep';
MPRINT(EM_DIAGRAM):   if _status_='keep';
1170531    if _func_='DIRECT' then neurons=0;
MPRINT(EM_DIAGRAM):   if _func_='DIRECT' then neurons=0;
1170532    else neurons=6;
MPRINT(EM_DIAGRAM):   else neurons=6;
1170533    label neurons="%sysfunc(sasmsg(sashelp.dmine,
1170533  ! rpt_numberneurons_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label neurons= "Number of Neurons";
1170534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set
      EMWS8.AUTONEURAL21_HISTORY.
NOTE: The data set WORK.KEEP_HISTORY has 1 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170535    title8 " ";
MPRINT(EM_DIAGRAM):   title8 " ";
1170536    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_finalmodel_title  ,
1170536  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Final Model";
1170537    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_stopping_title  ,
1170537  ! NOQUOTE, %nrbquote(Termination criteria were satisfied: overfitting
1170537  ! based on _VMISC_)))";
MPRINT(EM_DIAGRAM):   title10 "Stopping: Termination criteria were satisfied:
overfitting based on _VMISC_";
1170538    proc print data=work.keep_history noobs;
MPRINT(EM_DIAGRAM):   proc print data=work.keep_history noobs;
1170539    var _func_ _averr_
1170540    _vaverr_
1170541    neurons;
MPRINT(EM_DIAGRAM):   var _func_ _averr_ _vaverr_ neurons;
1170542    sum neurons;
MPRINT(EM_DIAGRAM):   sum neurons;
1170543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.KEEP_HISTORY.
NOTE: The PROCEDURE PRINT printed page 949.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170544    title8;
MPRINT(EM_DIAGRAM):   title8;
1170545    title9;
MPRINT(EM_DIAGRAM):   title9;
1170546    title10;
MPRINT(EM_DIAGRAM):   title10;
1170547    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170548    * AutoNeural Final Network;
MPRINT(EM_DIAGRAM):   * AutoNeural Final Network;
1170549    ;
MPRINT(EM_DIAGRAM):   ;
1170550    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170551    *;
MPRINT(EM_DIAGRAM):   *;
1170552    proc neural data=EM_AutoNeural21 dmdbcat=WORK.AutoNeural21_DMDB
1170553    validdata=EMWS8.BINNING_VALIDATE
1170554    ;
MPRINT(EM_DIAGRAM):   proc neural data=EM_AutoNeural21
dmdbcat=WORK.AutoNeural21_DMDB validdata=EMWS8.BINNING_VALIDATE ;
1170555    *;
MPRINT(EM_DIAGRAM):   *;
1170556    nloptions noprint;
MPRINT(EM_DIAGRAM):   nloptions noprint;
1170557    performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   performance alldetails noutilfile;
MPRINT(EM_DIAGRAM):   input
1170558    input %INTINPUTS / level=interval id=interval;
MPRINT(INTINPUTS):   Year_Birth
MPRINT(EM_DIAGRAM):   / level=interval id=interval;
MPRINT(EM_DIAGRAM):   input
1170559    input %NOMINPUTS / level=nominal id=nominal;
MPRINT(NOMINPUTS):   GRP_AcceptedCmp5 GRP_AcceptedCmpTotal GRP_Frq GRP_Income
GRP_Mnt GRP_MntFishProducts GRP_MntGoldProds GRP_MntMeatProducts
GRP_MntSweetProducts GRP_MntWines GRP_NumCatalogPurchases GRP_NumDistPurchases
GRP_NumWebPurchases GRP_NumWebVisitsMonth GRP_RFMstat GRP_RMntFrq GRP_Recency
MPRINT(EM_DIAGRAM):   / level=nominal id=nominal;
1170560    target DepVar / level=NOMINAL id=DepVar
1170561    ;
MPRINT(EM_DIAGRAM):   target DepVar / level=NOMINAL id=DepVar ;
1170562    *;
MPRINT(EM_DIAGRAM):   *;
1170563    initial inest= EMWS8.AutoNeural21_ESTDS bylabel;
MPRINT(EM_DIAGRAM):   initial inest= EMWS8.AutoNeural21_ESTDS bylabel;
NOTE: The data set EMWS8.AUTONEURAL21_ESTDS has 1 observations and 144
      variables.
1170564    train tech=none;
MPRINT(EM_DIAGRAM):   train tech=none;
NOTE: No optimization performed.
1170565    code
1170565  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\SCO
1170565  ! RECODE.sas"
1170566    group=AutoNeural21
1170567    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\SCORECODE.sas"
 group=AutoNeural21 ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\SCORECODE.sas
      opened.
1170568    ;
MPRINT(EM_DIAGRAM):   ;
1170569    code
1170569  ! file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\RES
1170569  ! IDUALSCORECODE.sas"
1170570    group=AutoNeural21
1170571    residual
1170572    ;
MPRINT(EM_DIAGRAM):   code
file="C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\RESIDUALSCOREC
ODE.sas" group=AutoNeural21 residual ;
NOTE: External file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\RESIDUALSCOREC
      ODE.sas opened.
1170573    ;
MPRINT(EM_DIAGRAM):   ;
1170574    score data=EMWS8.BINNING_TRAIN out=_NULL_
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
1170575    outfit=WORK.FIT1
1170576    role=TRAIN
1170577    outkey=EMWS8.AutoNeural21_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_TRAIN out=_NULL_
outfit=WORK.FIT1 role=TRAIN outkey=EMWS8.AutoNeural21_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL21_OUTKEY has 140 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_TRAIN has . observations and 62 variables.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: The data set WORK.FIT1 has 2 observations and 23 variables.
1170578    score data=EMWS8.BINNING_VALIDATE out=_NULL_
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
1170579    outfit=WORK.FIT2
1170580    outkey=EMWS8.AutoNeural21_OUTKEY;
MPRINT(EM_DIAGRAM):   score data=EMWS8.BINNING_VALIDATE out=_NULL_
outfit=WORK.FIT2 outkey=EMWS8.AutoNeural21_OUTKEY;
NOTE: The data set EMWS8.AUTONEURAL21_OUTKEY has 140 observations and 8
      variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: The data set WORK.FIT2 has 2 observations and 15 variables.
1170581    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.EM_AUTONEURAL21 has 2374 observations and 19 variables.
NOTE: The data set EMWS8.BINNING_VALIDATE has . observations and 62 variables.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.29 seconds
      cpu time            0.28 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: Closing the Neural Application.
NOTE: PROCEDURE NEURAL used (Total process time):
      real time           0.30 seconds
      cpu time            0.31 seconds
 
 
1170582    data EMWS8.AutoNeural21_OUTFIT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_OUTFIT;
1170583    merge WORK.FIT1 WORK.FIT2;
MPRINT(EM_DIAGRAM):   merge WORK.FIT1 WORK.FIT2;
1170584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.FIT1.
NOTE: There were 2 observations read from the data set WORK.FIT2.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 2 observations and 36
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170585    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170586    * Generate Weights Plotting data set;
MPRINT(EM_DIAGRAM):   * Generate Weights Plotting data set;
1170587    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):
*------------------------------------------------------------*;
1170588    data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_ _obj_ _objerr_
1170588  ! _averr_ _p_num_ where= (_type_ eq "PARMS"));
MPRINT(EM_DIAGRAM):   data tempweight ( drop = _tech_ _decay_ _seed_ _nobj_
_obj_ _objerr_ _averr_ _p_num_ where= (_type_ eq "PARMS"));
1170589    set EMWS8.AutoNeural21_ESTDS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_ESTDS;
1170590    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_ESTDS.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 136 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170591    proc sort;
MPRINT(EM_DIAGRAM):   proc sort;
1170592    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1170593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set WORK.TEMPWEIGHT has 1 observations and 136 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1170594    proc transpose data=tempweight out=EMWS8.AutoNeural21_WEIGHTS;
MPRINT(EM_DIAGRAM):   proc transpose data=tempweight
out=EMWS8.AutoNeural21_WEIGHTS;
1170595    by _name_;
MPRINT(EM_DIAGRAM):   by _name_;
1170596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.TEMPWEIGHT.
NOTE: The data set EMWS8.AUTONEURAL21_WEIGHTS has 134 observations and 3
      variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1170597    data EMWS8.AutoNeural21_WEIGHTS;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_WEIGHTS;
1170598    set EMWS8.AutoNeural21_WEIGHTS;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_WEIGHTS;
1170599    FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
MPRINT(EM_DIAGRAM):   FROM = ktrim(kleft(kscan(_LABEL_, 1, '-->')));
1170600    TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
MPRINT(EM_DIAGRAM):   TO = ktrim(kleft(kscan(_LABEL_, 2, '>')));
1170601    WEIGHT = COL1;
MPRINT(EM_DIAGRAM):   WEIGHT = COL1;
1170602    if (TO eq '') or (FROM eq '') then delete;
MPRINT(EM_DIAGRAM):   if (TO eq '') or (FROM eq '') then delete;
1170603    label _LABEL_ ="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel  ,
1170603  ! NOQUOTE))" FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_from_vlabel  ,
1170603  ! NOQUOTE))" TO = "%sysfunc(sasmsg(sashelp.dmine, rpt_into_vlabel  ,
1170603  ! NOQUOTE))" WEIGHT =
1170604       "%sysfunc(sasmsg(sashelp.dmine, rpt_weight_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _LABEL_ = "Label" FROM = "From" TO = "Into" WEIGHT
= "Weight";
1170605    keep FROM TO WEIGHT _LABEL_;
MPRINT(EM_DIAGRAM):   keep FROM TO WEIGHT _LABEL_;
1170606    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 134 observations read from the data set
      EMWS8.AUTONEURAL21_WEIGHTS.
NOTE: The data set EMWS8.AUTONEURAL21_WEIGHTS has 129 observations and 4
      variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   * restore printing options;
MPRINT(EM_DIAGRAM):   ;
1170607    * restore printing options;
1170608    ;
1170609    title10;
MPRINT(EM_DIAGRAM):   title10;
1170610    options linesize=95;
MPRINT(EM_DIAGRAM):   options linesize=95;
1170611    options pagesize=10000;
MPRINT(EM_DIAGRAM):   options pagesize=10000;
1170612    options nonumber;
MPRINT(EM_DIAGRAM):   options nonumber;
1170613    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1170614    options nodate;
MPRINT(EM_DIAGRAM):   options nodate;
MPRINT(EM_DIAGRAM):   *;
1170615    *;
1170616    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1170617    delete EM_AutoNeural21;
MPRINT(EM_DIAGRAM):   delete EM_AutoNeural21;
1170618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.EM_AUTONEURAL21 (memtype=DATA).
1170619    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1170620    data EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_HISTORY;
1170621    set EMWS8.AutoNeural21_HISTORY;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_HISTORY;
1170622    label _T_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainstep_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _T_ = "Training Step";
1170623    label _iter_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_trainiterations_vlabel  ,
1170623  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _iter_ = "Training Iterations";
1170624    _T_ = _N_ -1;
MPRINT(EM_DIAGRAM):   _T_ = _N_ -1;
1170625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.AUTONEURAL21_HISTORY.
NOTE: The data set EMWS8.AUTONEURAL21_HISTORY has 10 observations and 41 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                28. April 2016
Time:                17.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1KOPR4I
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMSCORE.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1KOPR4I new;
MPRINT(EM_DIAGRAM):   run;
1170727    filename emflow
1170727  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1170728    *------------------------------------------------------------*;
1170729    * AutoNeural21: Scoring DATA data;
1170730    *------------------------------------------------------------*;
1170731    data EMWS8.AutoNeural21_TRAIN
1170732    / view=EMWS8.AutoNeural21_TRAIN
1170733    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_TRAIN / view=EMWS8.AutoNeural21_TRAIN ;
1170734    set EMWS8.BINNING_TRAIN
1170735    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_TRAIN ;
1170736    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMFLOWSCORE.sas.
1170737   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1170738   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1170739   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1170740   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1170741   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1170742   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1170743   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1170744   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1170745   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1170746   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1170747   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1170748   +LENGTH _WARN_ $4
1170749   +      F_DepVar  $ 12
1170750   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1170751   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1170752   +
1170753   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1170754   +
1170755   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1170756   +
1170757   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1170758   +
1170759   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1170760   +
1170761   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1170762   +
1170763   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1170764   +
1170765   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1170766   +
1170767   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1170768   +
1170769   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1170770   +
1170771   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1170772   +
1170773   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1170774   +
1170775   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1170776   +
1170777   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1170778   +
1170779   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1170780   +
1170781   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1170782   +
1170783   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1170784   +
1170785   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1170786   +
1170787   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1170788   +
1170789   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1170790   +
1170791   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1170792   +
1170793   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1170794   +
1170795   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1170796   +
1170797   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1170798   +
1170799   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1170800   +
1170801   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1170802   +
1170803   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1170804   +
1170805   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1170806   +
1170807   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1170808   +
1170809   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1170810   +
1170811   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1170812   +
1170813   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1170814   +
1170815   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1170816   +
1170817   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1170818   +
1170819   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1170820   +
1170821   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1170822   +
1170823   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1170824   +
1170825   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1170826   +
1170827   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1170828   +
1170829   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1170830   +
1170831   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1170832   +
1170833   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1170834   +
1170835   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1170836   +
1170837   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1170838   +
1170839   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1170840   +
1170841   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1170842   +
1170843   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1170844   +
1170845   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1170846   +
1170847   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1170848   +
1170849   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1170850   +
1170851   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1170852   +
1170853   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1170854   +
1170855   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1170856   +
1170857   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1170858   +
1170859   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1170860   +
1170861   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1170862   +
1170863   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1170864   +
1170865   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1170866   +
1170867   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1170868   +
1170869   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1170870   +
1170871   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1170872   +
1170873   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1170874   +
1170875   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1170876   +
1170877   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1170878   +
1170879   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1170880   +
1170881   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1170882   +
1170883   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1170884   +
1170885   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1170886   +
1170887   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1170888   +
1170889   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1170890   +
1170891   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1170892   +
1170893   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1170894   +
1170895   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1170896   +
1170897   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1170898   +
1170899   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1170900   +
1170901   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1170902   +
1170903   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1170904   +
1170905   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1170906   +
1170907   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1170908   +
1170909   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1170910   +
1170911   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1170912   +
1170913   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1170914   +
1170915   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1170916   +
1170917   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1170918   +
1170919   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1170920   +
1170921   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1170922   +
1170923   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1170924   +
1170925   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1170926   +
1170927   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1170928   +
1170929   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1170930   +
1170931   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1170932   +
1170933   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1170934   +
1170935   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1170936   +
1170937   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1170938   +
1170939   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1170940   +
1170941   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1170942   +
1170943   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1170944   +
1170945   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1170946   +
1170947   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1170948   +
1170949   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1170950   +
1170951   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1170952   +
1170953   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1170954   +
1170955   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1170956   +
1170957   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1170958   +
1170959   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1170960   +
1170961   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1170962   +
1170963   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1170964   +
1170965   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1170966   +
1170967   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1170968   +
1170969   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1170970   +
1170971   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1170972   +
1170973   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1170974   +
1170975   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1170976   +
1170977   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1170978   +
1170979   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1170980   +
1170981   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1170982   +
1170983   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1170984   +
1170985   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1170986   +
1170987   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1170988   +
1170989   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1170990   +
1170991   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1170992   +
1170993   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1170994   +
1170995   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1170996   +
1170997   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1170998   +
1170999   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1171000   +
1171001   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1171002   +
1171003   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1171004   +
1171005   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1171006   +
1171007   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1171008   +
1171009   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1171010   +
1171011   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1171012   +
1171013   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1171014   +
1171015   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1171016   +
1171017   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1171018   +
1171019   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1171020   +
1171021   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1171022   +
1171023   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1171024   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1171025   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1171026   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1171027   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171028   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171029   +end;
MPRINT(EM_DIAGRAM):   end;
1171030   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171031   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171032   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1171033   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171034   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171035   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1171036   +   end;
MPRINT(EM_DIAGRAM):   end;
1171037   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1171038   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1171039   +   end;
MPRINT(EM_DIAGRAM):   end;
1171040   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171041   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1171042   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171043   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171044   +   end;
MPRINT(EM_DIAGRAM):   end;
1171045   +end;
MPRINT(EM_DIAGRAM):   end;
1171046   +
1171047   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1171048   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1171049   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1171050   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1171051   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171052   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171053   +end;
MPRINT(EM_DIAGRAM):   end;
1171054   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171055   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171056   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1171057   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171058   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171059   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1171060   +   end;
MPRINT(EM_DIAGRAM):   end;
1171061   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1171062   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1171063   +   end;
MPRINT(EM_DIAGRAM):   end;
1171064   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171065   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1171066   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171067   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171068   +   end;
MPRINT(EM_DIAGRAM):   end;
1171069   +end;
MPRINT(EM_DIAGRAM):   end;
1171070   +
1171071   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1171072   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1171073   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1171074   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171075   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1171076   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1171077   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1171078   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1171079   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1171080   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1171081   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1171082   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1171083   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1171084   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1171085   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1171086   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1171087   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1171088   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1171089   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1171090   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1171091   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1171092   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1171093   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1171094   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171095   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171096   +end;
MPRINT(EM_DIAGRAM):   end;
1171097   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171098   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171099   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1171100   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171101   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171102   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1171103   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1171104   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171105   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171106   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1171107   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171108   +            end;
MPRINT(EM_DIAGRAM):   end;
1171109   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171110   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171111   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1171112   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1171113   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1171114   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1171115   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1171116   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1171117   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1171118   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1171119   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1171120   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171121   +               end;
MPRINT(EM_DIAGRAM):   end;
1171122   +            end;
MPRINT(EM_DIAGRAM):   end;
1171123   +         end;
MPRINT(EM_DIAGRAM):   end;
1171124   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171125   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171126   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1171127   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171128   +            end;
MPRINT(EM_DIAGRAM):   end;
1171129   +         end;
MPRINT(EM_DIAGRAM):   end;
1171130   +      end;
MPRINT(EM_DIAGRAM):   end;
1171131   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171132   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171133   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1171134   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171135   +         end;
MPRINT(EM_DIAGRAM):   end;
1171136   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171137   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171138   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1171139   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171140   +            end;
MPRINT(EM_DIAGRAM):   end;
1171141   +         end;
MPRINT(EM_DIAGRAM):   end;
1171142   +      end;
MPRINT(EM_DIAGRAM):   end;
1171143   +   end;
MPRINT(EM_DIAGRAM):   end;
1171144   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171145   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171146   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1171147   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171148   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1171149   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171150   +            end;
MPRINT(EM_DIAGRAM):   end;
1171151   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171152   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171153   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1171154   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171155   +               end;
MPRINT(EM_DIAGRAM):   end;
1171156   +            end;
MPRINT(EM_DIAGRAM):   end;
1171157   +         end;
MPRINT(EM_DIAGRAM):   end;
1171158   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171159   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171160   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1171161   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171162   +            end;
MPRINT(EM_DIAGRAM):   end;
1171163   +         end;
MPRINT(EM_DIAGRAM):   end;
1171164   +      end;
MPRINT(EM_DIAGRAM):   end;
1171165   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171166   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171167   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1171168   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171169   +         end;
MPRINT(EM_DIAGRAM):   end;
1171170   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171171   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171172   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1171173   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171174   +            end;
MPRINT(EM_DIAGRAM):   end;
1171175   +         end;
MPRINT(EM_DIAGRAM):   end;
1171176   +      end;
MPRINT(EM_DIAGRAM):   end;
1171177   +   end;
MPRINT(EM_DIAGRAM):   end;
1171178   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171179   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1171180   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1171181   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1171182   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1171183   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1171184   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1171185   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1171186   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1171187   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1171188   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171189   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171190   +   end;
MPRINT(EM_DIAGRAM):   end;
1171191   +end;
MPRINT(EM_DIAGRAM):   end;
1171192   +
1171193   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1171194   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1171195   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1171196   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171197   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1171198   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1171199   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1171200   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1171201   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1171202   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1171203   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1171204   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1171205   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1171206   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1171207   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1171208   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1171209   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1171210   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1171211   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1171212   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1171213   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1171214   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1171215   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1171216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171218   +end;
MPRINT(EM_DIAGRAM):   end;
1171219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171221   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1171222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171223   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171224   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1171225   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1171226   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171227   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171228   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1171229   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171230   +            end;
MPRINT(EM_DIAGRAM):   end;
1171231   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171232   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171233   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1171234   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1171235   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1171236   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1171237   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1171238   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1171239   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1171240   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1171241   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1171242   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171243   +               end;
MPRINT(EM_DIAGRAM):   end;
1171244   +            end;
MPRINT(EM_DIAGRAM):   end;
1171245   +         end;
MPRINT(EM_DIAGRAM):   end;
1171246   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171247   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171248   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1171249   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171250   +            end;
MPRINT(EM_DIAGRAM):   end;
1171251   +         end;
MPRINT(EM_DIAGRAM):   end;
1171252   +      end;
MPRINT(EM_DIAGRAM):   end;
1171253   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171254   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171255   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1171256   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171257   +         end;
MPRINT(EM_DIAGRAM):   end;
1171258   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171259   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171260   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1171261   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171262   +            end;
MPRINT(EM_DIAGRAM):   end;
1171263   +         end;
MPRINT(EM_DIAGRAM):   end;
1171264   +      end;
MPRINT(EM_DIAGRAM):   end;
1171265   +   end;
MPRINT(EM_DIAGRAM):   end;
1171266   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171267   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171268   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1171269   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171270   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1171271   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171272   +            end;
MPRINT(EM_DIAGRAM):   end;
1171273   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171274   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171275   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1171276   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171277   +               end;
MPRINT(EM_DIAGRAM):   end;
1171278   +            end;
MPRINT(EM_DIAGRAM):   end;
1171279   +         end;
MPRINT(EM_DIAGRAM):   end;
1171280   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171281   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171282   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1171283   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171284   +            end;
MPRINT(EM_DIAGRAM):   end;
1171285   +         end;
MPRINT(EM_DIAGRAM):   end;
1171286   +      end;
MPRINT(EM_DIAGRAM):   end;
1171287   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171288   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171289   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1171290   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171291   +         end;
MPRINT(EM_DIAGRAM):   end;
1171292   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171293   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171294   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1171295   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171296   +            end;
MPRINT(EM_DIAGRAM):   end;
1171297   +         end;
MPRINT(EM_DIAGRAM):   end;
1171298   +      end;
MPRINT(EM_DIAGRAM):   end;
1171299   +   end;
MPRINT(EM_DIAGRAM):   end;
1171300   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171301   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1171302   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1171303   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1171304   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1171305   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1171306   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1171307   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1171308   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1171309   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1171310   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171311   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171312   +   end;
MPRINT(EM_DIAGRAM):   end;
1171313   +end;
MPRINT(EM_DIAGRAM):   end;
1171314   +
1171315   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1171316   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1171317   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1171318   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171319   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1171320   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1171321   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1171322   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1171323   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1171324   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1171325   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1171326   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1171327   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1171328   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1171329   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1171330   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1171331   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1171332   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1171333   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1171334   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1171335   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1171336   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1171337   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1171338   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171339   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171340   +end;
MPRINT(EM_DIAGRAM):   end;
1171341   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171342   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171343   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1171344   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171345   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171346   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1171347   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1171348   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171349   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171350   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1171351   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171352   +            end;
MPRINT(EM_DIAGRAM):   end;
1171353   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171354   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171355   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1171356   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1171357   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1171358   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1171359   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1171360   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1171361   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1171362   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1171363   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1171364   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171365   +               end;
MPRINT(EM_DIAGRAM):   end;
1171366   +            end;
MPRINT(EM_DIAGRAM):   end;
1171367   +         end;
MPRINT(EM_DIAGRAM):   end;
1171368   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171369   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171370   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1171371   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171372   +            end;
MPRINT(EM_DIAGRAM):   end;
1171373   +         end;
MPRINT(EM_DIAGRAM):   end;
1171374   +      end;
MPRINT(EM_DIAGRAM):   end;
1171375   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171376   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171377   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1171378   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171379   +         end;
MPRINT(EM_DIAGRAM):   end;
1171380   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171381   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171382   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1171383   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171384   +            end;
MPRINT(EM_DIAGRAM):   end;
1171385   +         end;
MPRINT(EM_DIAGRAM):   end;
1171386   +      end;
MPRINT(EM_DIAGRAM):   end;
1171387   +   end;
MPRINT(EM_DIAGRAM):   end;
1171388   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171389   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171390   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1171391   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171392   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1171393   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171394   +            end;
MPRINT(EM_DIAGRAM):   end;
1171395   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171396   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171397   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1171398   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171399   +               end;
MPRINT(EM_DIAGRAM):   end;
1171400   +            end;
MPRINT(EM_DIAGRAM):   end;
1171401   +         end;
MPRINT(EM_DIAGRAM):   end;
1171402   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171403   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171404   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1171405   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171406   +            end;
MPRINT(EM_DIAGRAM):   end;
1171407   +         end;
MPRINT(EM_DIAGRAM):   end;
1171408   +      end;
MPRINT(EM_DIAGRAM):   end;
1171409   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171410   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171411   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1171412   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171413   +         end;
MPRINT(EM_DIAGRAM):   end;
1171414   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171415   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171416   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1171417   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171418   +            end;
MPRINT(EM_DIAGRAM):   end;
1171419   +         end;
MPRINT(EM_DIAGRAM):   end;
1171420   +      end;
MPRINT(EM_DIAGRAM):   end;
1171421   +   end;
MPRINT(EM_DIAGRAM):   end;
1171422   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171423   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1171424   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1171425   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1171426   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1171427   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1171428   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1171429   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1171430   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1171431   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1171432   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171433   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171434   +   end;
MPRINT(EM_DIAGRAM):   end;
1171435   +end;
MPRINT(EM_DIAGRAM):   end;
1171436   +
1171437   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1171438   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1171439   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1171440   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1171441   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171442   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1171443   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1171444   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1171445   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1171446   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1171447   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1171448   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1171449   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1171450   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1171451   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1171452   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1171453   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1171454   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1171455   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1171456   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1171457   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1171458   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1171459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171461   +end;
MPRINT(EM_DIAGRAM):   end;
1171462   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171464   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1171465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171466   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171467   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1171468   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1171469   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171470   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171471   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1171472   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171473   +            end;
MPRINT(EM_DIAGRAM):   end;
1171474   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171475   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171476   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1171477   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1171478   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1171479   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1171480   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1171481   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1171482   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1171483   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1171484   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171485   +               end;
MPRINT(EM_DIAGRAM):   end;
1171486   +            end;
MPRINT(EM_DIAGRAM):   end;
1171487   +         end;
MPRINT(EM_DIAGRAM):   end;
1171488   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171489   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171490   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1171491   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171492   +            end;
MPRINT(EM_DIAGRAM):   end;
1171493   +         end;
MPRINT(EM_DIAGRAM):   end;
1171494   +      end;
MPRINT(EM_DIAGRAM):   end;
1171495   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171496   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171497   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1171498   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171499   +         end;
MPRINT(EM_DIAGRAM):   end;
1171500   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171501   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171502   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1171503   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171504   +            end;
MPRINT(EM_DIAGRAM):   end;
1171505   +         end;
MPRINT(EM_DIAGRAM):   end;
1171506   +      end;
MPRINT(EM_DIAGRAM):   end;
1171507   +   end;
MPRINT(EM_DIAGRAM):   end;
1171508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171509   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171510   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171511   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1171512   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171513   +         end;
MPRINT(EM_DIAGRAM):   end;
1171514   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171515   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171516   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1171517   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171518   +            end;
MPRINT(EM_DIAGRAM):   end;
1171519   +         end;
MPRINT(EM_DIAGRAM):   end;
1171520   +      end;
MPRINT(EM_DIAGRAM):   end;
1171521   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171522   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171523   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1171524   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171525   +         end;
MPRINT(EM_DIAGRAM):   end;
1171526   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171527   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171528   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1171529   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171530   +            end;
MPRINT(EM_DIAGRAM):   end;
1171531   +         end;
MPRINT(EM_DIAGRAM):   end;
1171532   +      end;
MPRINT(EM_DIAGRAM):   end;
1171533   +   end;
MPRINT(EM_DIAGRAM):   end;
1171534   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171535   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1171536   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1171537   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1171538   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1171539   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1171540   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1171541   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1171542   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1171543   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171544   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171545   +   end;
MPRINT(EM_DIAGRAM):   end;
1171546   +end;
MPRINT(EM_DIAGRAM):   end;
1171547   +
1171548   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1171549   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1171550   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1171551   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1171552   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171553   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1171554   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1171555   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1171556   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1171557   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1171558   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1171559   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1171560   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1171561   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1171562   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1171563   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1171564   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1171565   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1171566   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1171567   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1171568   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1171569   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1171570   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1171571   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1171572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171574   +end;
MPRINT(EM_DIAGRAM):   end;
1171575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171577   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1171578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171579   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171580   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1171581   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1171582   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171583   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171584   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1171585   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171586   +            end;
MPRINT(EM_DIAGRAM):   end;
1171587   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171588   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171589   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1171590   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1171591   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1171592   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1171593   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1171594   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1171595   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1171596   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1171597   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1171598   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171599   +               end;
MPRINT(EM_DIAGRAM):   end;
1171600   +            end;
MPRINT(EM_DIAGRAM):   end;
1171601   +         end;
MPRINT(EM_DIAGRAM):   end;
1171602   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171603   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171604   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1171605   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171606   +            end;
MPRINT(EM_DIAGRAM):   end;
1171607   +         end;
MPRINT(EM_DIAGRAM):   end;
1171608   +      end;
MPRINT(EM_DIAGRAM):   end;
1171609   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171610   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171611   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1171612   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171613   +         end;
MPRINT(EM_DIAGRAM):   end;
1171614   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171615   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171616   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1171617   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171618   +            end;
MPRINT(EM_DIAGRAM):   end;
1171619   +         end;
MPRINT(EM_DIAGRAM):   end;
1171620   +      end;
MPRINT(EM_DIAGRAM):   end;
1171621   +   end;
MPRINT(EM_DIAGRAM):   end;
1171622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171623   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171624   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1171625   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171626   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1171627   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171628   +            end;
MPRINT(EM_DIAGRAM):   end;
1171629   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171630   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171631   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1171632   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171633   +               end;
MPRINT(EM_DIAGRAM):   end;
1171634   +            end;
MPRINT(EM_DIAGRAM):   end;
1171635   +         end;
MPRINT(EM_DIAGRAM):   end;
1171636   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171637   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171638   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1171639   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171640   +            end;
MPRINT(EM_DIAGRAM):   end;
1171641   +         end;
MPRINT(EM_DIAGRAM):   end;
1171642   +      end;
MPRINT(EM_DIAGRAM):   end;
1171643   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171644   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171645   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1171646   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171647   +         end;
MPRINT(EM_DIAGRAM):   end;
1171648   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171649   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171650   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1171651   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171652   +            end;
MPRINT(EM_DIAGRAM):   end;
1171653   +         end;
MPRINT(EM_DIAGRAM):   end;
1171654   +      end;
MPRINT(EM_DIAGRAM):   end;
1171655   +   end;
MPRINT(EM_DIAGRAM):   end;
1171656   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171657   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1171658   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1171659   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1171660   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1171661   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1171662   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1171663   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1171664   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1171665   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1171666   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171667   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171668   +   end;
MPRINT(EM_DIAGRAM):   end;
1171669   +end;
MPRINT(EM_DIAGRAM):   end;
1171670   +
1171671   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1171672   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1171673   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1171674   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1171675   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171676   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1171677   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1171678   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1171679   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1171680   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1171681   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1171682   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1171683   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1171684   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1171685   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1171686   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1171687   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1171688   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1171689   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1171690   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1171691   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1171692   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1171693   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1171694   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1171695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171697   +end;
MPRINT(EM_DIAGRAM):   end;
1171698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171700   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1171701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171702   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171703   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1171704   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1171705   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171706   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171707   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1171708   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171709   +            end;
MPRINT(EM_DIAGRAM):   end;
1171710   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171711   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171712   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1171713   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1171714   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1171715   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1171716   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1171717   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1171718   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1171719   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1171720   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1171721   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171722   +               end;
MPRINT(EM_DIAGRAM):   end;
1171723   +            end;
MPRINT(EM_DIAGRAM):   end;
1171724   +         end;
MPRINT(EM_DIAGRAM):   end;
1171725   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171726   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171727   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1171728   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171729   +            end;
MPRINT(EM_DIAGRAM):   end;
1171730   +         end;
MPRINT(EM_DIAGRAM):   end;
1171731   +      end;
MPRINT(EM_DIAGRAM):   end;
1171732   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171733   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171734   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1171735   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171736   +         end;
MPRINT(EM_DIAGRAM):   end;
1171737   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171738   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171739   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1171740   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171741   +            end;
MPRINT(EM_DIAGRAM):   end;
1171742   +         end;
MPRINT(EM_DIAGRAM):   end;
1171743   +      end;
MPRINT(EM_DIAGRAM):   end;
1171744   +   end;
MPRINT(EM_DIAGRAM):   end;
1171745   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171746   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171747   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1171748   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171749   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1171750   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171751   +            end;
MPRINT(EM_DIAGRAM):   end;
1171752   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171753   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171754   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1171755   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171756   +               end;
MPRINT(EM_DIAGRAM):   end;
1171757   +            end;
MPRINT(EM_DIAGRAM):   end;
1171758   +         end;
MPRINT(EM_DIAGRAM):   end;
1171759   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171760   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171761   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1171762   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171763   +            end;
MPRINT(EM_DIAGRAM):   end;
1171764   +         end;
MPRINT(EM_DIAGRAM):   end;
1171765   +      end;
MPRINT(EM_DIAGRAM):   end;
1171766   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171767   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171768   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1171769   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171770   +         end;
MPRINT(EM_DIAGRAM):   end;
1171771   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171772   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171773   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1171774   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171775   +            end;
MPRINT(EM_DIAGRAM):   end;
1171776   +         end;
MPRINT(EM_DIAGRAM):   end;
1171777   +      end;
MPRINT(EM_DIAGRAM):   end;
1171778   +   end;
MPRINT(EM_DIAGRAM):   end;
1171779   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171780   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1171781   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1171782   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1171783   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1171784   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1171785   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1171786   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1171787   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1171788   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1171789   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171790   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171791   +   end;
MPRINT(EM_DIAGRAM):   end;
1171792   +end;
MPRINT(EM_DIAGRAM):   end;
1171793   +
1171794   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1171795   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1171796   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1171797   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1171798   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171799   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1171800   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1171801   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1171802   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1171803   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1171804   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1171805   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1171806   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1171807   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1171808   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1171809   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1171810   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1171811   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1171812   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1171813   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1171814   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1171815   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1171816   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171817   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171818   +end;
MPRINT(EM_DIAGRAM):   end;
1171819   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171820   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171821   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1171822   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171823   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171824   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1171825   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1171826   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171827   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171828   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1171829   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171830   +            end;
MPRINT(EM_DIAGRAM):   end;
1171831   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171832   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171833   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1171834   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1171835   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1171836   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1171837   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1171838   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1171839   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1171840   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1171841   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171842   +               end;
MPRINT(EM_DIAGRAM):   end;
1171843   +            end;
MPRINT(EM_DIAGRAM):   end;
1171844   +         end;
MPRINT(EM_DIAGRAM):   end;
1171845   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171846   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171847   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1171848   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171849   +            end;
MPRINT(EM_DIAGRAM):   end;
1171850   +         end;
MPRINT(EM_DIAGRAM):   end;
1171851   +      end;
MPRINT(EM_DIAGRAM):   end;
1171852   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171853   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171854   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1171855   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171856   +         end;
MPRINT(EM_DIAGRAM):   end;
1171857   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171858   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171859   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1171860   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171861   +            end;
MPRINT(EM_DIAGRAM):   end;
1171862   +         end;
MPRINT(EM_DIAGRAM):   end;
1171863   +      end;
MPRINT(EM_DIAGRAM):   end;
1171864   +   end;
MPRINT(EM_DIAGRAM):   end;
1171865   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171866   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171867   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171868   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1171869   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171870   +         end;
MPRINT(EM_DIAGRAM):   end;
1171871   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171872   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171873   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1171874   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171875   +            end;
MPRINT(EM_DIAGRAM):   end;
1171876   +         end;
MPRINT(EM_DIAGRAM):   end;
1171877   +      end;
MPRINT(EM_DIAGRAM):   end;
1171878   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171879   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1171880   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1171881   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171882   +         end;
MPRINT(EM_DIAGRAM):   end;
1171883   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171884   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1171885   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1171886   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171887   +            end;
MPRINT(EM_DIAGRAM):   end;
1171888   +         end;
MPRINT(EM_DIAGRAM):   end;
1171889   +      end;
MPRINT(EM_DIAGRAM):   end;
1171890   +   end;
MPRINT(EM_DIAGRAM):   end;
1171891   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1171892   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1171893   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1171894   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1171895   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1171896   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1171897   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1171898   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1171899   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1171900   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1171901   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171902   +   end;
MPRINT(EM_DIAGRAM):   end;
1171903   +end;
MPRINT(EM_DIAGRAM):   end;
1171904   +
1171905   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1171906   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1171907   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1171908   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1171909   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1171910   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1171911   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1171912   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1171913   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1171914   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1171915   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1171916   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1171917   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1171918   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1171919   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1171920   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1171921   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1171922   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1171923   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1171924   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1171925   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1171926   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1171927   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1171928   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1171929   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1171930   +end;
MPRINT(EM_DIAGRAM):   end;
1171931   +else do;
MPRINT(EM_DIAGRAM):   else do;
1171932   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1171933   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1171934   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1171935   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1171936   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1171937   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1171938   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1171939   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1171940   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1171941   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171942   +            end;
MPRINT(EM_DIAGRAM):   end;
1171943   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171944   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1171945   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1171946   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1171947   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1171948   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1171949   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1171950   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1171951   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1171952   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1171953   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1171954   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171955   +               end;
MPRINT(EM_DIAGRAM):   end;
1171956   +            end;
MPRINT(EM_DIAGRAM):   end;
1171957   +         end;
MPRINT(EM_DIAGRAM):   end;
1171958   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171959   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1171960   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1171961   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171962   +            end;
MPRINT(EM_DIAGRAM):   end;
1171963   +         end;
MPRINT(EM_DIAGRAM):   end;
1171964   +      end;
MPRINT(EM_DIAGRAM):   end;
1171965   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1171966   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1171967   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1171968   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171969   +         end;
MPRINT(EM_DIAGRAM):   end;
1171970   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171971   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1171972   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1171973   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171974   +            end;
MPRINT(EM_DIAGRAM):   end;
1171975   +         end;
MPRINT(EM_DIAGRAM):   end;
1171976   +      end;
MPRINT(EM_DIAGRAM):   end;
1171977   +   end;
MPRINT(EM_DIAGRAM):   end;
1171978   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1171979   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1171980   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1171981   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1171982   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1171983   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171984   +            end;
MPRINT(EM_DIAGRAM):   end;
1171985   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1171986   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1171987   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1171988   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171989   +               end;
MPRINT(EM_DIAGRAM):   end;
1171990   +            end;
MPRINT(EM_DIAGRAM):   end;
1171991   +         end;
MPRINT(EM_DIAGRAM):   end;
1171992   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1171993   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1171994   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1171995   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1171996   +            end;
MPRINT(EM_DIAGRAM):   end;
1171997   +         end;
MPRINT(EM_DIAGRAM):   end;
1171998   +      end;
MPRINT(EM_DIAGRAM):   end;
1171999   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172000   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172001   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1172002   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172003   +         end;
MPRINT(EM_DIAGRAM):   end;
1172004   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172005   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172006   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1172007   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172008   +            end;
MPRINT(EM_DIAGRAM):   end;
1172009   +         end;
MPRINT(EM_DIAGRAM):   end;
1172010   +      end;
MPRINT(EM_DIAGRAM):   end;
1172011   +   end;
MPRINT(EM_DIAGRAM):   end;
1172012   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172013   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1172014   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1172015   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1172016   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1172017   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1172018   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1172019   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1172020   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1172021   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1172022   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172023   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172024   +   end;
MPRINT(EM_DIAGRAM):   end;
1172025   +end;
MPRINT(EM_DIAGRAM):   end;
1172026   +
1172027   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1172028   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1172029   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1172030   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1172031   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172032   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1172033   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1172034   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1172035   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1172036   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1172037   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1172038   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1172039   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1172040   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1172041   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1172042   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1172043   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172044   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172045   +end;
MPRINT(EM_DIAGRAM):   end;
1172046   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172047   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172048   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1172049   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172050   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172051   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1172052   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1172053   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172054   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1172055   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172056   +         end;
MPRINT(EM_DIAGRAM):   end;
1172057   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172058   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172059   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1172060   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172061   +            end;
MPRINT(EM_DIAGRAM):   end;
1172062   +         end;
MPRINT(EM_DIAGRAM):   end;
1172063   +      end;
MPRINT(EM_DIAGRAM):   end;
1172064   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172065   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172066   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1172067   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172068   +         end;
MPRINT(EM_DIAGRAM):   end;
1172069   +      end;
MPRINT(EM_DIAGRAM):   end;
1172070   +   end;
MPRINT(EM_DIAGRAM):   end;
1172071   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172072   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172073   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172074   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1172075   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172076   +         end;
MPRINT(EM_DIAGRAM):   end;
1172077   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172078   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172079   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1172080   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172081   +            end;
MPRINT(EM_DIAGRAM):   end;
1172082   +         end;
MPRINT(EM_DIAGRAM):   end;
1172083   +      end;
MPRINT(EM_DIAGRAM):   end;
1172084   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172085   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172086   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1172087   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1172088   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1172089   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1172090   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1172091   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172092   +         end;
MPRINT(EM_DIAGRAM):   end;
1172093   +      end;
MPRINT(EM_DIAGRAM):   end;
1172094   +   end;
MPRINT(EM_DIAGRAM):   end;
1172095   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172096   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1172097   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1172098   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1172099   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1172100   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1172101   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172102   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172103   +   end;
MPRINT(EM_DIAGRAM):   end;
1172104   +end;
MPRINT(EM_DIAGRAM):   end;
1172105   +
1172106   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1172107   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1172108   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1172109   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1172110   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172111   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1172112   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1172113   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1172114   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1172115   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1172116   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1172117   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1172118   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1172119   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1172120   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1172121   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1172122   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1172123   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1172124   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1172125   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1172126   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1172127   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1172128   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1172129   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1172130   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172131   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172132   +end;
MPRINT(EM_DIAGRAM):   end;
1172133   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172134   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172135   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1172136   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172137   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172138   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1172139   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1172140   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1172141   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1172142   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1172143   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172144   +            end;
MPRINT(EM_DIAGRAM):   end;
1172145   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172146   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1172147   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1172148   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1172149   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1172150   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1172151   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1172152   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1172153   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1172154   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1172155   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1172156   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172157   +               end;
MPRINT(EM_DIAGRAM):   end;
1172158   +            end;
MPRINT(EM_DIAGRAM):   end;
1172159   +         end;
MPRINT(EM_DIAGRAM):   end;
1172160   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172161   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1172162   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1172163   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172164   +            end;
MPRINT(EM_DIAGRAM):   end;
1172165   +         end;
MPRINT(EM_DIAGRAM):   end;
1172166   +      end;
MPRINT(EM_DIAGRAM):   end;
1172167   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172168   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172169   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1172170   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172171   +         end;
MPRINT(EM_DIAGRAM):   end;
1172172   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172173   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172174   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1172175   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172176   +            end;
MPRINT(EM_DIAGRAM):   end;
1172177   +         end;
MPRINT(EM_DIAGRAM):   end;
1172178   +      end;
MPRINT(EM_DIAGRAM):   end;
1172179   +   end;
MPRINT(EM_DIAGRAM):   end;
1172180   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172181   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172182   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1172183   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172184   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1172185   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172186   +            end;
MPRINT(EM_DIAGRAM):   end;
1172187   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172188   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172189   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1172190   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172191   +               end;
MPRINT(EM_DIAGRAM):   end;
1172192   +            end;
MPRINT(EM_DIAGRAM):   end;
1172193   +         end;
MPRINT(EM_DIAGRAM):   end;
1172194   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172195   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172196   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1172197   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172198   +            end;
MPRINT(EM_DIAGRAM):   end;
1172199   +         end;
MPRINT(EM_DIAGRAM):   end;
1172200   +      end;
MPRINT(EM_DIAGRAM):   end;
1172201   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172202   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172203   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1172204   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172205   +         end;
MPRINT(EM_DIAGRAM):   end;
1172206   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172207   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172208   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1172209   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172210   +            end;
MPRINT(EM_DIAGRAM):   end;
1172211   +         end;
MPRINT(EM_DIAGRAM):   end;
1172212   +      end;
MPRINT(EM_DIAGRAM):   end;
1172213   +   end;
MPRINT(EM_DIAGRAM):   end;
1172214   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172215   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1172216   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1172217   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1172218   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1172219   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1172220   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1172221   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1172222   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1172223   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1172224   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172225   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172226   +   end;
MPRINT(EM_DIAGRAM):   end;
1172227   +end;
MPRINT(EM_DIAGRAM):   end;
1172228   +
1172229   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1172230   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1172231   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1172232   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1172233   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172234   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1172235   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1172236   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1172237   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1172238   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1172239   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1172240   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1172241   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1172242   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1172243   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1172244   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1172245   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1172246   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1172247   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1172248   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1172249   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172250   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172251   +end;
MPRINT(EM_DIAGRAM):   end;
1172252   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172253   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172254   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1172255   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172256   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172257   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1172258   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1172259   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1172260   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1172261   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172262   +         end;
MPRINT(EM_DIAGRAM):   end;
1172263   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172264   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172265   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1172266   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172267   +            end;
MPRINT(EM_DIAGRAM):   end;
1172268   +         end;
MPRINT(EM_DIAGRAM):   end;
1172269   +      end;
MPRINT(EM_DIAGRAM):   end;
1172270   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172271   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172272   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1172273   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172274   +         end;
MPRINT(EM_DIAGRAM):   end;
1172275   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172276   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172277   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1172278   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172279   +            end;
MPRINT(EM_DIAGRAM):   end;
1172280   +         end;
MPRINT(EM_DIAGRAM):   end;
1172281   +      end;
MPRINT(EM_DIAGRAM):   end;
1172282   +   end;
MPRINT(EM_DIAGRAM):   end;
1172283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172284   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172285   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172286   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1172287   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172288   +         end;
MPRINT(EM_DIAGRAM):   end;
1172289   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172290   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172291   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1172292   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172293   +            end;
MPRINT(EM_DIAGRAM):   end;
1172294   +         end;
MPRINT(EM_DIAGRAM):   end;
1172295   +      end;
MPRINT(EM_DIAGRAM):   end;
1172296   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172297   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172298   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1172299   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172300   +         end;
MPRINT(EM_DIAGRAM):   end;
1172301   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172302   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172303   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1172304   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1172305   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1172306   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1172307   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1172308   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1172309   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1172310   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172311   +            end;
MPRINT(EM_DIAGRAM):   end;
1172312   +         end;
MPRINT(EM_DIAGRAM):   end;
1172313   +      end;
MPRINT(EM_DIAGRAM):   end;
1172314   +   end;
MPRINT(EM_DIAGRAM):   end;
1172315   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172316   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1172317   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1172318   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1172319   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1172320   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1172321   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1172322   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1172323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172325   +   end;
MPRINT(EM_DIAGRAM):   end;
1172326   +end;
MPRINT(EM_DIAGRAM):   end;
1172327   +
1172328   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1172329   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1172330   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1172331   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1172332   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172333   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1172334   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1172335   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1172336   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1172337   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1172338   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1172339   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1172340   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1172341   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1172342   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1172343   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1172344   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1172345   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1172346   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1172347   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1172348   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172349   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172350   +end;
MPRINT(EM_DIAGRAM):   end;
1172351   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172352   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172353   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1172354   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172355   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172356   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1172357   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1172358   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1172359   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1172360   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172361   +         end;
MPRINT(EM_DIAGRAM):   end;
1172362   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172363   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172364   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1172365   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172366   +            end;
MPRINT(EM_DIAGRAM):   end;
1172367   +         end;
MPRINT(EM_DIAGRAM):   end;
1172368   +      end;
MPRINT(EM_DIAGRAM):   end;
1172369   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172370   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172371   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1172372   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172373   +         end;
MPRINT(EM_DIAGRAM):   end;
1172374   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172375   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172376   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1172377   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172378   +            end;
MPRINT(EM_DIAGRAM):   end;
1172379   +         end;
MPRINT(EM_DIAGRAM):   end;
1172380   +      end;
MPRINT(EM_DIAGRAM):   end;
1172381   +   end;
MPRINT(EM_DIAGRAM):   end;
1172382   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172383   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172384   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172385   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1172386   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172387   +         end;
MPRINT(EM_DIAGRAM):   end;
1172388   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172389   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172390   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1172391   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172392   +            end;
MPRINT(EM_DIAGRAM):   end;
1172393   +         end;
MPRINT(EM_DIAGRAM):   end;
1172394   +      end;
MPRINT(EM_DIAGRAM):   end;
1172395   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172396   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172397   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1172398   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172399   +         end;
MPRINT(EM_DIAGRAM):   end;
1172400   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172401   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172402   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1172403   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1172404   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1172405   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1172406   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1172407   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1172408   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1172409   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172410   +            end;
MPRINT(EM_DIAGRAM):   end;
1172411   +         end;
MPRINT(EM_DIAGRAM):   end;
1172412   +      end;
MPRINT(EM_DIAGRAM):   end;
1172413   +   end;
MPRINT(EM_DIAGRAM):   end;
1172414   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172415   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1172416   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1172417   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1172418   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1172419   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1172420   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1172421   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1172422   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172423   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172424   +   end;
MPRINT(EM_DIAGRAM):   end;
1172425   +end;
MPRINT(EM_DIAGRAM):   end;
1172426   +
1172427   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1172428   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1172429   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1172430   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172431   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1172432   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1172433   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1172434   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1172435   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1172436   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1172437   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1172438   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1172439   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1172440   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1172441   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1172442   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1172443   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1172444   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1172445   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1172446   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1172447   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1172448   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1172449   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1172450   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172451   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172452   +end;
MPRINT(EM_DIAGRAM):   end;
1172453   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172454   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172455   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1172456   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172457   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172458   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1172459   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1172460   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1172461   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1172462   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1172463   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172464   +            end;
MPRINT(EM_DIAGRAM):   end;
1172465   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172466   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1172467   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1172468   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1172469   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1172470   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1172471   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1172472   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1172473   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1172474   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1172475   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1172476   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172477   +               end;
MPRINT(EM_DIAGRAM):   end;
1172478   +            end;
MPRINT(EM_DIAGRAM):   end;
1172479   +         end;
MPRINT(EM_DIAGRAM):   end;
1172480   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172481   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1172482   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1172483   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172484   +            end;
MPRINT(EM_DIAGRAM):   end;
1172485   +         end;
MPRINT(EM_DIAGRAM):   end;
1172486   +      end;
MPRINT(EM_DIAGRAM):   end;
1172487   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172488   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172489   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1172490   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172491   +         end;
MPRINT(EM_DIAGRAM):   end;
1172492   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172493   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172494   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1172495   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172496   +            end;
MPRINT(EM_DIAGRAM):   end;
1172497   +         end;
MPRINT(EM_DIAGRAM):   end;
1172498   +      end;
MPRINT(EM_DIAGRAM):   end;
1172499   +   end;
MPRINT(EM_DIAGRAM):   end;
1172500   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172501   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172502   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1172503   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172504   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1172505   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172506   +            end;
MPRINT(EM_DIAGRAM):   end;
1172507   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172508   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172509   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1172510   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172511   +               end;
MPRINT(EM_DIAGRAM):   end;
1172512   +            end;
MPRINT(EM_DIAGRAM):   end;
1172513   +         end;
MPRINT(EM_DIAGRAM):   end;
1172514   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172515   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172516   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1172517   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172518   +            end;
MPRINT(EM_DIAGRAM):   end;
1172519   +         end;
MPRINT(EM_DIAGRAM):   end;
1172520   +      end;
MPRINT(EM_DIAGRAM):   end;
1172521   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172522   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172523   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1172524   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172525   +         end;
MPRINT(EM_DIAGRAM):   end;
1172526   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172527   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172528   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1172529   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172530   +            end;
MPRINT(EM_DIAGRAM):   end;
1172531   +         end;
MPRINT(EM_DIAGRAM):   end;
1172532   +      end;
MPRINT(EM_DIAGRAM):   end;
1172533   +   end;
MPRINT(EM_DIAGRAM):   end;
1172534   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172535   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1172536   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1172537   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1172538   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1172539   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1172540   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1172541   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1172542   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1172543   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1172544   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172545   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172546   +   end;
MPRINT(EM_DIAGRAM):   end;
1172547   +end;
MPRINT(EM_DIAGRAM):   end;
1172548   +
1172549   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1172550   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1172551   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1172552   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172553   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1172554   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1172555   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1172556   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1172557   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1172558   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1172559   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1172560   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1172561   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1172562   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1172563   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1172564   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1172565   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1172566   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1172567   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1172568   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1172569   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1172570   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1172571   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1172572   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172573   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172574   +end;
MPRINT(EM_DIAGRAM):   end;
1172575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172576   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172577   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1172578   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172579   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172580   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1172581   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1172582   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1172583   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1172584   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1172585   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172586   +            end;
MPRINT(EM_DIAGRAM):   end;
1172587   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172588   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1172589   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1172590   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1172591   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1172592   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1172593   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1172594   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1172595   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1172596   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1172597   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1172598   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172599   +               end;
MPRINT(EM_DIAGRAM):   end;
1172600   +            end;
MPRINT(EM_DIAGRAM):   end;
1172601   +         end;
MPRINT(EM_DIAGRAM):   end;
1172602   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172603   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1172604   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1172605   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172606   +            end;
MPRINT(EM_DIAGRAM):   end;
1172607   +         end;
MPRINT(EM_DIAGRAM):   end;
1172608   +      end;
MPRINT(EM_DIAGRAM):   end;
1172609   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172610   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172611   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1172612   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172613   +         end;
MPRINT(EM_DIAGRAM):   end;
1172614   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172615   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172616   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1172617   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172618   +            end;
MPRINT(EM_DIAGRAM):   end;
1172619   +         end;
MPRINT(EM_DIAGRAM):   end;
1172620   +      end;
MPRINT(EM_DIAGRAM):   end;
1172621   +   end;
MPRINT(EM_DIAGRAM):   end;
1172622   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172623   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172624   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1172625   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172626   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1172627   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172628   +            end;
MPRINT(EM_DIAGRAM):   end;
1172629   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172630   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172631   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1172632   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172633   +               end;
MPRINT(EM_DIAGRAM):   end;
1172634   +            end;
MPRINT(EM_DIAGRAM):   end;
1172635   +         end;
MPRINT(EM_DIAGRAM):   end;
1172636   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172637   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172638   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1172639   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172640   +            end;
MPRINT(EM_DIAGRAM):   end;
1172641   +         end;
MPRINT(EM_DIAGRAM):   end;
1172642   +      end;
MPRINT(EM_DIAGRAM):   end;
1172643   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172644   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172645   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1172646   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172647   +         end;
MPRINT(EM_DIAGRAM):   end;
1172648   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172649   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172650   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1172651   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172652   +            end;
MPRINT(EM_DIAGRAM):   end;
1172653   +         end;
MPRINT(EM_DIAGRAM):   end;
1172654   +      end;
MPRINT(EM_DIAGRAM):   end;
1172655   +   end;
MPRINT(EM_DIAGRAM):   end;
1172656   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172657   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1172658   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1172659   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1172660   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1172661   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1172662   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1172663   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1172664   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1172665   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1172666   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172667   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172668   +   end;
MPRINT(EM_DIAGRAM):   end;
1172669   +end;
MPRINT(EM_DIAGRAM):   end;
1172670   +
1172671   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1172672   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1172673   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1172674   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1172675   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1172676   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1172677   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1172678   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1172679   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1172680   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1172681   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1172682   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1172683   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1172684   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1172685   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1172686   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1172687   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1172688   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1172689   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1172690   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1172691   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1172692   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1172693   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1172694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1172695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172696   +end;
MPRINT(EM_DIAGRAM):   end;
1172697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172698   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1172699   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1172700   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172701   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1172702   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1172703   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1172704   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1172705   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1172706   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1172707   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172708   +            end;
MPRINT(EM_DIAGRAM):   end;
1172709   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172710   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1172711   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1172712   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1172713   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1172714   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1172715   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1172716   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1172717   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1172718   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1172719   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1172720   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172721   +               end;
MPRINT(EM_DIAGRAM):   end;
1172722   +            end;
MPRINT(EM_DIAGRAM):   end;
1172723   +         end;
MPRINT(EM_DIAGRAM):   end;
1172724   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172725   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1172726   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1172727   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172728   +            end;
MPRINT(EM_DIAGRAM):   end;
1172729   +         end;
MPRINT(EM_DIAGRAM):   end;
1172730   +      end;
MPRINT(EM_DIAGRAM):   end;
1172731   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172732   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1172733   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1172734   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172735   +         end;
MPRINT(EM_DIAGRAM):   end;
1172736   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172737   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1172738   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1172739   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172740   +            end;
MPRINT(EM_DIAGRAM):   end;
1172741   +         end;
MPRINT(EM_DIAGRAM):   end;
1172742   +      end;
MPRINT(EM_DIAGRAM):   end;
1172743   +   end;
MPRINT(EM_DIAGRAM):   end;
1172744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172745   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1172746   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1172747   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1172748   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1172749   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172750   +            end;
MPRINT(EM_DIAGRAM):   end;
1172751   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1172752   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1172753   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1172754   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172755   +               end;
MPRINT(EM_DIAGRAM):   end;
1172756   +            end;
MPRINT(EM_DIAGRAM):   end;
1172757   +         end;
MPRINT(EM_DIAGRAM):   end;
1172758   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172759   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1172760   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1172761   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172762   +            end;
MPRINT(EM_DIAGRAM):   end;
1172763   +         end;
MPRINT(EM_DIAGRAM):   end;
1172764   +      end;
MPRINT(EM_DIAGRAM):   end;
1172765   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1172766   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1172767   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1172768   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172769   +         end;
MPRINT(EM_DIAGRAM):   end;
1172770   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1172771   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1172772   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1172773   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1172774   +            end;
MPRINT(EM_DIAGRAM):   end;
1172775   +         end;
MPRINT(EM_DIAGRAM):   end;
1172776   +      end;
MPRINT(EM_DIAGRAM):   end;
1172777   +   end;
MPRINT(EM_DIAGRAM):   end;
1172778   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1172779   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1172780   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1172781   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1172782   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1172783   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1172784   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1172785   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1172786   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1172787   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1172788   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1172789   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172790   +   end;
MPRINT(EM_DIAGRAM):   end;
1172791   +end;
MPRINT(EM_DIAGRAM):   end;
1172792   +
1172793   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172794   +*** Checking missing input Interval
1172795   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1172796   +
1172797   +IF NMISS(
1172798   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1172799   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1172800   +
1172801   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1172802   +END;
MPRINT(EM_DIAGRAM):   END;
1172803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172804   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1172805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172807   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1172808   +END;
MPRINT(EM_DIAGRAM):   END;
1172809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172810   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1172811   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1172812   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1172813   +END;
MPRINT(EM_DIAGRAM):   END;
1172814   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172815   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1172816   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172817   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172818   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1172819   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172820   +
1172821   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1172822   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1172823   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1172824   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1172825   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1172826   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1172827   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1172828   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1172829   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1172830   +end;
MPRINT(EM_DIAGRAM):   end;
1172831   +else do;
MPRINT(EM_DIAGRAM):   else do;
1172832   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1172833   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1172834   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1172835   +   end;
MPRINT(EM_DIAGRAM):   end;
1172836   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1172837   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1172838   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1172839   +   end;
MPRINT(EM_DIAGRAM):   end;
1172840   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1172841   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1172842   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1172843   +   end;
MPRINT(EM_DIAGRAM):   end;
1172844   +end;
MPRINT(EM_DIAGRAM):   end;
1172845   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1172846   +   P_DepVar1  =     0.13041505791867 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13041505791867 * S_Year_Birth ;
1172847   +   P_DepVar1  = P_DepVar1  +    -0.81394914954047 * GRP_AcceptedCmp52
1172848   +          +    -1.57479065391046 * GRP_AcceptedCmpTotal3
1172849   +          +     0.55721665311121 * GRP_Frq2  +     2.03538591612101 * GRP_Frq3
1172850   +          +     1.71084973908714 * GRP_Frq4  +     0.93073119070526 * GRP_Frq5
1172851   +          +     0.58841250291933 * GRP_Frq6  +    -0.21635109021843 * GRP_Frq7
1172852   +          +      0.0213506254167 * GRP_Frq8  +    -1.30191697936168 * GRP_Frq9
1172853   +          +    -1.31179820046974 * GRP_Frq10  +    -1.08336033604841 *
1172854   +        GRP_Income2  +    -0.79871206076892 * GRP_Income3
1172855   +          +    -0.30315183422585 * GRP_Income4  +     0.82131408307175 *
1172856   +        GRP_Income5  +     0.48741274023405 * GRP_Income6
1172857   +          +    -0.50872786670529 * GRP_Income7  +     -0.8768319258445 *
1172858   +        GRP_Income8  +    -0.05749742206435 * GRP_Income9
1172859   +          +     0.62080590842343 * GRP_Income10  +     2.52780693320463 *
1172860   +        GRP_Mnt2  +     1.42753900899901 * GRP_Mnt3  +    -0.37486538648468 *
1172861   +        GRP_Mnt4  +    -0.70186702387476 * GRP_Mnt5  +    -1.09419855761909 *
1172862   +        GRP_Mnt6  +    -0.74794036813571 * GRP_Mnt7  +    -0.38086942027823 *
1172863   +        GRP_Mnt8  +    -0.14878906184572 * GRP_Mnt9  +     0.10029389010909 *
1172864   +        GRP_Mnt10  +     0.93741359799158 * GRP_MntFishProducts3
1172865   +          +     0.33815869767181 * GRP_MntFishProducts4
1172866   +          +     0.18521216857753 * GRP_MntFishProducts5
1172867   +          +    -0.17622093488116 * GRP_MntFishProducts6
1172868   +          +     0.10360579093666 * GRP_MntFishProducts7
1172869   +          +     0.67417645975591 * GRP_MntFishProducts8
1172870   +          +     -0.4949659833943 * GRP_MntFishProducts9
1172871   +          +    -0.53307075001864 * GRP_MntFishProducts10
1172872   +          +    -0.44965793048776 * GRP_MntGoldProds2
1172873   +          +     0.70029834666821 * GRP_MntGoldProds3
1172874   +          +     0.26643011384249 * GRP_MntGoldProds4
1172875   +          +      0.2416000208193 * GRP_MntGoldProds5
1172876   +          +    -0.16739557727601 * GRP_MntGoldProds6
1172877   +          +    -0.03966136377161 * GRP_MntGoldProds7
1172878   +          +    -0.14433335823753 * GRP_MntGoldProds8
1172879   +          +    -0.01379766565883 * GRP_MntGoldProds9
1172880   +          +    -0.47948207920798 * GRP_MntGoldProds10
1172881   +          +     -7.7797809223883 * GRP_MntMeatProducts2
1172882   +          +    -4.30448682283205 * GRP_MntMeatProducts3
1172883   +          +    -3.09196678122785 * GRP_MntMeatProducts4
1172884   +          +    -1.39782945162908 * GRP_MntMeatProducts5
1172885   +          +     0.98656746132259 * GRP_MntMeatProducts6
1172886   +          +     1.23570299146524 * GRP_MntMeatProducts7
1172887   +          +     2.63070630185363 * GRP_MntMeatProducts8
1172888   +          +     2.57140709387759 * GRP_MntMeatProducts9
1172889   +          +     3.88874807046828 * GRP_MntMeatProducts10
1172890   +          +     0.33174074042224 * GRP_MntSweetProducts3
1172891   +          +     0.69101850116915 * GRP_MntSweetProducts4
1172892   +          +     0.17295436074838 * GRP_MntSweetProducts5
1172893   +          +      0.0314089298439 * GRP_MntSweetProducts6
1172894   +          +     0.79474403533727 * GRP_MntSweetProducts7
1172895   +          +    -0.35030029933384 * GRP_MntSweetProducts8
1172896   +          +    -0.22491638984504 * GRP_MntSweetProducts9
1172897   +          +    -0.26300371563779 * GRP_MntSweetProducts10
1172898   +          +       4.623529533535 * GRP_MntWines2  +     3.38930591268617 *
1172899   +        GRP_MntWines3  +     2.86869681071208 * GRP_MntWines4
1172900   +          +     1.99919334553514 * GRP_MntWines5  +     0.51392642718101 *
1172901   +        GRP_MntWines6  +    -0.54295287328303 * GRP_MntWines7
1172902   +          +     -1.9404151310852 * GRP_MntWines8  +    -2.81755694441313 *
1172903   +        GRP_MntWines9  +    -3.65585472427726 * GRP_MntWines10
1172904   +          +    -6.48636650946379 * GRP_NumCatalogPurchases3
1172905   +          +    -2.42520952237724 * GRP_NumCatalogPurchases4
1172906   +          +     0.23992315717993 * GRP_NumCatalogPurchases5
1172907   +          +     1.78022371269645 * GRP_NumCatalogPurchases6
1172908   +          +     2.51919850869031 * GRP_NumCatalogPurchases7
1172909   +          +    -0.29160915509933 * GRP_NumDistPurchases2
1172910   +          +    -1.59386292237547 * GRP_NumDistPurchases3
1172911   +          +    -0.58149143918747 * GRP_NumDistPurchases4
1172912   +          +    -0.15227686380495 * GRP_NumDistPurchases5
1172913   +          +    -0.39776772752273 * GRP_NumDistPurchases6
1172914   +          +    -0.25189925687254 * GRP_NumDistPurchases7
1172915   +          +     -0.8006222944202 * GRP_NumDistPurchases8
1172916   +          +      1.1137088740435 * GRP_NumDistPurchases9
1172917   +          +     1.23069956311587 * GRP_NumDistPurchases10
1172918   +          +     0.00077574452293 * GRP_NumWebPurchases2
1172919   +          +     0.24159496564294 * GRP_NumWebPurchases3
1172920   +          +     0.30982055062128 * GRP_NumWebPurchases4
1172921   +          +     0.91413433678014 * GRP_NumWebPurchases5
1172922   +          +     0.47430505202684 * GRP_NumWebPurchases6
1172923   +          +     0.05910332727627 * GRP_NumWebPurchases7
1172924   +          +    -0.73591735479205 * GRP_NumWebPurchases8
1172925   +          +     -4.1347431929822 * GRP_NumWebVisitsMonth2
1172926   +          +    -2.56208193086546 * GRP_NumWebVisitsMonth3
1172927   +          +    -1.81937126717482 * GRP_NumWebVisitsMonth4
1172928   +          +    -0.77444924696859 * GRP_NumWebVisitsMonth5
1172929   +          +     0.82562856901811 * GRP_NumWebVisitsMonth6
1172930   +          +     1.04369947846006 * GRP_NumWebVisitsMonth7
1172931   +          +     2.55675009308953 * GRP_NumWebVisitsMonth8
1172932   +          +     0.20809605612831 * GRP_RFMstat2  +    -1.61430160476517 *
1172933   +        GRP_RFMstat3  +    -0.52301122119481 * GRP_RFMstat4
1172934   +          +    -0.55945361088087 * GRP_RFMstat5  +    -0.14424212281577 *
1172935   +        GRP_RFMstat6  +     1.05234320810026 * GRP_RFMstat7
1172936   +          +    -0.05407410464352 * GRP_RFMstat8  +    -0.01646632074069 *
1172937   +        GRP_RFMstat9  +     0.70828472822109 * GRP_RFMstat10
1172938   +          +      1.8726948284706 * GRP_RMntFrq2  +     1.05367221065359 *
1172939   +        GRP_RMntFrq3  +     1.16252388400818 * GRP_RMntFrq4
1172940   +          +    -0.68337506267394 * GRP_RMntFrq5  +    -0.30999632256804 *
1172941   +        GRP_RMntFrq6  +      -1.800352250825 * GRP_RMntFrq7
1172942   +          +    -1.53582014310476 * GRP_RMntFrq8  +    -0.07192943405375 *
1172943   +        GRP_RMntFrq9  +    -0.60583604685254 * GRP_RMntFrq10
1172944   +          +     3.84355692804923 * GRP_Recency2  +     2.89076929480023 *
1172945   +        GRP_Recency3  +     2.87026210399223 * GRP_Recency4
1172946   +          +     1.49685595027077 * GRP_Recency5  +    -0.07603609831014 *
1172947   +        GRP_Recency6  +    -0.44761807904964 * GRP_Recency7
1172948   +          +    -1.48577941891686 * GRP_Recency8  +    -1.45982970045671 *
1172949   +        GRP_Recency9  +     -3.5176122167203 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.81394914954047 * GRP_AcceptedCmp52 +
-1.57479065391046 * GRP_AcceptedCmpTotal3 + 0.55721665311121 * GRP_Frq2 + 2.03538591612101 *
GRP_Frq3 + 1.71084973908714 * GRP_Frq4 + 0.93073119070526 * GRP_Frq5 + 0.58841250291933 *
GRP_Frq6 + -0.21635109021843 * GRP_Frq7 + 0.0213506254167 * GRP_Frq8 + -1.30191697936168 *
GRP_Frq9 + -1.31179820046974 * GRP_Frq10 + -1.08336033604841 * GRP_Income2 + -0.79871206076892
* GRP_Income3 + -0.30315183422585 * GRP_Income4 + 0.82131408307175 * GRP_Income5 +
0.48741274023405 * GRP_Income6 + -0.50872786670529 * GRP_Income7 + -0.8768319258445 *
GRP_Income8 + -0.05749742206435 * GRP_Income9 + 0.62080590842343 * GRP_Income10 +
2.52780693320463 * GRP_Mnt2 + 1.42753900899901 * GRP_Mnt3 + -0.37486538648468 * GRP_Mnt4 +
-0.70186702387476 * GRP_Mnt5 + -1.09419855761909 * GRP_Mnt6 + -0.74794036813571 * GRP_Mnt7 +
-0.38086942027823 * GRP_Mnt8 + -0.14878906184572 * GRP_Mnt9 + 0.10029389010909 * GRP_Mnt10 +
0.93741359799158 * GRP_MntFishProducts3 + 0.33815869767181 * GRP_MntFishProducts4 +
0.18521216857753 * GRP_MntFishProducts5 + -0.17622093488116 * GRP_MntFishProducts6 +
0.10360579093666 * GRP_MntFishProducts7 + 0.67417645975591 * GRP_MntFishProducts8 +
-0.4949659833943 * GRP_MntFishProducts9 + -0.53307075001864 * GRP_MntFishProducts10 +
-0.44965793048776 * GRP_MntGoldProds2 + 0.70029834666821 * GRP_MntGoldProds3 +
0.26643011384249 * GRP_MntGoldProds4 + 0.2416000208193 * GRP_MntGoldProds5 + -0.16739557727601
* GRP_MntGoldProds6 + -0.03966136377161 * GRP_MntGoldProds7 + -0.14433335823753 *
GRP_MntGoldProds8 + -0.01379766565883 * GRP_MntGoldProds9 + -0.47948207920798 *
GRP_MntGoldProds10 + -7.7797809223883 * GRP_MntMeatProducts2 + -4.30448682283205 *
GRP_MntMeatProducts3 + -3.09196678122785 * GRP_MntMeatProducts4 + -1.39782945162908 *
GRP_MntMeatProducts5 + 0.98656746132259 * GRP_MntMeatProducts6 + 1.23570299146524 *
GRP_MntMeatProducts7 + 2.63070630185363 * GRP_MntMeatProducts8 + 2.57140709387759 *
GRP_MntMeatProducts9 + 3.88874807046828 * GRP_MntMeatProducts10 + 0.33174074042224 *
GRP_MntSweetProducts3 + 0.69101850116915 * GRP_MntSweetProducts4 + 0.17295436074838 *
GRP_MntSweetProducts5 + 0.0314089298439 * GRP_MntSweetProducts6 + 0.79474403533727 *
GRP_MntSweetProducts7 + -0.35030029933384 * GRP_MntSweetProducts8 + -0.22491638984504 *
GRP_MntSweetProducts9 + -0.26300371563779 * GRP_MntSweetProducts10 + 4.623529533535 *
GRP_MntWines2 + 3.38930591268617 * GRP_MntWines3 + 2.86869681071208 * GRP_MntWines4 +
1.99919334553514 * GRP_MntWines5 + 0.51392642718101 * GRP_MntWines6 + -0.54295287328303 *
GRP_MntWines7 + -1.9404151310852 * GRP_MntWines8 + -2.81755694441313 * GRP_MntWines9 +
-3.65585472427726 * GRP_MntWines10 + -6.48636650946379 * GRP_NumCatalogPurchases3 +
-2.42520952237724 * GRP_NumCatalogPurchases4 + 0.23992315717993 * GRP_NumCatalogPurchases5 +
1.78022371269645 * GRP_NumCatalogPurchases6 + 2.51919850869031 * GRP_NumCatalogPurchases7 +
-0.29160915509933 * GRP_NumDistPurchases2 + -1.59386292237547 * GRP_NumDistPurchases3 +
-0.58149143918747 * GRP_NumDistPurchases4 + -0.15227686380495 * GRP_NumDistPurchases5 +
-0.39776772752273 * GRP_NumDistPurchases6 + -0.25189925687254 * GRP_NumDistPurchases7 +
-0.8006222944202 * GRP_NumDistPurchases8 + 1.1137088740435 * GRP_NumDistPurchases9 +
1.23069956311587 * GRP_NumDistPurchases10 + 0.00077574452293 * GRP_NumWebPurchases2 +
0.24159496564294 * GRP_NumWebPurchases3 + 0.30982055062128 * GRP_NumWebPurchases4 +
0.91413433678014 * GRP_NumWebPurchases5 + 0.47430505202684 * GRP_NumWebPurchases6 +
0.05910332727627 * GRP_NumWebPurchases7 + -0.73591735479205 * GRP_NumWebPurchases8 +
-4.1347431929822 * GRP_NumWebVisitsMonth2 + -2.56208193086546 * GRP_NumWebVisitsMonth3 +
-1.81937126717482 * GRP_NumWebVisitsMonth4 + -0.77444924696859 * GRP_NumWebVisitsMonth5 +
0.82562856901811 * GRP_NumWebVisitsMonth6 + 1.04369947846006 * GRP_NumWebVisitsMonth7 +
2.55675009308953 * GRP_NumWebVisitsMonth8 + 0.20809605612831 * GRP_RFMstat2 +
-1.61430160476517 * GRP_RFMstat3 + -0.52301122119481 * GRP_RFMstat4 + -0.55945361088087 *
GRP_RFMstat5 + -0.14424212281577 * GRP_RFMstat6 + 1.05234320810026 * GRP_RFMstat7 +
-0.05407410464352 * GRP_RFMstat8 + -0.01646632074069 * GRP_RFMstat9 + 0.70828472822109 *
GRP_RFMstat10 + 1.8726948284706 * GRP_RMntFrq2 + 1.05367221065359 * GRP_RMntFrq3 +
1.16252388400818 * GRP_RMntFrq4 + -0.68337506267394 * GRP_RMntFrq5 + -0.30999632256804 *
GRP_RMntFrq6 + -1.800352250825 * GRP_RMntFrq7 + -1.53582014310476 * GRP_RMntFrq8 +
-0.07192943405375 * GRP_RMntFrq9 + -0.60583604685254 * GRP_RMntFrq10 + 3.84355692804923 *
GRP_Recency2 + 2.89076929480023 * GRP_Recency3 + 2.87026210399223 * GRP_Recency4 +
1.49685595027077 * GRP_Recency5 + -0.07603609831014 * GRP_Recency6 + -0.44761807904964 *
GRP_Recency7 + -1.48577941891686 * GRP_Recency8 + -1.45982970045671 * GRP_Recency9 +
-3.5176122167203 * GRP_Recency10 ;
1172950   +   P_DepVar1  =    -3.73504752117057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.73504752117057 + P_DepVar1 ;
1172951   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1172952   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1172953   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1172954   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1172955   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1172956   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1172957   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1172958   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1172959   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1172960   +END;
MPRINT(EM_DIAGRAM):   END;
1172961   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1172962   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1172963   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1172964   +END;
MPRINT(EM_DIAGRAM):   END;
1172965   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1172966   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1172967   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1172968   +END;
MPRINT(EM_DIAGRAM):   END;
1172969   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1172970   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1172971   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1172972   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1172973   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1172974   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1172975   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1172976   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172977   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1172978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1172979   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1172980   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1172981   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1172982   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1172983   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1172984   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1172985   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1172986   +END;
MPRINT(EM_DIAGRAM):   END;
1172987   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1172988   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1172989   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1172990   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1172991    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL21_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1172992    quit;
1172993    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1172994    filename emflow
1172994  ! "C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1172995    *------------------------------------------------------------*;
1172996    * AutoNeural21: Scoring VALIDATE data;
1172997    *------------------------------------------------------------*;
1172998    data EMWS8.AutoNeural21_VALIDATE
1172999    / view=EMWS8.AutoNeural21_VALIDATE
1173000    ;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_VALIDATE / view=EMWS8.AutoNeural21_VALIDATE ;
1173001    set EMWS8.BINNING_VALIDATE
1173002    ;
MPRINT(EM_DIAGRAM):   set EMWS8.BINNING_VALIDATE ;
1173003    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMFLOWSCORE.sas.
1173004   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173005   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1173006   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1173007   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1173008   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1173009   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1173010   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1173011   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1173012   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1173013   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1173014   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1173015   +LENGTH _WARN_ $4
1173016   +      F_DepVar  $ 12
1173017   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1173018   +      label S_Year_Birth = 'Standard: Year_Birth' ;
MPRINT(EM_DIAGRAM):   label S_Year_Birth = 'Standard: Year_Birth' ;
1173019   +
1173020   +      label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmp52 = 'Dummy: GRP_AcceptedCmp5=2' ;
1173021   +
1173022   +      label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
MPRINT(EM_DIAGRAM):   label GRP_AcceptedCmpTotal3 = 'Dummy: GRP_AcceptedCmpTotal=3' ;
1173023   +
1173024   +      label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq2 = 'Dummy: GRP_Frq=2' ;
1173025   +
1173026   +      label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq3 = 'Dummy: GRP_Frq=3' ;
1173027   +
1173028   +      label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq4 = 'Dummy: GRP_Frq=4' ;
1173029   +
1173030   +      label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq5 = 'Dummy: GRP_Frq=5' ;
1173031   +
1173032   +      label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq6 = 'Dummy: GRP_Frq=6' ;
1173033   +
1173034   +      label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq7 = 'Dummy: GRP_Frq=7' ;
1173035   +
1173036   +      label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq8 = 'Dummy: GRP_Frq=8' ;
1173037   +
1173038   +      label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq9 = 'Dummy: GRP_Frq=9' ;
1173039   +
1173040   +      label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Frq10 = 'Dummy: GRP_Frq=10' ;
1173041   +
1173042   +      label GRP_Income2 = 'Dummy: GRP_Income=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Income2 = 'Dummy: GRP_Income=2' ;
1173043   +
1173044   +      label GRP_Income3 = 'Dummy: GRP_Income=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Income3 = 'Dummy: GRP_Income=3' ;
1173045   +
1173046   +      label GRP_Income4 = 'Dummy: GRP_Income=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Income4 = 'Dummy: GRP_Income=4' ;
1173047   +
1173048   +      label GRP_Income5 = 'Dummy: GRP_Income=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Income5 = 'Dummy: GRP_Income=5' ;
1173049   +
1173050   +      label GRP_Income6 = 'Dummy: GRP_Income=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Income6 = 'Dummy: GRP_Income=6' ;
1173051   +
1173052   +      label GRP_Income7 = 'Dummy: GRP_Income=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Income7 = 'Dummy: GRP_Income=7' ;
1173053   +
1173054   +      label GRP_Income8 = 'Dummy: GRP_Income=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Income8 = 'Dummy: GRP_Income=8' ;
1173055   +
1173056   +      label GRP_Income9 = 'Dummy: GRP_Income=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Income9 = 'Dummy: GRP_Income=9' ;
1173057   +
1173058   +      label GRP_Income10 = 'Dummy: GRP_Income=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Income10 = 'Dummy: GRP_Income=10' ;
1173059   +
1173060   +      label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt2 = 'Dummy: GRP_Mnt=2' ;
1173061   +
1173062   +      label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt3 = 'Dummy: GRP_Mnt=3' ;
1173063   +
1173064   +      label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt4 = 'Dummy: GRP_Mnt=4' ;
1173065   +
1173066   +      label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt5 = 'Dummy: GRP_Mnt=5' ;
1173067   +
1173068   +      label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt6 = 'Dummy: GRP_Mnt=6' ;
1173069   +
1173070   +      label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt7 = 'Dummy: GRP_Mnt=7' ;
1173071   +
1173072   +      label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt8 = 'Dummy: GRP_Mnt=8' ;
1173073   +
1173074   +      label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt9 = 'Dummy: GRP_Mnt=9' ;
1173075   +
1173076   +      label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Mnt10 = 'Dummy: GRP_Mnt=10' ;
1173077   +
1173078   +      label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts3 = 'Dummy: GRP_MntFishProducts=3' ;
1173079   +
1173080   +      label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts4 = 'Dummy: GRP_MntFishProducts=4' ;
1173081   +
1173082   +      label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts5 = 'Dummy: GRP_MntFishProducts=5' ;
1173083   +
1173084   +      label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts6 = 'Dummy: GRP_MntFishProducts=6' ;
1173085   +
1173086   +      label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts7 = 'Dummy: GRP_MntFishProducts=7' ;
1173087   +
1173088   +      label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts8 = 'Dummy: GRP_MntFishProducts=8' ;
1173089   +
1173090   +      label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts9 = 'Dummy: GRP_MntFishProducts=9' ;
1173091   +
1173092   +      label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntFishProducts10 = 'Dummy: GRP_MntFishProducts=10' ;
1173093   +
1173094   +      label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds2 = 'Dummy: GRP_MntGoldProds=2' ;
1173095   +
1173096   +      label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds3 = 'Dummy: GRP_MntGoldProds=3' ;
1173097   +
1173098   +      label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds4 = 'Dummy: GRP_MntGoldProds=4' ;
1173099   +
1173100   +      label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds5 = 'Dummy: GRP_MntGoldProds=5' ;
1173101   +
1173102   +      label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds6 = 'Dummy: GRP_MntGoldProds=6' ;
1173103   +
1173104   +      label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds7 = 'Dummy: GRP_MntGoldProds=7' ;
1173105   +
1173106   +      label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds8 = 'Dummy: GRP_MntGoldProds=8' ;
1173107   +
1173108   +      label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds9 = 'Dummy: GRP_MntGoldProds=9' ;
1173109   +
1173110   +      label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntGoldProds10 = 'Dummy: GRP_MntGoldProds=10' ;
1173111   +
1173112   +      label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts2 = 'Dummy: GRP_MntMeatProducts=2' ;
1173113   +
1173114   +      label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts3 = 'Dummy: GRP_MntMeatProducts=3' ;
1173115   +
1173116   +      label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts4 = 'Dummy: GRP_MntMeatProducts=4' ;
1173117   +
1173118   +      label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts5 = 'Dummy: GRP_MntMeatProducts=5' ;
1173119   +
1173120   +      label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts6 = 'Dummy: GRP_MntMeatProducts=6' ;
1173121   +
1173122   +      label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts7 = 'Dummy: GRP_MntMeatProducts=7' ;
1173123   +
1173124   +      label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts8 = 'Dummy: GRP_MntMeatProducts=8' ;
1173125   +
1173126   +      label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts9 = 'Dummy: GRP_MntMeatProducts=9' ;
1173127   +
1173128   +      label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntMeatProducts10 = 'Dummy: GRP_MntMeatProducts=10' ;
1173129   +
1173130   +      label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts3 = 'Dummy: GRP_MntSweetProducts=3' ;
1173131   +
1173132   +      label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts4 = 'Dummy: GRP_MntSweetProducts=4' ;
1173133   +
1173134   +      label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts5 = 'Dummy: GRP_MntSweetProducts=5' ;
1173135   +
1173136   +      label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts6 = 'Dummy: GRP_MntSweetProducts=6' ;
1173137   +
1173138   +      label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts7 = 'Dummy: GRP_MntSweetProducts=7' ;
1173139   +
1173140   +      label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts8 = 'Dummy: GRP_MntSweetProducts=8' ;
1173141   +
1173142   +      label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts9 = 'Dummy: GRP_MntSweetProducts=9' ;
1173143   +
1173144   +      label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntSweetProducts10 = 'Dummy: GRP_MntSweetProducts=10' ;
1173145   +
1173146   +      label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines2 = 'Dummy: GRP_MntWines=2' ;
1173147   +
1173148   +      label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines3 = 'Dummy: GRP_MntWines=3' ;
1173149   +
1173150   +      label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines4 = 'Dummy: GRP_MntWines=4' ;
1173151   +
1173152   +      label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines5 = 'Dummy: GRP_MntWines=5' ;
1173153   +
1173154   +      label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines6 = 'Dummy: GRP_MntWines=6' ;
1173155   +
1173156   +      label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines7 = 'Dummy: GRP_MntWines=7' ;
1173157   +
1173158   +      label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines8 = 'Dummy: GRP_MntWines=8' ;
1173159   +
1173160   +      label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines9 = 'Dummy: GRP_MntWines=9' ;
1173161   +
1173162   +      label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
MPRINT(EM_DIAGRAM):   label GRP_MntWines10 = 'Dummy: GRP_MntWines=10' ;
1173163   +
1173164   +      label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases3 = 'Dummy: GRP_NumCatalogPurchases=3' ;
1173165   +
1173166   +      label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases4 = 'Dummy: GRP_NumCatalogPurchases=4' ;
1173167   +
1173168   +      label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases5 = 'Dummy: GRP_NumCatalogPurchases=5' ;
1173169   +
1173170   +      label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases6 = 'Dummy: GRP_NumCatalogPurchases=6' ;
1173171   +
1173172   +      label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumCatalogPurchases7 = 'Dummy: GRP_NumCatalogPurchases=7' ;
1173173   +
1173174   +      label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases2 = 'Dummy: GRP_NumDistPurchases=2' ;
1173175   +
1173176   +      label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases3 = 'Dummy: GRP_NumDistPurchases=3' ;
1173177   +
1173178   +      label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases4 = 'Dummy: GRP_NumDistPurchases=4' ;
1173179   +
1173180   +      label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases5 = 'Dummy: GRP_NumDistPurchases=5' ;
1173181   +
1173182   +      label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases6 = 'Dummy: GRP_NumDistPurchases=6' ;
1173183   +
1173184   +      label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases7 = 'Dummy: GRP_NumDistPurchases=7' ;
1173185   +
1173186   +      label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases8 = 'Dummy: GRP_NumDistPurchases=8' ;
1173187   +
1173188   +      label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases9 = 'Dummy: GRP_NumDistPurchases=9' ;
1173189   +
1173190   +      label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
MPRINT(EM_DIAGRAM):   label GRP_NumDistPurchases10 = 'Dummy: GRP_NumDistPurchases=10' ;
1173191   +
1173192   +      label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases2 = 'Dummy: GRP_NumWebPurchases=2' ;
1173193   +
1173194   +      label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases3 = 'Dummy: GRP_NumWebPurchases=3' ;
1173195   +
1173196   +      label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases4 = 'Dummy: GRP_NumWebPurchases=4' ;
1173197   +
1173198   +      label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases5 = 'Dummy: GRP_NumWebPurchases=5' ;
1173199   +
1173200   +      label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases6 = 'Dummy: GRP_NumWebPurchases=6' ;
1173201   +
1173202   +      label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases7 = 'Dummy: GRP_NumWebPurchases=7' ;
1173203   +
1173204   +      label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebPurchases8 = 'Dummy: GRP_NumWebPurchases=8' ;
1173205   +
1173206   +      label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth2 = 'Dummy: GRP_NumWebVisitsMonth=2' ;
1173207   +
1173208   +      label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth3 = 'Dummy: GRP_NumWebVisitsMonth=3' ;
1173209   +
1173210   +      label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth4 = 'Dummy: GRP_NumWebVisitsMonth=4' ;
1173211   +
1173212   +      label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth5 = 'Dummy: GRP_NumWebVisitsMonth=5' ;
1173213   +
1173214   +      label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth6 = 'Dummy: GRP_NumWebVisitsMonth=6' ;
1173215   +
1173216   +      label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth7 = 'Dummy: GRP_NumWebVisitsMonth=7' ;
1173217   +
1173218   +      label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
MPRINT(EM_DIAGRAM):   label GRP_NumWebVisitsMonth8 = 'Dummy: GRP_NumWebVisitsMonth=8' ;
1173219   +
1173220   +      label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat2 = 'Dummy: GRP_RFMstat=2' ;
1173221   +
1173222   +      label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat3 = 'Dummy: GRP_RFMstat=3' ;
1173223   +
1173224   +      label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat4 = 'Dummy: GRP_RFMstat=4' ;
1173225   +
1173226   +      label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat5 = 'Dummy: GRP_RFMstat=5' ;
1173227   +
1173228   +      label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat6 = 'Dummy: GRP_RFMstat=6' ;
1173229   +
1173230   +      label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat7 = 'Dummy: GRP_RFMstat=7' ;
1173231   +
1173232   +      label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat8 = 'Dummy: GRP_RFMstat=8' ;
1173233   +
1173234   +      label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat9 = 'Dummy: GRP_RFMstat=9' ;
1173235   +
1173236   +      label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RFMstat10 = 'Dummy: GRP_RFMstat=10' ;
1173237   +
1173238   +      label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq2 = 'Dummy: GRP_RMntFrq=2' ;
1173239   +
1173240   +      label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq3 = 'Dummy: GRP_RMntFrq=3' ;
1173241   +
1173242   +      label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq4 = 'Dummy: GRP_RMntFrq=4' ;
1173243   +
1173244   +      label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq5 = 'Dummy: GRP_RMntFrq=5' ;
1173245   +
1173246   +      label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq6 = 'Dummy: GRP_RMntFrq=6' ;
1173247   +
1173248   +      label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq7 = 'Dummy: GRP_RMntFrq=7' ;
1173249   +
1173250   +      label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq8 = 'Dummy: GRP_RMntFrq=8' ;
1173251   +
1173252   +      label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq9 = 'Dummy: GRP_RMntFrq=9' ;
1173253   +
1173254   +      label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
MPRINT(EM_DIAGRAM):   label GRP_RMntFrq10 = 'Dummy: GRP_RMntFrq=10' ;
1173255   +
1173256   +      label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency2 = 'Dummy: GRP_Recency=2' ;
1173257   +
1173258   +      label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency3 = 'Dummy: GRP_Recency=3' ;
1173259   +
1173260   +      label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency4 = 'Dummy: GRP_Recency=4' ;
1173261   +
1173262   +      label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency5 = 'Dummy: GRP_Recency=5' ;
1173263   +
1173264   +      label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency6 = 'Dummy: GRP_Recency=6' ;
1173265   +
1173266   +      label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency7 = 'Dummy: GRP_Recency=7' ;
1173267   +
1173268   +      label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency8 = 'Dummy: GRP_Recency=8' ;
1173269   +
1173270   +      label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency9 = 'Dummy: GRP_Recency=9' ;
1173271   +
1173272   +      label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
MPRINT(EM_DIAGRAM):   label GRP_Recency10 = 'Dummy: GRP_Recency=10' ;
1173273   +
1173274   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1173275   +
1173276   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1173277   +
1173278   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1173279   +
1173280   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1173281   +
1173282   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1173283   +
1173284   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1173285   +
1173286   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1173287   +
1173288   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1173289   +
1173290   +*** Generate dummy variables for GRP_AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmp5 ;
1173291   +drop GRP_AcceptedCmp52 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmp52 ;
1173292   +if missing( GRP_AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmp5 ) then do;
1173293   +   GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1173294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173296   +end;
MPRINT(EM_DIAGRAM):   end;
1173297   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173298   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173299   +   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmp5 , BEST12. );
1173300   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173301   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173302   +      GRP_AcceptedCmp52 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = 1;
1173303   +   end;
MPRINT(EM_DIAGRAM):   end;
1173304   +   else if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '3' then do;
1173305   +      GRP_AcceptedCmp52 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = -1;
1173306   +   end;
MPRINT(EM_DIAGRAM):   end;
1173307   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173308   +      GRP_AcceptedCmp52 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmp52 = .;
1173309   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173310   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173311   +   end;
MPRINT(EM_DIAGRAM):   end;
1173312   +end;
MPRINT(EM_DIAGRAM):   end;
1173313   +
1173314   +*** Generate dummy variables for GRP_AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_AcceptedCmpTotal ;
1173315   +drop GRP_AcceptedCmpTotal3 ;
MPRINT(EM_DIAGRAM):   drop GRP_AcceptedCmpTotal3 ;
1173316   +if missing( GRP_AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_AcceptedCmpTotal ) then do;
1173317   +   GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1173318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173320   +end;
MPRINT(EM_DIAGRAM):   end;
1173321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173322   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173323   +   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_AcceptedCmpTotal , BEST12. );
1173324   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173325   +   if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1173326   +      GRP_AcceptedCmpTotal3 = 1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = 1;
1173327   +   end;
MPRINT(EM_DIAGRAM):   end;
1173328   +   else if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '4' then do;
1173329   +      GRP_AcceptedCmpTotal3 = -1;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = -1;
1173330   +   end;
MPRINT(EM_DIAGRAM):   end;
1173331   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173332   +      GRP_AcceptedCmpTotal3 = .;
MPRINT(EM_DIAGRAM):   GRP_AcceptedCmpTotal3 = .;
1173333   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173334   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173335   +   end;
MPRINT(EM_DIAGRAM):   end;
1173336   +end;
MPRINT(EM_DIAGRAM):   end;
1173337   +
1173338   +*** Generate dummy variables for GRP_Frq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Frq ;
1173339   +drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8 GRP_Frq9
1173340   +        GRP_Frq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Frq2 GRP_Frq3 GRP_Frq4 GRP_Frq5 GRP_Frq6 GRP_Frq7 GRP_Frq8
GRP_Frq9 GRP_Frq10 ;
1173341   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173342   +GRP_Frq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 0;
1173343   +GRP_Frq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 0;
1173344   +GRP_Frq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 0;
1173345   +GRP_Frq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 0;
1173346   +GRP_Frq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 0;
1173347   +GRP_Frq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 0;
1173348   +GRP_Frq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 0;
1173349   +GRP_Frq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 0;
1173350   +GRP_Frq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 0;
1173351   +if missing( GRP_Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Frq ) then do;
1173352   +   GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1173353   +   GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1173354   +   GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1173355   +   GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1173356   +   GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1173357   +   GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1173358   +   GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1173359   +   GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1173360   +   GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1173361   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173362   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173363   +end;
MPRINT(EM_DIAGRAM):   end;
1173364   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173365   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173366   +   _dm12 = put( GRP_Frq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Frq , BEST12. );
1173367   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173368   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173369   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1173370   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1173371   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1173372   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1173373   +               GRP_Frq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = 1;
1173374   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173375   +            end;
MPRINT(EM_DIAGRAM):   end;
1173376   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173377   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1173378   +                  GRP_Frq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = -1;
1173379   +                  GRP_Frq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = -1;
1173380   +                  GRP_Frq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = -1;
1173381   +                  GRP_Frq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = -1;
1173382   +                  GRP_Frq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = -1;
1173383   +                  GRP_Frq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = -1;
1173384   +                  GRP_Frq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = -1;
1173385   +                  GRP_Frq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = -1;
1173386   +                  GRP_Frq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = -1;
1173387   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173388   +               end;
MPRINT(EM_DIAGRAM):   end;
1173389   +            end;
MPRINT(EM_DIAGRAM):   end;
1173390   +         end;
MPRINT(EM_DIAGRAM):   end;
1173391   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173392   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173393   +               GRP_Frq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = 1;
1173394   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173395   +            end;
MPRINT(EM_DIAGRAM):   end;
1173396   +         end;
MPRINT(EM_DIAGRAM):   end;
1173397   +      end;
MPRINT(EM_DIAGRAM):   end;
1173398   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173399   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1173400   +            GRP_Frq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = 1;
1173401   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173402   +         end;
MPRINT(EM_DIAGRAM):   end;
1173403   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173404   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1173405   +               GRP_Frq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = 1;
1173406   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173407   +            end;
MPRINT(EM_DIAGRAM):   end;
1173408   +         end;
MPRINT(EM_DIAGRAM):   end;
1173409   +      end;
MPRINT(EM_DIAGRAM):   end;
1173410   +   end;
MPRINT(EM_DIAGRAM):   end;
1173411   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173412   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1173413   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1173414   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1173415   +               GRP_Frq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = 1;
1173416   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173417   +            end;
MPRINT(EM_DIAGRAM):   end;
1173418   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173419   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1173420   +                  GRP_Frq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = 1;
1173421   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173422   +               end;
MPRINT(EM_DIAGRAM):   end;
1173423   +            end;
MPRINT(EM_DIAGRAM):   end;
1173424   +         end;
MPRINT(EM_DIAGRAM):   end;
1173425   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173426   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1173427   +               GRP_Frq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = 1;
1173428   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173429   +            end;
MPRINT(EM_DIAGRAM):   end;
1173430   +         end;
MPRINT(EM_DIAGRAM):   end;
1173431   +      end;
MPRINT(EM_DIAGRAM):   end;
1173432   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173433   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1173434   +            GRP_Frq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = 1;
1173435   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173436   +         end;
MPRINT(EM_DIAGRAM):   end;
1173437   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173438   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1173439   +               GRP_Frq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = 1;
1173440   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173441   +            end;
MPRINT(EM_DIAGRAM):   end;
1173442   +         end;
MPRINT(EM_DIAGRAM):   end;
1173443   +      end;
MPRINT(EM_DIAGRAM):   end;
1173444   +   end;
MPRINT(EM_DIAGRAM):   end;
1173445   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1173446   +      GRP_Frq2 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq2 = .;
1173447   +      GRP_Frq3 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq3 = .;
1173448   +      GRP_Frq4 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq4 = .;
1173449   +      GRP_Frq5 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq5 = .;
1173450   +      GRP_Frq6 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq6 = .;
1173451   +      GRP_Frq7 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq7 = .;
1173452   +      GRP_Frq8 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq8 = .;
1173453   +      GRP_Frq9 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq9 = .;
1173454   +      GRP_Frq10 = .;
MPRINT(EM_DIAGRAM):   GRP_Frq10 = .;
1173455   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173456   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173457   +   end;
MPRINT(EM_DIAGRAM):   end;
1173458   +end;
MPRINT(EM_DIAGRAM):   end;
1173459   +
1173460   +*** Generate dummy variables for GRP_Income ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Income ;
1173461   +drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6 GRP_Income7
1173462   +        GRP_Income8 GRP_Income9 GRP_Income10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Income2 GRP_Income3 GRP_Income4 GRP_Income5 GRP_Income6
GRP_Income7 GRP_Income8 GRP_Income9 GRP_Income10 ;
1173463   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173464   +GRP_Income2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 0;
1173465   +GRP_Income3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 0;
1173466   +GRP_Income4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 0;
1173467   +GRP_Income5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 0;
1173468   +GRP_Income6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 0;
1173469   +GRP_Income7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 0;
1173470   +GRP_Income8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 0;
1173471   +GRP_Income9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 0;
1173472   +GRP_Income10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 0;
1173473   +if missing( GRP_Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Income ) then do;
1173474   +   GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1173475   +   GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1173476   +   GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1173477   +   GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1173478   +   GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1173479   +   GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1173480   +   GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1173481   +   GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1173482   +   GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1173483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173485   +end;
MPRINT(EM_DIAGRAM):   end;
1173486   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173488   +   _dm12 = put( GRP_Income , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Income , BEST12. );
1173489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173490   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173491   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1173492   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1173493   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1173494   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1173495   +               GRP_Income10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = 1;
1173496   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173497   +            end;
MPRINT(EM_DIAGRAM):   end;
1173498   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173499   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1173500   +                  GRP_Income2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = -1;
1173501   +                  GRP_Income3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = -1;
1173502   +                  GRP_Income4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = -1;
1173503   +                  GRP_Income5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = -1;
1173504   +                  GRP_Income6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = -1;
1173505   +                  GRP_Income7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = -1;
1173506   +                  GRP_Income8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = -1;
1173507   +                  GRP_Income9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = -1;
1173508   +                  GRP_Income10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Income10 = -1;
1173509   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173510   +               end;
MPRINT(EM_DIAGRAM):   end;
1173511   +            end;
MPRINT(EM_DIAGRAM):   end;
1173512   +         end;
MPRINT(EM_DIAGRAM):   end;
1173513   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173514   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173515   +               GRP_Income2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income2 = 1;
1173516   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173517   +            end;
MPRINT(EM_DIAGRAM):   end;
1173518   +         end;
MPRINT(EM_DIAGRAM):   end;
1173519   +      end;
MPRINT(EM_DIAGRAM):   end;
1173520   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173521   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1173522   +            GRP_Income3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income3 = 1;
1173523   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173524   +         end;
MPRINT(EM_DIAGRAM):   end;
1173525   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173526   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1173527   +               GRP_Income4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income4 = 1;
1173528   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173529   +            end;
MPRINT(EM_DIAGRAM):   end;
1173530   +         end;
MPRINT(EM_DIAGRAM):   end;
1173531   +      end;
MPRINT(EM_DIAGRAM):   end;
1173532   +   end;
MPRINT(EM_DIAGRAM):   end;
1173533   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173534   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1173535   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1173536   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1173537   +               GRP_Income5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income5 = 1;
1173538   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173539   +            end;
MPRINT(EM_DIAGRAM):   end;
1173540   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173541   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1173542   +                  GRP_Income6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income6 = 1;
1173543   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173544   +               end;
MPRINT(EM_DIAGRAM):   end;
1173545   +            end;
MPRINT(EM_DIAGRAM):   end;
1173546   +         end;
MPRINT(EM_DIAGRAM):   end;
1173547   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173548   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1173549   +               GRP_Income7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income7 = 1;
1173550   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173551   +            end;
MPRINT(EM_DIAGRAM):   end;
1173552   +         end;
MPRINT(EM_DIAGRAM):   end;
1173553   +      end;
MPRINT(EM_DIAGRAM):   end;
1173554   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173555   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1173556   +            GRP_Income8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income8 = 1;
1173557   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173558   +         end;
MPRINT(EM_DIAGRAM):   end;
1173559   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173560   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1173561   +               GRP_Income9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Income9 = 1;
1173562   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173563   +            end;
MPRINT(EM_DIAGRAM):   end;
1173564   +         end;
MPRINT(EM_DIAGRAM):   end;
1173565   +      end;
MPRINT(EM_DIAGRAM):   end;
1173566   +   end;
MPRINT(EM_DIAGRAM):   end;
1173567   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1173568   +      GRP_Income2 = .;
MPRINT(EM_DIAGRAM):   GRP_Income2 = .;
1173569   +      GRP_Income3 = .;
MPRINT(EM_DIAGRAM):   GRP_Income3 = .;
1173570   +      GRP_Income4 = .;
MPRINT(EM_DIAGRAM):   GRP_Income4 = .;
1173571   +      GRP_Income5 = .;
MPRINT(EM_DIAGRAM):   GRP_Income5 = .;
1173572   +      GRP_Income6 = .;
MPRINT(EM_DIAGRAM):   GRP_Income6 = .;
1173573   +      GRP_Income7 = .;
MPRINT(EM_DIAGRAM):   GRP_Income7 = .;
1173574   +      GRP_Income8 = .;
MPRINT(EM_DIAGRAM):   GRP_Income8 = .;
1173575   +      GRP_Income9 = .;
MPRINT(EM_DIAGRAM):   GRP_Income9 = .;
1173576   +      GRP_Income10 = .;
MPRINT(EM_DIAGRAM):   GRP_Income10 = .;
1173577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173579   +   end;
MPRINT(EM_DIAGRAM):   end;
1173580   +end;
MPRINT(EM_DIAGRAM):   end;
1173581   +
1173582   +*** Generate dummy variables for GRP_Mnt ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Mnt ;
1173583   +drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8 GRP_Mnt9
1173584   +        GRP_Mnt10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Mnt2 GRP_Mnt3 GRP_Mnt4 GRP_Mnt5 GRP_Mnt6 GRP_Mnt7 GRP_Mnt8
GRP_Mnt9 GRP_Mnt10 ;
1173585   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173586   +GRP_Mnt2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 0;
1173587   +GRP_Mnt3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 0;
1173588   +GRP_Mnt4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 0;
1173589   +GRP_Mnt5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 0;
1173590   +GRP_Mnt6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 0;
1173591   +GRP_Mnt7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 0;
1173592   +GRP_Mnt8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 0;
1173593   +GRP_Mnt9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 0;
1173594   +GRP_Mnt10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 0;
1173595   +if missing( GRP_Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Mnt ) then do;
1173596   +   GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1173597   +   GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1173598   +   GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1173599   +   GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1173600   +   GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1173601   +   GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1173602   +   GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1173603   +   GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1173604   +   GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1173605   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173606   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173607   +end;
MPRINT(EM_DIAGRAM):   end;
1173608   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173609   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173610   +   _dm12 = put( GRP_Mnt , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Mnt , BEST12. );
1173611   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173612   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173613   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1173614   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1173615   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1173616   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1173617   +               GRP_Mnt10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = 1;
1173618   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173619   +            end;
MPRINT(EM_DIAGRAM):   end;
1173620   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173621   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1173622   +                  GRP_Mnt2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = -1;
1173623   +                  GRP_Mnt3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = -1;
1173624   +                  GRP_Mnt4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = -1;
1173625   +                  GRP_Mnt5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = -1;
1173626   +                  GRP_Mnt6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = -1;
1173627   +                  GRP_Mnt7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = -1;
1173628   +                  GRP_Mnt8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = -1;
1173629   +                  GRP_Mnt9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = -1;
1173630   +                  GRP_Mnt10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = -1;
1173631   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173632   +               end;
MPRINT(EM_DIAGRAM):   end;
1173633   +            end;
MPRINT(EM_DIAGRAM):   end;
1173634   +         end;
MPRINT(EM_DIAGRAM):   end;
1173635   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173636   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173637   +               GRP_Mnt2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = 1;
1173638   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173639   +            end;
MPRINT(EM_DIAGRAM):   end;
1173640   +         end;
MPRINT(EM_DIAGRAM):   end;
1173641   +      end;
MPRINT(EM_DIAGRAM):   end;
1173642   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173643   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1173644   +            GRP_Mnt3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = 1;
1173645   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173646   +         end;
MPRINT(EM_DIAGRAM):   end;
1173647   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173648   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1173649   +               GRP_Mnt4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = 1;
1173650   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173651   +            end;
MPRINT(EM_DIAGRAM):   end;
1173652   +         end;
MPRINT(EM_DIAGRAM):   end;
1173653   +      end;
MPRINT(EM_DIAGRAM):   end;
1173654   +   end;
MPRINT(EM_DIAGRAM):   end;
1173655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173656   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1173657   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1173658   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1173659   +               GRP_Mnt5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = 1;
1173660   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173661   +            end;
MPRINT(EM_DIAGRAM):   end;
1173662   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173663   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1173664   +                  GRP_Mnt6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = 1;
1173665   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173666   +               end;
MPRINT(EM_DIAGRAM):   end;
1173667   +            end;
MPRINT(EM_DIAGRAM):   end;
1173668   +         end;
MPRINT(EM_DIAGRAM):   end;
1173669   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173670   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1173671   +               GRP_Mnt7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = 1;
1173672   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173673   +            end;
MPRINT(EM_DIAGRAM):   end;
1173674   +         end;
MPRINT(EM_DIAGRAM):   end;
1173675   +      end;
MPRINT(EM_DIAGRAM):   end;
1173676   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173677   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1173678   +            GRP_Mnt8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = 1;
1173679   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173680   +         end;
MPRINT(EM_DIAGRAM):   end;
1173681   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173682   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1173683   +               GRP_Mnt9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = 1;
1173684   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173685   +            end;
MPRINT(EM_DIAGRAM):   end;
1173686   +         end;
MPRINT(EM_DIAGRAM):   end;
1173687   +      end;
MPRINT(EM_DIAGRAM):   end;
1173688   +   end;
MPRINT(EM_DIAGRAM):   end;
1173689   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1173690   +      GRP_Mnt2 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt2 = .;
1173691   +      GRP_Mnt3 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt3 = .;
1173692   +      GRP_Mnt4 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt4 = .;
1173693   +      GRP_Mnt5 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt5 = .;
1173694   +      GRP_Mnt6 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt6 = .;
1173695   +      GRP_Mnt7 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt7 = .;
1173696   +      GRP_Mnt8 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt8 = .;
1173697   +      GRP_Mnt9 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt9 = .;
1173698   +      GRP_Mnt10 = .;
MPRINT(EM_DIAGRAM):   GRP_Mnt10 = .;
1173699   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173700   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173701   +   end;
MPRINT(EM_DIAGRAM):   end;
1173702   +end;
MPRINT(EM_DIAGRAM):   end;
1173703   +
1173704   +*** Generate dummy variables for GRP_MntFishProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntFishProducts ;
1173705   +drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
1173706   +        GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8
1173707   +        GRP_MntFishProducts9 GRP_MntFishProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntFishProducts3 GRP_MntFishProducts4 GRP_MntFishProducts5
GRP_MntFishProducts6 GRP_MntFishProducts7 GRP_MntFishProducts8 GRP_MntFishProducts9
GRP_MntFishProducts10 ;
1173708   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173709   +GRP_MntFishProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 0;
1173710   +GRP_MntFishProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 0;
1173711   +GRP_MntFishProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 0;
1173712   +GRP_MntFishProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 0;
1173713   +GRP_MntFishProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 0;
1173714   +GRP_MntFishProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 0;
1173715   +GRP_MntFishProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 0;
1173716   +GRP_MntFishProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 0;
1173717   +if missing( GRP_MntFishProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntFishProducts ) then do;
1173718   +   GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1173719   +   GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1173720   +   GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1173721   +   GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1173722   +   GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1173723   +   GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1173724   +   GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1173725   +   GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1173726   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173727   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173728   +end;
MPRINT(EM_DIAGRAM):   end;
1173729   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173730   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173731   +   _dm12 = put( GRP_MntFishProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntFishProducts , BEST12. );
1173732   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173733   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173734   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1173735   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1173736   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1173737   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1173738   +               GRP_MntFishProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = 1;
1173739   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173740   +            end;
MPRINT(EM_DIAGRAM):   end;
1173741   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173742   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1173743   +                  GRP_MntFishProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = -1;
1173744   +                  GRP_MntFishProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = -1;
1173745   +                  GRP_MntFishProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = -1;
1173746   +                  GRP_MntFishProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = -1;
1173747   +                  GRP_MntFishProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = -1;
1173748   +                  GRP_MntFishProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = -1;
1173749   +                  GRP_MntFishProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = -1;
1173750   +                  GRP_MntFishProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = -1;
1173751   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173752   +               end;
MPRINT(EM_DIAGRAM):   end;
1173753   +            end;
MPRINT(EM_DIAGRAM):   end;
1173754   +         end;
MPRINT(EM_DIAGRAM):   end;
1173755   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173756   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1173757   +               GRP_MntFishProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = 1;
1173758   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173759   +            end;
MPRINT(EM_DIAGRAM):   end;
1173760   +         end;
MPRINT(EM_DIAGRAM):   end;
1173761   +      end;
MPRINT(EM_DIAGRAM):   end;
1173762   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173763   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1173764   +            GRP_MntFishProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = 1;
1173765   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173766   +         end;
MPRINT(EM_DIAGRAM):   end;
1173767   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173768   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1173769   +               GRP_MntFishProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = 1;
1173770   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173771   +            end;
MPRINT(EM_DIAGRAM):   end;
1173772   +         end;
MPRINT(EM_DIAGRAM):   end;
1173773   +      end;
MPRINT(EM_DIAGRAM):   end;
1173774   +   end;
MPRINT(EM_DIAGRAM):   end;
1173775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173776   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1173777   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1173778   +            GRP_MntFishProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = 1;
1173779   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173780   +         end;
MPRINT(EM_DIAGRAM):   end;
1173781   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173782   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1173783   +               GRP_MntFishProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = 1;
1173784   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173785   +            end;
MPRINT(EM_DIAGRAM):   end;
1173786   +         end;
MPRINT(EM_DIAGRAM):   end;
1173787   +      end;
MPRINT(EM_DIAGRAM):   end;
1173788   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173789   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1173790   +            GRP_MntFishProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = 1;
1173791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173792   +         end;
MPRINT(EM_DIAGRAM):   end;
1173793   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173794   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1173795   +               GRP_MntFishProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = 1;
1173796   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173797   +            end;
MPRINT(EM_DIAGRAM):   end;
1173798   +         end;
MPRINT(EM_DIAGRAM):   end;
1173799   +      end;
MPRINT(EM_DIAGRAM):   end;
1173800   +   end;
MPRINT(EM_DIAGRAM):   end;
1173801   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1173802   +      GRP_MntFishProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts3 = .;
1173803   +      GRP_MntFishProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts4 = .;
1173804   +      GRP_MntFishProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts5 = .;
1173805   +      GRP_MntFishProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts6 = .;
1173806   +      GRP_MntFishProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts7 = .;
1173807   +      GRP_MntFishProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts8 = .;
1173808   +      GRP_MntFishProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts9 = .;
1173809   +      GRP_MntFishProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntFishProducts10 = .;
1173810   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173811   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173812   +   end;
MPRINT(EM_DIAGRAM):   end;
1173813   +end;
MPRINT(EM_DIAGRAM):   end;
1173814   +
1173815   +*** Generate dummy variables for GRP_MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntGoldProds ;
1173816   +drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4 GRP_MntGoldProds5
1173817   +        GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8
1173818   +        GRP_MntGoldProds9 GRP_MntGoldProds10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntGoldProds2 GRP_MntGoldProds3 GRP_MntGoldProds4
GRP_MntGoldProds5 GRP_MntGoldProds6 GRP_MntGoldProds7 GRP_MntGoldProds8 GRP_MntGoldProds9
GRP_MntGoldProds10 ;
1173819   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173820   +GRP_MntGoldProds2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 0;
1173821   +GRP_MntGoldProds3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 0;
1173822   +GRP_MntGoldProds4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 0;
1173823   +GRP_MntGoldProds5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 0;
1173824   +GRP_MntGoldProds6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 0;
1173825   +GRP_MntGoldProds7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 0;
1173826   +GRP_MntGoldProds8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 0;
1173827   +GRP_MntGoldProds9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 0;
1173828   +GRP_MntGoldProds10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 0;
1173829   +if missing( GRP_MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntGoldProds ) then do;
1173830   +   GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1173831   +   GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1173832   +   GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1173833   +   GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1173834   +   GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1173835   +   GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1173836   +   GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1173837   +   GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1173838   +   GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1173839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173841   +end;
MPRINT(EM_DIAGRAM):   end;
1173842   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173843   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173844   +   _dm12 = put( GRP_MntGoldProds , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntGoldProds , BEST12. );
1173845   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173846   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173847   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1173848   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1173849   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1173850   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1173851   +               GRP_MntGoldProds10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = 1;
1173852   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173853   +            end;
MPRINT(EM_DIAGRAM):   end;
1173854   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173855   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1173856   +                  GRP_MntGoldProds2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = -1;
1173857   +                  GRP_MntGoldProds3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = -1;
1173858   +                  GRP_MntGoldProds4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = -1;
1173859   +                  GRP_MntGoldProds5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = -1;
1173860   +                  GRP_MntGoldProds6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = -1;
1173861   +                  GRP_MntGoldProds7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = -1;
1173862   +                  GRP_MntGoldProds8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = -1;
1173863   +                  GRP_MntGoldProds9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = -1;
1173864   +                  GRP_MntGoldProds10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = -1;
1173865   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173866   +               end;
MPRINT(EM_DIAGRAM):   end;
1173867   +            end;
MPRINT(EM_DIAGRAM):   end;
1173868   +         end;
MPRINT(EM_DIAGRAM):   end;
1173869   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173870   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173871   +               GRP_MntGoldProds2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = 1;
1173872   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173873   +            end;
MPRINT(EM_DIAGRAM):   end;
1173874   +         end;
MPRINT(EM_DIAGRAM):   end;
1173875   +      end;
MPRINT(EM_DIAGRAM):   end;
1173876   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173877   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1173878   +            GRP_MntGoldProds3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = 1;
1173879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173880   +         end;
MPRINT(EM_DIAGRAM):   end;
1173881   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173882   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1173883   +               GRP_MntGoldProds4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = 1;
1173884   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173885   +            end;
MPRINT(EM_DIAGRAM):   end;
1173886   +         end;
MPRINT(EM_DIAGRAM):   end;
1173887   +      end;
MPRINT(EM_DIAGRAM):   end;
1173888   +   end;
MPRINT(EM_DIAGRAM):   end;
1173889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1173890   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1173891   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1173892   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1173893   +               GRP_MntGoldProds5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = 1;
1173894   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173895   +            end;
MPRINT(EM_DIAGRAM):   end;
1173896   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173897   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1173898   +                  GRP_MntGoldProds6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = 1;
1173899   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173900   +               end;
MPRINT(EM_DIAGRAM):   end;
1173901   +            end;
MPRINT(EM_DIAGRAM):   end;
1173902   +         end;
MPRINT(EM_DIAGRAM):   end;
1173903   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173904   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1173905   +               GRP_MntGoldProds7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = 1;
1173906   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173907   +            end;
MPRINT(EM_DIAGRAM):   end;
1173908   +         end;
MPRINT(EM_DIAGRAM):   end;
1173909   +      end;
MPRINT(EM_DIAGRAM):   end;
1173910   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1173911   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1173912   +            GRP_MntGoldProds8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = 1;
1173913   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173914   +         end;
MPRINT(EM_DIAGRAM):   end;
1173915   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173916   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1173917   +               GRP_MntGoldProds9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = 1;
1173918   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173919   +            end;
MPRINT(EM_DIAGRAM):   end;
1173920   +         end;
MPRINT(EM_DIAGRAM):   end;
1173921   +      end;
MPRINT(EM_DIAGRAM):   end;
1173922   +   end;
MPRINT(EM_DIAGRAM):   end;
1173923   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1173924   +      GRP_MntGoldProds2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds2 = .;
1173925   +      GRP_MntGoldProds3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds3 = .;
1173926   +      GRP_MntGoldProds4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds4 = .;
1173927   +      GRP_MntGoldProds5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds5 = .;
1173928   +      GRP_MntGoldProds6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds6 = .;
1173929   +      GRP_MntGoldProds7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds7 = .;
1173930   +      GRP_MntGoldProds8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds8 = .;
1173931   +      GRP_MntGoldProds9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds9 = .;
1173932   +      GRP_MntGoldProds10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntGoldProds10 = .;
1173933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1173934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173935   +   end;
MPRINT(EM_DIAGRAM):   end;
1173936   +end;
MPRINT(EM_DIAGRAM):   end;
1173937   +
1173938   +*** Generate dummy variables for GRP_MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntMeatProducts ;
1173939   +drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
1173940   +        GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7
1173941   +        GRP_MntMeatProducts8 GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntMeatProducts2 GRP_MntMeatProducts3 GRP_MntMeatProducts4
GRP_MntMeatProducts5 GRP_MntMeatProducts6 GRP_MntMeatProducts7 GRP_MntMeatProducts8
GRP_MntMeatProducts9 GRP_MntMeatProducts10 ;
1173942   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1173943   +GRP_MntMeatProducts2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 0;
1173944   +GRP_MntMeatProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 0;
1173945   +GRP_MntMeatProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 0;
1173946   +GRP_MntMeatProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 0;
1173947   +GRP_MntMeatProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 0;
1173948   +GRP_MntMeatProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 0;
1173949   +GRP_MntMeatProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 0;
1173950   +GRP_MntMeatProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 0;
1173951   +GRP_MntMeatProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 0;
1173952   +if missing( GRP_MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntMeatProducts ) then do;
1173953   +   GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1173954   +   GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1173955   +   GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1173956   +   GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1173957   +   GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1173958   +   GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1173959   +   GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1173960   +   GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1173961   +   GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1173962   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1173963   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1173964   +end;
MPRINT(EM_DIAGRAM):   end;
1173965   +else do;
MPRINT(EM_DIAGRAM):   else do;
1173966   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1173967   +   _dm12 = put( GRP_MntMeatProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntMeatProducts , BEST12. );
1173968   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1173969   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1173970   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1173971   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1173972   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1173973   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1173974   +               GRP_MntMeatProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = 1;
1173975   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173976   +            end;
MPRINT(EM_DIAGRAM):   end;
1173977   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1173978   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1173979   +                  GRP_MntMeatProducts2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = -1;
1173980   +                  GRP_MntMeatProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = -1;
1173981   +                  GRP_MntMeatProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = -1;
1173982   +                  GRP_MntMeatProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = -1;
1173983   +                  GRP_MntMeatProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = -1;
1173984   +                  GRP_MntMeatProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = -1;
1173985   +                  GRP_MntMeatProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = -1;
1173986   +                  GRP_MntMeatProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = -1;
1173987   +                  GRP_MntMeatProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = -1;
1173988   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173989   +               end;
MPRINT(EM_DIAGRAM):   end;
1173990   +            end;
MPRINT(EM_DIAGRAM):   end;
1173991   +         end;
MPRINT(EM_DIAGRAM):   end;
1173992   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1173993   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1173994   +               GRP_MntMeatProducts2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = 1;
1173995   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1173996   +            end;
MPRINT(EM_DIAGRAM):   end;
1173997   +         end;
MPRINT(EM_DIAGRAM):   end;
1173998   +      end;
MPRINT(EM_DIAGRAM):   end;
1173999   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174000   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174001   +            GRP_MntMeatProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = 1;
1174002   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174003   +         end;
MPRINT(EM_DIAGRAM):   end;
1174004   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174005   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174006   +               GRP_MntMeatProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = 1;
1174007   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174008   +            end;
MPRINT(EM_DIAGRAM):   end;
1174009   +         end;
MPRINT(EM_DIAGRAM):   end;
1174010   +      end;
MPRINT(EM_DIAGRAM):   end;
1174011   +   end;
MPRINT(EM_DIAGRAM):   end;
1174012   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174013   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174014   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1174015   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174016   +               GRP_MntMeatProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = 1;
1174017   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174018   +            end;
MPRINT(EM_DIAGRAM):   end;
1174019   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174020   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174021   +                  GRP_MntMeatProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = 1;
1174022   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174023   +               end;
MPRINT(EM_DIAGRAM):   end;
1174024   +            end;
MPRINT(EM_DIAGRAM):   end;
1174025   +         end;
MPRINT(EM_DIAGRAM):   end;
1174026   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174027   +            if _dm12 = '7'  then do;
The SAS System
 
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174028   +               GRP_MntMeatProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = 1;
1174029   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174030   +            end;
MPRINT(EM_DIAGRAM):   end;
1174031   +         end;
MPRINT(EM_DIAGRAM):   end;
1174032   +      end;
MPRINT(EM_DIAGRAM):   end;
1174033   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174034   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174035   +            GRP_MntMeatProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = 1;
1174036   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174037   +         end;
MPRINT(EM_DIAGRAM):   end;
1174038   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174039   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174040   +               GRP_MntMeatProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = 1;
1174041   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174042   +            end;
MPRINT(EM_DIAGRAM):   end;
1174043   +         end;
MPRINT(EM_DIAGRAM):   end;
1174044   +      end;
MPRINT(EM_DIAGRAM):   end;
1174045   +   end;
MPRINT(EM_DIAGRAM):   end;
1174046   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174047   +      GRP_MntMeatProducts2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts2 = .;
1174048   +      GRP_MntMeatProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts3 = .;
1174049   +      GRP_MntMeatProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts4 = .;
1174050   +      GRP_MntMeatProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts5 = .;
1174051   +      GRP_MntMeatProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts6 = .;
1174052   +      GRP_MntMeatProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts7 = .;
1174053   +      GRP_MntMeatProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts8 = .;
1174054   +      GRP_MntMeatProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts9 = .;
1174055   +      GRP_MntMeatProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntMeatProducts10 = .;
1174056   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174057   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174058   +   end;
MPRINT(EM_DIAGRAM):   end;
1174059   +end;
MPRINT(EM_DIAGRAM):   end;
1174060   +
1174061   +*** Generate dummy variables for GRP_MntSweetProducts ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntSweetProducts ;
1174062   +drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
1174063   +        GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8
1174064   +        GRP_MntSweetProducts9 GRP_MntSweetProducts10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntSweetProducts3 GRP_MntSweetProducts4 GRP_MntSweetProducts5
GRP_MntSweetProducts6 GRP_MntSweetProducts7 GRP_MntSweetProducts8 GRP_MntSweetProducts9
GRP_MntSweetProducts10 ;
1174065   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174066   +GRP_MntSweetProducts3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 0;
1174067   +GRP_MntSweetProducts4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 0;
1174068   +GRP_MntSweetProducts5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 0;
1174069   +GRP_MntSweetProducts6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 0;
1174070   +GRP_MntSweetProducts7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 0;
1174071   +GRP_MntSweetProducts8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 0;
1174072   +GRP_MntSweetProducts9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 0;
1174073   +GRP_MntSweetProducts10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 0;
1174074   +if missing( GRP_MntSweetProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntSweetProducts ) then do;
1174075   +   GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1174076   +   GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1174077   +   GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1174078   +   GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1174079   +   GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1174080   +   GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1174081   +   GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1174082   +   GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1174083   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174084   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174085   +end;
MPRINT(EM_DIAGRAM):   end;
1174086   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174087   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174088   +   _dm12 = put( GRP_MntSweetProducts , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntSweetProducts , BEST12. );
1174089   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174090   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174091   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1174092   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1174093   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1174094   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1174095   +               GRP_MntSweetProducts10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = 1;
1174096   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174097   +            end;
MPRINT(EM_DIAGRAM):   end;
1174098   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174099   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1174100   +                  GRP_MntSweetProducts3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = -1;
1174101   +                  GRP_MntSweetProducts4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = -1;
1174102   +                  GRP_MntSweetProducts5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = -1;
1174103   +                  GRP_MntSweetProducts6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = -1;
1174104   +                  GRP_MntSweetProducts7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = -1;
1174105   +                  GRP_MntSweetProducts8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = -1;
1174106   +                  GRP_MntSweetProducts9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = -1;
1174107   +                  GRP_MntSweetProducts10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = -1;
1174108   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174109   +               end;
MPRINT(EM_DIAGRAM):   end;
1174110   +            end;
MPRINT(EM_DIAGRAM):   end;
1174111   +         end;
MPRINT(EM_DIAGRAM):   end;
1174112   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174113   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174114   +               GRP_MntSweetProducts3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = 1;
1174115   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174116   +            end;
MPRINT(EM_DIAGRAM):   end;
1174117   +         end;
MPRINT(EM_DIAGRAM):   end;
1174118   +      end;
MPRINT(EM_DIAGRAM):   end;
1174119   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174120   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174121   +            GRP_MntSweetProducts4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = 1;
1174122   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174123   +         end;
MPRINT(EM_DIAGRAM):   end;
1174124   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174125   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174126   +               GRP_MntSweetProducts5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = 1;
1174127   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174128   +            end;
MPRINT(EM_DIAGRAM):   end;
1174129   +         end;
MPRINT(EM_DIAGRAM):   end;
1174130   +      end;
MPRINT(EM_DIAGRAM):   end;
1174131   +   end;
MPRINT(EM_DIAGRAM):   end;
1174132   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174133   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174134   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174135   +            GRP_MntSweetProducts6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = 1;
1174136   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174137   +         end;
MPRINT(EM_DIAGRAM):   end;
1174138   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174139   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174140   +               GRP_MntSweetProducts7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = 1;
1174141   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174142   +            end;
MPRINT(EM_DIAGRAM):   end;
1174143   +         end;
MPRINT(EM_DIAGRAM):   end;
1174144   +      end;
MPRINT(EM_DIAGRAM):   end;
1174145   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174146   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174147   +            GRP_MntSweetProducts8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = 1;
1174148   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174149   +         end;
MPRINT(EM_DIAGRAM):   end;
1174150   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174151   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174152   +               GRP_MntSweetProducts9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = 1;
1174153   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174154   +            end;
MPRINT(EM_DIAGRAM):   end;
1174155   +         end;
MPRINT(EM_DIAGRAM):   end;
1174156   +      end;
MPRINT(EM_DIAGRAM):   end;
1174157   +   end;
MPRINT(EM_DIAGRAM):   end;
1174158   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174159   +      GRP_MntSweetProducts3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts3 = .;
1174160   +      GRP_MntSweetProducts4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts4 = .;
1174161   +      GRP_MntSweetProducts5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts5 = .;
1174162   +      GRP_MntSweetProducts6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts6 = .;
1174163   +      GRP_MntSweetProducts7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts7 = .;
1174164   +      GRP_MntSweetProducts8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts8 = .;
1174165   +      GRP_MntSweetProducts9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts9 = .;
1174166   +      GRP_MntSweetProducts10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntSweetProducts10 = .;
1174167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174169   +   end;
MPRINT(EM_DIAGRAM):   end;
1174170   +end;
MPRINT(EM_DIAGRAM):   end;
1174171   +
1174172   +*** Generate dummy variables for GRP_MntWines ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_MntWines ;
1174173   +drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5 GRP_MntWines6
1174174   +        GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
MPRINT(EM_DIAGRAM):   drop GRP_MntWines2 GRP_MntWines3 GRP_MntWines4 GRP_MntWines5
GRP_MntWines6 GRP_MntWines7 GRP_MntWines8 GRP_MntWines9 GRP_MntWines10 ;
1174175   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174176   +GRP_MntWines2 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 0;
1174177   +GRP_MntWines3 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 0;
1174178   +GRP_MntWines4 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 0;
1174179   +GRP_MntWines5 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 0;
1174180   +GRP_MntWines6 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 0;
1174181   +GRP_MntWines7 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 0;
1174182   +GRP_MntWines8 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 0;
1174183   +GRP_MntWines9 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 0;
1174184   +GRP_MntWines10 = 0;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 0;
1174185   +if missing( GRP_MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_MntWines ) then do;
1174186   +   GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1174187   +   GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1174188   +   GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1174189   +   GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1174190   +   GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1174191   +   GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1174192   +   GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1174193   +   GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1174194   +   GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1174195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174197   +end;
MPRINT(EM_DIAGRAM):   end;
1174198   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174199   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174200   +   _dm12 = put( GRP_MntWines , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_MntWines , BEST12. );
1174201   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174202   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174203   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1174204   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1174205   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1174206   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1174207   +               GRP_MntWines10 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = 1;
1174208   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174209   +            end;
MPRINT(EM_DIAGRAM):   end;
1174210   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174211   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1174212   +                  GRP_MntWines2 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = -1;
1174213   +                  GRP_MntWines3 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = -1;
1174214   +                  GRP_MntWines4 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = -1;
1174215   +                  GRP_MntWines5 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = -1;
1174216   +                  GRP_MntWines6 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = -1;
1174217   +                  GRP_MntWines7 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = -1;
1174218   +                  GRP_MntWines8 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = -1;
1174219   +                  GRP_MntWines9 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = -1;
1174220   +                  GRP_MntWines10 = -1;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = -1;
1174221   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174222   +               end;
MPRINT(EM_DIAGRAM):   end;
1174223   +            end;
MPRINT(EM_DIAGRAM):   end;
1174224   +         end;
MPRINT(EM_DIAGRAM):   end;
1174225   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174226   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174227   +               GRP_MntWines2 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = 1;
1174228   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174229   +            end;
MPRINT(EM_DIAGRAM):   end;
1174230   +         end;
MPRINT(EM_DIAGRAM):   end;
1174231   +      end;
MPRINT(EM_DIAGRAM):   end;
1174232   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174233   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174234   +            GRP_MntWines3 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = 1;
1174235   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174236   +         end;
MPRINT(EM_DIAGRAM):   end;
1174237   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174238   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174239   +               GRP_MntWines4 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = 1;
1174240   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174241   +            end;
MPRINT(EM_DIAGRAM):   end;
1174242   +         end;
MPRINT(EM_DIAGRAM):   end;
1174243   +      end;
MPRINT(EM_DIAGRAM):   end;
1174244   +   end;
MPRINT(EM_DIAGRAM):   end;
1174245   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174246   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174247   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1174248   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174249   +               GRP_MntWines5 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = 1;
1174250   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174251   +            end;
MPRINT(EM_DIAGRAM):   end;
1174252   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174253   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174254   +                  GRP_MntWines6 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = 1;
1174255   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174256   +               end;
MPRINT(EM_DIAGRAM):   end;
1174257   +            end;
MPRINT(EM_DIAGRAM):   end;
1174258   +         end;
MPRINT(EM_DIAGRAM):   end;
1174259   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174260   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174261   +               GRP_MntWines7 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = 1;
1174262   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174263   +            end;
MPRINT(EM_DIAGRAM):   end;
1174264   +         end;
MPRINT(EM_DIAGRAM):   end;
1174265   +      end;
MPRINT(EM_DIAGRAM):   end;
1174266   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174267   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174268   +            GRP_MntWines8 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = 1;
1174269   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174270   +         end;
MPRINT(EM_DIAGRAM):   end;
1174271   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174272   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174273   +               GRP_MntWines9 = 1;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = 1;
1174274   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174275   +            end;
MPRINT(EM_DIAGRAM):   end;
1174276   +         end;
MPRINT(EM_DIAGRAM):   end;
1174277   +      end;
MPRINT(EM_DIAGRAM):   end;
1174278   +   end;
MPRINT(EM_DIAGRAM):   end;
1174279   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174280   +      GRP_MntWines2 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines2 = .;
1174281   +      GRP_MntWines3 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines3 = .;
1174282   +      GRP_MntWines4 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines4 = .;
1174283   +      GRP_MntWines5 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines5 = .;
1174284   +      GRP_MntWines6 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines6 = .;
1174285   +      GRP_MntWines7 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines7 = .;
1174286   +      GRP_MntWines8 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines8 = .;
1174287   +      GRP_MntWines9 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines9 = .;
1174288   +      GRP_MntWines10 = .;
MPRINT(EM_DIAGRAM):   GRP_MntWines10 = .;
1174289   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174290   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174291   +   end;
MPRINT(EM_DIAGRAM):   end;
1174292   +end;
MPRINT(EM_DIAGRAM):   end;
1174293   +
1174294   +*** Generate dummy variables for GRP_NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumCatalogPurchases ;
1174295   +drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
1174296   +        GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6
1174297   +        GRP_NumCatalogPurchases7 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumCatalogPurchases3 GRP_NumCatalogPurchases4
GRP_NumCatalogPurchases5 GRP_NumCatalogPurchases6 GRP_NumCatalogPurchases7 ;
1174298   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174299   +GRP_NumCatalogPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 0;
1174300   +GRP_NumCatalogPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 0;
1174301   +GRP_NumCatalogPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 0;
1174302   +GRP_NumCatalogPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 0;
1174303   +GRP_NumCatalogPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 0;
1174304   +if missing( GRP_NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumCatalogPurchases ) then do;
1174305   +   GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1174306   +   GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1174307   +   GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1174308   +   GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1174309   +   GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1174310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174312   +end;
MPRINT(EM_DIAGRAM):   end;
1174313   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174314   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174315   +   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumCatalogPurchases , BEST12. );
1174316   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174317   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174318   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1174319   +      if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1174320   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174321   +            GRP_NumCatalogPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = 1;
1174322   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174323   +         end;
MPRINT(EM_DIAGRAM):   end;
1174324   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174325   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174326   +               GRP_NumCatalogPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = 1;
1174327   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174328   +            end;
MPRINT(EM_DIAGRAM):   end;
1174329   +         end;
MPRINT(EM_DIAGRAM):   end;
1174330   +      end;
MPRINT(EM_DIAGRAM):   end;
1174331   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174332   +         if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174333   +            GRP_NumCatalogPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = 1;
1174334   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174335   +         end;
MPRINT(EM_DIAGRAM):   end;
1174336   +      end;
MPRINT(EM_DIAGRAM):   end;
1174337   +   end;
MPRINT(EM_DIAGRAM):   end;
1174338   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174339   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174340   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174341   +            GRP_NumCatalogPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = 1;
1174342   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174343   +         end;
MPRINT(EM_DIAGRAM):   end;
1174344   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174345   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174346   +               GRP_NumCatalogPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = 1;
1174347   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174348   +            end;
MPRINT(EM_DIAGRAM):   end;
1174349   +         end;
MPRINT(EM_DIAGRAM):   end;
1174350   +      end;
MPRINT(EM_DIAGRAM):   end;
1174351   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174352   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174353   +            GRP_NumCatalogPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = -1;
1174354   +            GRP_NumCatalogPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = -1;
1174355   +            GRP_NumCatalogPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = -1;
1174356   +            GRP_NumCatalogPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = -1;
1174357   +            GRP_NumCatalogPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = -1;
1174358   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174359   +         end;
MPRINT(EM_DIAGRAM):   end;
1174360   +      end;
MPRINT(EM_DIAGRAM):   end;
1174361   +   end;
MPRINT(EM_DIAGRAM):   end;
1174362   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174363   +      GRP_NumCatalogPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases3 = .;
1174364   +      GRP_NumCatalogPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases4 = .;
1174365   +      GRP_NumCatalogPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases5 = .;
1174366   +      GRP_NumCatalogPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases6 = .;
1174367   +      GRP_NumCatalogPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumCatalogPurchases7 = .;
1174368   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174369   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174370   +   end;
MPRINT(EM_DIAGRAM):   end;
1174371   +end;
MPRINT(EM_DIAGRAM):   end;
1174372   +
1174373   +*** Generate dummy variables for GRP_NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumDistPurchases ;
1174374   +drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
1174375   +        GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7
1174376   +        GRP_NumDistPurchases8 GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumDistPurchases2 GRP_NumDistPurchases3 GRP_NumDistPurchases4
GRP_NumDistPurchases5 GRP_NumDistPurchases6 GRP_NumDistPurchases7 GRP_NumDistPurchases8
GRP_NumDistPurchases9 GRP_NumDistPurchases10 ;
1174377   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174378   +GRP_NumDistPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 0;
1174379   +GRP_NumDistPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 0;
1174380   +GRP_NumDistPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 0;
1174381   +GRP_NumDistPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 0;
1174382   +GRP_NumDistPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 0;
1174383   +GRP_NumDistPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 0;
1174384   +GRP_NumDistPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 0;
1174385   +GRP_NumDistPurchases9 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 0;
1174386   +GRP_NumDistPurchases10 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 0;
1174387   +if missing( GRP_NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumDistPurchases ) then do;
1174388   +   GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1174389   +   GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1174390   +   GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1174391   +   GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1174392   +   GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1174393   +   GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1174394   +   GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1174395   +   GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1174396   +   GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1174397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174399   +end;
MPRINT(EM_DIAGRAM):   end;
1174400   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174401   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174402   +   _dm12 = put( GRP_NumDistPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumDistPurchases , BEST12. );
1174403   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174404   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174405   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1174406   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1174407   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1174408   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1174409   +               GRP_NumDistPurchases10 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = 1;
1174410   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174411   +            end;
MPRINT(EM_DIAGRAM):   end;
1174412   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174413   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1174414   +                  GRP_NumDistPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = -1;
1174415   +                  GRP_NumDistPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = -1;
1174416   +                  GRP_NumDistPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = -1;
1174417   +                  GRP_NumDistPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = -1;
1174418   +                  GRP_NumDistPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = -1;
1174419   +                  GRP_NumDistPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = -1;
1174420   +                  GRP_NumDistPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = -1;
1174421   +                  GRP_NumDistPurchases9 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = -1;
1174422   +                  GRP_NumDistPurchases10 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = -1;
1174423   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174424   +               end;
MPRINT(EM_DIAGRAM):   end;
1174425   +            end;
MPRINT(EM_DIAGRAM):   end;
1174426   +         end;
MPRINT(EM_DIAGRAM):   end;
1174427   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174428   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174429   +               GRP_NumDistPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = 1;
1174430   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174431   +            end;
MPRINT(EM_DIAGRAM):   end;
1174432   +         end;
MPRINT(EM_DIAGRAM):   end;
1174433   +      end;
MPRINT(EM_DIAGRAM):   end;
1174434   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174435   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174436   +            GRP_NumDistPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = 1;
1174437   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174438   +         end;
MPRINT(EM_DIAGRAM):   end;
1174439   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174440   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174441   +               GRP_NumDistPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = 1;
1174442   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174443   +            end;
MPRINT(EM_DIAGRAM):   end;
1174444   +         end;
MPRINT(EM_DIAGRAM):   end;
1174445   +      end;
MPRINT(EM_DIAGRAM):   end;
1174446   +   end;
MPRINT(EM_DIAGRAM):   end;
1174447   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174448   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174449   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1174450   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174451   +               GRP_NumDistPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = 1;
1174452   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174453   +            end;
MPRINT(EM_DIAGRAM):   end;
1174454   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174455   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174456   +                  GRP_NumDistPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = 1;
1174457   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174458   +               end;
MPRINT(EM_DIAGRAM):   end;
1174459   +            end;
MPRINT(EM_DIAGRAM):   end;
1174460   +         end;
MPRINT(EM_DIAGRAM):   end;
1174461   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174462   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174463   +               GRP_NumDistPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = 1;
1174464   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174465   +            end;
MPRINT(EM_DIAGRAM):   end;
1174466   +         end;
MPRINT(EM_DIAGRAM):   end;
1174467   +      end;
MPRINT(EM_DIAGRAM):   end;
1174468   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174469   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174470   +            GRP_NumDistPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = 1;
1174471   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174472   +         end;
MPRINT(EM_DIAGRAM):   end;
1174473   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174474   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174475   +               GRP_NumDistPurchases9 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = 1;
1174476   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174477   +            end;
MPRINT(EM_DIAGRAM):   end;
1174478   +         end;
MPRINT(EM_DIAGRAM):   end;
1174479   +      end;
MPRINT(EM_DIAGRAM):   end;
1174480   +   end;
MPRINT(EM_DIAGRAM):   end;
1174481   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174482   +      GRP_NumDistPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases2 = .;
1174483   +      GRP_NumDistPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases3 = .;
1174484   +      GRP_NumDistPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases4 = .;
1174485   +      GRP_NumDistPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases5 = .;
1174486   +      GRP_NumDistPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases6 = .;
1174487   +      GRP_NumDistPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases7 = .;
1174488   +      GRP_NumDistPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases8 = .;
1174489   +      GRP_NumDistPurchases9 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases9 = .;
1174490   +      GRP_NumDistPurchases10 = .;
MPRINT(EM_DIAGRAM):   GRP_NumDistPurchases10 = .;
1174491   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174492   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174493   +   end;
MPRINT(EM_DIAGRAM):   end;
1174494   +end;
MPRINT(EM_DIAGRAM):   end;
1174495   +
1174496   +*** Generate dummy variables for GRP_NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebPurchases ;
1174497   +drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
1174498   +        GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7
1174499   +        GRP_NumWebPurchases8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebPurchases2 GRP_NumWebPurchases3 GRP_NumWebPurchases4
GRP_NumWebPurchases5 GRP_NumWebPurchases6 GRP_NumWebPurchases7 GRP_NumWebPurchases8 ;
1174500   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174501   +GRP_NumWebPurchases2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 0;
1174502   +GRP_NumWebPurchases3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 0;
1174503   +GRP_NumWebPurchases4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 0;
1174504   +GRP_NumWebPurchases5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 0;
1174505   +GRP_NumWebPurchases6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 0;
1174506   +GRP_NumWebPurchases7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 0;
1174507   +GRP_NumWebPurchases8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 0;
1174508   +if missing( GRP_NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebPurchases ) then do;
1174509   +   GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1174510   +   GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1174511   +   GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1174512   +   GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1174513   +   GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1174514   +   GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1174515   +   GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1174516   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174517   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174518   +end;
MPRINT(EM_DIAGRAM):   end;
1174519   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174520   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174521   +   _dm12 = put( GRP_NumWebPurchases , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebPurchases , BEST12. );
1174522   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174523   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174524   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1174525   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1174526   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174527   +            GRP_NumWebPurchases2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = 1;
1174528   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174529   +         end;
MPRINT(EM_DIAGRAM):   end;
1174530   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174531   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174532   +               GRP_NumWebPurchases3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = 1;
1174533   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174534   +            end;
MPRINT(EM_DIAGRAM):   end;
1174535   +         end;
MPRINT(EM_DIAGRAM):   end;
1174536   +      end;
MPRINT(EM_DIAGRAM):   end;
1174537   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174538   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174539   +            GRP_NumWebPurchases4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = 1;
1174540   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174541   +         end;
MPRINT(EM_DIAGRAM):   end;
1174542   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174543   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174544   +               GRP_NumWebPurchases5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = 1;
1174545   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174546   +            end;
MPRINT(EM_DIAGRAM):   end;
1174547   +         end;
MPRINT(EM_DIAGRAM):   end;
1174548   +      end;
MPRINT(EM_DIAGRAM):   end;
1174549   +   end;
MPRINT(EM_DIAGRAM):   end;
1174550   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174551   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174552   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174553   +            GRP_NumWebPurchases6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = 1;
1174554   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174555   +         end;
MPRINT(EM_DIAGRAM):   end;
1174556   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174557   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174558   +               GRP_NumWebPurchases7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = 1;
1174559   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174560   +            end;
MPRINT(EM_DIAGRAM):   end;
1174561   +         end;
MPRINT(EM_DIAGRAM):   end;
1174562   +      end;
MPRINT(EM_DIAGRAM):   end;
1174563   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174564   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174565   +            GRP_NumWebPurchases8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = 1;
1174566   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174567   +         end;
MPRINT(EM_DIAGRAM):   end;
1174568   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174569   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174570   +               GRP_NumWebPurchases2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = -1;
1174571   +               GRP_NumWebPurchases3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = -1;
1174572   +               GRP_NumWebPurchases4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = -1;
1174573   +               GRP_NumWebPurchases5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = -1;
1174574   +               GRP_NumWebPurchases6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = -1;
1174575   +               GRP_NumWebPurchases7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = -1;
1174576   +               GRP_NumWebPurchases8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = -1;
1174577   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174578   +            end;
MPRINT(EM_DIAGRAM):   end;
1174579   +         end;
MPRINT(EM_DIAGRAM):   end;
1174580   +      end;
MPRINT(EM_DIAGRAM):   end;
1174581   +   end;
MPRINT(EM_DIAGRAM):   end;
1174582   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174583   +      GRP_NumWebPurchases2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases2 = .;
1174584   +      GRP_NumWebPurchases3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases3 = .;
1174585   +      GRP_NumWebPurchases4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases4 = .;
1174586   +      GRP_NumWebPurchases5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases5 = .;
1174587   +      GRP_NumWebPurchases6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases6 = .;
1174588   +      GRP_NumWebPurchases7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases7 = .;
1174589   +      GRP_NumWebPurchases8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebPurchases8 = .;
1174590   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174591   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174592   +   end;
MPRINT(EM_DIAGRAM):   end;
1174593   +end;
MPRINT(EM_DIAGRAM):   end;
1174594   +
1174595   +*** Generate dummy variables for GRP_NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_NumWebVisitsMonth ;
1174596   +drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3 GRP_NumWebVisitsMonth4
1174597   +        GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
1174598   +        GRP_NumWebVisitsMonth8 ;
MPRINT(EM_DIAGRAM):   drop GRP_NumWebVisitsMonth2 GRP_NumWebVisitsMonth3
GRP_NumWebVisitsMonth4 GRP_NumWebVisitsMonth5 GRP_NumWebVisitsMonth6 GRP_NumWebVisitsMonth7
GRP_NumWebVisitsMonth8 ;
1174599   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174600   +GRP_NumWebVisitsMonth2 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 0;
1174601   +GRP_NumWebVisitsMonth3 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 0;
1174602   +GRP_NumWebVisitsMonth4 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 0;
1174603   +GRP_NumWebVisitsMonth5 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 0;
1174604   +GRP_NumWebVisitsMonth6 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 0;
1174605   +GRP_NumWebVisitsMonth7 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 0;
1174606   +GRP_NumWebVisitsMonth8 = 0;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 0;
1174607   +if missing( GRP_NumWebVisitsMonth ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_NumWebVisitsMonth ) then do;
1174608   +   GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1174609   +   GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1174610   +   GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1174611   +   GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1174612   +   GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1174613   +   GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1174614   +   GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1174615   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174616   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174617   +end;
MPRINT(EM_DIAGRAM):   end;
1174618   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174619   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174620   +   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_NumWebVisitsMonth , BEST12. );
1174621   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174622   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174623   +   if _dm12 <= '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '5' then do;
1174624   +      if _dm12 <= '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '3' then do;
1174625   +         if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174626   +            GRP_NumWebVisitsMonth2 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = 1;
1174627   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174628   +         end;
MPRINT(EM_DIAGRAM):   end;
1174629   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174630   +            if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174631   +               GRP_NumWebVisitsMonth3 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = 1;
1174632   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174633   +            end;
MPRINT(EM_DIAGRAM):   end;
1174634   +         end;
MPRINT(EM_DIAGRAM):   end;
1174635   +      end;
MPRINT(EM_DIAGRAM):   end;
1174636   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174637   +         if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174638   +            GRP_NumWebVisitsMonth4 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = 1;
1174639   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174640   +         end;
MPRINT(EM_DIAGRAM):   end;
1174641   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174642   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174643   +               GRP_NumWebVisitsMonth5 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = 1;
1174644   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174645   +            end;
MPRINT(EM_DIAGRAM):   end;
1174646   +         end;
MPRINT(EM_DIAGRAM):   end;
1174647   +      end;
MPRINT(EM_DIAGRAM):   end;
1174648   +   end;
MPRINT(EM_DIAGRAM):   end;
1174649   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174650   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174651   +         if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174652   +            GRP_NumWebVisitsMonth6 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = 1;
1174653   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174654   +         end;
MPRINT(EM_DIAGRAM):   end;
1174655   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174656   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174657   +               GRP_NumWebVisitsMonth7 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = 1;
1174658   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174659   +            end;
MPRINT(EM_DIAGRAM):   end;
1174660   +         end;
MPRINT(EM_DIAGRAM):   end;
1174661   +      end;
MPRINT(EM_DIAGRAM):   end;
1174662   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174663   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174664   +            GRP_NumWebVisitsMonth8 = 1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = 1;
1174665   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174666   +         end;
MPRINT(EM_DIAGRAM):   end;
1174667   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174668   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174669   +               GRP_NumWebVisitsMonth2 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = -1;
1174670   +               GRP_NumWebVisitsMonth3 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = -1;
1174671   +               GRP_NumWebVisitsMonth4 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = -1;
1174672   +               GRP_NumWebVisitsMonth5 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = -1;
1174673   +               GRP_NumWebVisitsMonth6 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = -1;
1174674   +               GRP_NumWebVisitsMonth7 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = -1;
1174675   +               GRP_NumWebVisitsMonth8 = -1;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = -1;
1174676   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174677   +            end;
MPRINT(EM_DIAGRAM):   end;
1174678   +         end;
MPRINT(EM_DIAGRAM):   end;
1174679   +      end;
MPRINT(EM_DIAGRAM):   end;
1174680   +   end;
MPRINT(EM_DIAGRAM):   end;
1174681   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174682   +      GRP_NumWebVisitsMonth2 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth2 = .;
1174683   +      GRP_NumWebVisitsMonth3 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth3 = .;
1174684   +      GRP_NumWebVisitsMonth4 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth4 = .;
1174685   +      GRP_NumWebVisitsMonth5 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth5 = .;
1174686   +      GRP_NumWebVisitsMonth6 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth6 = .;
1174687   +      GRP_NumWebVisitsMonth7 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth7 = .;
1174688   +      GRP_NumWebVisitsMonth8 = .;
MPRINT(EM_DIAGRAM):   GRP_NumWebVisitsMonth8 = .;
1174689   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174690   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174691   +   end;
MPRINT(EM_DIAGRAM):   end;
1174692   +end;
MPRINT(EM_DIAGRAM):   end;
1174693   +
1174694   +*** Generate dummy variables for GRP_RFMstat ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RFMstat ;
1174695   +drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
1174696   +        GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RFMstat2 GRP_RFMstat3 GRP_RFMstat4 GRP_RFMstat5 GRP_RFMstat6
GRP_RFMstat7 GRP_RFMstat8 GRP_RFMstat9 GRP_RFMstat10 ;
1174697   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174698   +GRP_RFMstat2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 0;
1174699   +GRP_RFMstat3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 0;
1174700   +GRP_RFMstat4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 0;
1174701   +GRP_RFMstat5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 0;
1174702   +GRP_RFMstat6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 0;
1174703   +GRP_RFMstat7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 0;
1174704   +GRP_RFMstat8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 0;
1174705   +GRP_RFMstat9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 0;
1174706   +GRP_RFMstat10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 0;
1174707   +if missing( GRP_RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RFMstat ) then do;
1174708   +   GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1174709   +   GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1174710   +   GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1174711   +   GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1174712   +   GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1174713   +   GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1174714   +   GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1174715   +   GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1174716   +   GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1174717   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174718   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174719   +end;
MPRINT(EM_DIAGRAM):   end;
1174720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174721   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174722   +   _dm12 = put( GRP_RFMstat , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RFMstat , BEST12. );
1174723   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174724   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174725   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1174726   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1174727   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1174728   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1174729   +               GRP_RFMstat10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = 1;
1174730   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174731   +            end;
MPRINT(EM_DIAGRAM):   end;
1174732   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174733   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1174734   +                  GRP_RFMstat2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = -1;
1174735   +                  GRP_RFMstat3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = -1;
1174736   +                  GRP_RFMstat4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = -1;
1174737   +                  GRP_RFMstat5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = -1;
1174738   +                  GRP_RFMstat6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = -1;
1174739   +                  GRP_RFMstat7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = -1;
1174740   +                  GRP_RFMstat8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = -1;
1174741   +                  GRP_RFMstat9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = -1;
1174742   +                  GRP_RFMstat10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = -1;
1174743   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174744   +               end;
MPRINT(EM_DIAGRAM):   end;
1174745   +            end;
MPRINT(EM_DIAGRAM):   end;
1174746   +         end;
MPRINT(EM_DIAGRAM):   end;
1174747   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174748   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174749   +               GRP_RFMstat2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = 1;
1174750   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174751   +            end;
MPRINT(EM_DIAGRAM):   end;
1174752   +         end;
MPRINT(EM_DIAGRAM):   end;
1174753   +      end;
MPRINT(EM_DIAGRAM):   end;
1174754   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174755   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174756   +            GRP_RFMstat3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = 1;
1174757   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174758   +         end;
MPRINT(EM_DIAGRAM):   end;
1174759   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174760   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174761   +               GRP_RFMstat4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = 1;
1174762   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174763   +            end;
MPRINT(EM_DIAGRAM):   end;
1174764   +         end;
MPRINT(EM_DIAGRAM):   end;
1174765   +      end;
MPRINT(EM_DIAGRAM):   end;
1174766   +   end;
MPRINT(EM_DIAGRAM):   end;
1174767   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174768   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174769   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1174770   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174771   +               GRP_RFMstat5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = 1;
1174772   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174773   +            end;
MPRINT(EM_DIAGRAM):   end;
1174774   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174775   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174776   +                  GRP_RFMstat6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = 1;
1174777   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174778   +               end;
MPRINT(EM_DIAGRAM):   end;
1174779   +            end;
MPRINT(EM_DIAGRAM):   end;
1174780   +         end;
MPRINT(EM_DIAGRAM):   end;
1174781   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174782   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174783   +               GRP_RFMstat7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = 1;
1174784   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174785   +            end;
MPRINT(EM_DIAGRAM):   end;
1174786   +         end;
MPRINT(EM_DIAGRAM):   end;
1174787   +      end;
MPRINT(EM_DIAGRAM):   end;
1174788   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174789   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174790   +            GRP_RFMstat8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = 1;
1174791   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174792   +         end;
MPRINT(EM_DIAGRAM):   end;
1174793   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174794   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174795   +               GRP_RFMstat9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = 1;
1174796   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174797   +            end;
MPRINT(EM_DIAGRAM):   end;
1174798   +         end;
MPRINT(EM_DIAGRAM):   end;
1174799   +      end;
MPRINT(EM_DIAGRAM):   end;
1174800   +   end;
MPRINT(EM_DIAGRAM):   end;
1174801   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174802   +      GRP_RFMstat2 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat2 = .;
1174803   +      GRP_RFMstat3 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat3 = .;
1174804   +      GRP_RFMstat4 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat4 = .;
1174805   +      GRP_RFMstat5 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat5 = .;
1174806   +      GRP_RFMstat6 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat6 = .;
1174807   +      GRP_RFMstat7 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat7 = .;
1174808   +      GRP_RFMstat8 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat8 = .;
1174809   +      GRP_RFMstat9 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat9 = .;
1174810   +      GRP_RFMstat10 = .;
MPRINT(EM_DIAGRAM):   GRP_RFMstat10 = .;
1174811   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174812   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174813   +   end;
MPRINT(EM_DIAGRAM):   end;
1174814   +end;
MPRINT(EM_DIAGRAM):   end;
1174815   +
1174816   +*** Generate dummy variables for GRP_RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_RMntFrq ;
1174817   +drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
1174818   +        GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
MPRINT(EM_DIAGRAM):   drop GRP_RMntFrq2 GRP_RMntFrq3 GRP_RMntFrq4 GRP_RMntFrq5 GRP_RMntFrq6
GRP_RMntFrq7 GRP_RMntFrq8 GRP_RMntFrq9 GRP_RMntFrq10 ;
1174819   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174820   +GRP_RMntFrq2 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 0;
1174821   +GRP_RMntFrq3 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 0;
1174822   +GRP_RMntFrq4 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 0;
1174823   +GRP_RMntFrq5 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 0;
1174824   +GRP_RMntFrq6 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 0;
1174825   +GRP_RMntFrq7 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 0;
1174826   +GRP_RMntFrq8 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 0;
1174827   +GRP_RMntFrq9 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 0;
1174828   +GRP_RMntFrq10 = 0;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 0;
1174829   +if missing( GRP_RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_RMntFrq ) then do;
1174830   +   GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1174831   +   GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1174832   +   GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1174833   +   GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1174834   +   GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1174835   +   GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1174836   +   GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1174837   +   GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1174838   +   GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1174839   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174840   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174841   +end;
MPRINT(EM_DIAGRAM):   end;
1174842   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174843   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174844   +   _dm12 = put( GRP_RMntFrq , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_RMntFrq , BEST12. );
1174845   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174846   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174847   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1174848   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1174849   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1174850   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1174851   +               GRP_RMntFrq10 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = 1;
1174852   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174853   +            end;
MPRINT(EM_DIAGRAM):   end;
1174854   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174855   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1174856   +                  GRP_RMntFrq2 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = -1;
1174857   +                  GRP_RMntFrq3 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = -1;
1174858   +                  GRP_RMntFrq4 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = -1;
1174859   +                  GRP_RMntFrq5 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = -1;
1174860   +                  GRP_RMntFrq6 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = -1;
1174861   +                  GRP_RMntFrq7 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = -1;
1174862   +                  GRP_RMntFrq8 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = -1;
1174863   +                  GRP_RMntFrq9 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = -1;
1174864   +                  GRP_RMntFrq10 = -1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = -1;
1174865   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174866   +               end;
MPRINT(EM_DIAGRAM):   end;
1174867   +            end;
MPRINT(EM_DIAGRAM):   end;
1174868   +         end;
MPRINT(EM_DIAGRAM):   end;
1174869   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174870   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174871   +               GRP_RMntFrq2 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = 1;
1174872   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174873   +            end;
MPRINT(EM_DIAGRAM):   end;
1174874   +         end;
MPRINT(EM_DIAGRAM):   end;
1174875   +      end;
MPRINT(EM_DIAGRAM):   end;
1174876   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174877   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1174878   +            GRP_RMntFrq3 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = 1;
1174879   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174880   +         end;
MPRINT(EM_DIAGRAM):   end;
1174881   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174882   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1174883   +               GRP_RMntFrq4 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = 1;
1174884   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174885   +            end;
MPRINT(EM_DIAGRAM):   end;
1174886   +         end;
MPRINT(EM_DIAGRAM):   end;
1174887   +      end;
MPRINT(EM_DIAGRAM):   end;
1174888   +   end;
MPRINT(EM_DIAGRAM):   end;
1174889   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1174890   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1174891   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1174892   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1174893   +               GRP_RMntFrq5 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = 1;
1174894   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174895   +            end;
MPRINT(EM_DIAGRAM):   end;
1174896   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174897   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1174898   +                  GRP_RMntFrq6 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = 1;
1174899   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174900   +               end;
MPRINT(EM_DIAGRAM):   end;
1174901   +            end;
MPRINT(EM_DIAGRAM):   end;
1174902   +         end;
MPRINT(EM_DIAGRAM):   end;
1174903   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174904   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1174905   +               GRP_RMntFrq7 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = 1;
1174906   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174907   +            end;
MPRINT(EM_DIAGRAM):   end;
1174908   +         end;
MPRINT(EM_DIAGRAM):   end;
1174909   +      end;
MPRINT(EM_DIAGRAM):   end;
1174910   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174911   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1174912   +            GRP_RMntFrq8 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = 1;
1174913   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174914   +         end;
MPRINT(EM_DIAGRAM):   end;
1174915   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174916   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1174917   +               GRP_RMntFrq9 = 1;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = 1;
1174918   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174919   +            end;
MPRINT(EM_DIAGRAM):   end;
1174920   +         end;
MPRINT(EM_DIAGRAM):   end;
1174921   +      end;
MPRINT(EM_DIAGRAM):   end;
1174922   +   end;
MPRINT(EM_DIAGRAM):   end;
1174923   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1174924   +      GRP_RMntFrq2 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq2 = .;
1174925   +      GRP_RMntFrq3 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq3 = .;
1174926   +      GRP_RMntFrq4 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq4 = .;
1174927   +      GRP_RMntFrq5 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq5 = .;
1174928   +      GRP_RMntFrq6 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq6 = .;
1174929   +      GRP_RMntFrq7 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq7 = .;
1174930   +      GRP_RMntFrq8 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq8 = .;
1174931   +      GRP_RMntFrq9 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq9 = .;
1174932   +      GRP_RMntFrq10 = .;
MPRINT(EM_DIAGRAM):   GRP_RMntFrq10 = .;
1174933   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1174934   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174935   +   end;
MPRINT(EM_DIAGRAM):   end;
1174936   +end;
MPRINT(EM_DIAGRAM):   end;
1174937   +
1174938   +*** Generate dummy variables for GRP_Recency ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for GRP_Recency ;
1174939   +drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
1174940   +        GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   drop GRP_Recency2 GRP_Recency3 GRP_Recency4 GRP_Recency5 GRP_Recency6
GRP_Recency7 GRP_Recency8 GRP_Recency9 GRP_Recency10 ;
1174941   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1174942   +GRP_Recency2 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 0;
1174943   +GRP_Recency3 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 0;
1174944   +GRP_Recency4 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 0;
1174945   +GRP_Recency5 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 0;
1174946   +GRP_Recency6 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 0;
1174947   +GRP_Recency7 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 0;
1174948   +GRP_Recency8 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 0;
1174949   +GRP_Recency9 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 0;
1174950   +GRP_Recency10 = 0;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 0;
1174951   +if missing( GRP_Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( GRP_Recency ) then do;
1174952   +   GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1174953   +   GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1174954   +   GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1174955   +   GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1174956   +   GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1174957   +   GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1174958   +   GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1174959   +   GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1174960   +   GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1174961   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1174962   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1174963   +end;
MPRINT(EM_DIAGRAM):   end;
1174964   +else do;
MPRINT(EM_DIAGRAM):   else do;
1174965   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1174966   +   _dm12 = put( GRP_Recency , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( GRP_Recency , BEST12. );
1174967   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1174968   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1174969   +   if _dm12 <= '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '4' then do;
1174970   +      if _dm12 <= '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '2' then do;
1174971   +         if _dm12 <= '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '11' then do;
1174972   +            if _dm12 = '10'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '10' then do;
1174973   +               GRP_Recency10 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = 1;
1174974   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174975   +            end;
MPRINT(EM_DIAGRAM):   end;
1174976   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1174977   +               if _dm12 = '11'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '11' then do;
1174978   +                  GRP_Recency2 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = -1;
1174979   +                  GRP_Recency3 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = -1;
1174980   +                  GRP_Recency4 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = -1;
1174981   +                  GRP_Recency5 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = -1;
1174982   +                  GRP_Recency6 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = -1;
1174983   +                  GRP_Recency7 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = -1;
1174984   +                  GRP_Recency8 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = -1;
1174985   +                  GRP_Recency9 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = -1;
1174986   +                  GRP_Recency10 = -1;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = -1;
1174987   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174988   +               end;
MPRINT(EM_DIAGRAM):   end;
1174989   +            end;
MPRINT(EM_DIAGRAM):   end;
1174990   +         end;
MPRINT(EM_DIAGRAM):   end;
1174991   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1174992   +            if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1174993   +               GRP_Recency2 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = 1;
1174994   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1174995   +            end;
MPRINT(EM_DIAGRAM):   end;
1174996   +         end;
MPRINT(EM_DIAGRAM):   end;
1174997   +      end;
MPRINT(EM_DIAGRAM):   end;
1174998   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1174999   +         if _dm12 = '3'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '3' then do;
1175000   +            GRP_Recency3 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = 1;
1175001   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175002   +         end;
MPRINT(EM_DIAGRAM):   end;
1175003   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1175004   +            if _dm12 = '4'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '4' then do;
1175005   +               GRP_Recency4 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = 1;
1175006   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175007   +            end;
MPRINT(EM_DIAGRAM):   end;
1175008   +         end;
MPRINT(EM_DIAGRAM):   end;
1175009   +      end;
MPRINT(EM_DIAGRAM):   end;
1175010   +   end;
MPRINT(EM_DIAGRAM):   end;
1175011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175012   +      if _dm12 <= '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '7' then do;
1175013   +         if _dm12 <= '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 <= '6' then do;
1175014   +            if _dm12 = '5'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '5' then do;
1175015   +               GRP_Recency5 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = 1;
1175016   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175017   +            end;
MPRINT(EM_DIAGRAM):   end;
1175018   +            else do;
MPRINT(EM_DIAGRAM):   else do;
1175019   +               if _dm12 = '6'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '6' then do;
1175020   +                  GRP_Recency6 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = 1;
1175021   +                  _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175022   +               end;
MPRINT(EM_DIAGRAM):   end;
1175023   +            end;
MPRINT(EM_DIAGRAM):   end;
1175024   +         end;
MPRINT(EM_DIAGRAM):   end;
1175025   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1175026   +            if _dm12 = '7'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '7' then do;
1175027   +               GRP_Recency7 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = 1;
1175028   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175029   +            end;
MPRINT(EM_DIAGRAM):   end;
1175030   +         end;
MPRINT(EM_DIAGRAM):   end;
1175031   +      end;
MPRINT(EM_DIAGRAM):   end;
1175032   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1175033   +         if _dm12 = '8'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '8' then do;
1175034   +            GRP_Recency8 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = 1;
1175035   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175036   +         end;
MPRINT(EM_DIAGRAM):   end;
1175037   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1175038   +            if _dm12 = '9'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '9' then do;
1175039   +               GRP_Recency9 = 1;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = 1;
1175040   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1175041   +            end;
MPRINT(EM_DIAGRAM):   end;
1175042   +         end;
MPRINT(EM_DIAGRAM):   end;
1175043   +      end;
MPRINT(EM_DIAGRAM):   end;
1175044   +   end;
MPRINT(EM_DIAGRAM):   end;
1175045   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1175046   +      GRP_Recency2 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency2 = .;
1175047   +      GRP_Recency3 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency3 = .;
1175048   +      GRP_Recency4 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency4 = .;
1175049   +      GRP_Recency5 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency5 = .;
1175050   +      GRP_Recency6 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency6 = .;
1175051   +      GRP_Recency7 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency7 = .;
1175052   +      GRP_Recency8 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency8 = .;
1175053   +      GRP_Recency9 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency9 = .;
1175054   +      GRP_Recency10 = .;
MPRINT(EM_DIAGRAM):   GRP_Recency10 = .;
1175055   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1175056   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175057   +   end;
MPRINT(EM_DIAGRAM):   end;
1175058   +end;
MPRINT(EM_DIAGRAM):   end;
1175059   +
1175060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175061   +*** Checking missing input Interval
1175062   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1175063   +
1175064   +IF NMISS(
1175065   +   Year_Birth   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Year_Birth ) THEN DO;
1175066   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1175067   +
1175068   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1175069   +END;
MPRINT(EM_DIAGRAM):   END;
1175070   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175071   +*** Writing the Node interval ;
MPRINT(EM_DIAGRAM):   *** Writing the Node interval ;
1175072   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175073   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1175074   +   S_Year_Birth  =    -163.205330145852 +     0.08289609202864 * Year_Birth ;
MPRINT(EM_DIAGRAM):   S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1175075   +END;
MPRINT(EM_DIAGRAM):   END;
1175076   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175077   +   IF MISSING( Year_Birth ) THEN S_Year_Birth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Year_Birth ) THEN S_Year_Birth = . ;
1175078   +   ELSE S_Year_Birth  =    -163.205330145852 +     0.08289609202864 *
1175079   +        Year_Birth ;
MPRINT(EM_DIAGRAM):   ELSE S_Year_Birth = -163.205330145852 + 0.08289609202864 * Year_Birth ;
1175080   +END;
MPRINT(EM_DIAGRAM):   END;
1175081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175082   +*** Writing the Node nominal ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nominal ;
1175083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175084   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175085   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1175086   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175087   +
1175088   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1175089   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1175090   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1175091   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1175092   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1175093   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1175094   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1175095   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1175096   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1175097   +end;
MPRINT(EM_DIAGRAM):   end;
1175098   +else do;
MPRINT(EM_DIAGRAM):   else do;
1175099   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1175100   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1175101   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1175102   +   end;
MPRINT(EM_DIAGRAM):   end;
1175103   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1175104   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1175105   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1175106   +   end;
MPRINT(EM_DIAGRAM):   end;
1175107   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1175108   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1175109   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1175110   +   end;
MPRINT(EM_DIAGRAM):   end;
1175111   +end;
MPRINT(EM_DIAGRAM):   end;
1175112   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1175113   +   P_DepVar1  =     0.13041505791867 * S_Year_Birth ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13041505791867 * S_Year_Birth ;
1175114   +   P_DepVar1  = P_DepVar1  +    -0.81394914954047 * GRP_AcceptedCmp52
1175115   +          +    -1.57479065391046 * GRP_AcceptedCmpTotal3
1175116   +          +     0.55721665311121 * GRP_Frq2  +     2.03538591612101 * GRP_Frq3
1175117   +          +     1.71084973908714 * GRP_Frq4  +     0.93073119070526 * GRP_Frq5
1175118   +          +     0.58841250291933 * GRP_Frq6  +    -0.21635109021843 * GRP_Frq7
1175119   +          +      0.0213506254167 * GRP_Frq8  +    -1.30191697936168 * GRP_Frq9
1175120   +          +    -1.31179820046974 * GRP_Frq10  +    -1.08336033604841 *
1175121   +        GRP_Income2  +    -0.79871206076892 * GRP_Income3
1175122   +          +    -0.30315183422585 * GRP_Income4  +     0.82131408307175 *
1175123   +        GRP_Income5  +     0.48741274023405 * GRP_Income6
1175124   +          +    -0.50872786670529 * GRP_Income7  +     -0.8768319258445 *
1175125   +        GRP_Income8  +    -0.05749742206435 * GRP_Income9
1175126   +          +     0.62080590842343 * GRP_Income10  +     2.52780693320463 *
1175127   +        GRP_Mnt2  +     1.42753900899901 * GRP_Mnt3  +    -0.37486538648468 *
1175128   +        GRP_Mnt4  +    -0.70186702387476 * GRP_Mnt5  +    -1.09419855761909 *
1175129   +        GRP_Mnt6  +    -0.74794036813571 * GRP_Mnt7  +    -0.38086942027823 *
1175130   +        GRP_Mnt8  +    -0.14878906184572 * GRP_Mnt9  +     0.10029389010909 *
1175131   +        GRP_Mnt10  +     0.93741359799158 * GRP_MntFishProducts3
1175132   +          +     0.33815869767181 * GRP_MntFishProducts4
1175133   +          +     0.18521216857753 * GRP_MntFishProducts5
1175134   +          +    -0.17622093488116 * GRP_MntFishProducts6
1175135   +          +     0.10360579093666 * GRP_MntFishProducts7
1175136   +          +     0.67417645975591 * GRP_MntFishProducts8
1175137   +          +     -0.4949659833943 * GRP_MntFishProducts9
1175138   +          +    -0.53307075001864 * GRP_MntFishProducts10
1175139   +          +    -0.44965793048776 * GRP_MntGoldProds2
1175140   +          +     0.70029834666821 * GRP_MntGoldProds3
1175141   +          +     0.26643011384249 * GRP_MntGoldProds4
1175142   +          +      0.2416000208193 * GRP_MntGoldProds5
1175143   +          +    -0.16739557727601 * GRP_MntGoldProds6
1175144   +          +    -0.03966136377161 * GRP_MntGoldProds7
1175145   +          +    -0.14433335823753 * GRP_MntGoldProds8
1175146   +          +    -0.01379766565883 * GRP_MntGoldProds9
1175147   +          +    -0.47948207920798 * GRP_MntGoldProds10
1175148   +          +     -7.7797809223883 * GRP_MntMeatProducts2
1175149   +          +    -4.30448682283205 * GRP_MntMeatProducts3
1175150   +          +    -3.09196678122785 * GRP_MntMeatProducts4
1175151   +          +    -1.39782945162908 * GRP_MntMeatProducts5
1175152   +          +     0.98656746132259 * GRP_MntMeatProducts6
1175153   +          +     1.23570299146524 * GRP_MntMeatProducts7
1175154   +          +     2.63070630185363 * GRP_MntMeatProducts8
1175155   +          +     2.57140709387759 * GRP_MntMeatProducts9
1175156   +          +     3.88874807046828 * GRP_MntMeatProducts10
1175157   +          +     0.33174074042224 * GRP_MntSweetProducts3
1175158   +          +     0.69101850116915 * GRP_MntSweetProducts4
1175159   +          +     0.17295436074838 * GRP_MntSweetProducts5
1175160   +          +      0.0314089298439 * GRP_MntSweetProducts6
1175161   +          +     0.79474403533727 * GRP_MntSweetProducts7
1175162   +          +    -0.35030029933384 * GRP_MntSweetProducts8
1175163   +          +    -0.22491638984504 * GRP_MntSweetProducts9
1175164   +          +    -0.26300371563779 * GRP_MntSweetProducts10
1175165   +          +       4.623529533535 * GRP_MntWines2  +     3.38930591268617 *
1175166   +        GRP_MntWines3  +     2.86869681071208 * GRP_MntWines4
1175167   +          +     1.99919334553514 * GRP_MntWines5  +     0.51392642718101 *
1175168   +        GRP_MntWines6  +    -0.54295287328303 * GRP_MntWines7
1175169   +          +     -1.9404151310852 * GRP_MntWines8  +    -2.81755694441313 *
1175170   +        GRP_MntWines9  +    -3.65585472427726 * GRP_MntWines10
1175171   +          +    -6.48636650946379 * GRP_NumCatalogPurchases3
1175172   +          +    -2.42520952237724 * GRP_NumCatalogPurchases4
1175173   +          +     0.23992315717993 * GRP_NumCatalogPurchases5
1175174   +          +     1.78022371269645 * GRP_NumCatalogPurchases6
1175175   +          +     2.51919850869031 * GRP_NumCatalogPurchases7
1175176   +          +    -0.29160915509933 * GRP_NumDistPurchases2
1175177   +          +    -1.59386292237547 * GRP_NumDistPurchases3
1175178   +          +    -0.58149143918747 * GRP_NumDistPurchases4
1175179   +          +    -0.15227686380495 * GRP_NumDistPurchases5
1175180   +          +    -0.39776772752273 * GRP_NumDistPurchases6
1175181   +          +    -0.25189925687254 * GRP_NumDistPurchases7
1175182   +          +     -0.8006222944202 * GRP_NumDistPurchases8
1175183   +          +      1.1137088740435 * GRP_NumDistPurchases9
1175184   +          +     1.23069956311587 * GRP_NumDistPurchases10
1175185   +          +     0.00077574452293 * GRP_NumWebPurchases2
1175186   +          +     0.24159496564294 * GRP_NumWebPurchases3
1175187   +          +     0.30982055062128 * GRP_NumWebPurchases4
1175188   +          +     0.91413433678014 * GRP_NumWebPurchases5
1175189   +          +     0.47430505202684 * GRP_NumWebPurchases6
1175190   +          +     0.05910332727627 * GRP_NumWebPurchases7
1175191   +          +    -0.73591735479205 * GRP_NumWebPurchases8
1175192   +          +     -4.1347431929822 * GRP_NumWebVisitsMonth2
1175193   +          +    -2.56208193086546 * GRP_NumWebVisitsMonth3
1175194   +          +    -1.81937126717482 * GRP_NumWebVisitsMonth4
1175195   +          +    -0.77444924696859 * GRP_NumWebVisitsMonth5
1175196   +          +     0.82562856901811 * GRP_NumWebVisitsMonth6
1175197   +          +     1.04369947846006 * GRP_NumWebVisitsMonth7
1175198   +          +     2.55675009308953 * GRP_NumWebVisitsMonth8
1175199   +          +     0.20809605612831 * GRP_RFMstat2  +    -1.61430160476517 *
1175200   +        GRP_RFMstat3  +    -0.52301122119481 * GRP_RFMstat4
1175201   +          +    -0.55945361088087 * GRP_RFMstat5  +    -0.14424212281577 *
1175202   +        GRP_RFMstat6  +     1.05234320810026 * GRP_RFMstat7
1175203   +          +    -0.05407410464352 * GRP_RFMstat8  +    -0.01646632074069 *
1175204   +        GRP_RFMstat9  +     0.70828472822109 * GRP_RFMstat10
1175205   +          +      1.8726948284706 * GRP_RMntFrq2  +     1.05367221065359 *
1175206   +        GRP_RMntFrq3  +     1.16252388400818 * GRP_RMntFrq4
1175207   +          +    -0.68337506267394 * GRP_RMntFrq5  +    -0.30999632256804 *
1175208   +        GRP_RMntFrq6  +      -1.800352250825 * GRP_RMntFrq7
1175209   +          +    -1.53582014310476 * GRP_RMntFrq8  +    -0.07192943405375 *
1175210   +        GRP_RMntFrq9  +    -0.60583604685254 * GRP_RMntFrq10
1175211   +          +     3.84355692804923 * GRP_Recency2  +     2.89076929480023 *
1175212   +        GRP_Recency3  +     2.87026210399223 * GRP_Recency4
1175213   +          +     1.49685595027077 * GRP_Recency5  +    -0.07603609831014 *
1175214   +        GRP_Recency6  +    -0.44761807904964 * GRP_Recency7
1175215   +          +    -1.48577941891686 * GRP_Recency8  +    -1.45982970045671 *
1175216   +        GRP_Recency9  +     -3.5176122167203 * GRP_Recency10 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 + -0.81394914954047 * GRP_AcceptedCmp52 +
-1.57479065391046 * GRP_AcceptedCmpTotal3 + 0.55721665311121 * GRP_Frq2 + 2.03538591612101 *
GRP_Frq3 + 1.71084973908714 * GRP_Frq4 + 0.93073119070526 * GRP_Frq5 + 0.58841250291933 *
GRP_Frq6 + -0.21635109021843 * GRP_Frq7 + 0.0213506254167 * GRP_Frq8 + -1.30191697936168 *
GRP_Frq9 + -1.31179820046974 * GRP_Frq10 + -1.08336033604841 * GRP_Income2 + -0.79871206076892
* GRP_Income3 + -0.30315183422585 * GRP_Income4 + 0.82131408307175 * GRP_Income5 +
0.48741274023405 * GRP_Income6 + -0.50872786670529 * GRP_Income7 + -0.8768319258445 *
GRP_Income8 + -0.05749742206435 * GRP_Income9 + 0.62080590842343 * GRP_Income10 +
2.52780693320463 * GRP_Mnt2 + 1.42753900899901 * GRP_Mnt3 + -0.37486538648468 * GRP_Mnt4 +
-0.70186702387476 * GRP_Mnt5 + -1.09419855761909 * GRP_Mnt6 + -0.74794036813571 * GRP_Mnt7 +
-0.38086942027823 * GRP_Mnt8 + -0.14878906184572 * GRP_Mnt9 + 0.10029389010909 * GRP_Mnt10 +
0.93741359799158 * GRP_MntFishProducts3 + 0.33815869767181 * GRP_MntFishProducts4 +
0.18521216857753 * GRP_MntFishProducts5 + -0.17622093488116 * GRP_MntFishProducts6 +
0.10360579093666 * GRP_MntFishProducts7 + 0.67417645975591 * GRP_MntFishProducts8 +
-0.4949659833943 * GRP_MntFishProducts9 + -0.53307075001864 * GRP_MntFishProducts10 +
-0.44965793048776 * GRP_MntGoldProds2 + 0.70029834666821 * GRP_MntGoldProds3 +
0.26643011384249 * GRP_MntGoldProds4 + 0.2416000208193 * GRP_MntGoldProds5 + -0.16739557727601
* GRP_MntGoldProds6 + -0.03966136377161 * GRP_MntGoldProds7 + -0.14433335823753 *
GRP_MntGoldProds8 + -0.01379766565883 * GRP_MntGoldProds9 + -0.47948207920798 *
GRP_MntGoldProds10 + -7.7797809223883 * GRP_MntMeatProducts2 + -4.30448682283205 *
GRP_MntMeatProducts3 + -3.09196678122785 * GRP_MntMeatProducts4 + -1.39782945162908 *
GRP_MntMeatProducts5 + 0.98656746132259 * GRP_MntMeatProducts6 + 1.23570299146524 *
GRP_MntMeatProducts7 + 2.63070630185363 * GRP_MntMeatProducts8 + 2.57140709387759 *
GRP_MntMeatProducts9 + 3.88874807046828 * GRP_MntMeatProducts10 + 0.33174074042224 *
GRP_MntSweetProducts3 + 0.69101850116915 * GRP_MntSweetProducts4 + 0.17295436074838 *
GRP_MntSweetProducts5 + 0.0314089298439 * GRP_MntSweetProducts6 + 0.79474403533727 *
GRP_MntSweetProducts7 + -0.35030029933384 * GRP_MntSweetProducts8 + -0.22491638984504 *
GRP_MntSweetProducts9 + -0.26300371563779 * GRP_MntSweetProducts10 + 4.623529533535 *
GRP_MntWines2 + 3.38930591268617 * GRP_MntWines3 + 2.86869681071208 * GRP_MntWines4 +
1.99919334553514 * GRP_MntWines5 + 0.51392642718101 * GRP_MntWines6 + -0.54295287328303 *
GRP_MntWines7 + -1.9404151310852 * GRP_MntWines8 + -2.81755694441313 * GRP_MntWines9 +
-3.65585472427726 * GRP_MntWines10 + -6.48636650946379 * GRP_NumCatalogPurchases3 +
-2.42520952237724 * GRP_NumCatalogPurchases4 + 0.23992315717993 * GRP_NumCatalogPurchases5 +
1.78022371269645 * GRP_NumCatalogPurchases6 + 2.51919850869031 * GRP_NumCatalogPurchases7 +
-0.29160915509933 * GRP_NumDistPurchases2 + -1.59386292237547 * GRP_NumDistPurchases3 +
-0.58149143918747 * GRP_NumDistPurchases4 + -0.15227686380495 * GRP_NumDistPurchases5 +
-0.39776772752273 * GRP_NumDistPurchases6 + -0.25189925687254 * GRP_NumDistPurchases7 +
-0.8006222944202 * GRP_NumDistPurchases8 + 1.1137088740435 * GRP_NumDistPurchases9 +
1.23069956311587 * GRP_NumDistPurchases10 + 0.00077574452293 * GRP_NumWebPurchases2 +
0.24159496564294 * GRP_NumWebPurchases3 + 0.30982055062128 * GRP_NumWebPurchases4 +
0.91413433678014 * GRP_NumWebPurchases5 + 0.47430505202684 * GRP_NumWebPurchases6 +
0.05910332727627 * GRP_NumWebPurchases7 + -0.73591735479205 * GRP_NumWebPurchases8 +
-4.1347431929822 * GRP_NumWebVisitsMonth2 + -2.56208193086546 * GRP_NumWebVisitsMonth3 +
-1.81937126717482 * GRP_NumWebVisitsMonth4 + -0.77444924696859 * GRP_NumWebVisitsMonth5 +
0.82562856901811 * GRP_NumWebVisitsMonth6 + 1.04369947846006 * GRP_NumWebVisitsMonth7 +
2.55675009308953 * GRP_NumWebVisitsMonth8 + 0.20809605612831 * GRP_RFMstat2 +
-1.61430160476517 * GRP_RFMstat3 + -0.52301122119481 * GRP_RFMstat4 + -0.55945361088087 *
GRP_RFMstat5 + -0.14424212281577 * GRP_RFMstat6 + 1.05234320810026 * GRP_RFMstat7 +
-0.05407410464352 * GRP_RFMstat8 + -0.01646632074069 * GRP_RFMstat9 + 0.70828472822109 *
GRP_RFMstat10 + 1.8726948284706 * GRP_RMntFrq2 + 1.05367221065359 * GRP_RMntFrq3 +
1.16252388400818 * GRP_RMntFrq4 + -0.68337506267394 * GRP_RMntFrq5 + -0.30999632256804 *
GRP_RMntFrq6 + -1.800352250825 * GRP_RMntFrq7 + -1.53582014310476 * GRP_RMntFrq8 +
-0.07192943405375 * GRP_RMntFrq9 + -0.60583604685254 * GRP_RMntFrq10 + 3.84355692804923 *
GRP_Recency2 + 2.89076929480023 * GRP_Recency3 + 2.87026210399223 * GRP_Recency4 +
1.49685595027077 * GRP_Recency5 + -0.07603609831014 * GRP_Recency6 + -0.44761807904964 *
GRP_Recency7 + -1.48577941891686 * GRP_Recency8 + -1.45982970045671 * GRP_Recency9 +
-3.5176122167203 * GRP_Recency10 ;
1175217   +   P_DepVar1  =    -3.73504752117057 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.73504752117057 + P_DepVar1 ;
1175218   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1175219   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1175220   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1175221   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1175222   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1175223   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1175224   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1175225   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1175226   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1175227   +END;
MPRINT(EM_DIAGRAM):   END;
1175228   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1175229   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1175230   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1175231   +END;
MPRINT(EM_DIAGRAM):   END;
1175232   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1175233   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1175234   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1175235   +END;
MPRINT(EM_DIAGRAM):   END;
1175236   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1175237   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1175238   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1175239   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1175240   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1175241   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1175242   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1175243   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175244   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1175245   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1175246   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1175247   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1175248   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1175249   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1175250   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1175251   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1175252   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1175253   +END;
MPRINT(EM_DIAGRAM):   END;
1175254   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1175255   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1175256   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1175257   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1175258    run;
 
NOTE: DATA STEP view saved on file EMWS8.AUTONEURAL21_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1175259    quit;
1175260    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1175261    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1175262    * AutoNeural21: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Computing metadata for TRAIN data;
1175263    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.AUTONEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.AutoNeural21_TRAIN out=_tempAdvisor
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.AutoNeural21_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.AutoNeural21_TRAIN out=WORK.M1JHO9AA
noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JHO9AA;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JHO9AA(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1JHO9AA;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M1JHO9AA;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2S76FHQ NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M11CLKEO(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   set WORK.M2S76FHQ;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "AutoNeural21";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "AutoNeural21";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * AutoNeural21: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1175575    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1175576    set EMWS8.AutoNeural21_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMINFO;
1175577    where DATA='AutoNeural21' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='AutoNeural21' and KEY ^in('DECDATA', 'DECMETA',
'IMPORTANCE', 'MODEL');
1175578    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.AUTONEURAL21_EMINFO.
      WHERE (DATA='AutoNeural21') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175579    data EMWS8.AutoNeural21_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_EMINFO;
1175580    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1175581    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1175582    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.AUTONEURAL21_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1175586    run;
1175587    data EMWS8.AutoNeural21_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMINFO;
1175588    set EMWS8.AutoNeural21_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMINFO WORK.MODELTEMP_INFO;
1175589    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL21_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL21_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175590    proc sort data = EMWS8.AutoNeural21_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.AutoNeural21_EMINFO NOTHREADS;
1175591    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1175592    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL21_EMINFO.
NOTE: The data set EMWS8.AUTONEURAL21_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1175593    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.FIMPORT_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1175594    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1175595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.FIMPORT_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175596    proc sort data = EMWS8.AutoNeural21_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.AutoNeural21_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1175597    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1175598    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.AUTONEURAL21_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175599    data EMWS8.AutoNeural21_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMINFO;
1175600    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1175601    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1175602    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.AUTONEURAL21_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1175603    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1175604    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1175605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1175606    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.AUTONEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.AUTONEURAL21_VALIDATE.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "28. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.01 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                28. April 2016
Time:                17.01 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2J1QP8L
"C:\\predictive-models-project\Workspaces\EMWS8\AutoNeural21\EMREPORT.out" encoding="UTF-8"
NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2J1QP8L new;
MPRINT(EM_DIAGRAM):   run;
1175630    proc sort data=EMWS8.AutoNeural21_OUTFIT nodupkey;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural21_OUTFIT nodupkey;
1175631    by _NAME_;
MPRINT(EM_DIAGRAM):   by _NAME_;
1175632    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL21_OUTFIT.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set EMWS8.AUTONEURAL21_OUTFIT has 2 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175633    data EMWS8.AutoNeural21_EMOUTFIT(rename=(_NAME_=TARGET));
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMOUTFIT(rename=(_NAME_=TARGET));
1175634    set EMWS8.AutoNeural21_OUTFIT(where=(_NAME_ eq 'OVERALL'));
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_OUTFIT(where=(_NAME_ eq 'OVERALL'));
1175635    label _NAME_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _NAME_ = "Target";
1175636    if _NAME_='OVERALL' then _NAME_='DepVar';
MPRINT(EM_DIAGRAM):   if _NAME_='OVERALL' then _NAME_='DepVar';
1175637    drop _ITER_;
MPRINT(EM_DIAGRAM):   drop _ITER_;
1175638    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_OUTFIT.
      WHERE _NAME_='OVERALL';
NOTE: The data set EMWS8.AUTONEURAL21_EMOUTFIT has 1 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175639    data EMWS8.AutoNeural21_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_EMOUTFIT;
1175640    set EMWS8.AutoNeural21_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMOUTFIT;
1175641    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1175642    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1175642  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1175643    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1175644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_EMOUTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_EMOUTFIT has 1 observations and 36 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175645    proc sort data=EMWS8.AutoNeural21_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural21_EMREPORTFIT nothreads;
1175646    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1175647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL21_EMREPORTFIT.
NOTE: The data set EMWS8.AUTONEURAL21_EMREPORTFIT has 21 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175648    %let _EMwarndup = 0;
1175649    %let _EMtargetdup =;
1175650    %let _EMASEtargetdup =;
1175651    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1175652    set EMWS8.AutoNeural21_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMOUTFIT;
1175653    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1175654    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1175655    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1175656    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1175657    end;
MPRINT(EM_DIAGRAM):   end;
1175658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.AUTONEURAL21_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175659    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.BINNING_CMeta_TRAIN out=WORK.SUBSETINMETA;
1175660    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1175661    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set EMWS8.BINNING_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 53 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175662    proc sort data=EMWS8.AutoNeural21_VariableSet out=WORK.SUBSETVARSET(keep=NAME
1175662  ! REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.AutoNeural21_VariableSet
out=WORK.SUBSETVARSET(keep=NAME REPORT);
1175663    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1175664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 51 observations read from the data set EMWS8.AUTONEURAL21_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 51 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1175665    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1175666    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1175667    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1175668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 53 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 51 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 53 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1175669    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1175670    set EMWS8.AutoNeural21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_CMeta_TRAIN;
1175671    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1175671  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1175672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL21_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1175673    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1175674    set EMWS8.AutoNeural21_TRAIN(keep=
1175675    F_DepVar
1175676    I_DepVar
1175677    P_DepVar0
1175678    P_DepVar1
1175679    R_DepVar0
1175680    R_DepVar1
1175681    U_DepVar
1175682    _WARN_
1175683    DepVar
1175684    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1175685    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.AUTONEURAL21_TRAIN.VIEW used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.BINNING_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.AUTONEURAL21_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural21_02JVKCV nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural21_02JVKCV;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural21_02JVKCV(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural21_02JVKCV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural21_02JVKCV;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 1.89861E-10 OVLMAX 0.999988136 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1179951    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1179952    set EMWS8.AutoNeural21_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_CMeta_TRAIN;
1179953    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1179953  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1179954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL21_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 8 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1179955    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1179956    set EMWS8.AutoNeural21_VALIDATE(keep=
1179957    F_DepVar
1179958    I_DepVar
1179959    P_DepVar0
1179960    P_DepVar1
1179961    R_DepVar0
1179962    R_DepVar1
1179963    U_DepVar
1179964    _WARN_
1179965    DepVar
1179966    );
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0
P_DepVar1 R_DepVar0 R_DepVar1 U_DepVar _WARN_ DepVar );
1179967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: View EMWS8.AUTONEURAL21_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.BINNING_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.AUTONEURAL21_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.AutoNeural21_1Z7BBPQ nocol norow
outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.AutoNeural21_1Z7BBPQ;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural21_1Z7BBPQ(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMCLASSIFICATION WORK.AutoNeural21_1Z7BBPQ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.AutoNeural21_1Z7BBPQ;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.AutoNeural21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 2.946432E-10 OVLMAX 0.9999662447 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1184242    %let _cn = %sysfunc(getoption(CENTER));
1184243    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1184244    proc print data=EMWS8.AutoNeural21_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_EMREPORTFIT noobs label;
1184245    var STAT LABEL TRAIN
1184246    VALIDATE
1184247    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1184248    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1184249    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1184250    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1184251    run;
 
NOTE: There were 21 observations read from the data set EMWS8.AUTONEURAL21_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 950.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1184252    title10;
MPRINT(EM_DIAGRAM):   title10;
1184253    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1184254    proc sort data=EMWS8.AutoNeural21_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.AutoNeural21_EMCLASSIFICATION nothreads;
1184255    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1184256    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL21_EMCLASSIFICATION.
NOTE: The data set EMWS8.AUTONEURAL21_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1184257    %let _cn = %sysfunc(getoption(CENTER));
1184258    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1184259    proc print data=EMWS8.AutoNeural21_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_EMCLASSIFICATION noobs label;
1184260    var from into pct_row pct_col count percent
1184261    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1184262    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1184263    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1184264    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1184265    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1184266    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1184267    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1184268    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1184269    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1184270    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1184271    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1184272    run;
 
NOTE: There were 8 observations read from the data set EMWS8.AUTONEURAL21_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 951.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1184273    title9;
MPRINT(EM_DIAGRAM):   title9;
1184274    title10;
MPRINT(EM_DIAGRAM):   title10;
1184275    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1184276    %let _cn = %sysfunc(getoption(CENTER));
1184277    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1184278    data EMWS8.AutoNeural21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.AutoNeural21_EMEVENTREPORT;
1184279    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1184279  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1184280    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1184280  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1184280  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1184280  ! FALSEEVENT
1184281    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1184281  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1184281  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1184282       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1184283    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1184284    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1184285    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1184286    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1184287    set EMWS8.AutoNeural21_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.AutoNeural21_EMEVENTREPORT;
1184288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL21_EMEVENTREPORT.
NOTE: The data set EMWS8.AUTONEURAL21_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1184289    proc print data=EMWS8.AutoNeural21_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_EMEVENTREPORT noobs label;
1184290    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1184291    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1184292    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1184293    run;
 
NOTE: There were 2 observations read from the data set EMWS8.AUTONEURAL21_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 952.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1184294    title10;
MPRINT(EM_DIAGRAM):   title10;
1184295    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1184296    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1184297    modify AutoNeural21_EMRANK;
MPRINT(EM_DIAGRAM):   modify AutoNeural21_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1184298    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1184299    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1184299  ! ;
MPRINT(EM_DIAGRAM):   run;
1184300    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL21_EMRANK.DATA.
1184301    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
1184302    %let _cn = %sysfunc(getoption(CENTER));
1184303    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1184304    proc print data=EMWS8.AutoNeural21_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_EMRANK label noobs;
1184305    var
1184306    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1184307    by
1184308    notsorted DATAROLE
1184309    notsorted TARGET
1184310    notsorted TARGETLABEL
1184311    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1184312    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1184313    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1184314    run;
 
NOTE: There were 40 observations read from the data set EMWS8.AUTONEURAL21_EMRANK.
NOTE: The PROCEDURE PRINT printed page 953.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1184315    title10;
MPRINT(EM_DIAGRAM):   title10;
1184316    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1184317    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1184318    modify AutoNeural21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify AutoNeural21_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1184319    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1184319  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1184320    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1184320  ! ;
MPRINT(EM_DIAGRAM):   run;
1184321    run;
 
NOTE: MODIFY was successful for EMWS8.AUTONEURAL21_EMSCOREDIST.DATA.
1184322    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.17 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.AutoNeural21_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
