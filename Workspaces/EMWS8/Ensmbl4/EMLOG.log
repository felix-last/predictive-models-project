*------------------------------------------------------------*
User:                Lukas Fahr
Date:                19. April 2016
Time:                11.19 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.19 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                19. April 2016
Time:                11.19 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3BD7P0Q
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3BD7P0Q new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.19 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.19 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[185083] MAX=1 EXCEEDMAXVALUE='' )[185087] )[185081]
VALIDCHOICES=(CHOICE1='Y' )[185085] )[185369] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[185091]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[185095] )[185093] )[185089] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[185099]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[185105] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[185103] )[185101] )[185097] )[185079]
1357445    proc freq data=EMWS8.Ensmbl4_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl4_VariableSet noprint;
1357446    table ROLE*LEVEL/out=WORK.Ensmbl4META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl4META;
1357447    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL4_VARIABLESET.
NOTE: The data set WORK.ENSMBL4META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1357448    proc print data=WORK.Ensmbl4META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl4META label noobs;
1357449    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1357450    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1357450  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1357450  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1357451    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1357452    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1357453    run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL4META.
NOTE: The PROCEDURE PRINT printed page 1004.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357454    title10;
MPRINT(EM_DIAGRAM):   title10;
1357455    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN EMWS8 Neural25_TRAIN
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN EMWS8 Neural25_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural25_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural25_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1357484    data WORK.Ensmbl4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1357485    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1357486    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1357486  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1357486  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1357487       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1357487  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1357487  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1357488    set EMWS8.NEURAL25_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL25_DEPVAR_DM( where=(_TYPE_="TARGET"));
1357489    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1357490    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1357491    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1357492    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1357493    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1357494    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1357495    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1357496    end;
MPRINT(EM_DIAGRAM):   end;
1357497    output;
MPRINT(EM_DIAGRAM):   output;
1357498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL25_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL4_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1357499    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1357500    proc print data=WORK.Ensmbl4_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl4_EVENT noobs label;
1357501    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1357502    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1357503    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1357504    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL4_EVENT.
NOTE: The PROCEDURE PRINT printed page 1005.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357505    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1357506    proc print data = EMWS8.Neural25_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural25_DepVar_DM noobs label;
1357507    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1357508    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1357509    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1357509  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1357509  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1357510    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1357511    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1357512    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL25_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1006.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357513    title10;
MPRINT(EM_DIAGRAM):   title10;
1357514    %let groupid =;
1357515    %let endGroupid =;
1357516    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357517    set EMWS8.Neural29_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural29_EMINFO;
1357518    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357518  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357519    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357520    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357521    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL29_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357522    %let groupid =;
1357523    %let endGroupid =;
1357524    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357525    set EMWS8.Neural24_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural24_EMINFO;
1357526    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357526  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357527    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357528    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL24_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1357530    %let groupid =;
1357531    %let endGroupid =;
1357532    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357533    set EMWS8.Neural25_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural25_EMINFO;
1357534    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357534  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357535    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357536    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL25_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357538    %let groupid =;
1357539    %let endGroupid =;
1357540    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357541    set EMWS8.Neural26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_EMINFO;
1357542    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357542  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357543    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357544    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357545    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL26_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357546    %let groupid =;
1357547    %let endGroupid =;
1357548    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357549    set EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_EMINFO;
1357550    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357550  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357551    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357552    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357553    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL27_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1357554    %let groupid =;
1357555    %let endGroupid =;
1357556    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357557    set EMWS8.Neural28_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural28_EMINFO;
1357558    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357558  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357559    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357560    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357561    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL28_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357562    %let groupid =;
1357563    %let endGroupid =;
1357564    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357565    set EMWS8.Neural8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural8_EMINFO;
1357566    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357566  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357567    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357568    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357569    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357570    %let groupid =;
1357571    %let endGroupid =;
1357572    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357573    set EMWS8.Tree4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree4_EMINFO;
1357574    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357574  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357575    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357576    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TREE4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1357578    %let groupid =;
1357579    %let endGroupid =;
1357580    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357581    set EMWS8.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg4_EMINFO;
1357582    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357582  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357583    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357584    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357586    %let groupid =;
1357587    %let endGroupid =;
1357588    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1357589    set EMWS8.Reg8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg8_EMINFO;
1357590    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1357590  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1357591    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1357592    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1357593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357594    data WORK.Ensmbl4;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4;
1357595    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1357596    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1357596  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1357597    nodeid="NEURAL29";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL29";
1357598    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357599    output;
MPRINT(EM_DIAGRAM):   output;
1357600    nodeid="NEURAL24";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL24";
1357601    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357602    output;
MPRINT(EM_DIAGRAM):   output;
1357603    nodeid="NEURAL25";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL25";
1357604    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357605    output;
MPRINT(EM_DIAGRAM):   output;
1357606    nodeid="NEURAL26";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL26";
1357607    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357608    output;
MPRINT(EM_DIAGRAM):   output;
1357609    nodeid="NEURAL27";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL27";
1357610    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357611    output;
MPRINT(EM_DIAGRAM):   output;
1357612    nodeid="NEURAL28";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL28";
1357613    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357614    output;
MPRINT(EM_DIAGRAM):   output;
1357615    nodeid="NEURAL8";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL8";
1357616    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1357617    output;
MPRINT(EM_DIAGRAM):   output;
1357618    nodeid="TREE4";
MPRINT(EM_DIAGRAM):   nodeid="TREE4";
1357619    model="Decision Tree";
MPRINT(EM_DIAGRAM):   model="Decision Tree";
1357620    output;
MPRINT(EM_DIAGRAM):   output;
1357621    nodeid="REG4";
MPRINT(EM_DIAGRAM):   nodeid="REG4";
1357622    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1357623    output;
MPRINT(EM_DIAGRAM):   output;
1357624    nodeid="REG8";
MPRINT(EM_DIAGRAM):   nodeid="REG8";
1357625    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1357626    output;
MPRINT(EM_DIAGRAM):   output;
1357627    ;
MPRINT(EM_DIAGRAM):   ;
1357628    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL4 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357629    title;
MPRINT(EM_DIAGRAM):   title;
1357630    proc print data=WORK.Ensmbl4 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl4 label noobs;
1357631    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1357632    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1357633    run;
 
NOTE: There were 10 observations read from the data set WORK.ENSMBL4.
NOTE: The PROCEDURE PRINT printed page 1007.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1357634    title9;
MPRINT(EM_DIAGRAM):   title9;
1357635    title10;
MPRINT(EM_DIAGRAM):   title10;
1357636    data WORK.M0BT7RKG;
MPRINT(EM_DIAGRAM):    data WORK.M0BT7RKG;
1357637    set WORK.M0BT7RKG;
MPRINT(EM_DIAGRAM):   set WORK.M0BT7RKG;
1357638    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1357639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M0BT7RKG.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M0BT7RKG has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1357640    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1357641    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1357642    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1357643    %macro DMDBClass;
1357644        DepVar(DESC)
1357645    %mend DMDBClass;
1357646    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1357647    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1357648    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1357649    %macro DMDBVar;
1357650
1357651    %mend DMDBVar;
1357652    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357653    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1357654    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357655    proc dmdb batch data=EMWS8.Neural29_TRAIN
1357656    dmdbcat=WORK.EM_DMDB
1357657    maxlevel = 513
1357658    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Neural29_TRAIN dmdbcat=WORK.EM_DMDB maxlevel
= 513 ;
MPRINT(EM_DIAGRAM):   class
1357659    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1357660    target
1357661    DepVar
1357662    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1357663    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.NEURAL29_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL29_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1357664    quit;
1357665    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.19 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                19. April 2016
Time:                11.19 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0VEKOTA
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0VEKOTA new;
MPRINT(EM_DIAGRAM):   run;
1357767    filename emflow
1357767  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring NEURAL29_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357768    *------------------------------------------------------------*;
1357769    * Ensmbl4: Scoring NEURAL29_TRAIN data;
1357770    *------------------------------------------------------------*;
1357771    data EMWS8.Ensmbl4_TRAIN
1357772    / view=EMWS8.Ensmbl4_TRAIN
1357773    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_TRAIN / view=EMWS8.Ensmbl4_TRAIN ;
1357774    set EMWS8.Neural29_TRAIN
1357775    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural29_TRAIN ;
1357776    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas.
1357777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357778   +* Ensmbl4: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Combine model for DepVar;
1357779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357780   +* Ensmbl4: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 1 of 10;
1357781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357782   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357783   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1357784   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1357785   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1357786   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357787   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357788   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1357789   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1357790   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1357791   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357793   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1357794   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1357795   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1357796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357798   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1357799   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1357800   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1357801   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357802   +
1357803   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1357804   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1357804  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1357805   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1357806   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1357807   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1357808   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1357809   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1357810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357811   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1357812   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1357813   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1357814   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357815   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357816   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1357817   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357818   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1357819   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1357820   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1357821   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357822   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1357823   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1357824   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1357825   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357827   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1357828   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1357829   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1357830   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357831   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1357832   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1357833   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1357834   +
1357835   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1357836   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1357837   +
1357838   +
1357839   +/*----G_Marital_Status begin----*/
1357840   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1357841   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1357842   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1357843   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1357844   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1357845   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1357846   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1357847   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1357848   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1357849   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1357850   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1357851   +end;
MPRINT(EM_DIAGRAM):   end;
1357852   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1357853   +/*----G_Marital_Status end----*/
1357854   +
1357855   +
1357856   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1357857   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1357858   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1357859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357860   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1357861   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1357862   +* NODE: Neural29;
MPRINT(EM_DIAGRAM):   * NODE: Neural29;
1357863   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1357864   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1357865   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1357866   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1357867   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1357868   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1357869   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1357870   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1357871   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1357872   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1357873   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1357874   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1357875   +LENGTH _WARN_ $4
1357876   +      F_DepVar  $ 12
1357877   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1357878   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1357879   +
1357880   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1357881   +
1357882   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1357883   +
1357884   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1357885   +
1357886   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1357887   +
1357888   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1357889   +
1357890   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1357891   +
1357892   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1357893   +
1357894   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1357895   +
1357896   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1357897   +
1357898   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1357899   +
1357900   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1357901   +
1357902   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1357903   +
1357904   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1357905   +
1357906   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1357907   +
1357908   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1357909   +
1357910   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1357911   +
1357912   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1357913   +
1357914   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1357915   +
1357916   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1357917   +
1357918   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1357919   +
1357920   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1357921   +
1357922   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1357923   +
1357924   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1357925   +
1357926   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1357927   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1357928   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1357929   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1357930   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1357931   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1357932   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1357933   +end;
MPRINT(EM_DIAGRAM):   end;
1357934   +else do;
MPRINT(EM_DIAGRAM):   else do;
1357935   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1357936   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1357937   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1357938   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1357939   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1357940   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1357941   +   end;
MPRINT(EM_DIAGRAM):   end;
1357942   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1357943   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1357944   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1357945   +   end;
MPRINT(EM_DIAGRAM):   end;
1357946   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1357947   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1357948   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1357949   +   end;
MPRINT(EM_DIAGRAM):   end;
1357950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1357951   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1357952   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1357953   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1357954   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1357955   +   end;
MPRINT(EM_DIAGRAM):   end;
1357956   +end;
MPRINT(EM_DIAGRAM):   end;
1357957   +
1357958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1357959   +*** Checking missing input Interval
1357960   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1357961   +
1357962   +IF NMISS(
1357963   +   AcceptedCmpTotal ,
1357964   +   Frq ,
1357965   +   Income ,
1357966   +   Mnt ,
1357967   +   MntFruits ,
1357968   +   MntGoldProds ,
1357969   +   MntMeatProducts ,
1357970   +   MntSweetProducts ,
1357971   +   NumCatalogPurchases ,
1357972   +   NumWebPurchases ,
1357973   +   RFMstat ,
1357974   +   RMntFrq ,
1357975   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1357976   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1357977   +
1357978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1357979   +END;
MPRINT(EM_DIAGRAM):   END;
1357980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1357981   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1357982   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1357983   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1357984   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1357985   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1357986   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1357987   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1357988   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1357989   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1357990   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1357991   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1357992   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1357993   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1357994   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1357995   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1357996   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1357997   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1357998   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1357999   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358000   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358001   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358002   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358003   +END;
MPRINT(EM_DIAGRAM):   END;
1358004   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358005   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1358006   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358007   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358008   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1358009   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358010   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1358011   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358012   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1358013   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358014   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1358015   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1358016   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358017   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1358018   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358019   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1358020   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1358021   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358022   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358023   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1358024   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358025   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358026   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1358027   +   ELSE S_NumCatalogPurchases
1358028   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1358029   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358030   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1358031   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358032   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358033   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1358034   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358035   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1358036   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358037   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1358038   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358039   +END;
MPRINT(EM_DIAGRAM):   END;
1358040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358041   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1358042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358043   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358044   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1358045   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358046   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358047   +   H11  =     0.07081605827454 * S_AcceptedCmpTotal  +    -0.06698977764548 *
1358048   +        S_Frq  +    -0.03430870177464 * S_Income  +    -0.11360176415097 *
1358049   +        S_Mnt  +    -0.01238418440333 * S_MntFruits  +     0.01232617973423 *
1358050   +        S_MntGoldProds  +     0.07483946106207 * S_MntMeatProducts
1358051   +          +     -0.0079701278424 * S_MntSweetProducts
1358052   +          +     0.08585038786425 * S_NumCatalogPurchases
1358053   +          +     0.04419619029921 * S_NumWebPurchases
1358054   +          +     0.01256447914587 * S_RFMstat  +     0.04947774665638 *
1358055   +        S_RMntFrq  +    -0.08738179516843 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.07081605827454 * S_AcceptedCmpTotal + -0.06698977764548 * S_Frq
+ -0.03430870177464 * S_Income + -0.11360176415097 * S_Mnt + -0.01238418440333 * S_MntFruits +
0.01232617973423 * S_MntGoldProds + 0.07483946106207 * S_MntMeatProducts + -0.0079701278424 *
S_MntSweetProducts + 0.08585038786425 * S_NumCatalogPurchases + 0.04419619029921 *
S_NumWebPurchases + 0.01256447914587 * S_RFMstat + 0.04947774665638 * S_RMntFrq +
-0.08738179516843 * S_Recency ;
1358056   +   H11  = H11  +     0.02930876660681 * G_Marital_Status0
1358057   +          +     0.00712629273648 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02930876660681 * G_Marital_Status0 + 0.00712629273648 *
G_Marital_Status1 ;
1358058   +   H11  =    -0.46602666061325 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.46602666061325 + H11 ;
1358059   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1358060   +END;
MPRINT(EM_DIAGRAM):   END;
1358061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358062   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1358063   +END;
MPRINT(EM_DIAGRAM):   END;
1358064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358065   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1358066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358067   +
1358068   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1358069   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1358070   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1358071   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1358072   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1358073   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1358074   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1358075   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1358076   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1358077   +end;
MPRINT(EM_DIAGRAM):   end;
1358078   +else do;
MPRINT(EM_DIAGRAM):   else do;
1358079   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1358080   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1358081   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1358082   +   end;
MPRINT(EM_DIAGRAM):   end;
1358083   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1358084   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1358085   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1358086   +   end;
MPRINT(EM_DIAGRAM):   end;
1358087   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1358088   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1358089   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1358090   +   end;
MPRINT(EM_DIAGRAM):   end;
1358091   +end;
MPRINT(EM_DIAGRAM):   end;
1358092   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358093   +   P_DepVar1  =      25.813843010399 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.813843010399 * H11 ;
1358094   +   P_DepVar1  =     8.06674391252456 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.06674391252456 + P_DepVar1 ;
1358095   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1358096   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1358097   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1358098   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1358099   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1358100   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1358101   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1358102   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1358103   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1358104   +END;
MPRINT(EM_DIAGRAM):   END;
1358105   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358106   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1358107   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1358108   +END;
MPRINT(EM_DIAGRAM):   END;
1358109   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1358110   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1358111   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1358112   +END;
MPRINT(EM_DIAGRAM):   END;
1358113   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1358114   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1358115   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1358116   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1358117   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1358118   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1358119   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1358120   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358121   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1358122   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358123   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1358124   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1358125   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1358126   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1358127   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1358128   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1358129   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1358130   +END;
MPRINT(EM_DIAGRAM):   END;
1358131   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1358132   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1358133   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1358134   +drop
1358135   +H11
1358136   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1358137   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1358138   +* Renaming variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural29;
1358139   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358140   +* Renaming Posterior variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural29;
1358141   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358142   +drop Neural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar1;
1358143   +Neural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar1 = P_DepVar1;
1358144   +drop Neural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar0;
1358145   +Neural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar0 = P_DepVar0;
1358146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358147   +* Renaming _WARN_ variable for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural29;
1358148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358149   +length Neural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural29_WARN_ $4;
1358150   +drop Neural29_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural29_WARN_;
1358151   +Neural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural29_WARN_ = _WARN_;
1358152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358153   +* Ensmbl4: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 2 of 10;
1358154   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358156   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1358157   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1358158   +* NODE: Neural24;
MPRINT(EM_DIAGRAM):   * NODE: Neural24;
1358159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358160   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1358161   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1358162   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1358163   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1358164   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1358165   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1358166   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1358167   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1358168   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1358169   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1358170   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1358171   +LENGTH _WARN_ $4
1358172   +      F_DepVar  $ 12
1358173   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1358174   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1358175   +
1358176   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1358177   +
1358178   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1358179   +
1358180   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1358181   +
1358182   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1358183   +
1358184   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1358185   +
1358186   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1358187   +
1358188   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1358189   +
1358190   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1358191   +
1358192   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1358193   +
1358194   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1358195   +
1358196   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1358197   +
1358198   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1358199   +
1358200   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1358201   +
1358202   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1358203   +
1358204   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1358205   +
1358206   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1358207   +
1358208   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1358209   +
1358210   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1358211   +
1358212   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1358213   +
1358214   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1358215   +
1358216   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1358217   +
1358218   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1358219   +
1358220   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1358221   +
1358222   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1358223   +
1358224   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1358225   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1358226   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1358227   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1358228   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1358229   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1358230   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358231   +end;
MPRINT(EM_DIAGRAM):   end;
1358232   +else do;
MPRINT(EM_DIAGRAM):   else do;
1358233   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1358234   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1358235   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1358236   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1358237   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1358238   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1358239   +   end;
MPRINT(EM_DIAGRAM):   end;
1358240   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1358241   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1358242   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1358243   +   end;
MPRINT(EM_DIAGRAM):   end;
1358244   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1358245   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1358246   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1358247   +   end;
MPRINT(EM_DIAGRAM):   end;
1358248   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1358249   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1358250   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1358251   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1358252   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358253   +   end;
MPRINT(EM_DIAGRAM):   end;
1358254   +end;
MPRINT(EM_DIAGRAM):   end;
1358255   +
1358256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358257   +*** Checking missing input Interval
1358258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1358259   +
1358260   +IF NMISS(
1358261   +   AcceptedCmpTotal ,
1358262   +   Frq ,
1358263   +   Income ,
1358264   +   Mnt ,
1358265   +   MntFruits ,
1358266   +   MntGoldProds ,
1358267   +   MntMeatProducts ,
1358268   +   MntSweetProducts ,
1358269   +   NumCatalogPurchases ,
1358270   +   NumWebPurchases ,
1358271   +   RFMstat ,
1358272   +   RMntFrq ,
1358273   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1358274   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1358275   +
1358276   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358277   +END;
MPRINT(EM_DIAGRAM):   END;
1358278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358279   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1358280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358281   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358282   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358283   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358284   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358285   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358286   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358287   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358288   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358289   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1358290   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358291   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358292   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358293   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358294   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1358295   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358296   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358297   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358298   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358299   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358300   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358301   +END;
MPRINT(EM_DIAGRAM):   END;
1358302   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358303   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1358304   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358305   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358306   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1358307   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358308   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1358309   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358310   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1358311   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358312   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1358313   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1358314   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358315   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1358316   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358317   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1358318   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1358319   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358320   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358321   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1358322   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358323   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358324   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1358325   +   ELSE S_NumCatalogPurchases
1358326   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1358327   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358328   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1358329   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358330   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358331   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1358332   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358333   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1358334   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358335   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1358336   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358337   +END;
MPRINT(EM_DIAGRAM):   END;
1358338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358339   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1358340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358342   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1358343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358344   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358345   +   H11  =    -0.23012961341552 * S_AcceptedCmpTotal  +     0.46196798170863 *
1358346   +        S_Frq  +     0.10792957007496 * S_Income  +     0.01598495816724 *
1358347   +        S_Mnt  +     0.04110199082094 * S_MntFruits  +    -0.03861520815517 *
1358348   +        S_MntGoldProds  +    -0.21282606264093 * S_MntMeatProducts
1358349   +          +     0.01715600461602 * S_MntSweetProducts
1358350   +          +    -0.23329547812839 * S_NumCatalogPurchases
1358351   +          +    -0.11507537772092 * S_NumWebPurchases
1358352   +          +    -0.03410149182919 * S_RFMstat  +     0.14966504694497 *
1358353   +        S_RMntFrq  +     0.28566269847001 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.23012961341552 * S_AcceptedCmpTotal + 0.46196798170863 * S_Frq
+ 0.10792957007496 * S_Income + 0.01598495816724 * S_Mnt + 0.04110199082094 * S_MntFruits +
-0.03861520815517 * S_MntGoldProds + -0.21282606264093 * S_MntMeatProducts + 0.01715600461602
* S_MntSweetProducts + -0.23329547812839 * S_NumCatalogPurchases + -0.11507537772092 *
S_NumWebPurchases + -0.03410149182919 * S_RFMstat + 0.14966504694497 * S_RMntFrq +
0.28566269847001 * S_Recency ;
1358354   +   H12  =     0.05540254918167 * S_AcceptedCmpTotal  +     1.29235531722682 *
1358355   +        S_Frq  +     0.06366828093255 * S_Income  +    -0.26947825948002 *
1358356   +        S_Mnt  +     0.21714508305015 * S_MntFruits  +     0.26812345284438 *
1358357   +        S_MntGoldProds  +    -4.04479521582802 * S_MntMeatProducts
1358358   +          +     0.04792709763034 * S_MntSweetProducts
1358359   +          +    -1.08549455020763 * S_NumCatalogPurchases
1358360   +          +    -0.48337305556946 * S_NumWebPurchases
1358361   +          +    -0.22222278831599 * S_RFMstat  +    -0.23407358569927 *
1358362   +        S_RMntFrq  +    -0.01186280761112 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.05540254918167 * S_AcceptedCmpTotal + 1.29235531722682 * S_Frq +
0.06366828093255 * S_Income + -0.26947825948002 * S_Mnt + 0.21714508305015 * S_MntFruits +
0.26812345284438 * S_MntGoldProds + -4.04479521582802 * S_MntMeatProducts + 0.04792709763034 *
S_MntSweetProducts + -1.08549455020763 * S_NumCatalogPurchases + -0.48337305556946 *
S_NumWebPurchases + -0.22222278831599 * S_RFMstat + -0.23407358569927 * S_RMntFrq +
-0.01186280761112 * S_Recency ;
1358363   +   H11  = H11  +    -0.14627707216264 * G_Marital_Status0
1358364   +          +    -0.05689581037738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14627707216264 * G_Marital_Status0 + -0.05689581037738 *
G_Marital_Status1 ;
1358365   +   H12  = H12  +     0.20389328110579 * G_Marital_Status0
1358366   +          +     0.12863423712687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20389328110579 * G_Marital_Status0 + 0.12863423712687 *
G_Marital_Status1 ;
1358367   +   H11  =     0.26937694072834 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.26937694072834 + H11 ;
1358368   +   H12  =    -3.07173299704836 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.07173299704836 + H12 ;
1358369   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1358370   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1358371   +END;
MPRINT(EM_DIAGRAM):   END;
1358372   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358373   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1358374   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1358375   +END;
MPRINT(EM_DIAGRAM):   END;
1358376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358377   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1358378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358379   +
1358380   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1358381   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1358382   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1358383   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1358384   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1358385   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1358386   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1358387   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1358388   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1358389   +end;
MPRINT(EM_DIAGRAM):   end;
1358390   +else do;
MPRINT(EM_DIAGRAM):   else do;
1358391   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1358392   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1358393   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1358394   +   end;
MPRINT(EM_DIAGRAM):   end;
1358395   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1358396   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1358397   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1358398   +   end;
MPRINT(EM_DIAGRAM):   end;
1358399   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1358400   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1358401   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1358402   +   end;
MPRINT(EM_DIAGRAM):   end;
1358403   +end;
MPRINT(EM_DIAGRAM):   end;
1358404   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358405   +   P_DepVar1  =    -8.61120981649634 * H11  +    -5.72570140806215 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.61120981649634 * H11 + -5.72570140806215 * H12 ;
1358406   +   P_DepVar1  =    -4.82159913495753 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.82159913495753 + P_DepVar1 ;
1358407   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1358408   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1358409   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1358410   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1358411   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1358412   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1358413   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1358414   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1358415   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1358416   +END;
MPRINT(EM_DIAGRAM):   END;
1358417   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358418   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1358419   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1358420   +END;
MPRINT(EM_DIAGRAM):   END;
1358421   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1358422   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1358423   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1358424   +END;
MPRINT(EM_DIAGRAM):   END;
1358425   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1358426   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1358427   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1358428   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1358429   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1358430   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1358431   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1358432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358433   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1358434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358435   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1358436   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1358437   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1358438   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1358439   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1358440   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1358441   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1358442   +END;
MPRINT(EM_DIAGRAM):   END;
1358443   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1358444   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1358445   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1358446   +drop
1358447   +H11
1358448   +H12
1358449   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1358450   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1358451   +* Renaming variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural24;
1358452   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358453   +* Renaming Posterior variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural24;
1358454   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358455   +drop Neural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar1;
1358456   +Neural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar1 = P_DepVar1;
1358457   +drop Neural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar0;
1358458   +Neural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar0 = P_DepVar0;
1358459   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358460   +* Renaming _WARN_ variable for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural24;
1358461   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358462   +length Neural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural24_WARN_ $4;
1358463   +drop Neural24_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural24_WARN_;
1358464   +Neural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural24_WARN_ = _WARN_;
1358465   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358466   +* Ensmbl4: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 3 of 10;
1358467   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358468   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358469   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1358470   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1358471   +* NODE: Neural25;
MPRINT(EM_DIAGRAM):   * NODE: Neural25;
1358472   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358473   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1358474   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1358475   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1358476   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1358477   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1358478   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1358479   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1358480   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1358481   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1358482   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1358483   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1358484   +LENGTH _WARN_ $4
1358485   +      F_DepVar  $ 12
1358486   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1358487   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1358488   +
1358489   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1358490   +
1358491   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1358492   +
1358493   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1358494   +
1358495   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1358496   +
1358497   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1358498   +
1358499   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1358500   +
1358501   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1358502   +
1358503   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1358504   +
1358505   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1358506   +
1358507   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1358508   +
1358509   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1358510   +
1358511   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1358512   +
1358513   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1358514   +
1358515   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1358516   +
1358517   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1358518   +
1358519   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1358520   +
1358521   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1358522   +
1358523   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1358524   +
1358525   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1358526   +
1358527   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1358528   +
1358529   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1358530   +
1358531   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1358532   +
1358533   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1358534   +
1358535   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1358536   +
1358537   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1358538   +
1358539   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1358540   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1358541   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1358542   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1358543   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1358544   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1358545   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358546   +end;
MPRINT(EM_DIAGRAM):   end;
1358547   +else do;
MPRINT(EM_DIAGRAM):   else do;
1358548   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1358549   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1358550   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1358551   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1358552   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1358553   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1358554   +   end;
MPRINT(EM_DIAGRAM):   end;
1358555   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1358556   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1358557   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1358558   +   end;
MPRINT(EM_DIAGRAM):   end;
1358559   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1358560   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1358561   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1358562   +   end;
MPRINT(EM_DIAGRAM):   end;
1358563   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1358564   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1358565   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1358566   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1358567   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358568   +   end;
MPRINT(EM_DIAGRAM):   end;
1358569   +end;
MPRINT(EM_DIAGRAM):   end;
1358570   +
1358571   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358572   +*** Checking missing input Interval
1358573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1358574   +
1358575   +IF NMISS(
1358576   +   AcceptedCmpTotal ,
1358577   +   Frq ,
1358578   +   Income ,
1358579   +   Mnt ,
1358580   +   MntFruits ,
1358581   +   MntGoldProds ,
1358582   +   MntMeatProducts ,
1358583   +   MntSweetProducts ,
1358584   +   NumCatalogPurchases ,
1358585   +   NumWebPurchases ,
1358586   +   RFMstat ,
1358587   +   RMntFrq ,
1358588   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1358589   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1358590   +
1358591   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358592   +END;
MPRINT(EM_DIAGRAM):   END;
1358593   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358594   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1358595   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358596   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358597   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358598   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358599   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358600   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358601   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358602   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358603   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358604   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1358605   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358606   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358607   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358608   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358609   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1358610   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358611   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358612   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358613   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358614   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358615   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358616   +END;
MPRINT(EM_DIAGRAM):   END;
1358617   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358618   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1358619   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358620   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358621   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1358622   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358623   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1358624   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358625   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1358626   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358627   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1358628   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1358629   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358630   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1358631   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358632   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1358633   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1358634   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358635   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358636   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1358637   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358638   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358639   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1358640   +   ELSE S_NumCatalogPurchases
1358641   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1358642   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358643   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1358644   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358645   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358646   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1358647   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358648   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1358649   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358650   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1358651   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358652   +END;
MPRINT(EM_DIAGRAM):   END;
1358653   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358654   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1358655   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358656   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358657   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1358658   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358659   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358660   +   H11  =    -0.29033160943141 * S_AcceptedCmpTotal  +     1.65008720168986 *
1358661   +        S_Frq  +     0.06251288055572 * S_Income  +      0.0668512722962 *
1358662   +        S_Mnt  +     0.03892214147304 * S_MntFruits  +     0.20062210213612 *
1358663   +        S_MntGoldProds  +    -3.11480309420656 * S_MntMeatProducts
1358664   +          +    -0.04673959319989 * S_MntSweetProducts
1358665   +          +    -1.21625330274707 * S_NumCatalogPurchases
1358666   +          +     -0.4971041829957 * S_NumWebPurchases
1358667   +          +    -0.17470099705144 * S_RFMstat  +    -0.53358474622759 *
1358668   +        S_RMntFrq  +     0.38389131134706 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.29033160943141 * S_AcceptedCmpTotal + 1.65008720168986 * S_Frq
+ 0.06251288055572 * S_Income + 0.0668512722962 * S_Mnt + 0.03892214147304 * S_MntFruits +
0.20062210213612 * S_MntGoldProds + -3.11480309420656 * S_MntMeatProducts + -0.04673959319989
* S_MntSweetProducts + -1.21625330274707 * S_NumCatalogPurchases + -0.4971041829957 *
S_NumWebPurchases + -0.17470099705144 * S_RFMstat + -0.53358474622759 * S_RMntFrq +
0.38389131134706 * S_Recency ;
1358669   +   H12  =     0.45303153795041 * S_AcceptedCmpTotal  +    -0.78996479450613 *
1358670   +        S_Frq  +    -0.58298284968136 * S_Income  +     0.14918533356272 *
1358671   +        S_Mnt  +    -0.40559802868396 * S_MntFruits  +     0.11972304240892 *
1358672   +        S_MntGoldProds  +     0.31356670313089 * S_MntMeatProducts
1358673   +          +    -0.14032278714215 * S_MntSweetProducts
1358674   +          +     0.13835096224468 * S_NumCatalogPurchases
1358675   +          +     0.13800491118955 * S_NumWebPurchases
1358676   +          +     0.10506847679186 * S_RFMstat  +    -0.29903179406638 *
1358677   +        S_RMntFrq  +    -0.52813041903353 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.45303153795041 * S_AcceptedCmpTotal + -0.78996479450613 * S_Frq
+ -0.58298284968136 * S_Income + 0.14918533356272 * S_Mnt + -0.40559802868396 * S_MntFruits +
0.11972304240892 * S_MntGoldProds + 0.31356670313089 * S_MntMeatProducts + -0.14032278714215 *
S_MntSweetProducts + 0.13835096224468 * S_NumCatalogPurchases + 0.13800491118955 *
S_NumWebPurchases + 0.10506847679186 * S_RFMstat + -0.29903179406638 * S_RMntFrq +
-0.52813041903353 * S_Recency ;
1358678   +   H13  =    -0.60990818976997 * S_AcceptedCmpTotal  +     0.78563794151057 *
1358679   +        S_Frq  +    -0.67740326666919 * S_Income  +     0.64266139486854 *
1358680   +        S_Mnt  +    -0.14912060810947 * S_MntFruits  +    -0.06683180032017 *
1358681   +        S_MntGoldProds  +    -1.00660670853382 * S_MntMeatProducts
1358682   +          +     0.01239684835876 * S_MntSweetProducts
1358683   +          +    -1.19356791317323 * S_NumCatalogPurchases
1358684   +          +    -0.62897909821994 * S_NumWebPurchases
1358685   +          +      -0.010489589719 * S_RFMstat  +      0.1434960860838 *
1358686   +        S_RMntFrq  +     1.20335007293573 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.60990818976997 * S_AcceptedCmpTotal + 0.78563794151057 * S_Frq
+ -0.67740326666919 * S_Income + 0.64266139486854 * S_Mnt + -0.14912060810947 * S_MntFruits +
-0.06683180032017 * S_MntGoldProds + -1.00660670853382 * S_MntMeatProducts + 0.01239684835876
* S_MntSweetProducts + -1.19356791317323 * S_NumCatalogPurchases + -0.62897909821994 *
S_NumWebPurchases + -0.010489589719 * S_RFMstat + 0.1434960860838 * S_RMntFrq +
1.20335007293573 * S_Recency ;
1358687   +   H11  = H11  +    -0.02749612145805 * G_Marital_Status0
1358688   +          +     0.04851614991645 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.02749612145805 * G_Marital_Status0 + 0.04851614991645 *
G_Marital_Status1 ;
1358689   +   H12  = H12  +     0.25900717859534 * G_Marital_Status0
1358690   +          +    -0.00514755509392 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25900717859534 * G_Marital_Status0 + -0.00514755509392 *
G_Marital_Status1 ;
1358691   +   H13  = H13  +    -0.74074264175662 * G_Marital_Status0
1358692   +          +    -0.23517796339687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.74074264175662 * G_Marital_Status0 + -0.23517796339687 *
G_Marital_Status1 ;
1358693   +   H11  =    -1.76667308717451 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.76667308717451 + H11 ;
1358694   +   H12  =    -0.06899369466405 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.06899369466405 + H12 ;
1358695   +   H13  =     4.22583207425873 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 4.22583207425873 + H13 ;
1358696   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1358697   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1358698   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1358699   +END;
MPRINT(EM_DIAGRAM):   END;
1358700   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358701   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1358702   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1358703   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1358704   +END;
MPRINT(EM_DIAGRAM):   END;
1358705   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358706   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1358707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358708   +
1358709   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1358710   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1358711   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1358712   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1358713   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1358714   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1358715   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1358716   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1358717   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1358718   +end;
MPRINT(EM_DIAGRAM):   end;
1358719   +else do;
MPRINT(EM_DIAGRAM):   else do;
1358720   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1358721   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1358722   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1358723   +   end;
MPRINT(EM_DIAGRAM):   end;
1358724   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1358725   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1358726   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1358727   +   end;
MPRINT(EM_DIAGRAM):   end;
1358728   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1358729   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1358730   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1358731   +   end;
MPRINT(EM_DIAGRAM):   end;
1358732   +end;
MPRINT(EM_DIAGRAM):   end;
1358733   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358734   +   P_DepVar1  =    -4.70859697618201 * H11  +     3.63900660721997 * H12
1358735   +          +    -4.60310081273681 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.70859697618201 * H11 + 3.63900660721997 * H12 +
-4.60310081273681 * H13 ;
1358736   +   P_DepVar1  =     -0.6194274413348 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.6194274413348 + P_DepVar1 ;
1358737   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1358738   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1358739   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1358740   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1358741   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1358742   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1358743   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1358744   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1358745   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1358746   +END;
MPRINT(EM_DIAGRAM):   END;
1358747   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358748   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1358749   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1358750   +END;
MPRINT(EM_DIAGRAM):   END;
1358751   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1358752   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1358753   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1358754   +END;
MPRINT(EM_DIAGRAM):   END;
1358755   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1358756   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1358757   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1358758   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1358759   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1358760   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1358761   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1358762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358763   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1358764   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358765   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1358766   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1358767   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1358768   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1358769   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1358770   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1358771   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1358772   +END;
MPRINT(EM_DIAGRAM):   END;
1358773   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1358774   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1358775   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1358776   +drop
1358777   +H11
1358778   +H12
1358779   +H13
1358780   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1358781   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1358782   +* Renaming variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural25;
1358783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358784   +* Renaming Posterior variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural25;
1358785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358786   +drop Neural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar1;
1358787   +Neural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar1 = P_DepVar1;
1358788   +drop Neural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar0;
1358789   +Neural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar0 = P_DepVar0;
1358790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358791   +* Renaming _WARN_ variable for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural25;
1358792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358793   +length Neural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural25_WARN_ $4;
1358794   +drop Neural25_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural25_WARN_;
1358795   +Neural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural25_WARN_ = _WARN_;
1358796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358797   +* Ensmbl4: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 4 of 10;
1358798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358800   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1358801   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1358802   +* NODE: Neural26;
MPRINT(EM_DIAGRAM):   * NODE: Neural26;
1358803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1358804   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1358805   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1358806   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1358807   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1358808   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1358809   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1358810   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1358811   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1358812   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1358813   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1358814   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1358815   +LENGTH _WARN_ $4
1358816   +      F_DepVar  $ 12
1358817   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1358818   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1358819   +
1358820   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1358821   +
1358822   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1358823   +
1358824   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1358825   +
1358826   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1358827   +
1358828   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1358829   +
1358830   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1358831   +
1358832   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1358833   +
1358834   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1358835   +
1358836   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1358837   +
1358838   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1358839   +
1358840   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1358841   +
1358842   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1358843   +
1358844   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1358845   +
1358846   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1358847   +
1358848   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1358849   +
1358850   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1358851   +
1358852   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1358853   +
1358854   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1358855   +
1358856   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1358857   +
1358858   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1358859   +
1358860   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1358861   +
1358862   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1358863   +
1358864   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1358865   +
1358866   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1358867   +
1358868   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1358869   +
1358870   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1358871   +
1358872   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1358873   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1358874   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1358875   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1358876   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1358877   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1358878   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358879   +end;
MPRINT(EM_DIAGRAM):   end;
1358880   +else do;
MPRINT(EM_DIAGRAM):   else do;
1358881   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1358882   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1358883   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1358884   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1358885   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1358886   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1358887   +   end;
MPRINT(EM_DIAGRAM):   end;
1358888   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1358889   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1358890   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1358891   +   end;
MPRINT(EM_DIAGRAM):   end;
1358892   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1358893   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1358894   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1358895   +   end;
MPRINT(EM_DIAGRAM):   end;
1358896   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1358897   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1358898   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1358899   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1358900   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358901   +   end;
MPRINT(EM_DIAGRAM):   end;
1358902   +end;
MPRINT(EM_DIAGRAM):   end;
1358903   +
1358904   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358905   +*** Checking missing input Interval
1358906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1358907   +
1358908   +IF NMISS(
1358909   +   AcceptedCmpTotal ,
1358910   +   Frq ,
1358911   +   Income ,
1358912   +   Mnt ,
1358913   +   MntFruits ,
1358914   +   MntGoldProds ,
1358915   +   MntMeatProducts ,
1358916   +   MntSweetProducts ,
1358917   +   NumCatalogPurchases ,
1358918   +   NumWebPurchases ,
1358919   +   RFMstat ,
1358920   +   RMntFrq ,
1358921   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1358922   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1358923   +
1358924   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1358925   +END;
MPRINT(EM_DIAGRAM):   END;
1358926   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358927   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1358928   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358929   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358930   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358931   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358932   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358933   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358934   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358935   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358936   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358937   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1358938   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358939   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358940   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358941   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358942   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1358943   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358944   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358945   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358946   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358947   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358948   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358949   +END;
MPRINT(EM_DIAGRAM):   END;
1358950   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1358951   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1358952   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1358953   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1358954   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1358955   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1358956   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1358957   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1358958   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1358959   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1358960   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1358961   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1358962   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1358963   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1358964   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1358965   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1358966   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1358967   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1358968   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1358969   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1358970   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1358971   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1358972   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1358973   +   ELSE S_NumCatalogPurchases
1358974   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1358975   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1358976   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1358977   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1358978   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1358979   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1358980   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1358981   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1358982   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1358983   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1358984   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1358985   +END;
MPRINT(EM_DIAGRAM):   END;
1358986   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358987   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1358988   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358989   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358990   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1358991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1358992   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1358993   +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
1358994   +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
1358995   +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
1358996   +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
1358997   +          +     0.30688676656325 * S_MntSweetProducts
1358998   +          +    -0.31936466951531 * S_NumCatalogPurchases
1358999   +          +    -0.40503981142414 * S_NumWebPurchases
1359000   +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
1359001   +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits +
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 *
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq +
0.94794577395963 * S_Recency ;
1359002   +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
1359003   +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
1359004   +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
1359005   +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
1359006   +          +    -0.57511617685848 * S_MntSweetProducts
1359007   +          +    -0.80584166120088 * S_NumCatalogPurchases
1359008   +          +    -0.46226595005401 * S_NumWebPurchases
1359009   +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
1359010   +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits +
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 *
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq +
0.20830913301712 * S_Recency ;
1359011   +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
1359012   +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
1359013   +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
1359014   +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
1359015   +          +     0.13151485846279 * S_MntSweetProducts
1359016   +          +    -0.12544664418198 * S_NumCatalogPurchases
1359017   +          +     0.31794108898576 * S_NumWebPurchases
1359018   +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
1359019   +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits +
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 *
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 *
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq +
0.6850072112056 * S_Recency ;
1359020   +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
1359021   +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
1359022   +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
1359023   +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
1359024   +          +     0.55003060492603 * S_MntSweetProducts
1359025   +          +    -0.81895769875154 * S_NumCatalogPurchases
1359026   +          +    -0.73905791041531 * S_NumWebPurchases
1359027   +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
1359028   +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits +
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 *
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 *
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq +
0.31097790354738 * S_Recency ;
1359029   +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
1359030   +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 *
G_Marital_Status1 ;
1359031   +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
1359032   +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 *
G_Marital_Status1 ;
1359033   +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
1359034   +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 *
G_Marital_Status1 ;
1359035   +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
1359036   +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 *
G_Marital_Status1 ;
1359037   +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
1359038   +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
1359039   +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
1359040   +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
1359041   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1359042   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1359043   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1359044   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1359045   +END;
MPRINT(EM_DIAGRAM):   END;
1359046   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359047   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1359048   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1359049   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1359050   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1359051   +END;
MPRINT(EM_DIAGRAM):   END;
1359052   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359053   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1359054   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359055   +
1359056   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1359057   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1359058   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1359059   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1359060   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1359061   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1359062   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1359063   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1359064   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1359065   +end;
MPRINT(EM_DIAGRAM):   end;
1359066   +else do;
MPRINT(EM_DIAGRAM):   else do;
1359067   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1359068   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1359069   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1359070   +   end;
MPRINT(EM_DIAGRAM):   end;
1359071   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1359072   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1359073   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1359074   +   end;
MPRINT(EM_DIAGRAM):   end;
1359075   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1359076   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1359077   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1359078   +   end;
MPRINT(EM_DIAGRAM):   end;
1359079   +end;
MPRINT(EM_DIAGRAM):   end;
1359080   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359081   +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
1359082   +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 +
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
1359083   +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
1359084   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1359085   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1359086   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1359087   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1359088   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1359089   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1359090   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1359091   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1359092   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1359093   +END;
MPRINT(EM_DIAGRAM):   END;
1359094   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359095   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1359096   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1359097   +END;
MPRINT(EM_DIAGRAM):   END;
1359098   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1359099   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1359100   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1359101   +END;
MPRINT(EM_DIAGRAM):   END;
1359102   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1359103   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1359104   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1359105   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1359106   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1359107   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1359108   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1359109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359110   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1359111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359112   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1359113   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1359114   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1359115   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1359116   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1359117   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1359118   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1359119   +END;
MPRINT(EM_DIAGRAM):   END;
1359120   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1359121   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1359122   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1359123   +drop
1359124   +H11
1359125   +H12
1359126   +H13
1359127   +H14
1359128   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1359129   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1359130   +* Renaming variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural26;
1359131   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359132   +* Renaming Posterior variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural26;
1359133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359134   +drop Neural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar1;
1359135   +Neural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar1 = P_DepVar1;
1359136   +drop Neural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar0;
1359137   +Neural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar0 = P_DepVar0;
1359138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359139   +* Renaming _WARN_ variable for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural26;
1359140   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359141   +length Neural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural26_WARN_ $4;
1359142   +drop Neural26_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural26_WARN_;
1359143   +Neural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural26_WARN_ = _WARN_;
1359144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359145   +* Ensmbl4: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 5 of 10;
1359146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359148   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1359149   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1359150   +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
1359151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359152   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1359153   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1359154   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1359155   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1359156   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1359157   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1359158   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1359159   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1359160   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1359161   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1359162   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1359163   +LENGTH _WARN_ $4
1359164   +      F_DepVar  $ 12
1359165   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1359166   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1359167   +
1359168   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1359169   +
1359170   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1359171   +
1359172   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1359173   +
1359174   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1359175   +
1359176   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1359177   +
1359178   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1359179   +
1359180   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1359181   +
1359182   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1359183   +
1359184   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1359185   +
1359186   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1359187   +
1359188   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1359189   +
1359190   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1359191   +
1359192   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1359193   +
1359194   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1359195   +
1359196   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1359197   +
1359198   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1359199   +
1359200   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1359201   +
1359202   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1359203   +
1359204   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1359205   +
1359206   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1359207   +
1359208   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1359209   +
1359210   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1359211   +
1359212   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1359213   +
1359214   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1359215   +
1359216   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1359217   +
1359218   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1359219   +
1359220   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1359221   +
1359222   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1359223   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1359224   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1359225   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1359226   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1359227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1359228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359229   +end;
MPRINT(EM_DIAGRAM):   end;
1359230   +else do;
MPRINT(EM_DIAGRAM):   else do;
1359231   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1359232   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1359233   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1359234   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1359235   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1359236   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1359237   +   end;
MPRINT(EM_DIAGRAM):   end;
1359238   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1359239   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1359240   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1359241   +   end;
MPRINT(EM_DIAGRAM):   end;
1359242   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1359243   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1359244   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1359245   +   end;
MPRINT(EM_DIAGRAM):   end;
1359246   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1359247   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1359248   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1359249   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1359250   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359251   +   end;
MPRINT(EM_DIAGRAM):   end;
1359252   +end;
MPRINT(EM_DIAGRAM):   end;
1359253   +
1359254   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359255   +*** Checking missing input Interval
1359256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1359257   +
1359258   +IF NMISS(
1359259   +   AcceptedCmpTotal ,
1359260   +   Frq ,
1359261   +   Income ,
1359262   +   Mnt ,
1359263   +   MntFruits ,
1359264   +   MntGoldProds ,
1359265   +   MntMeatProducts ,
1359266   +   MntSweetProducts ,
1359267   +   NumCatalogPurchases ,
1359268   +   NumWebPurchases ,
1359269   +   RFMstat ,
1359270   +   RMntFrq ,
1359271   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1359272   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1359273   +
1359274   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359275   +END;
MPRINT(EM_DIAGRAM):   END;
1359276   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359277   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1359278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359279   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359280   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1359281   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1359282   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1359283   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1359284   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1359285   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1359286   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1359287   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1359288   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1359289   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1359290   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1359291   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1359292   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1359293   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1359294   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1359295   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1359296   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1359297   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1359298   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1359299   +END;
MPRINT(EM_DIAGRAM):   END;
1359300   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359301   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1359302   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1359303   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1359304   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1359305   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1359306   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1359307   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1359308   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1359309   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1359310   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1359311   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1359312   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1359313   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1359314   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1359315   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1359316   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1359317   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1359318   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1359319   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1359320   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1359321   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1359322   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1359323   +   ELSE S_NumCatalogPurchases
1359324   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1359325   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1359326   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1359327   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1359328   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1359329   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1359330   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1359331   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1359332   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1359333   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1359334   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1359335   +END;
MPRINT(EM_DIAGRAM):   END;
1359336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359337   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1359338   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359340   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1359341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359342   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359343   +   H11  =     -0.0913777931029 * S_AcceptedCmpTotal  +     0.60888959215918 *
1359344   +        S_Frq  +    -0.24839207108705 * S_Income  +     0.12904699470351 *
1359345   +        S_Mnt  +     0.54811037634684 * S_MntFruits  +    -0.08131311507182 *
1359346   +        S_MntGoldProds  +    -1.97616589442941 * S_MntMeatProducts
1359347   +          +     0.82261116064356 * S_MntSweetProducts
1359348   +          +    -1.55909661993581 * S_NumCatalogPurchases
1359349   +          +    -0.16340954706378 * S_NumWebPurchases
1359350   +          +    -1.23424537997161 * S_RFMstat  +    -0.80043433144556 *
1359351   +        S_RMntFrq  +     0.30674447000925 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.0913777931029 * S_AcceptedCmpTotal + 0.60888959215918 * S_Frq +
-0.24839207108705 * S_Income + 0.12904699470351 * S_Mnt + 0.54811037634684 * S_MntFruits +
-0.08131311507182 * S_MntGoldProds + -1.97616589442941 * S_MntMeatProducts + 0.82261116064356
* S_MntSweetProducts + -1.55909661993581 * S_NumCatalogPurchases + -0.16340954706378 *
S_NumWebPurchases + -1.23424537997161 * S_RFMstat + -0.80043433144556 * S_RMntFrq +
0.30674447000925 * S_Recency ;
1359352   +   H12  =     0.66910867066957 * S_AcceptedCmpTotal  +    -0.81073730531351 *
1359353   +        S_Frq  +    -0.92904249004165 * S_Income  +    -0.71459542981691 *
1359354   +        S_Mnt  +    -0.40393540462056 * S_MntFruits  +    -0.20281878016562 *
1359355   +        S_MntGoldProds  +     0.17444715052802 * S_MntMeatProducts
1359356   +          +     0.16618230229073 * S_MntSweetProducts
1359357   +          +     0.80060397308165 * S_NumCatalogPurchases
1359358   +          +     0.55840526773277 * S_NumWebPurchases
1359359   +          +    -0.09080307227601 * S_RFMstat  +     0.05982566462633 *
1359360   +        S_RMntFrq  +    -0.42099196648583 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.66910867066957 * S_AcceptedCmpTotal + -0.81073730531351 * S_Frq
+ -0.92904249004165 * S_Income + -0.71459542981691 * S_Mnt + -0.40393540462056 * S_MntFruits +
-0.20281878016562 * S_MntGoldProds + 0.17444715052802 * S_MntMeatProducts + 0.16618230229073 *
S_MntSweetProducts + 0.80060397308165 * S_NumCatalogPurchases + 0.55840526773277 *
S_NumWebPurchases + -0.09080307227601 * S_RFMstat + 0.05982566462633 * S_RMntFrq +
-0.42099196648583 * S_Recency ;
1359361   +   H13  =    -0.15105936730245 * S_AcceptedCmpTotal  +     1.16357039711749 *
1359362   +        S_Frq  +     0.22437164680037 * S_Income  +     1.43365592130923 *
1359363   +        S_Mnt  +    -0.14312453132189 * S_MntFruits  +    -0.31473112363001 *
1359364   +        S_MntGoldProds  +    -2.13920511789248 * S_MntMeatProducts
1359365   +          +    -0.17184538549757 * S_MntSweetProducts
1359366   +          +    -0.69381764338971 * S_NumCatalogPurchases
1359367   +          +    -1.00049208220128 * S_NumWebPurchases
1359368   +          +    -0.12191208845807 * S_RFMstat  +     1.62722348145663 *
1359369   +        S_RMntFrq  +     0.22384852404779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.15105936730245 * S_AcceptedCmpTotal + 1.16357039711749 * S_Frq
+ 0.22437164680037 * S_Income + 1.43365592130923 * S_Mnt + -0.14312453132189 * S_MntFruits +
-0.31473112363001 * S_MntGoldProds + -2.13920511789248 * S_MntMeatProducts + -0.17184538549757
* S_MntSweetProducts + -0.69381764338971 * S_NumCatalogPurchases + -1.00049208220128 *
S_NumWebPurchases + -0.12191208845807 * S_RFMstat + 1.62722348145663 * S_RMntFrq +
0.22384852404779 * S_Recency ;
1359370   +   H14  =    -0.30303374230593 * S_AcceptedCmpTotal  +    -0.62477404644887 *
1359371   +        S_Frq  +    -0.43520735188047 * S_Income  +     0.05599198595582 *
1359372   +        S_Mnt  +     0.00600099391846 * S_MntFruits  +    -0.09476560363866 *
1359373   +        S_MntGoldProds  +    -0.00009188415985 * S_MntMeatProducts
1359374   +          +     0.23752183521653 * S_MntSweetProducts
1359375   +          +    -0.28855285082926 * S_NumCatalogPurchases
1359376   +          +     0.22915352115856 * S_NumWebPurchases
1359377   +          +    -0.11884330592736 * S_RFMstat  +    -0.64276224884242 *
1359378   +        S_RMntFrq  +     0.92099032026404 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.30303374230593 * S_AcceptedCmpTotal + -0.62477404644887 * S_Frq
+ -0.43520735188047 * S_Income + 0.05599198595582 * S_Mnt + 0.00600099391846 * S_MntFruits +
-0.09476560363866 * S_MntGoldProds + -0.00009188415985 * S_MntMeatProducts + 0.23752183521653
* S_MntSweetProducts + -0.28855285082926 * S_NumCatalogPurchases + 0.22915352115856 *
S_NumWebPurchases + -0.11884330592736 * S_RFMstat + -0.64276224884242 * S_RMntFrq +
0.92099032026404 * S_Recency ;
1359379   +   H15  =     0.69494967673266 * S_AcceptedCmpTotal  +    -1.38070782248656 *
1359380   +        S_Frq  +    -0.32839057322808 * S_Income  +    -0.08175715513223 *
1359381   +        S_Mnt  +    -0.20002754133592 * S_MntFruits  +    -0.11045646973193 *
1359382   +        S_MntGoldProds  +     -0.0204672560747 * S_MntMeatProducts
1359383   +          +     0.02112120768705 * S_MntSweetProducts
1359384   +          +     0.56037303009349 * S_NumCatalogPurchases
1359385   +          +     0.16645734799944 * S_NumWebPurchases
1359386   +          +    -0.08683405137098 * S_RFMstat  +     0.67174291855061 *
1359387   +        S_RMntFrq  +    -0.73931649005757 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.69494967673266 * S_AcceptedCmpTotal + -1.38070782248656 * S_Frq
+ -0.32839057322808 * S_Income + -0.08175715513223 * S_Mnt + -0.20002754133592 * S_MntFruits +
-0.11045646973193 * S_MntGoldProds + -0.0204672560747 * S_MntMeatProducts + 0.02112120768705 *
S_MntSweetProducts + 0.56037303009349 * S_NumCatalogPurchases + 0.16645734799944 *
S_NumWebPurchases + -0.08683405137098 * S_RFMstat + 0.67174291855061 * S_RMntFrq +
-0.73931649005757 * S_Recency ;
1359388   +   H11  = H11  +    -0.06672320657697 * G_Marital_Status0
1359389   +          +     0.26608073179469 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06672320657697 * G_Marital_Status0 + 0.26608073179469 *
G_Marital_Status1 ;
1359390   +   H12  = H12  +    -0.50978529257766 * G_Marital_Status0
1359391   +          +    -0.79456480121636 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.50978529257766 * G_Marital_Status0 + -0.79456480121636 *
G_Marital_Status1 ;
1359392   +   H13  = H13  +     0.10010493470347 * G_Marital_Status0
1359393   +          +    -0.36513536279898 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.10010493470347 * G_Marital_Status0 + -0.36513536279898 *
G_Marital_Status1 ;
1359394   +   H14  = H14  +    -0.69765939438555 * G_Marital_Status0
1359395   +          +    -0.11679147660596 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.69765939438555 * G_Marital_Status0 + -0.11679147660596 *
G_Marital_Status1 ;
1359396   +   H15  = H15  +     0.53791694284218 * G_Marital_Status0
1359397   +          +      0.4394922352118 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53791694284218 * G_Marital_Status0 + 0.4394922352118 *
G_Marital_Status1 ;
1359398   +   H11  =    -2.24311986759404 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24311986759404 + H11 ;
1359399   +   H12  =    -0.72214357959265 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.72214357959265 + H12 ;
1359400   +   H13  =     0.67332529871332 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.67332529871332 + H13 ;
1359401   +   H14  =      3.2917179565774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.2917179565774 + H14 ;
1359402   +   H15  =     0.60464077032534 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.60464077032534 + H15 ;
1359403   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1359404   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1359405   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1359406   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1359407   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1359408   +END;
MPRINT(EM_DIAGRAM):   END;
1359409   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359410   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1359411   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1359412   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1359413   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1359414   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1359415   +END;
MPRINT(EM_DIAGRAM):   END;
1359416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359417   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1359418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359419   +
1359420   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1359421   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1359422   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1359423   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1359424   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1359425   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1359426   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1359427   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1359428   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1359429   +end;
MPRINT(EM_DIAGRAM):   end;
1359430   +else do;
MPRINT(EM_DIAGRAM):   else do;
1359431   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1359432   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1359433   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1359434   +   end;
MPRINT(EM_DIAGRAM):   end;
1359435   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1359436   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1359437   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1359438   +   end;
MPRINT(EM_DIAGRAM):   end;
1359439   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1359440   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1359441   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1359442   +   end;
MPRINT(EM_DIAGRAM):   end;
1359443   +end;
MPRINT(EM_DIAGRAM):   end;
1359444   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359445   +   P_DepVar1  =    -3.62613662430208 * H11  +     1.55068674489409 * H12
1359446   +          +    -3.01839961891379 * H13  +    -4.27170883586144 * H14
1359447   +          +     2.62887939759638 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.62613662430208 * H11 + 1.55068674489409 * H12 +
-3.01839961891379 * H13 + -4.27170883586144 * H14 + 2.62887939759638 * H15 ;
1359448   +   P_DepVar1  =    -1.19158347943696 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.19158347943696 + P_DepVar1 ;
1359449   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1359450   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1359451   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1359452   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1359453   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1359454   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1359455   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1359456   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1359457   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1359458   +END;
MPRINT(EM_DIAGRAM):   END;
1359459   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359460   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1359461   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1359462   +END;
MPRINT(EM_DIAGRAM):   END;
1359463   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1359464   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1359465   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1359466   +END;
MPRINT(EM_DIAGRAM):   END;
1359467   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1359468   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1359469   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1359470   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1359471   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1359472   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1359473   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1359474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359475   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1359476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359477   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1359478   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1359479   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1359480   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1359481   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1359482   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1359483   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1359484   +END;
MPRINT(EM_DIAGRAM):   END;
1359485   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1359486   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1359487   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1359488   +drop
1359489   +H11
1359490   +H12
1359491   +H13
1359492   +H14
1359493   +H15
1359494   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1359495   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1359496   +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
1359497   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359498   +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
1359499   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359500   +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
1359501   +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
1359502   +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
1359503   +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
1359504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359505   +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
1359506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359507   +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
1359508   +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
1359509   +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
1359510   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359511   +* Ensmbl4: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 6 of 10;
1359512   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359514   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1359515   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1359516   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
1359517   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359518   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1359519   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1359520   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1359521   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1359522   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1359523   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1359524   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1359525   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1359526   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1359527   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1359528   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1359529   +LENGTH _WARN_ $4
1359530   +      F_DepVar  $ 12
1359531   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1359532   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1359533   +
1359534   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1359535   +
1359536   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1359537   +
1359538   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1359539   +
1359540   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1359541   +
1359542   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1359543   +
1359544   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1359545   +
1359546   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1359547   +
1359548   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1359549   +
1359550   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1359551   +
1359552   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1359553   +
1359554   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1359555   +
1359556   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1359557   +
1359558   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1359559   +
1359560   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1359561   +
1359562   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1359563   +
1359564   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1359565   +
1359566   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1359567   +
1359568   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1359569   +
1359570   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1359571   +
1359572   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1359573   +
1359574   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1359575   +
1359576   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1359577   +
1359578   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1359579   +
1359580   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1359581   +
1359582   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1359583   +
1359584   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1359585   +
1359586   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1359587   +
1359588   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1359589   +
1359590   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1359591   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1359592   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1359593   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1359594   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1359595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1359596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359597   +end;
MPRINT(EM_DIAGRAM):   end;
1359598   +else do;
MPRINT(EM_DIAGRAM):   else do;
1359599   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1359600   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1359601   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1359602   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1359603   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1359604   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1359605   +   end;
MPRINT(EM_DIAGRAM):   end;
1359606   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1359607   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1359608   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1359609   +   end;
MPRINT(EM_DIAGRAM):   end;
1359610   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1359611   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1359612   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1359613   +   end;
MPRINT(EM_DIAGRAM):   end;
1359614   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1359615   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1359616   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1359617   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1359618   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359619   +   end;
MPRINT(EM_DIAGRAM):   end;
1359620   +end;
MPRINT(EM_DIAGRAM):   end;
1359621   +
1359622   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359623   +*** Checking missing input Interval
1359624   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1359625   +
1359626   +IF NMISS(
1359627   +   AcceptedCmpTotal ,
1359628   +   Frq ,
1359629   +   Income ,
1359630   +   Mnt ,
1359631   +   MntFruits ,
1359632   +   MntGoldProds ,
1359633   +   MntMeatProducts ,
1359634   +   MntSweetProducts ,
1359635   +   NumCatalogPurchases ,
1359636   +   NumWebPurchases ,
1359637   +   RFMstat ,
1359638   +   RMntFrq ,
1359639   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1359640   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1359641   +
1359642   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359643   +END;
MPRINT(EM_DIAGRAM):   END;
1359644   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359645   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1359646   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359647   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359648   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1359649   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1359650   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1359651   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1359652   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1359653   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1359654   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1359655   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1359656   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1359657   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1359658   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1359659   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1359660   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1359661   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1359662   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1359663   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1359664   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1359665   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1359666   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1359667   +END;
MPRINT(EM_DIAGRAM):   END;
1359668   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359669   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1359670   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1359671   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1359672   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1359673   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1359674   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1359675   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1359676   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1359677   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1359678   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1359679   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1359680   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1359681   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1359682   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1359683   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1359684   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1359685   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1359686   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1359687   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1359688   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1359689   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1359690   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1359691   +   ELSE S_NumCatalogPurchases
1359692   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1359693   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1359694   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1359695   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1359696   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1359697   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1359698   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1359699   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1359700   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1359701   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1359702   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1359703   +END;
MPRINT(EM_DIAGRAM):   END;
1359704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359705   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1359706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359708   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1359709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359710   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359711   +   H11  =     0.82631693872377 * S_AcceptedCmpTotal  +    -0.72798667283699 *
1359712   +        S_Frq  +     0.15911649036122 * S_Income  +    -0.60456350734571 *
1359713   +        S_Mnt  +    -0.74377544096034 * S_MntFruits  +    -0.12263914971644 *
1359714   +        S_MntGoldProds  +     0.17677796203072 * S_MntMeatProducts
1359715   +          +    -0.50748691839629 * S_MntSweetProducts
1359716   +          +     0.64296516693494 * S_NumCatalogPurchases
1359717   +          +     1.28350004565407 * S_NumWebPurchases
1359718   +          +     0.21030868312225 * S_RFMstat  +    -0.39695828920844 *
1359719   +        S_RMntFrq  +    -0.89895080438896 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.82631693872377 * S_AcceptedCmpTotal + -0.72798667283699 * S_Frq
+ 0.15911649036122 * S_Income + -0.60456350734571 * S_Mnt + -0.74377544096034 * S_MntFruits +
-0.12263914971644 * S_MntGoldProds + 0.17677796203072 * S_MntMeatProducts + -0.50748691839629
* S_MntSweetProducts + 0.64296516693494 * S_NumCatalogPurchases + 1.28350004565407 *
S_NumWebPurchases + 0.21030868312225 * S_RFMstat + -0.39695828920844 * S_RMntFrq +
-0.89895080438896 * S_Recency ;
1359720   +   H12  =     0.11667862669372 * S_AcceptedCmpTotal  +    -1.01106011934145 *
1359721   +        S_Frq  +    -0.17716076384549 * S_Income  +    -0.24293226300477 *
1359722   +        S_Mnt  +     -0.0787175302374 * S_MntFruits  +     0.00532047873906 *
1359723   +        S_MntGoldProds  +     1.29466535738179 * S_MntMeatProducts
1359724   +          +     0.17384010941361 * S_MntSweetProducts
1359725   +          +     0.92948439877935 * S_NumCatalogPurchases
1359726   +          +     0.22516927332959 * S_NumWebPurchases
1359727   +          +     0.05028067999269 * S_RFMstat  +     0.78999743446302 *
1359728   +        S_RMntFrq  +    -0.20939117765596 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.11667862669372 * S_AcceptedCmpTotal + -1.01106011934145 * S_Frq
+ -0.17716076384549 * S_Income + -0.24293226300477 * S_Mnt + -0.0787175302374 * S_MntFruits +
0.00532047873906 * S_MntGoldProds + 1.29466535738179 * S_MntMeatProducts + 0.17384010941361 *
S_MntSweetProducts + 0.92948439877935 * S_NumCatalogPurchases + 0.22516927332959 *
S_NumWebPurchases + 0.05028067999269 * S_RFMstat + 0.78999743446302 * S_RMntFrq +
-0.20939117765596 * S_Recency ;
1359729   +   H13  =     0.04357769443186 * S_AcceptedCmpTotal  +     0.15406703269953 *
1359730   +        S_Frq  +     0.30195133876726 * S_Income  +     0.28819360890276 *
1359731   +        S_Mnt  +     0.09892781576641 * S_MntFruits  +     0.49225212949739 *
1359732   +        S_MntGoldProds  +     0.29770764897396 * S_MntMeatProducts
1359733   +          +     -0.2000873376449 * S_MntSweetProducts
1359734   +          +     0.12566784354514 * S_NumCatalogPurchases
1359735   +          +     0.02104112723179 * S_NumWebPurchases
1359736   +          +    -0.43415514019088 * S_RFMstat  +    -0.17022294749993 *
1359737   +        S_RMntFrq  +     0.30357171575981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.04357769443186 * S_AcceptedCmpTotal + 0.15406703269953 * S_Frq +
0.30195133876726 * S_Income + 0.28819360890276 * S_Mnt + 0.09892781576641 * S_MntFruits +
0.49225212949739 * S_MntGoldProds + 0.29770764897396 * S_MntMeatProducts + -0.2000873376449 *
S_MntSweetProducts + 0.12566784354514 * S_NumCatalogPurchases + 0.02104112723179 *
S_NumWebPurchases + -0.43415514019088 * S_RFMstat + -0.17022294749993 * S_RMntFrq +
0.30357171575981 * S_Recency ;
1359738   +   H14  =     0.89017550554492 * S_AcceptedCmpTotal  +    -1.24866436391906 *
1359739   +        S_Frq  +    -0.83458596455814 * S_Income  +    -0.66942952173326 *
1359740   +        S_Mnt  +    -0.22543485387319 * S_MntFruits  +    -0.10688181972933 *
1359741   +        S_MntGoldProds  +     0.85050982143614 * S_MntMeatProducts
1359742   +          +     0.12117759215087 * S_MntSweetProducts
1359743   +          +     0.80203773582494 * S_NumCatalogPurchases
1359744   +          +     0.17374160185958 * S_NumWebPurchases
1359745   +          +    -0.12855081884938 * S_RFMstat  +     0.45921570261849 *
1359746   +        S_RMntFrq  +    -1.09092321008268 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.89017550554492 * S_AcceptedCmpTotal + -1.24866436391906 * S_Frq
+ -0.83458596455814 * S_Income + -0.66942952173326 * S_Mnt + -0.22543485387319 * S_MntFruits +
-0.10688181972933 * S_MntGoldProds + 0.85050982143614 * S_MntMeatProducts + 0.12117759215087 *
S_MntSweetProducts + 0.80203773582494 * S_NumCatalogPurchases + 0.17374160185958 *
S_NumWebPurchases + -0.12855081884938 * S_RFMstat + 0.45921570261849 * S_RMntFrq +
-1.09092321008268 * S_Recency ;
1359747   +   H15  =    -0.68386094226468 * S_AcceptedCmpTotal  +    -0.44368664779237 *
1359748   +        S_Frq  +    -0.63118593216016 * S_Income  +     -0.8549673235883 *
1359749   +        S_Mnt  +     -0.4174049500068 * S_MntFruits  +    -0.02221537411568 *
1359750   +        S_MntGoldProds  +      0.0634004340553 * S_MntMeatProducts
1359751   +          +      0.2989820991785 * S_MntSweetProducts
1359752   +          +     0.04398783976739 * S_NumCatalogPurchases
1359753   +          +     0.40368640676572 * S_NumWebPurchases
1359754   +          +    -0.50987577368598 * S_RFMstat  +    -0.24616064467414 *
1359755   +        S_RMntFrq  +    -0.01932947962302 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.68386094226468 * S_AcceptedCmpTotal + -0.44368664779237 * S_Frq
+ -0.63118593216016 * S_Income + -0.8549673235883 * S_Mnt + -0.4174049500068 * S_MntFruits +
-0.02221537411568 * S_MntGoldProds + 0.0634004340553 * S_MntMeatProducts + 0.2989820991785 *
S_MntSweetProducts + 0.04398783976739 * S_NumCatalogPurchases + 0.40368640676572 *
S_NumWebPurchases + -0.50987577368598 * S_RFMstat + -0.24616064467414 * S_RMntFrq +
-0.01932947962302 * S_Recency ;
1359756   +   H16  =    -0.69633356297868 * S_AcceptedCmpTotal  +     0.25580106272723 *
1359757   +        S_Frq  +    -0.15941056497212 * S_Income  +     1.01091236070049 *
1359758   +        S_Mnt  +    -0.16421220259024 * S_MntFruits  +    -0.28158219367628 *
1359759   +        S_MntGoldProds  +    -0.80473865500071 * S_MntMeatProducts
1359760   +          +     0.10950268819222 * S_MntSweetProducts
1359761   +          +    -0.59025524598908 * S_NumCatalogPurchases
1359762   +          +    -0.02069421817896 * S_NumWebPurchases
1359763   +          +     -0.3615429826151 * S_RFMstat  +    -0.41611769964424 *
1359764   +        S_RMntFrq  +     0.96940490611968 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.69633356297868 * S_AcceptedCmpTotal + 0.25580106272723 * S_Frq
+ -0.15941056497212 * S_Income + 1.01091236070049 * S_Mnt + -0.16421220259024 * S_MntFruits +
-0.28158219367628 * S_MntGoldProds + -0.80473865500071 * S_MntMeatProducts + 0.10950268819222
* S_MntSweetProducts + -0.59025524598908 * S_NumCatalogPurchases + -0.02069421817896 *
S_NumWebPurchases + -0.3615429826151 * S_RFMstat + -0.41611769964424 * S_RMntFrq +
0.96940490611968 * S_Recency ;
1359765   +   H11  = H11  +        0.45545922927 * G_Marital_Status0
1359766   +          +     0.12818067118838 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.45545922927 * G_Marital_Status0 + 0.12818067118838 *
G_Marital_Status1 ;
1359767   +   H12  = H12  +    -0.20371081343188 * G_Marital_Status0
1359768   +          +      0.0869800653918 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20371081343188 * G_Marital_Status0 + 0.0869800653918 *
G_Marital_Status1 ;
1359769   +   H13  = H13  +    -0.33845151454936 * G_Marital_Status0
1359770   +          +    -0.43733288680739 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.33845151454936 * G_Marital_Status0 + -0.43733288680739 *
G_Marital_Status1 ;
1359771   +   H14  = H14  +     0.11759980770855 * G_Marital_Status0
1359772   +          +    -0.01680808105992 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11759980770855 * G_Marital_Status0 + -0.01680808105992 *
G_Marital_Status1 ;
1359773   +   H15  = H15  +    -0.20605143700963 * G_Marital_Status0
1359774   +          +     0.04987739539035 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.20605143700963 * G_Marital_Status0 + 0.04987739539035 *
G_Marital_Status1 ;
1359775   +   H16  = H16  +    -0.99478088512585 * G_Marital_Status0
1359776   +          +    -0.35983290751115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.99478088512585 * G_Marital_Status0 + -0.35983290751115 *
G_Marital_Status1 ;
1359777   +   H11  =    -0.72044866217862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72044866217862 + H11 ;
1359778   +   H12  =     0.73797915336977 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73797915336977 + H12 ;
1359779   +   H13  =     0.82989235994379 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.82989235994379 + H13 ;
1359780   +   H14  =    -0.48103007102008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.48103007102008 + H14 ;
1359781   +   H15  =     -0.4352791778041 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4352791778041 + H15 ;
1359782   +   H16  =      2.7027355184778 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.7027355184778 + H16 ;
1359783   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1359784   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1359785   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1359786   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1359787   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1359788   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1359789   +END;
MPRINT(EM_DIAGRAM):   END;
1359790   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359791   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1359792   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1359793   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1359794   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1359795   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1359796   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1359797   +END;
MPRINT(EM_DIAGRAM):   END;
1359798   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359799   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1359800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359801   +
1359802   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1359803   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1359804   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1359805   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1359806   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1359807   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1359808   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1359809   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1359810   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1359811   +end;
MPRINT(EM_DIAGRAM):   end;
1359812   +else do;
MPRINT(EM_DIAGRAM):   else do;
1359813   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1359814   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1359815   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1359816   +   end;
MPRINT(EM_DIAGRAM):   end;
1359817   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1359818   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1359819   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1359820   +   end;
MPRINT(EM_DIAGRAM):   end;
1359821   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1359822   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1359823   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1359824   +   end;
MPRINT(EM_DIAGRAM):   end;
1359825   +end;
MPRINT(EM_DIAGRAM):   end;
1359826   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1359827   +   P_DepVar1  =     1.53646139060035 * H11  +     1.98227889313385 * H12
1359828   +          +     0.69366657666187 * H13  +      1.4458071195477 * H14
1359829   +          +     0.81229467076169 * H15  +     -2.4762533950508 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.53646139060035 * H11 + 1.98227889313385 * H12 +
0.69366657666187 * H13 + 1.4458071195477 * H14 + 0.81229467076169 * H15 + -2.4762533950508 *
H16 ;
1359830   +   P_DepVar1  =    -0.95559108382775 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.95559108382775 + P_DepVar1 ;
1359831   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1359832   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1359833   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1359834   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1359835   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1359836   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1359837   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1359838   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1359839   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1359840   +END;
MPRINT(EM_DIAGRAM):   END;
1359841   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1359842   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1359843   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1359844   +END;
MPRINT(EM_DIAGRAM):   END;
1359845   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1359846   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1359847   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1359848   +END;
MPRINT(EM_DIAGRAM):   END;
1359849   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1359850   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1359851   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1359852   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1359853   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1359854   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1359855   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1359856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359857   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1359858   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1359859   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1359860   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1359861   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1359862   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1359863   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1359864   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1359865   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1359866   +END;
MPRINT(EM_DIAGRAM):   END;
1359867   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1359868   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1359869   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1359870   +drop
1359871   +H11
1359872   +H12
1359873   +H13
1359874   +H14
1359875   +H15
1359876   +H16
1359877   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1359878   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1359879   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
1359880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359881   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
1359882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359883   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
1359884   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
1359885   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
1359886   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
1359887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359888   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
1359889   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359890   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
1359891   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
1359892   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
1359893   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359894   +* Ensmbl4: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 7 of 10;
1359895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359896   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359897   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1359898   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1359899   +* NODE: Neural8;
MPRINT(EM_DIAGRAM):   * NODE: Neural8;
1359900   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1359901   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1359902   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1359903   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1359904   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1359905   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1359906   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1359907   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1359908   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1359909   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1359910   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1359911   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1359912   +LENGTH _WARN_ $4
1359913   +      F_DepVar  $ 12
1359914   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1359915   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1359916   +
1359917   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1359918   +
1359919   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1359920   +
1359921   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1359922   +
1359923   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1359924   +
1359925   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1359926   +
1359927   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1359928   +
1359929   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1359930   +
1359931   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1359932   +
1359933   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1359934   +
1359935   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1359936   +
1359937   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1359938   +
1359939   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1359940   +
1359941   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1359942   +
1359943   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1359944   +
1359945   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1359946   +
1359947   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1359948   +
1359949   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1359950   +
1359951   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1359952   +
1359953   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1359954   +
1359955   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1359956   +
1359957   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1359958   +
1359959   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1359960   +
1359961   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1359962   +
1359963   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1359964   +
1359965   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1359966   +
1359967   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1359968   +
1359969   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1359970   +
1359971   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1359972   +
1359973   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1359974   +
1359975   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1359976   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1359977   +if missing( G_Marital_Status ) then do;
The SAS System
 
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1359978   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1359979   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1359980   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1359981   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1359982   +end;
MPRINT(EM_DIAGRAM):   end;
1359983   +else do;
MPRINT(EM_DIAGRAM):   else do;
1359984   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1359985   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1359986   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1359987   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1359988   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1359989   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1359990   +   end;
MPRINT(EM_DIAGRAM):   end;
1359991   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1359992   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1359993   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1359994   +   end;
MPRINT(EM_DIAGRAM):   end;
1359995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1359996   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1359997   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1359998   +   end;
MPRINT(EM_DIAGRAM):   end;
1359999   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1360000   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1360001   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1360002   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1360003   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360004   +   end;
MPRINT(EM_DIAGRAM):   end;
1360005   +end;
MPRINT(EM_DIAGRAM):   end;
1360006   +
1360007   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360008   +*** Checking missing input Interval
1360009   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1360010   +
1360011   +IF NMISS(
1360012   +   AcceptedCmpTotal ,
1360013   +   Frq ,
1360014   +   Income ,
1360015   +   Mnt ,
1360016   +   MntFruits ,
1360017   +   MntGoldProds ,
1360018   +   MntMeatProducts ,
1360019   +   MntSweetProducts ,
1360020   +   NumCatalogPurchases ,
1360021   +   NumWebPurchases ,
1360022   +   RFMstat ,
1360023   +   RMntFrq ,
1360024   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1360025   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1360026   +
1360027   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360028   +END;
MPRINT(EM_DIAGRAM):   END;
1360029   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360030   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1360031   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360032   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1360033   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1360034   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1360035   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1360036   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1360037   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1360038   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1360039   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1360040   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1360041   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1360042   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1360043   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1360044   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1360045   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1360046   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1360047   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1360048   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1360049   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1360050   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1360051   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1360052   +END;
MPRINT(EM_DIAGRAM):   END;
1360053   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360054   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1360055   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1360056   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1360057   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1360058   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1360059   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1360060   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1360061   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1360062   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1360063   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1360064   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1360065   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1360066   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1360067   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1360068   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1360069   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1360070   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1360071   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1360072   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1360073   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1360074   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1360075   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1360076   +   ELSE S_NumCatalogPurchases
1360077   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1360078   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1360079   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1360080   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1360081   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1360082   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1360083   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1360084   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1360085   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1360086   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1360087   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1360088   +END;
MPRINT(EM_DIAGRAM):   END;
1360089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360090   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1360091   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360092   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360093   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1360094   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360095   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1360096   +   H11  =     0.00179298802892 * S_AcceptedCmpTotal  +     0.01784009275608 *
1360097   +        S_Frq  +     0.69409617936033 * S_Income  +    -0.28641816886809 *
1360098   +        S_Mnt  +     0.21745721720131 * S_MntFruits  +    -0.38924339437831 *
1360099   +        S_MntGoldProds  +     0.48302006424722 * S_MntMeatProducts
1360100   +          +     0.32217287817742 * S_MntSweetProducts
1360101   +          +     0.37317765763795 * S_NumCatalogPurchases
1360102   +          +     0.31712152035565 * S_NumWebPurchases
1360103   +          +    -0.00101711956377 * S_RFMstat  +    -0.50814709993968 *
1360104   +        S_RMntFrq  +     -0.2674878177058 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.00179298802892 * S_AcceptedCmpTotal + 0.01784009275608 * S_Frq +
0.69409617936033 * S_Income + -0.28641816886809 * S_Mnt + 0.21745721720131 * S_MntFruits +
-0.38924339437831 * S_MntGoldProds + 0.48302006424722 * S_MntMeatProducts + 0.32217287817742 *
S_MntSweetProducts + 0.37317765763795 * S_NumCatalogPurchases + 0.31712152035565 *
S_NumWebPurchases + -0.00101711956377 * S_RFMstat + -0.50814709993968 * S_RMntFrq +
-0.2674878177058 * S_Recency ;
1360105   +   H12  =    -0.13522102699695 * S_AcceptedCmpTotal  +     0.62468738576113 *
1360106   +        S_Frq  +     0.33525631913577 * S_Income  +     0.49596519260867 *
1360107   +        S_Mnt  +    -0.07840703709606 * S_MntFruits  +    -0.13407863606593 *
1360108   +        S_MntGoldProds  +     0.07892036440987 * S_MntMeatProducts
1360109   +          +    -0.19345300638771 * S_MntSweetProducts
1360110   +          +     0.37926806634405 * S_NumCatalogPurchases
1360111   +          +     0.17926711405358 * S_NumWebPurchases
1360112   +          +    -0.56247478537915 * S_RFMstat  +    -0.83222377723575 *
1360113   +        S_RMntFrq  +     0.06152905340066 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.13522102699695 * S_AcceptedCmpTotal + 0.62468738576113 * S_Frq
+ 0.33525631913577 * S_Income + 0.49596519260867 * S_Mnt + -0.07840703709606 * S_MntFruits +
-0.13407863606593 * S_MntGoldProds + 0.07892036440987 * S_MntMeatProducts + -0.19345300638771
* S_MntSweetProducts + 0.37926806634405 * S_NumCatalogPurchases + 0.17926711405358 *
S_NumWebPurchases + -0.56247478537915 * S_RFMstat + -0.83222377723575 * S_RMntFrq +
0.06152905340066 * S_Recency ;
1360114   +   H13  =     0.52085707566671 * S_AcceptedCmpTotal  +    -0.43119445779869 *
1360115   +        S_Frq  +    -0.38451776725994 * S_Income  +    -0.43893571865073 *
1360116   +        S_Mnt  +    -0.18147736658896 * S_MntFruits  +    -0.02759924916073 *
1360117   +        S_MntGoldProds  +     0.41710329802839 * S_MntMeatProducts
1360118   +          +    -0.11238728777733 * S_MntSweetProducts
1360119   +          +     0.39955878063516 * S_NumCatalogPurchases
1360120   +          +     0.37701883017309 * S_NumWebPurchases
1360121   +          +    -0.03011513977353 * S_RFMstat  +     0.05558894855861 *
1360122   +        S_RMntFrq  +    -0.53097904952065 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.52085707566671 * S_AcceptedCmpTotal + -0.43119445779869 * S_Frq
+ -0.38451776725994 * S_Income + -0.43893571865073 * S_Mnt + -0.18147736658896 * S_MntFruits +
-0.02759924916073 * S_MntGoldProds + 0.41710329802839 * S_MntMeatProducts + -0.11238728777733
* S_MntSweetProducts + 0.39955878063516 * S_NumCatalogPurchases + 0.37701883017309 *
S_NumWebPurchases + -0.03011513977353 * S_RFMstat + 0.05558894855861 * S_RMntFrq +
-0.53097904952065 * S_Recency ;
1360123   +   H14  =     0.01011198652387 * S_AcceptedCmpTotal  +     0.50914419302954 *
1360124   +        S_Frq  +     0.36935051571942 * S_Income  +    -0.14541266632981 *
1360125   +        S_Mnt  +     0.70809835135242 * S_MntFruits  +     0.17636828127553 *
1360126   +        S_MntGoldProds  +    -0.39065133922684 * S_MntMeatProducts
1360127   +          +      0.2693109494597 * S_MntSweetProducts
1360128   +          +      0.1081864929712 * S_NumCatalogPurchases
1360129   +          +     0.04463189601793 * S_NumWebPurchases
1360130   +          +     0.17598396305598 * S_RFMstat  +    -0.26428585222285 *
1360131   +        S_RMntFrq  +    -0.35066600356743 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.01011198652387 * S_AcceptedCmpTotal + 0.50914419302954 * S_Frq +
0.36935051571942 * S_Income + -0.14541266632981 * S_Mnt + 0.70809835135242 * S_MntFruits +
0.17636828127553 * S_MntGoldProds + -0.39065133922684 * S_MntMeatProducts + 0.2693109494597 *
S_MntSweetProducts + 0.1081864929712 * S_NumCatalogPurchases + 0.04463189601793 *
S_NumWebPurchases + 0.17598396305598 * S_RFMstat + -0.26428585222285 * S_RMntFrq +
-0.35066600356743 * S_Recency ;
1360132   +   H15  =     0.25974646459449 * S_AcceptedCmpTotal  +    -0.01084764302849 *
1360133   +        S_Frq  +    -0.25453296848623 * S_Income  +    -0.24485320547361 *
1360134   +        S_Mnt  +      0.3523119885561 * S_MntFruits  +    -0.23948230282173 *
1360135   +        S_MntGoldProds  +    -0.61077291955379 * S_MntMeatProducts
1360136   +          +     0.69250340520766 * S_MntSweetProducts
1360137   +          +    -0.92476508978686 * S_NumCatalogPurchases
1360138   +          +    -0.85062812213631 * S_NumWebPurchases
1360139   +          +    -0.13668170504261 * S_RFMstat  +    -0.39159958659757 *
1360140   +        S_RMntFrq  +     0.31541831647045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.25974646459449 * S_AcceptedCmpTotal + -0.01084764302849 * S_Frq
+ -0.25453296848623 * S_Income + -0.24485320547361 * S_Mnt + 0.3523119885561 * S_MntFruits +
-0.23948230282173 * S_MntGoldProds + -0.61077291955379 * S_MntMeatProducts + 0.69250340520766
* S_MntSweetProducts + -0.92476508978686 * S_NumCatalogPurchases + -0.85062812213631 *
S_NumWebPurchases + -0.13668170504261 * S_RFMstat + -0.39159958659757 * S_RMntFrq +
0.31541831647045 * S_Recency ;
1360141   +   H16  =     0.30881424897223 * S_AcceptedCmpTotal  +      0.2794364053658 *
1360142   +        S_Frq  +    -0.13255692208785 * S_Income  +      0.1084623497397 *
1360143   +        S_Mnt  +    -0.21377822064675 * S_MntFruits  +     0.66167304100171 *
1360144   +        S_MntGoldProds  +    -0.18059030828344 * S_MntMeatProducts
1360145   +          +      0.1342841887454 * S_MntSweetProducts
1360146   +          +    -0.35353451726224 * S_NumCatalogPurchases
1360147   +          +     0.19726071632213 * S_NumWebPurchases
1360148   +          +    -0.67773182477521 * S_RFMstat  +    -0.05559124023026 *
1360149   +        S_RMntFrq  +     0.29135046009186 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.30881424897223 * S_AcceptedCmpTotal + 0.2794364053658 * S_Frq +
-0.13255692208785 * S_Income + 0.1084623497397 * S_Mnt + -0.21377822064675 * S_MntFruits +
0.66167304100171 * S_MntGoldProds + -0.18059030828344 * S_MntMeatProducts + 0.1342841887454 *
S_MntSweetProducts + -0.35353451726224 * S_NumCatalogPurchases + 0.19726071632213 *
S_NumWebPurchases + -0.67773182477521 * S_RFMstat + -0.05559124023026 * S_RMntFrq +
0.29135046009186 * S_Recency ;
1360150   +   H17  =    -0.56474657283939 * S_AcceptedCmpTotal  +     0.49714469636668 *
1360151   +        S_Frq  +     0.38873911121939 * S_Income  +     0.18672296356038 *
1360152   +        S_Mnt  +    -0.12290033905766 * S_MntFruits  +    -0.55117454621073 *
1360153   +        S_MntGoldProds  +    -0.34157249684624 * S_MntMeatProducts
1360154   +          +    -0.03878223698579 * S_MntSweetProducts
1360155   +          +    -0.44318159654535 * S_NumCatalogPurchases
1360156   +          +     0.28629379958053 * S_NumWebPurchases
1360157   +          +    -0.33628587814816 * S_RFMstat  +     0.01539005969109 *
1360158   +        S_RMntFrq  +      0.4669281349511 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.56474657283939 * S_AcceptedCmpTotal + 0.49714469636668 * S_Frq
+ 0.38873911121939 * S_Income + 0.18672296356038 * S_Mnt + -0.12290033905766 * S_MntFruits +
-0.55117454621073 * S_MntGoldProds + -0.34157249684624 * S_MntMeatProducts + -0.03878223698579
* S_MntSweetProducts + -0.44318159654535 * S_NumCatalogPurchases + 0.28629379958053 *
S_NumWebPurchases + -0.33628587814816 * S_RFMstat + 0.01539005969109 * S_RMntFrq +
0.4669281349511 * S_Recency ;
1360159   +   H11  = H11  +     0.54366812821853 * G_Marital_Status0
1360160   +          +    -0.24270884269566 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.54366812821853 * G_Marital_Status0 + -0.24270884269566 *
G_Marital_Status1 ;
1360161   +   H12  = H12  +     0.12201873252315 * G_Marital_Status0
1360162   +          +      0.2708540168877 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12201873252315 * G_Marital_Status0 + 0.2708540168877 *
G_Marital_Status1 ;
1360163   +   H13  = H13  +     0.21773390953206 * G_Marital_Status0
1360164   +          +      0.1849184915243 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21773390953206 * G_Marital_Status0 + 0.1849184915243 *
G_Marital_Status1 ;
1360165   +   H14  = H14  +     0.42359989920789 * G_Marital_Status0
1360166   +          +     -0.0427682060318 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42359989920789 * G_Marital_Status0 + -0.0427682060318 *
G_Marital_Status1 ;
1360167   +   H15  = H15  +     0.39852794737212 * G_Marital_Status0
1360168   +          +      0.4834959104522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.39852794737212 * G_Marital_Status0 + 0.4834959104522 *
G_Marital_Status1 ;
1360169   +   H16  = H16  +     0.34117172602716 * G_Marital_Status0
1360170   +          +     0.01719507366738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.34117172602716 * G_Marital_Status0 + 0.01719507366738 *
G_Marital_Status1 ;
1360171   +   H17  = H17  +    -0.48271020073977 * G_Marital_Status0
1360172   +          +    -0.38643265086902 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.48271020073977 * G_Marital_Status0 + -0.38643265086902 *
G_Marital_Status1 ;
1360173   +   H11  =    -1.92887755316705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.92887755316705 + H11 ;
1360174   +   H12  =     1.10580453552439 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.10580453552439 + H12 ;
1360175   +   H13  =     -0.0396459221076 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.0396459221076 + H13 ;
1360176   +   H14  =    -0.24030684440152 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.24030684440152 + H14 ;
1360177   +   H15  =    -1.57024900687106 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.57024900687106 + H15 ;
1360178   +   H16  =    -0.33224481657704 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.33224481657704 + H16 ;
1360179   +   H17  =     1.22710614099789 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.22710614099789 + H17 ;
1360180   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1360181   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1360182   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1360183   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1360184   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1360185   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1360186   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1360187   +END;
MPRINT(EM_DIAGRAM):   END;
1360188   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360189   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1360190   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1360191   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1360192   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1360193   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1360194   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1360195   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1360196   +END;
MPRINT(EM_DIAGRAM):   END;
1360197   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360198   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1360199   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360200   +
1360201   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1360202   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1360203   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1360204   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1360205   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1360206   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1360207   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1360208   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1360209   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1360210   +end;
MPRINT(EM_DIAGRAM):   end;
1360211   +else do;
MPRINT(EM_DIAGRAM):   else do;
1360212   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1360213   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1360214   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1360215   +   end;
MPRINT(EM_DIAGRAM):   end;
1360216   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1360217   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1360218   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1360219   +   end;
MPRINT(EM_DIAGRAM):   end;
1360220   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1360221   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1360222   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1360223   +   end;
MPRINT(EM_DIAGRAM):   end;
1360224   +end;
MPRINT(EM_DIAGRAM):   end;
1360225   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1360226   +   P_DepVar1  =     1.21462455419854 * H11  +    -0.32480789724651 * H12
1360227   +          +     2.96475008226038 * H13  +     -0.7919726093423 * H14
1360228   +          +    -2.29353966226595 * H15  +     -0.7223088500433 * H16
1360229   +          +    -2.44182031584859 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.21462455419854 * H11 + -0.32480789724651 * H12 +
2.96475008226038 * H13 + -0.7919726093423 * H14 + -2.29353966226595 * H15 + -0.7223088500433 *
H16 + -2.44182031584859 * H17 ;
1360230   +   P_DepVar1  =    -1.63832895249218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.63832895249218 + P_DepVar1 ;
1360231   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1360232   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1360233   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1360234   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1360235   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1360236   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1360237   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1360238   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1360239   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1360240   +END;
MPRINT(EM_DIAGRAM):   END;
1360241   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360242   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1360243   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1360244   +END;
MPRINT(EM_DIAGRAM):   END;
1360245   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1360246   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1360247   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1360248   +END;
MPRINT(EM_DIAGRAM):   END;
1360249   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1360250   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1360251   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1360252   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1360253   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1360254   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1360255   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1360256   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360257   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1360258   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1360259   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1360260   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1360261   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360262   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1360263   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1360264   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1360265   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360266   +END;
MPRINT(EM_DIAGRAM):   END;
1360267   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1360268   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1360269   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1360270   +drop
1360271   +H11
1360272   +H12
1360273   +H13
1360274   +H14
1360275   +H15
1360276   +H16
1360277   +H17
1360278   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1360279   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1360280   +* Renaming variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural8;
1360281   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360282   +* Renaming Posterior variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural8;
1360283   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360284   +drop Neural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar1;
1360285   +Neural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar1 = P_DepVar1;
1360286   +drop Neural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar0;
1360287   +Neural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar0 = P_DepVar0;
1360288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360289   +* Renaming _WARN_ variable for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural8;
1360290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360291   +length Neural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural8_WARN_ $4;
1360292   +drop Neural8_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural8_WARN_;
1360293   +Neural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural8_WARN_ = _WARN_;
1360294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360295   +* Ensmbl4: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 8 of 10;
1360296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360297   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360298   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1360299   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1360300   +* NODE: Tree4;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
1360301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360302   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1360303   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1360304   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1360305   +
1360306   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1360307   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1360308   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1360309   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1360310   +
1360311   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1360312   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1360313   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1360314   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1360315   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1360316   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1360317   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1360318   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1360319   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1360320   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1360321   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1360322   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1360323   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1360324   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1360325   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1360326   +
1360327   +
1360328   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1360329   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1360330   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1360331   +
1360332   +
1360333   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1360334   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1360335   +
1360336   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1360337   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1360338   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1360339   +  IF  NOT MISSING(Recency ) AND
1360340   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1360341   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1360342   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1360343   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1360344   +      _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1360345   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1360346   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1360347   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1360348   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1360349   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1360350   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1360351   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360352   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360353   +      END;
MPRINT(EM_DIAGRAM):   END;
1360354   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360355   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1360356   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1360357   +      IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1360358   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1360359   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1360360   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1360361   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1360362   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1360363   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1360364   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1360365   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1360366   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360367   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360368   +        END;
MPRINT(EM_DIAGRAM):   END;
1360369   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360370   +        IF  NOT MISSING(Recency ) AND
1360371   +          Recency  <                 15.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 15.5 THEN DO;
1360372   +          _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
1360373   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1360374   +          P_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35714285714285;
1360375   +          P_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64285714285714;
1360376   +          Q_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35714285714285;
1360377   +          Q_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64285714285714;
1360378   +          V_DepVar0  =               0.4375;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4375;
1360379   +          V_DepVar1  =               0.5625;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.5625;
1360380   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360381   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360382   +          END;
MPRINT(EM_DIAGRAM):   END;
1360383   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360384   +          IF  NOT MISSING(RFMstat ) AND
1360385   +            RFMstat  <     259.685185185185 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND RFMstat < 259.685185185185 THEN DO;
1360386   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1360387   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1360388   +            P_DepVar0  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35294117647058;
1360389   +            P_DepVar1  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64705882352941;
1360390   +            Q_DepVar0  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35294117647058;
1360391   +            Q_DepVar1  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64705882352941;
1360392   +            V_DepVar0  =                0.375;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.375;
1360393   +            V_DepVar1  =                0.625;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.625;
1360394   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360395   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360396   +            END;
MPRINT(EM_DIAGRAM):   END;
1360397   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360398   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1360399   +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1360400   +            P_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.83333333333333;
1360401   +            P_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.16666666666666;
1360402   +            Q_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.83333333333333;
1360403   +            Q_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.16666666666666;
1360404   +            V_DepVar0  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.73684210526315;
1360405   +            V_DepVar1  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.26315789473684;
1360406   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360407   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360408   +            END;
MPRINT(EM_DIAGRAM):   END;
1360409   +          END;
MPRINT(EM_DIAGRAM):   END;
1360410   +        END;
MPRINT(EM_DIAGRAM):   END;
1360411   +      END;
MPRINT(EM_DIAGRAM):   END;
1360412   +    END;
MPRINT(EM_DIAGRAM):   END;
1360413   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360414   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1360415   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1360416   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1360417   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1360418   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1360419   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1360420   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1360421   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1360422   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1360423   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1360424   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360425   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360426   +      END;
MPRINT(EM_DIAGRAM):   END;
1360427   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360428   +      IF  NOT MISSING(NumCatalogPurchases ) AND
1360429   +                        10.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 10.5 <= NumCatalogPurchases
THEN DO;
1360430   +        IF  NOT MISSING(Frq ) AND
1360431   +                          25.5 <= Frq  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND 25.5 <= Frq THEN DO;
1360432   +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
1360433   +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1360434   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1360435   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1360436   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1360437   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1360438   +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
1360439   +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
1360440   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360441   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360442   +          END;
MPRINT(EM_DIAGRAM):   END;
1360443   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360444   +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
1360445   +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1360446   +          P_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1360447   +          P_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1;
1360448   +          Q_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0;
1360449   +          Q_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 1;
1360450   +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
1360451   +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
1360452   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360453   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360454   +          END;
MPRINT(EM_DIAGRAM):   END;
1360455   +        END;
MPRINT(EM_DIAGRAM):   END;
1360456   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360457   +        _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1360458   +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1360459   +        IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1360460   +          IF  NOT MISSING(MntMeatProducts ) AND
1360461   +                           596.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 596.5 <= MntMeatProducts THEN DO;
1360462   +            _NODE_  =                   55;
MPRINT(EM_DIAGRAM):   _NODE_ = 55;
1360463   +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1360464   +            P_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2;
1360465   +            P_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8;
1360466   +            Q_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2;
1360467   +            Q_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8;
1360468   +            V_DepVar0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4;
1360469   +            V_DepVar1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.6;
1360470   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360471   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360472   +            END;
MPRINT(EM_DIAGRAM):   END;
1360473   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360474   +            _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
1360475   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1360476   +            P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
1360477   +            P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
1360478   +            Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
1360479   +            Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
1360480   +            V_DepVar0  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.70588235294117;
1360481   +            V_DepVar1  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.29411764705882;
1360482   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360483   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360484   +            END;
MPRINT(EM_DIAGRAM):   END;
1360485   +          END;
MPRINT(EM_DIAGRAM):   END;
1360486   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360487   +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
1360488   +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1360489   +          P_DepVar0  =     0.90532544378698;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90532544378698;
1360490   +          P_DepVar1  =     0.09467455621301;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09467455621301;
1360491   +          Q_DepVar0  =     0.90532544378698;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90532544378698;
1360492   +          Q_DepVar1  =     0.09467455621301;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09467455621301;
1360493   +          V_DepVar0  =     0.90588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.90588235294117;
1360494   +          V_DepVar1  =     0.09411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.09411764705882;
1360495   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360496   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360497   +          END;
MPRINT(EM_DIAGRAM):   END;
1360498   +        END;
MPRINT(EM_DIAGRAM):   END;
1360499   +      END;
MPRINT(EM_DIAGRAM):   END;
1360500   +    END;
MPRINT(EM_DIAGRAM):   END;
1360501   +  END;
MPRINT(EM_DIAGRAM):   END;
1360502   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360503   +  IF  NOT MISSING(Recency ) AND
1360504   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1360505   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1360506   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN
DO;
1360507   +      IF  NOT MISSING(Recency ) AND
1360508   +                          19 <= Recency  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND 19 <= Recency THEN DO;
1360509   +        IF  NOT MISSING(MntMeatProducts ) AND
1360510   +                         370.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 370.5 <= MntMeatProducts THEN DO;
1360511   +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
1360512   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1360513   +          P_DepVar0  =     0.36363636363636;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.36363636363636;
1360514   +          P_DepVar1  =     0.63636363636363;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.63636363636363;
1360515   +          Q_DepVar0  =     0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.36363636363636;
1360516   +          Q_DepVar1  =     0.63636363636363;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.63636363636363;
1360517   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1360518   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1360519   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360520   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360521   +          END;
MPRINT(EM_DIAGRAM):   END;
1360522   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360523   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1360524   +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1360525   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1360526   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1360527   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1360528   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1360529   +          V_DepVar0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.85714285714285;
1360530   +          V_DepVar1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.14285714285714;
1360531   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360532   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360533   +          END;
MPRINT(EM_DIAGRAM):   END;
1360534   +        END;
MPRINT(EM_DIAGRAM):   END;
1360535   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360536   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1360537   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1360538   +        P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
1360539   +        P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
1360540   +        Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
1360541   +        Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
1360542   +        V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1360543   +        V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1360544   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1360545   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1360546   +        END;
MPRINT(EM_DIAGRAM):   END;
1360547   +      END;
MPRINT(EM_DIAGRAM):   END;
1360548   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360549   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1360550   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1360551   +      P_DepVar0  =     0.84285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84285714285714;
1360552   +      P_DepVar1  =     0.15714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15714285714285;
1360553   +      Q_DepVar0  =     0.84285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84285714285714;
1360554   +      Q_DepVar1  =     0.15714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15714285714285;
1360555   +      V_DepVar0  =     0.81048387096774;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81048387096774;
1360556   +      V_DepVar1  =     0.18951612903225;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18951612903225;
1360557   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360558   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360559   +      END;
MPRINT(EM_DIAGRAM):   END;
1360560   +    END;
MPRINT(EM_DIAGRAM):   END;
1360561   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360562   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1360563   +    _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1360564   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1360565   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1360566   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1360567   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1360568   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1360569   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1360570   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1360571   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1360572   +    END;
MPRINT(EM_DIAGRAM):   END;
1360573   +  END;
MPRINT(EM_DIAGRAM):   END;
1360574   +
1360575   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1360576   +IF  F_DepVar  NE '0'
1360577   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1360578   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1360579   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1360580   + END;
MPRINT(EM_DIAGRAM):   END;
1360581   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1360582   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1360583   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1360584   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1360585   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1360586   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1360587   +       END;
MPRINT(EM_DIAGRAM):   END;
1360588   + END;
MPRINT(EM_DIAGRAM):   END;
1360589   +
1360590   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1360591   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1360592   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1360593   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1360594   +* Renaming variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree4;
1360595   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360596   +* Renaming Posterior variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree4;
1360597   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360598   +drop Tree4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar1;
1360599   +Tree4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar1 = P_DepVar1;
1360600   +drop Tree4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar0;
1360601   +Tree4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar0 = P_DepVar0;
1360602   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360603   +* Renaming _WARN_ variable for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree4;
1360604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360605   +length Tree4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree4_WARN_ $4;
1360606   +drop Tree4_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree4_WARN_;
1360607   +Tree4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree4_WARN_ = _WARN_;
1360608   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360609   +* Ensmbl4: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 9 of 10;
1360610   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360612   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1360613   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1360614   +* NODE: Reg4;
MPRINT(EM_DIAGRAM):   * NODE: Reg4;
1360615   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360616   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1360617   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1360618   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1360619   +
1360620   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1360621   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1360622   +
1360623   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1360624   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1360625   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1360626   +array REG4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG4DRF [2] $12 _temporary_ ('1' '0' );
1360627   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1360628   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1360629   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1360630   +ARRAY REG4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG4DRU[2] _TEMPORARY_ (1 0);
1360631   +
1360632   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1360633   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1360634   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1360635   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1360636   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1360637   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1360638   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1360639   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1360640   +end;
MPRINT(EM_DIAGRAM):   end;
1360641   +else do;
MPRINT(EM_DIAGRAM):   else do;
1360642   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1360643   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1360644   +   end;
MPRINT(EM_DIAGRAM):   end;
1360645   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1360646   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1360647   +   end;
MPRINT(EM_DIAGRAM):   end;
1360648   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1360649   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1360650   +   end;
MPRINT(EM_DIAGRAM):   end;
1360651   +end;
MPRINT(EM_DIAGRAM):   end;
1360652   +
1360653   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1360654   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1360655   +
1360656   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1360657   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1360658   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360659   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360660   +end;
MPRINT(EM_DIAGRAM):   end;
1360661   +
1360662   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1360663   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1360664   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360665   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360666   +end;
MPRINT(EM_DIAGRAM):   end;
1360667   +
1360668   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1360669   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1360670   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360671   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360672   +end;
MPRINT(EM_DIAGRAM):   end;
1360673   +
1360674   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1360675   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1360676   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360677   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360678   +end;
MPRINT(EM_DIAGRAM):   end;
1360679   +
1360680   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1360681   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1360682   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360683   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360684   +end;
MPRINT(EM_DIAGRAM):   end;
1360685   +
1360686   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1360687   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1360688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360690   +end;
MPRINT(EM_DIAGRAM):   end;
1360691   +
1360692   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1360693   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1360694   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360695   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360696   +end;
MPRINT(EM_DIAGRAM):   end;
1360697   +
1360698   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1360699   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1360700   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360701   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360702   +end;
MPRINT(EM_DIAGRAM):   end;
1360703   +
1360704   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1360705   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1360706   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360707   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360708   +end;
MPRINT(EM_DIAGRAM):   end;
1360709   +
1360710   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1360711   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1360712   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360713   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360714   +end;
MPRINT(EM_DIAGRAM):   end;
1360715   +
1360716   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1360717   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1360718   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360719   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360720   +end;
MPRINT(EM_DIAGRAM):   end;
1360721   +
1360722   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1360723   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1360724   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360725   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360726   +end;
MPRINT(EM_DIAGRAM):   end;
1360727   +
1360728   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1360729   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1360730   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1360731   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1360732   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1360733   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360734   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360735   +end;
MPRINT(EM_DIAGRAM):   end;
1360736   +else do;
MPRINT(EM_DIAGRAM):   else do;
1360737   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1360738   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1360739   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1360740   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1360741   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1360742   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1360743   +   end;
MPRINT(EM_DIAGRAM):   end;
1360744   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1360745   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1360746   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1360747   +   end;
MPRINT(EM_DIAGRAM):   end;
1360748   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1360749   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1360750   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1360751   +   end;
MPRINT(EM_DIAGRAM):   end;
1360752   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1360753   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1360754   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1360755   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1360756   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360757   +   end;
MPRINT(EM_DIAGRAM):   end;
1360758   +end;
MPRINT(EM_DIAGRAM):   end;
1360759   +
1360760   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1360761   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1360762   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1360763   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1360764   +   goto REG4DR1;
MPRINT(EM_DIAGRAM):   goto REG4DR1;
1360765   +end;
MPRINT(EM_DIAGRAM):   end;
1360766   +
1360767   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1360768   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1360769   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1360770   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1360771   +
1360772   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1360773   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1360774   +_LP0 = _LP0 + (    2.40018327652155 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.40018327652155 * _TEMP);
1360775   +
1360776   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1360777   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1360778   +_LP0 = _LP0 + (   -0.21673510532954 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21673510532954 * _TEMP);
1360779   +
1360780   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1360781   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1360782   +_LP0 = _LP0 + (    0.64180357562788) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.64180357562788) * _TEMP * _1_0;
1360783   +_LP0 = _LP0 + (    0.16431128010113) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16431128010113) * _TEMP * _1_1;
1360784   +
1360785   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1360786   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1360787   +_LP0 = _LP0 + (   -0.00003686881561 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00003686881561 * _TEMP);
1360788   +
1360789   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1360790   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1360791   +_LP0 = _LP0 + (   -0.00434744593089 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00434744593089 * _TEMP);
1360792   +
1360793   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1360794   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1360795   +_LP0 = _LP0 + (   -0.00828741579845 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00828741579845 * _TEMP);
1360796   +
1360797   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1360798   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1360799   +_LP0 = _LP0 + (    0.00530468850331 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00530468850331 * _TEMP);
1360800   +
1360801   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1360802   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1360803   +_LP0 = _LP0 + (    0.00775743174762 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00775743174762 * _TEMP);
1360804   +
1360805   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1360806   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1360807   +_LP0 = _LP0 + (    0.70059514546632 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.70059514546632 * _TEMP);
1360808   +
1360809   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1360810   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1360811   +_LP0 = _LP0 + (    0.39070014327883 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39070014327883 * _TEMP);
1360812   +
1360813   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1360814   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1360815   +_LP0 = _LP0 + (    0.00018898206939 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00018898206939 * _TEMP);
1360816   +
1360817   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1360818   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1360819   +_LP0 = _LP0 + (    0.03694284437431 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03694284437431 * _TEMP);
1360820   +
1360821   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1360822   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1360823   +_LP0 = _LP0 + (   -0.06739289968934 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06739289968934 * _TEMP);
1360824   +
1360825   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1360826   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1360827   +_TEMP =     0.42102377735904 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.42102377735904 + _LP0;
1360828   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1360829   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1360830   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1360831   +end;
MPRINT(EM_DIAGRAM):   end;
1360832   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1360833   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1360834   +
1360835   +REG4DR1:
1360836   +
1360837   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG4DR1: *** Residuals;
1360838   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1360839   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1360840   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1360841   +end;
MPRINT(EM_DIAGRAM):   end;
1360842   +else do;
MPRINT(EM_DIAGRAM):   else do;
1360843   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1360844   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1360845   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1360846   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1360847   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1360848   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1360849   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1360850   +   end;
MPRINT(EM_DIAGRAM):   end;
1360851   +end;
MPRINT(EM_DIAGRAM):   end;
1360852   +
1360853   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1360854   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1360855   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1360856   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1360857   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1360858   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1360859   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1360860   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1360861   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1360862   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1360863   +end;
MPRINT(EM_DIAGRAM):   end;
1360864   +I_DepVar = REG4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG4DRF[_IY];
1360865   +U_DepVar = REG4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG4DRU[_IY];
1360866   +
1360867   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1360868   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1360869   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1360870   +* Renaming variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg4;
1360871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360872   +* Renaming Posterior variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg4;
1360873   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360874   +drop Reg4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar1;
1360875   +Reg4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar1 = P_DepVar1;
1360876   +drop Reg4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar0;
1360877   +Reg4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar0 = P_DepVar0;
1360878   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360879   +* Renaming _WARN_ variable for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg4;
1360880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360881   +length Reg4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg4_WARN_ $4;
1360882   +drop Reg4_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg4_WARN_;
1360883   +Reg4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg4_WARN_ = _WARN_;
1360884   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360885   +* Ensmbl4: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 10 of 10;
1360886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360887   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360888   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1360889   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1360890   +* NODE: Reg8;
MPRINT(EM_DIAGRAM):   * NODE: Reg8;
1360891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1360892   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1360893   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1360894   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1360895   +
1360896   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1360897   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1360898   +
1360899   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1360900   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1360901   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1360902   +array REG8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG8DRF [2] $12 _temporary_ ('1' '0' );
1360903   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1360904   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1360905   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1360906   +ARRAY REG8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG8DRU[2] _TEMPORARY_ (1 0);
1360907   +
1360908   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1360909   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1360910   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1360911   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1360912   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1360913   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1360914   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1360915   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1360916   +end;
MPRINT(EM_DIAGRAM):   end;
1360917   +else do;
MPRINT(EM_DIAGRAM):   else do;
1360918   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1360919   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1360920   +   end;
MPRINT(EM_DIAGRAM):   end;
1360921   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1360922   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1360923   +   end;
MPRINT(EM_DIAGRAM):   end;
1360924   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1360925   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1360926   +   end;
MPRINT(EM_DIAGRAM):   end;
1360927   +end;
MPRINT(EM_DIAGRAM):   end;
1360928   +
1360929   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1360930   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1360931   +
1360932   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1360933   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1360934   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360935   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360936   +end;
MPRINT(EM_DIAGRAM):   end;
1360937   +
1360938   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1360939   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1360940   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360941   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360942   +end;
MPRINT(EM_DIAGRAM):   end;
1360943   +
1360944   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1360945   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1360946   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360947   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360948   +end;
MPRINT(EM_DIAGRAM):   end;
1360949   +
1360950   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1360951   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1360952   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360953   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360954   +end;
MPRINT(EM_DIAGRAM):   end;
1360955   +
1360956   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1360957   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1360958   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360959   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360960   +end;
MPRINT(EM_DIAGRAM):   end;
1360961   +
1360962   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1360963   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1360964   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360965   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360966   +end;
MPRINT(EM_DIAGRAM):   end;
1360967   +
1360968   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1360969   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1360970   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360971   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360972   +end;
MPRINT(EM_DIAGRAM):   end;
1360973   +
1360974   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1360975   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1360976   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360977   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360978   +end;
MPRINT(EM_DIAGRAM):   end;
1360979   +
1360980   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1360981   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1360982   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360983   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360984   +end;
MPRINT(EM_DIAGRAM):   end;
1360985   +
1360986   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1360987   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1360988   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360990   +end;
MPRINT(EM_DIAGRAM):   end;
1360991   +
1360992   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1360993   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1360994   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1360995   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1360996   +end;
MPRINT(EM_DIAGRAM):   end;
1360997   +
1360998   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1360999   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1361000   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1361001   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361002   +end;
MPRINT(EM_DIAGRAM):   end;
1361003   +
1361004   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1361005   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1361006   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1361007   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1361008   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1361009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1361010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361011   +end;
MPRINT(EM_DIAGRAM):   end;
1361012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1361014   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1361015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1361016   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1361017   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1361018   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1361019   +   end;
MPRINT(EM_DIAGRAM):   end;
1361020   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1361021   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1361022   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1361023   +   end;
MPRINT(EM_DIAGRAM):   end;
1361024   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1361025   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1361026   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1361027   +   end;
MPRINT(EM_DIAGRAM):   end;
1361028   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1361029   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1361030   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1361031   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1361032   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361033   +   end;
MPRINT(EM_DIAGRAM):   end;
1361034   +end;
MPRINT(EM_DIAGRAM):   end;
1361035   +
1361036   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1361037   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1361038   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1361039   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1361040   +   goto REG8DR1;
MPRINT(EM_DIAGRAM):   goto REG8DR1;
1361041   +end;
MPRINT(EM_DIAGRAM):   end;
1361042   +
1361043   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1361044   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1361045   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1361046   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1361047   +
1361048   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1361049   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1361050   +_LP0 = _LP0 + (    1.30282761826006 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.30282761826006 * _TEMP);
1361051   +
1361052   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1361053   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1361054   +_LP0 = _LP0 + (   -0.12461246583448 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.12461246583448 * _TEMP);
1361055   +
1361056   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1361057   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1361058   +_LP0 = _LP0 + (    0.35055822679312) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.35055822679312) * _TEMP * _1_0;
1361059   +_LP0 = _LP0 + (    0.06578421633721) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06578421633721) * _TEMP * _1_1;
1361060   +
1361061   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1361062   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1361063   +_LP0 = _LP0 + (   -0.00001965833893 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001965833893 * _TEMP);
1361064   +
1361065   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1361066   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1361067   +_LP0 = _LP0 + (   -0.00237919371816 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00237919371816 * _TEMP);
1361068   +
1361069   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1361070   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1361071   +_LP0 = _LP0 + (   -0.00490441121869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00490441121869 * _TEMP);
1361072   +
1361073   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1361074   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1361075   +_LP0 = _LP0 + (     0.0027445180197 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0027445180197 * _TEMP);
1361076   +
1361077   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1361078   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1361079   +_LP0 = _LP0 + (    0.00427794030308 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00427794030308 * _TEMP);
1361080   +
1361081   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1361082   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1361083   +_LP0 = _LP0 + (    0.38768279900123 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38768279900123 * _TEMP);
1361084   +
1361085   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1361086   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1361087   +_LP0 = _LP0 + (    0.21939343331463 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21939343331463 * _TEMP);
1361088   +
1361089   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1361090   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1361091   +_LP0 = _LP0 + (    0.00011370233217 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00011370233217 * _TEMP);
1361092   +
1361093   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1361094   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1361095   +_LP0 = _LP0 + (    0.02046669609103 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02046669609103 * _TEMP);
1361096   +
1361097   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1361098   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1361099   +_LP0 = _LP0 + (   -0.03547597645545 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03547597645545 * _TEMP);
1361100   +
1361101   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1361102   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1361103   +_P0 = probnorm((    0.18495497784379) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( 0.18495497784379) + _LP0);
1361104   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1361105   +
1361106   +REG8DR1:
1361107   +
1361108   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG8DR1: *** Residuals;
1361109   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1361110   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1361111   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1361112   +end;
MPRINT(EM_DIAGRAM):   end;
1361113   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361114   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1361115   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1361116   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1361117   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1361118   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1361119   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1361120   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1361121   +   end;
MPRINT(EM_DIAGRAM):   end;
1361122   +end;
MPRINT(EM_DIAGRAM):   end;
1361123   +
1361124   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1361125   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1361126   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1361127   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1361128   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1361129   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1361130   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1361131   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1361132   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1361133   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1361134   +end;
MPRINT(EM_DIAGRAM):   end;
1361135   +I_DepVar = REG8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG8DRF[_IY];
1361136   +U_DepVar = REG8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG8DRU[_IY];
1361137   +
1361138   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1361139   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1361140   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1361141   +* Renaming variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg8;
1361142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361143   +* Renaming Posterior variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg8;
1361144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361145   +drop Reg8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar1;
1361146   +Reg8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar1 = P_DepVar1;
1361147   +drop Reg8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar0;
1361148   +Reg8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar0 = P_DepVar0;
1361149   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361150   +* Renaming _WARN_ variable for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg8;
1361151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361152   +length Reg8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg8_WARN_ $4;
1361153   +drop Reg8_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg8_WARN_;
1361154   +Reg8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg8_WARN_ = _WARN_;
1361155   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361156   +* Ensmbl4: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Average Posteriors of 10 models;
1361157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361158   +P_DepVar1 = (
1361159   +Neural29_P_DepVar1 +
1361160   +Neural24_P_DepVar1 +
1361161   +Neural25_P_DepVar1 +
1361162   +Neural26_P_DepVar1 +
1361163   +Neural27_P_DepVar1 +
1361164   +Neural28_P_DepVar1 +
1361165   +Neural8_P_DepVar1 +
1361166   +Tree4_P_DepVar1 +
1361167   +Reg4_P_DepVar1 +
1361168   +Reg8_P_DepVar1
1361169   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural29_P_DepVar1 + Neural24_P_DepVar1 +
Neural25_P_DepVar1 + Neural26_P_DepVar1 + Neural27_P_DepVar1 + Neural28_P_DepVar1 +
Neural8_P_DepVar1 + Tree4_P_DepVar1 + Reg4_P_DepVar1 + Reg8_P_DepVar1 )/10;
1361170   +P_DepVar0 = (
1361171   +Neural29_P_DepVar0 +
1361172   +Neural24_P_DepVar0 +
1361173   +Neural25_P_DepVar0 +
1361174   +Neural26_P_DepVar0 +
1361175   +Neural27_P_DepVar0 +
1361176   +Neural28_P_DepVar0 +
1361177   +Neural8_P_DepVar0 +
1361178   +Tree4_P_DepVar0 +
1361179   +Reg4_P_DepVar0 +
1361180   +Reg8_P_DepVar0
1361181   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural29_P_DepVar0 + Neural24_P_DepVar0 +
Neural25_P_DepVar0 + Neural26_P_DepVar0 + Neural27_P_DepVar0 + Neural28_P_DepVar0 +
Neural8_P_DepVar0 + Tree4_P_DepVar0 + Reg4_P_DepVar0 + Reg8_P_DepVar0 )/10;
1361182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361183   +* Ensmbl4: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Classification Vars;
1361184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361185   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1361186   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1361187   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1361188   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1361189   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1361190   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1361191   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1361192   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1361193   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1361194   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1361195   +end;
MPRINT(EM_DIAGRAM):   end;
1361196   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1361197   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1361198   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1361199   +end;
MPRINT(EM_DIAGRAM):   end;
1361200   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1361201   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361202   +* Ensmbl4: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Producing Unformatted variable;
1361203   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361204   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1361205   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1361206   +else
1361207   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1361208   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361209   +* Ensmbl4: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing _WARN_ Variable;
1361210   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361211   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1361212   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1361213   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1361214   +if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1361214  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1361215   +if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1361215  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1361216   +if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1361216  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1361217   +if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1361217  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1361218   +if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1361218  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1361219   +if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1361219  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1361220   +if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1361220  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1361221   +if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1361221  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1361222   +if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1361222  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1361223   +if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1361223  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1361224   +if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1361224  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1361225   +if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1361225  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1361226   +if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1361226  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1361227   +if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1361227  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1361228   +if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1361228  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1361229   +if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1361229  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1361230   +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1361230  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1361231   +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1361231  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1361232   +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1361232  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1361233   +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1361233  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1361234   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1361234  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1361235   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1361235  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1361236   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1361236  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1361237   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1361237  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1361238   +if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1361239   +if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1361240   +if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1361241   +if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1361242   +if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1361243   +if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1361244   +if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1361245   +if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1361246   +if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1361247   +if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1361248   +if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1361249   +if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1361250   +if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1361251   +if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1361252   +if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1361253   +if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1361254   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361255   +* Ensmbl4: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Residual Vars;
1361256   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361257   +if
1361258   +F_DepVar NE '1'
1361259   +AND F_DepVar NE '0'
1361260   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1361261   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1361262   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1361263   +end;
MPRINT(EM_DIAGRAM):   end;
1361264   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361265   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1361266   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1361267   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1361268   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1361269   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1361270   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1361271   +END;
MPRINT(EM_DIAGRAM):   END;
1361272   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1361273    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL29_TRAIN.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1361274    quit;
1361275    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1361276    filename emflow
1361276  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring NEURAL29_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361277    *------------------------------------------------------------*;
1361278    * Ensmbl4: Scoring NEURAL29_VALIDATE data;
1361279    *------------------------------------------------------------*;
1361280    data EMWS8.Ensmbl4_VALIDATE
1361281    / view=EMWS8.Ensmbl4_VALIDATE
1361282    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_VALIDATE / view=EMWS8.Ensmbl4_VALIDATE ;
1361283    set EMWS8.Neural29_VALIDATE
1361284    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural29_VALIDATE ;
1361285    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas.
1361286   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361287   +* Ensmbl4: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Combine model for DepVar;
1361288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361289   +* Ensmbl4: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 1 of 10;
1361290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361291   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361292   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1361293   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1361294   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1361295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361296   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361297   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1361298   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1361299   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1361300   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361302   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1361303   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1361304   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1361305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361306   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361307   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1361308   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1361309   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1361310   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361311   +
1361312   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1361313   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1361313  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1361314   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1361315   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1361316   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1361317   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1361318   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1361319   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361320   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1361321   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1361322   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1361323   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361324   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361325   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1361326   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361327   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1361328   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1361329   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1361330   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361331   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1361332   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1361333   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1361334   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361335   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361336   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1361337   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1361338   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1361339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361340   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1361341   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1361342   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1361343   +
1361344   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1361345   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1361346   +
1361347   +
1361348   +/*----G_Marital_Status begin----*/
1361349   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1361350   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1361351   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1361352   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1361353   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1361354   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1361355   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1361356   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1361357   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1361358   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1361359   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1361360   +end;
MPRINT(EM_DIAGRAM):   end;
1361361   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1361362   +/*----G_Marital_Status end----*/
1361363   +
1361364   +
1361365   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1361366   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1361367   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1361368   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361369   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1361370   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1361371   +* NODE: Neural29;
MPRINT(EM_DIAGRAM):   * NODE: Neural29;
1361372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361373   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1361374   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1361375   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1361376   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1361377   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1361378   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1361379   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1361380   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1361381   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1361382   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1361383   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1361384   +LENGTH _WARN_ $4
1361385   +      F_DepVar  $ 12
1361386   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1361387   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1361388   +
1361389   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1361390   +
1361391   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1361392   +
1361393   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1361394   +
1361395   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1361396   +
1361397   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1361398   +
1361399   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1361400   +
1361401   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1361402   +
1361403   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1361404   +
1361405   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1361406   +
1361407   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1361408   +
1361409   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1361410   +
1361411   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1361412   +
1361413   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1361414   +
1361415   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1361416   +
1361417   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1361418   +
1361419   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1361420   +
1361421   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1361422   +
1361423   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1361424   +
1361425   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1361426   +
1361427   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1361428   +
1361429   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1361430   +
1361431   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1361432   +
1361433   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1361434   +
1361435   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1361436   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1361437   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1361438   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1361439   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1361440   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1361441   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361442   +end;
MPRINT(EM_DIAGRAM):   end;
1361443   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361444   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1361445   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1361446   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1361447   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1361448   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1361449   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1361450   +   end;
MPRINT(EM_DIAGRAM):   end;
1361451   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1361452   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1361453   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1361454   +   end;
MPRINT(EM_DIAGRAM):   end;
1361455   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1361456   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1361457   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1361458   +   end;
MPRINT(EM_DIAGRAM):   end;
1361459   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1361460   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1361461   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1361462   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1361463   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361464   +   end;
MPRINT(EM_DIAGRAM):   end;
1361465   +end;
MPRINT(EM_DIAGRAM):   end;
1361466   +
1361467   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361468   +*** Checking missing input Interval
1361469   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1361470   +
1361471   +IF NMISS(
1361472   +   AcceptedCmpTotal ,
1361473   +   Frq ,
1361474   +   Income ,
1361475   +   Mnt ,
1361476   +   MntFruits ,
1361477   +   MntGoldProds ,
1361478   +   MntMeatProducts ,
1361479   +   MntSweetProducts ,
1361480   +   NumCatalogPurchases ,
1361481   +   NumWebPurchases ,
1361482   +   RFMstat ,
1361483   +   RMntFrq ,
1361484   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1361485   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1361486   +
1361487   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361488   +END;
MPRINT(EM_DIAGRAM):   END;
1361489   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361490   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1361491   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361492   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1361493   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1361494   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1361495   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1361496   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1361497   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1361498   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1361499   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1361500   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1361501   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1361502   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1361503   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1361504   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1361505   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1361506   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1361507   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1361508   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1361509   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1361510   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1361511   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1361512   +END;
MPRINT(EM_DIAGRAM):   END;
1361513   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1361514   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1361515   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1361516   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1361517   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1361518   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1361519   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1361520   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1361521   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1361522   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1361523   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1361524   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1361525   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1361526   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1361527   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1361528   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1361529   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1361530   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1361531   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1361532   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1361533   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1361534   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1361535   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1361536   +   ELSE S_NumCatalogPurchases
1361537   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1361538   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1361539   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1361540   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1361541   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1361542   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1361543   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1361544   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1361545   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1361546   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1361547   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1361548   +END;
MPRINT(EM_DIAGRAM):   END;
1361549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361550   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1361551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361553   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1361554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1361556   +   H11  =     0.07081605827454 * S_AcceptedCmpTotal  +    -0.06698977764548 *
1361557   +        S_Frq  +    -0.03430870177464 * S_Income  +    -0.11360176415097 *
1361558   +        S_Mnt  +    -0.01238418440333 * S_MntFruits  +     0.01232617973423 *
1361559   +        S_MntGoldProds  +     0.07483946106207 * S_MntMeatProducts
1361560   +          +     -0.0079701278424 * S_MntSweetProducts
1361561   +          +     0.08585038786425 * S_NumCatalogPurchases
1361562   +          +     0.04419619029921 * S_NumWebPurchases
1361563   +          +     0.01256447914587 * S_RFMstat  +     0.04947774665638 *
1361564   +        S_RMntFrq  +    -0.08738179516843 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.07081605827454 * S_AcceptedCmpTotal + -0.06698977764548 * S_Frq
+ -0.03430870177464 * S_Income + -0.11360176415097 * S_Mnt + -0.01238418440333 * S_MntFruits +
0.01232617973423 * S_MntGoldProds + 0.07483946106207 * S_MntMeatProducts + -0.0079701278424 *
S_MntSweetProducts + 0.08585038786425 * S_NumCatalogPurchases + 0.04419619029921 *
S_NumWebPurchases + 0.01256447914587 * S_RFMstat + 0.04947774665638 * S_RMntFrq +
-0.08738179516843 * S_Recency ;
1361565   +   H11  = H11  +     0.02930876660681 * G_Marital_Status0
1361566   +          +     0.00712629273648 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02930876660681 * G_Marital_Status0 + 0.00712629273648 *
G_Marital_Status1 ;
1361567   +   H11  =    -0.46602666061325 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.46602666061325 + H11 ;
1361568   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1361569   +END;
MPRINT(EM_DIAGRAM):   END;
1361570   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1361571   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1361572   +END;
MPRINT(EM_DIAGRAM):   END;
1361573   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361574   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1361575   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361576   +
1361577   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1361578   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1361579   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1361580   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1361581   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1361582   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1361583   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1361584   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1361585   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1361586   +end;
MPRINT(EM_DIAGRAM):   end;
1361587   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361588   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1361589   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1361590   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1361591   +   end;
MPRINT(EM_DIAGRAM):   end;
1361592   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1361593   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1361594   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1361595   +   end;
MPRINT(EM_DIAGRAM):   end;
1361596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1361597   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1361598   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1361599   +   end;
MPRINT(EM_DIAGRAM):   end;
1361600   +end;
MPRINT(EM_DIAGRAM):   end;
1361601   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1361602   +   P_DepVar1  =      25.813843010399 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.813843010399 * H11 ;
1361603   +   P_DepVar1  =     8.06674391252456 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.06674391252456 + P_DepVar1 ;
1361604   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1361605   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1361606   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1361607   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1361608   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1361609   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1361610   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1361611   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1361612   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1361613   +END;
MPRINT(EM_DIAGRAM):   END;
1361614   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1361615   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1361616   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1361617   +END;
MPRINT(EM_DIAGRAM):   END;
1361618   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1361619   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1361620   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1361621   +END;
MPRINT(EM_DIAGRAM):   END;
1361622   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1361623   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1361624   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1361625   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1361626   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1361627   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1361628   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1361629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361630   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1361631   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361632   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1361633   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1361634   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1361635   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1361636   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1361637   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1361638   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1361639   +END;
MPRINT(EM_DIAGRAM):   END;
1361640   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1361641   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1361642   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1361643   +drop
1361644   +H11
1361645   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1361646   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1361647   +* Renaming variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural29;
1361648   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361649   +* Renaming Posterior variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural29;
1361650   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361651   +drop Neural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar1;
1361652   +Neural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar1 = P_DepVar1;
1361653   +drop Neural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar0;
1361654   +Neural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar0 = P_DepVar0;
1361655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361656   +* Renaming _WARN_ variable for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural29;
1361657   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361658   +length Neural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural29_WARN_ $4;
1361659   +drop Neural29_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural29_WARN_;
1361660   +Neural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural29_WARN_ = _WARN_;
1361661   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361662   +* Ensmbl4: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 2 of 10;
1361663   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361665   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1361666   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1361667   +* NODE: Neural24;
MPRINT(EM_DIAGRAM):   * NODE: Neural24;
1361668   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361669   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1361670   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1361671   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1361672   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1361673   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1361674   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1361675   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1361676   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1361677   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1361678   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1361679   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1361680   +LENGTH _WARN_ $4
1361681   +      F_DepVar  $ 12
1361682   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1361683   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1361684   +
1361685   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1361686   +
1361687   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1361688   +
1361689   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1361690   +
1361691   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1361692   +
1361693   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1361694   +
1361695   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1361696   +
1361697   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1361698   +
1361699   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1361700   +
1361701   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1361702   +
1361703   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1361704   +
1361705   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1361706   +
1361707   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1361708   +
1361709   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1361710   +
1361711   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1361712   +
1361713   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1361714   +
1361715   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1361716   +
1361717   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1361718   +
1361719   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1361720   +
1361721   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1361722   +
1361723   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1361724   +
1361725   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1361726   +
1361727   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1361728   +
1361729   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1361730   +
1361731   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1361732   +
1361733   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1361734   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1361735   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1361736   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1361737   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1361738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1361739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361740   +end;
MPRINT(EM_DIAGRAM):   end;
1361741   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361742   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1361743   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1361744   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1361745   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1361746   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1361747   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1361748   +   end;
MPRINT(EM_DIAGRAM):   end;
1361749   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1361750   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1361751   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1361752   +   end;
MPRINT(EM_DIAGRAM):   end;
1361753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1361754   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1361755   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1361756   +   end;
MPRINT(EM_DIAGRAM):   end;
1361757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1361758   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1361759   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1361760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1361761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361762   +   end;
MPRINT(EM_DIAGRAM):   end;
1361763   +end;
MPRINT(EM_DIAGRAM):   end;
1361764   +
1361765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361766   +*** Checking missing input Interval
1361767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1361768   +
1361769   +IF NMISS(
1361770   +   AcceptedCmpTotal ,
1361771   +   Frq ,
1361772   +   Income ,
1361773   +   Mnt ,
1361774   +   MntFruits ,
1361775   +   MntGoldProds ,
1361776   +   MntMeatProducts ,
1361777   +   MntSweetProducts ,
1361778   +   NumCatalogPurchases ,
1361779   +   NumWebPurchases ,
1361780   +   RFMstat ,
1361781   +   RMntFrq ,
1361782   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1361783   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1361784   +
1361785   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1361786   +END;
MPRINT(EM_DIAGRAM):   END;
1361787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361788   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1361789   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361790   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1361791   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1361792   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1361793   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1361794   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1361795   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1361796   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1361797   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1361798   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1361799   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1361800   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1361801   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1361802   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1361803   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1361804   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1361805   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1361806   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1361807   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1361808   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1361809   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1361810   +END;
MPRINT(EM_DIAGRAM):   END;
1361811   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1361812   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1361813   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1361814   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1361815   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1361816   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1361817   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1361818   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1361819   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1361820   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1361821   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1361822   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1361823   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1361824   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1361825   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1361826   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1361827   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1361828   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1361829   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1361830   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1361831   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1361832   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1361833   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1361834   +   ELSE S_NumCatalogPurchases
1361835   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1361836   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1361837   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1361838   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1361839   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1361840   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1361841   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1361842   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1361843   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1361844   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1361845   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1361846   +END;
MPRINT(EM_DIAGRAM):   END;
1361847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361848   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1361849   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361851   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1361852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361853   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1361854   +   H11  =    -0.23012961341552 * S_AcceptedCmpTotal  +     0.46196798170863 *
1361855   +        S_Frq  +     0.10792957007496 * S_Income  +     0.01598495816724 *
1361856   +        S_Mnt  +     0.04110199082094 * S_MntFruits  +    -0.03861520815517 *
1361857   +        S_MntGoldProds  +    -0.21282606264093 * S_MntMeatProducts
1361858   +          +     0.01715600461602 * S_MntSweetProducts
1361859   +          +    -0.23329547812839 * S_NumCatalogPurchases
1361860   +          +    -0.11507537772092 * S_NumWebPurchases
1361861   +          +    -0.03410149182919 * S_RFMstat  +     0.14966504694497 *
1361862   +        S_RMntFrq  +     0.28566269847001 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.23012961341552 * S_AcceptedCmpTotal + 0.46196798170863 * S_Frq
+ 0.10792957007496 * S_Income + 0.01598495816724 * S_Mnt + 0.04110199082094 * S_MntFruits +
-0.03861520815517 * S_MntGoldProds + -0.21282606264093 * S_MntMeatProducts + 0.01715600461602
* S_MntSweetProducts + -0.23329547812839 * S_NumCatalogPurchases + -0.11507537772092 *
S_NumWebPurchases + -0.03410149182919 * S_RFMstat + 0.14966504694497 * S_RMntFrq +
0.28566269847001 * S_Recency ;
1361863   +   H12  =     0.05540254918167 * S_AcceptedCmpTotal  +     1.29235531722682 *
1361864   +        S_Frq  +     0.06366828093255 * S_Income  +    -0.26947825948002 *
1361865   +        S_Mnt  +     0.21714508305015 * S_MntFruits  +     0.26812345284438 *
1361866   +        S_MntGoldProds  +    -4.04479521582802 * S_MntMeatProducts
1361867   +          +     0.04792709763034 * S_MntSweetProducts
1361868   +          +    -1.08549455020763 * S_NumCatalogPurchases
1361869   +          +    -0.48337305556946 * S_NumWebPurchases
1361870   +          +    -0.22222278831599 * S_RFMstat  +    -0.23407358569927 *
1361871   +        S_RMntFrq  +    -0.01186280761112 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.05540254918167 * S_AcceptedCmpTotal + 1.29235531722682 * S_Frq +
0.06366828093255 * S_Income + -0.26947825948002 * S_Mnt + 0.21714508305015 * S_MntFruits +
0.26812345284438 * S_MntGoldProds + -4.04479521582802 * S_MntMeatProducts + 0.04792709763034 *
S_MntSweetProducts + -1.08549455020763 * S_NumCatalogPurchases + -0.48337305556946 *
S_NumWebPurchases + -0.22222278831599 * S_RFMstat + -0.23407358569927 * S_RMntFrq +
-0.01186280761112 * S_Recency ;
1361872   +   H11  = H11  +    -0.14627707216264 * G_Marital_Status0
1361873   +          +    -0.05689581037738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14627707216264 * G_Marital_Status0 + -0.05689581037738 *
G_Marital_Status1 ;
1361874   +   H12  = H12  +     0.20389328110579 * G_Marital_Status0
1361875   +          +     0.12863423712687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20389328110579 * G_Marital_Status0 + 0.12863423712687 *
G_Marital_Status1 ;
1361876   +   H11  =     0.26937694072834 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.26937694072834 + H11 ;
1361877   +   H12  =    -3.07173299704836 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.07173299704836 + H12 ;
1361878   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1361879   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1361880   +END;
MPRINT(EM_DIAGRAM):   END;
1361881   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1361882   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1361883   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1361884   +END;
MPRINT(EM_DIAGRAM):   END;
1361885   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361886   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1361887   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361888   +
1361889   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1361890   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1361891   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1361892   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1361893   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1361894   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1361895   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1361896   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1361897   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1361898   +end;
MPRINT(EM_DIAGRAM):   end;
1361899   +else do;
MPRINT(EM_DIAGRAM):   else do;
1361900   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1361901   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1361902   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1361903   +   end;
MPRINT(EM_DIAGRAM):   end;
1361904   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1361905   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1361906   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1361907   +   end;
MPRINT(EM_DIAGRAM):   end;
1361908   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1361909   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1361910   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1361911   +   end;
MPRINT(EM_DIAGRAM):   end;
1361912   +end;
MPRINT(EM_DIAGRAM):   end;
1361913   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1361914   +   P_DepVar1  =    -8.61120981649634 * H11  +    -5.72570140806215 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.61120981649634 * H11 + -5.72570140806215 * H12 ;
1361915   +   P_DepVar1  =    -4.82159913495753 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.82159913495753 + P_DepVar1 ;
1361916   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1361917   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1361918   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1361919   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1361920   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1361921   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1361922   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1361923   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1361924   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1361925   +END;
MPRINT(EM_DIAGRAM):   END;
1361926   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1361927   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1361928   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1361929   +END;
MPRINT(EM_DIAGRAM):   END;
1361930   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1361931   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1361932   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1361933   +END;
MPRINT(EM_DIAGRAM):   END;
1361934   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1361935   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1361936   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1361937   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1361938   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1361939   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1361940   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1361941   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361942   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1361943   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1361944   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1361945   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1361946   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1361947   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1361948   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1361949   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1361950   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1361951   +END;
MPRINT(EM_DIAGRAM):   END;
1361952   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1361953   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1361954   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1361955   +drop
1361956   +H11
1361957   +H12
1361958   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1361959   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1361960   +* Renaming variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural24;
1361961   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361962   +* Renaming Posterior variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural24;
1361963   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361964   +drop Neural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar1;
1361965   +Neural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar1 = P_DepVar1;
1361966   +drop Neural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar0;
1361967   +Neural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar0 = P_DepVar0;
1361968   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361969   +* Renaming _WARN_ variable for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural24;
1361970   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361971   +length Neural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural24_WARN_ $4;
1361972   +drop Neural24_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural24_WARN_;
1361973   +Neural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural24_WARN_ = _WARN_;
1361974   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361975   +* Ensmbl4: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 3 of 10;
1361976   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361977   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361978   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1361979   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1361980   +* NODE: Neural25;
MPRINT(EM_DIAGRAM):   * NODE: Neural25;
1361981   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1361982   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1361983   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1361984   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1361985   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1361986   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1361987   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1361988   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1361989   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1361990   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1361991   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1361992   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1361993   +LENGTH _WARN_ $4
1361994   +      F_DepVar  $ 12
1361995   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1361996   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1361997   +
1361998   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1361999   +
1362000   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1362001   +
1362002   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1362003   +
1362004   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1362005   +
1362006   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1362007   +
1362008   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1362009   +
1362010   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1362011   +
1362012   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1362013   +
1362014   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1362015   +
1362016   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1362017   +
1362018   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1362019   +
1362020   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1362021   +
1362022   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1362023   +
1362024   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1362025   +
1362026   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1362027   +
1362028   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1362029   +
1362030   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1362031   +
1362032   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1362033   +
1362034   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1362035   +
1362036   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1362037   +
1362038   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1362039   +
1362040   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1362041   +
1362042   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1362043   +
1362044   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1362045   +
1362046   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1362047   +
1362048   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1362049   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1362050   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1362051   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1362052   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1362053   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1362054   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362055   +end;
MPRINT(EM_DIAGRAM):   end;
1362056   +else do;
MPRINT(EM_DIAGRAM):   else do;
1362057   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1362058   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1362059   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1362060   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1362061   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1362062   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1362063   +   end;
MPRINT(EM_DIAGRAM):   end;
1362064   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1362065   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1362066   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1362067   +   end;
MPRINT(EM_DIAGRAM):   end;
1362068   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1362069   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1362070   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1362071   +   end;
MPRINT(EM_DIAGRAM):   end;
1362072   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1362073   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1362074   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1362075   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1362076   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362077   +   end;
MPRINT(EM_DIAGRAM):   end;
1362078   +end;
MPRINT(EM_DIAGRAM):   end;
1362079   +
1362080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362081   +*** Checking missing input Interval
1362082   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1362083   +
1362084   +IF NMISS(
1362085   +   AcceptedCmpTotal ,
1362086   +   Frq ,
1362087   +   Income ,
1362088   +   Mnt ,
1362089   +   MntFruits ,
1362090   +   MntGoldProds ,
1362091   +   MntMeatProducts ,
1362092   +   MntSweetProducts ,
1362093   +   NumCatalogPurchases ,
1362094   +   NumWebPurchases ,
1362095   +   RFMstat ,
1362096   +   RMntFrq ,
1362097   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1362098   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1362099   +
1362100   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362101   +END;
MPRINT(EM_DIAGRAM):   END;
1362102   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362103   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1362104   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362105   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362106   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1362107   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1362108   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1362109   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1362110   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1362111   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1362112   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1362113   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1362114   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1362115   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1362116   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1362117   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1362118   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1362119   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1362120   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1362121   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1362122   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1362123   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1362124   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1362125   +END;
MPRINT(EM_DIAGRAM):   END;
1362126   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362127   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1362128   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1362129   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1362130   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1362131   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1362132   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1362133   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1362134   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1362135   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1362136   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1362137   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1362138   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1362139   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1362140   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1362141   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1362142   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1362143   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1362144   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1362145   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1362146   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1362147   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1362148   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1362149   +   ELSE S_NumCatalogPurchases
1362150   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1362151   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1362152   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1362153   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1362154   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1362155   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1362156   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1362157   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1362158   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1362159   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1362160   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1362161   +END;
MPRINT(EM_DIAGRAM):   END;
1362162   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362163   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1362164   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362165   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362166   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1362167   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362168   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362169   +   H11  =    -0.29033160943141 * S_AcceptedCmpTotal  +     1.65008720168986 *
1362170   +        S_Frq  +     0.06251288055572 * S_Income  +      0.0668512722962 *
1362171   +        S_Mnt  +     0.03892214147304 * S_MntFruits  +     0.20062210213612 *
1362172   +        S_MntGoldProds  +    -3.11480309420656 * S_MntMeatProducts
1362173   +          +    -0.04673959319989 * S_MntSweetProducts
1362174   +          +    -1.21625330274707 * S_NumCatalogPurchases
1362175   +          +     -0.4971041829957 * S_NumWebPurchases
1362176   +          +    -0.17470099705144 * S_RFMstat  +    -0.53358474622759 *
1362177   +        S_RMntFrq  +     0.38389131134706 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.29033160943141 * S_AcceptedCmpTotal + 1.65008720168986 * S_Frq
+ 0.06251288055572 * S_Income + 0.0668512722962 * S_Mnt + 0.03892214147304 * S_MntFruits +
0.20062210213612 * S_MntGoldProds + -3.11480309420656 * S_MntMeatProducts + -0.04673959319989
* S_MntSweetProducts + -1.21625330274707 * S_NumCatalogPurchases + -0.4971041829957 *
S_NumWebPurchases + -0.17470099705144 * S_RFMstat + -0.53358474622759 * S_RMntFrq +
0.38389131134706 * S_Recency ;
1362178   +   H12  =     0.45303153795041 * S_AcceptedCmpTotal  +    -0.78996479450613 *
1362179   +        S_Frq  +    -0.58298284968136 * S_Income  +     0.14918533356272 *
1362180   +        S_Mnt  +    -0.40559802868396 * S_MntFruits  +     0.11972304240892 *
1362181   +        S_MntGoldProds  +     0.31356670313089 * S_MntMeatProducts
1362182   +          +    -0.14032278714215 * S_MntSweetProducts
1362183   +          +     0.13835096224468 * S_NumCatalogPurchases
1362184   +          +     0.13800491118955 * S_NumWebPurchases
1362185   +          +     0.10506847679186 * S_RFMstat  +    -0.29903179406638 *
1362186   +        S_RMntFrq  +    -0.52813041903353 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.45303153795041 * S_AcceptedCmpTotal + -0.78996479450613 * S_Frq
+ -0.58298284968136 * S_Income + 0.14918533356272 * S_Mnt + -0.40559802868396 * S_MntFruits +
0.11972304240892 * S_MntGoldProds + 0.31356670313089 * S_MntMeatProducts + -0.14032278714215 *
S_MntSweetProducts + 0.13835096224468 * S_NumCatalogPurchases + 0.13800491118955 *
S_NumWebPurchases + 0.10506847679186 * S_RFMstat + -0.29903179406638 * S_RMntFrq +
-0.52813041903353 * S_Recency ;
1362187   +   H13  =    -0.60990818976997 * S_AcceptedCmpTotal  +     0.78563794151057 *
1362188   +        S_Frq  +    -0.67740326666919 * S_Income  +     0.64266139486854 *
1362189   +        S_Mnt  +    -0.14912060810947 * S_MntFruits  +    -0.06683180032017 *
1362190   +        S_MntGoldProds  +    -1.00660670853382 * S_MntMeatProducts
1362191   +          +     0.01239684835876 * S_MntSweetProducts
1362192   +          +    -1.19356791317323 * S_NumCatalogPurchases
1362193   +          +    -0.62897909821994 * S_NumWebPurchases
1362194   +          +      -0.010489589719 * S_RFMstat  +      0.1434960860838 *
1362195   +        S_RMntFrq  +     1.20335007293573 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.60990818976997 * S_AcceptedCmpTotal + 0.78563794151057 * S_Frq
+ -0.67740326666919 * S_Income + 0.64266139486854 * S_Mnt + -0.14912060810947 * S_MntFruits +
-0.06683180032017 * S_MntGoldProds + -1.00660670853382 * S_MntMeatProducts + 0.01239684835876
* S_MntSweetProducts + -1.19356791317323 * S_NumCatalogPurchases + -0.62897909821994 *
S_NumWebPurchases + -0.010489589719 * S_RFMstat + 0.1434960860838 * S_RMntFrq +
1.20335007293573 * S_Recency ;
1362196   +   H11  = H11  +    -0.02749612145805 * G_Marital_Status0
1362197   +          +     0.04851614991645 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.02749612145805 * G_Marital_Status0 + 0.04851614991645 *
G_Marital_Status1 ;
1362198   +   H12  = H12  +     0.25900717859534 * G_Marital_Status0
1362199   +          +    -0.00514755509392 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25900717859534 * G_Marital_Status0 + -0.00514755509392 *
G_Marital_Status1 ;
1362200   +   H13  = H13  +    -0.74074264175662 * G_Marital_Status0
1362201   +          +    -0.23517796339687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.74074264175662 * G_Marital_Status0 + -0.23517796339687 *
G_Marital_Status1 ;
1362202   +   H11  =    -1.76667308717451 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.76667308717451 + H11 ;
1362203   +   H12  =    -0.06899369466405 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.06899369466405 + H12 ;
1362204   +   H13  =     4.22583207425873 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 4.22583207425873 + H13 ;
1362205   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1362206   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1362207   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1362208   +END;
MPRINT(EM_DIAGRAM):   END;
1362209   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362210   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1362211   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1362212   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1362213   +END;
MPRINT(EM_DIAGRAM):   END;
1362214   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362215   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1362216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362217   +
1362218   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1362219   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1362220   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1362221   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1362222   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1362223   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1362224   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1362225   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1362226   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1362227   +end;
MPRINT(EM_DIAGRAM):   end;
1362228   +else do;
MPRINT(EM_DIAGRAM):   else do;
1362229   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1362230   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1362231   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1362232   +   end;
MPRINT(EM_DIAGRAM):   end;
1362233   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1362234   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1362235   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1362236   +   end;
MPRINT(EM_DIAGRAM):   end;
1362237   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1362238   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1362239   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1362240   +   end;
MPRINT(EM_DIAGRAM):   end;
1362241   +end;
MPRINT(EM_DIAGRAM):   end;
1362242   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362243   +   P_DepVar1  =    -4.70859697618201 * H11  +     3.63900660721997 * H12
1362244   +          +    -4.60310081273681 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.70859697618201 * H11 + 3.63900660721997 * H12 +
-4.60310081273681 * H13 ;
1362245   +   P_DepVar1  =     -0.6194274413348 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.6194274413348 + P_DepVar1 ;
1362246   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1362247   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1362248   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1362249   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1362250   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1362251   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1362252   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1362253   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1362254   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1362255   +END;
MPRINT(EM_DIAGRAM):   END;
1362256   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362257   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1362258   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1362259   +END;
MPRINT(EM_DIAGRAM):   END;
1362260   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1362261   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1362262   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1362263   +END;
MPRINT(EM_DIAGRAM):   END;
1362264   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1362265   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1362266   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1362267   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1362268   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1362269   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1362270   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1362271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362272   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1362273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362274   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1362275   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1362276   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1362277   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1362278   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1362279   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1362280   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1362281   +END;
MPRINT(EM_DIAGRAM):   END;
1362282   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1362283   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1362284   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1362285   +drop
1362286   +H11
1362287   +H12
1362288   +H13
1362289   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1362290   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1362291   +* Renaming variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural25;
1362292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362293   +* Renaming Posterior variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural25;
1362294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362295   +drop Neural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar1;
1362296   +Neural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar1 = P_DepVar1;
1362297   +drop Neural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar0;
1362298   +Neural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar0 = P_DepVar0;
1362299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362300   +* Renaming _WARN_ variable for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural25;
1362301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362302   +length Neural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural25_WARN_ $4;
1362303   +drop Neural25_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural25_WARN_;
1362304   +Neural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural25_WARN_ = _WARN_;
1362305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362306   +* Ensmbl4: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 4 of 10;
1362307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362309   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1362310   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1362311   +* NODE: Neural26;
MPRINT(EM_DIAGRAM):   * NODE: Neural26;
1362312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362313   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1362314   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1362315   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1362316   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1362317   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1362318   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1362319   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1362320   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1362321   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1362322   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1362323   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1362324   +LENGTH _WARN_ $4
1362325   +      F_DepVar  $ 12
1362326   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1362327   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1362328   +
1362329   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1362330   +
1362331   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1362332   +
1362333   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1362334   +
1362335   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1362336   +
1362337   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1362338   +
1362339   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1362340   +
1362341   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1362342   +
1362343   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1362344   +
1362345   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1362346   +
1362347   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1362348   +
1362349   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1362350   +
1362351   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1362352   +
1362353   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1362354   +
1362355   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1362356   +
1362357   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1362358   +
1362359   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1362360   +
1362361   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1362362   +
1362363   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1362364   +
1362365   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1362366   +
1362367   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1362368   +
1362369   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1362370   +
1362371   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1362372   +
1362373   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1362374   +
1362375   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1362376   +
1362377   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1362378   +
1362379   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1362380   +
1362381   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1362382   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1362383   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1362384   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1362385   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1362386   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1362387   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362388   +end;
MPRINT(EM_DIAGRAM):   end;
1362389   +else do;
MPRINT(EM_DIAGRAM):   else do;
1362390   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1362391   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1362392   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1362393   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1362394   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1362395   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1362396   +   end;
MPRINT(EM_DIAGRAM):   end;
1362397   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1362398   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1362399   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1362400   +   end;
MPRINT(EM_DIAGRAM):   end;
1362401   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1362402   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1362403   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1362404   +   end;
MPRINT(EM_DIAGRAM):   end;
1362405   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1362406   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1362407   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1362408   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1362409   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362410   +   end;
MPRINT(EM_DIAGRAM):   end;
1362411   +end;
MPRINT(EM_DIAGRAM):   end;
1362412   +
1362413   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362414   +*** Checking missing input Interval
1362415   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1362416   +
1362417   +IF NMISS(
1362418   +   AcceptedCmpTotal ,
1362419   +   Frq ,
1362420   +   Income ,
1362421   +   Mnt ,
1362422   +   MntFruits ,
1362423   +   MntGoldProds ,
1362424   +   MntMeatProducts ,
1362425   +   MntSweetProducts ,
1362426   +   NumCatalogPurchases ,
1362427   +   NumWebPurchases ,
1362428   +   RFMstat ,
1362429   +   RMntFrq ,
1362430   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1362431   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1362432   +
1362433   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362434   +END;
MPRINT(EM_DIAGRAM):   END;
1362435   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362436   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1362437   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362438   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362439   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1362440   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1362441   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1362442   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1362443   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1362444   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1362445   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1362446   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1362447   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1362448   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1362449   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1362450   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1362451   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1362452   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1362453   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1362454   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1362455   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1362456   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1362457   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1362458   +END;
MPRINT(EM_DIAGRAM):   END;
1362459   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362460   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1362461   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1362462   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1362463   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1362464   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1362465   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1362466   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1362467   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1362468   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1362469   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1362470   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1362471   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1362472   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1362473   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1362474   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1362475   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1362476   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1362477   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1362478   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1362479   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1362480   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1362481   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1362482   +   ELSE S_NumCatalogPurchases
1362483   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1362484   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1362485   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1362486   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1362487   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1362488   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1362489   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1362490   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1362491   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1362492   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1362493   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1362494   +END;
MPRINT(EM_DIAGRAM):   END;
1362495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362496   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1362497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362498   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362499   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1362500   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362501   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362502   +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
1362503   +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
1362504   +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
1362505   +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
1362506   +          +     0.30688676656325 * S_MntSweetProducts
1362507   +          +    -0.31936466951531 * S_NumCatalogPurchases
1362508   +          +    -0.40503981142414 * S_NumWebPurchases
1362509   +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
1362510   +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits +
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 *
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq +
0.94794577395963 * S_Recency ;
1362511   +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
1362512   +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
1362513   +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
1362514   +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
1362515   +          +    -0.57511617685848 * S_MntSweetProducts
1362516   +          +    -0.80584166120088 * S_NumCatalogPurchases
1362517   +          +    -0.46226595005401 * S_NumWebPurchases
1362518   +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
1362519   +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits +
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 *
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq +
0.20830913301712 * S_Recency ;
1362520   +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
1362521   +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
1362522   +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
1362523   +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
1362524   +          +     0.13151485846279 * S_MntSweetProducts
1362525   +          +    -0.12544664418198 * S_NumCatalogPurchases
1362526   +          +     0.31794108898576 * S_NumWebPurchases
1362527   +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
1362528   +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits +
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 *
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 *
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq +
0.6850072112056 * S_Recency ;
1362529   +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
1362530   +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
1362531   +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
1362532   +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
1362533   +          +     0.55003060492603 * S_MntSweetProducts
1362534   +          +    -0.81895769875154 * S_NumCatalogPurchases
1362535   +          +    -0.73905791041531 * S_NumWebPurchases
1362536   +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
1362537   +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits +
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 *
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 *
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq +
0.31097790354738 * S_Recency ;
1362538   +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
1362539   +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 *
G_Marital_Status1 ;
1362540   +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
1362541   +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 *
G_Marital_Status1 ;
1362542   +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
1362543   +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 *
G_Marital_Status1 ;
1362544   +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
1362545   +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 *
G_Marital_Status1 ;
1362546   +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
1362547   +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
1362548   +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
1362549   +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
1362550   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1362551   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1362552   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1362553   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1362554   +END;
MPRINT(EM_DIAGRAM):   END;
1362555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362556   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1362557   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1362558   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1362559   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1362560   +END;
MPRINT(EM_DIAGRAM):   END;
1362561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362562   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1362563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362564   +
1362565   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1362566   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1362567   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1362568   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1362569   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1362570   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1362571   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1362572   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1362573   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1362574   +end;
MPRINT(EM_DIAGRAM):   end;
1362575   +else do;
MPRINT(EM_DIAGRAM):   else do;
1362576   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1362577   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1362578   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1362579   +   end;
MPRINT(EM_DIAGRAM):   end;
1362580   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1362581   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1362582   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1362583   +   end;
MPRINT(EM_DIAGRAM):   end;
1362584   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1362585   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1362586   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1362587   +   end;
MPRINT(EM_DIAGRAM):   end;
1362588   +end;
MPRINT(EM_DIAGRAM):   end;
1362589   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362590   +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
1362591   +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 +
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
1362592   +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
1362593   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1362594   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1362595   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1362596   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1362597   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1362598   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1362599   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1362600   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1362601   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1362602   +END;
MPRINT(EM_DIAGRAM):   END;
1362603   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362604   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1362605   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1362606   +END;
MPRINT(EM_DIAGRAM):   END;
1362607   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1362608   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1362609   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1362610   +END;
MPRINT(EM_DIAGRAM):   END;
1362611   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1362612   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1362613   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1362614   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1362615   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1362616   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1362617   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1362618   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362619   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1362620   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362621   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1362622   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1362623   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1362624   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1362625   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1362626   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1362627   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1362628   +END;
MPRINT(EM_DIAGRAM):   END;
1362629   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1362630   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1362631   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1362632   +drop
1362633   +H11
1362634   +H12
1362635   +H13
1362636   +H14
1362637   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1362638   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1362639   +* Renaming variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural26;
1362640   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362641   +* Renaming Posterior variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural26;
1362642   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362643   +drop Neural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar1;
1362644   +Neural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar1 = P_DepVar1;
1362645   +drop Neural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar0;
1362646   +Neural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar0 = P_DepVar0;
1362647   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362648   +* Renaming _WARN_ variable for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural26;
1362649   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362650   +length Neural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural26_WARN_ $4;
1362651   +drop Neural26_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural26_WARN_;
1362652   +Neural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural26_WARN_ = _WARN_;
1362653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362654   +* Ensmbl4: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 5 of 10;
1362655   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362656   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362657   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1362658   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1362659   +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
1362660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1362661   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1362662   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1362663   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1362664   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1362665   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1362666   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1362667   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1362668   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1362669   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1362670   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1362671   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1362672   +LENGTH _WARN_ $4
1362673   +      F_DepVar  $ 12
1362674   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1362675   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1362676   +
1362677   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1362678   +
1362679   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1362680   +
1362681   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1362682   +
1362683   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1362684   +
1362685   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1362686   +
1362687   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1362688   +
1362689   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1362690   +
1362691   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1362692   +
1362693   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1362694   +
1362695   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1362696   +
1362697   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1362698   +
1362699   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1362700   +
1362701   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1362702   +
1362703   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1362704   +
1362705   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1362706   +
1362707   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1362708   +
1362709   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1362710   +
1362711   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1362712   +
1362713   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1362714   +
1362715   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1362716   +
1362717   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1362718   +
1362719   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1362720   +
1362721   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1362722   +
1362723   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1362724   +
1362725   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1362726   +
1362727   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1362728   +
1362729   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1362730   +
1362731   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1362732   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1362733   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1362734   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1362735   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1362736   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1362737   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362738   +end;
MPRINT(EM_DIAGRAM):   end;
1362739   +else do;
MPRINT(EM_DIAGRAM):   else do;
1362740   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1362741   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1362742   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1362743   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1362744   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1362745   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1362746   +   end;
MPRINT(EM_DIAGRAM):   end;
1362747   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1362748   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1362749   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1362750   +   end;
MPRINT(EM_DIAGRAM):   end;
1362751   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1362752   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1362753   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1362754   +   end;
MPRINT(EM_DIAGRAM):   end;
1362755   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1362756   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1362757   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1362758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1362759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362760   +   end;
MPRINT(EM_DIAGRAM):   end;
1362761   +end;
MPRINT(EM_DIAGRAM):   end;
1362762   +
1362763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362764   +*** Checking missing input Interval
1362765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1362766   +
1362767   +IF NMISS(
1362768   +   AcceptedCmpTotal ,
1362769   +   Frq ,
1362770   +   Income ,
1362771   +   Mnt ,
1362772   +   MntFruits ,
1362773   +   MntGoldProds ,
1362774   +   MntMeatProducts ,
1362775   +   MntSweetProducts ,
1362776   +   NumCatalogPurchases ,
1362777   +   NumWebPurchases ,
1362778   +   RFMstat ,
1362779   +   RMntFrq ,
1362780   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1362781   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1362782   +
1362783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1362784   +END;
MPRINT(EM_DIAGRAM):   END;
1362785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362786   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1362787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362788   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362789   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1362790   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1362791   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1362792   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1362793   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1362794   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1362795   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1362796   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1362797   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1362798   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1362799   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1362800   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1362801   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1362802   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1362803   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1362804   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1362805   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1362806   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1362807   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1362808   +END;
MPRINT(EM_DIAGRAM):   END;
1362809   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362810   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1362811   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1362812   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1362813   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1362814   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1362815   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1362816   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1362817   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1362818   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1362819   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1362820   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1362821   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1362822   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1362823   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1362824   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1362825   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1362826   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1362827   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1362828   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1362829   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1362830   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1362831   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1362832   +   ELSE S_NumCatalogPurchases
1362833   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1362834   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1362835   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1362836   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1362837   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1362838   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1362839   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1362840   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1362841   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1362842   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1362843   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1362844   +END;
MPRINT(EM_DIAGRAM):   END;
1362845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362846   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1362847   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362849   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1362850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362852   +   H11  =     -0.0913777931029 * S_AcceptedCmpTotal  +     0.60888959215918 *
1362853   +        S_Frq  +    -0.24839207108705 * S_Income  +     0.12904699470351 *
1362854   +        S_Mnt  +     0.54811037634684 * S_MntFruits  +    -0.08131311507182 *
1362855   +        S_MntGoldProds  +    -1.97616589442941 * S_MntMeatProducts
1362856   +          +     0.82261116064356 * S_MntSweetProducts
1362857   +          +    -1.55909661993581 * S_NumCatalogPurchases
1362858   +          +    -0.16340954706378 * S_NumWebPurchases
1362859   +          +    -1.23424537997161 * S_RFMstat  +    -0.80043433144556 *
1362860   +        S_RMntFrq  +     0.30674447000925 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.0913777931029 * S_AcceptedCmpTotal + 0.60888959215918 * S_Frq +
-0.24839207108705 * S_Income + 0.12904699470351 * S_Mnt + 0.54811037634684 * S_MntFruits +
-0.08131311507182 * S_MntGoldProds + -1.97616589442941 * S_MntMeatProducts + 0.82261116064356
* S_MntSweetProducts + -1.55909661993581 * S_NumCatalogPurchases + -0.16340954706378 *
S_NumWebPurchases + -1.23424537997161 * S_RFMstat + -0.80043433144556 * S_RMntFrq +
0.30674447000925 * S_Recency ;
1362861   +   H12  =     0.66910867066957 * S_AcceptedCmpTotal  +    -0.81073730531351 *
1362862   +        S_Frq  +    -0.92904249004165 * S_Income  +    -0.71459542981691 *
1362863   +        S_Mnt  +    -0.40393540462056 * S_MntFruits  +    -0.20281878016562 *
1362864   +        S_MntGoldProds  +     0.17444715052802 * S_MntMeatProducts
1362865   +          +     0.16618230229073 * S_MntSweetProducts
1362866   +          +     0.80060397308165 * S_NumCatalogPurchases
1362867   +          +     0.55840526773277 * S_NumWebPurchases
1362868   +          +    -0.09080307227601 * S_RFMstat  +     0.05982566462633 *
1362869   +        S_RMntFrq  +    -0.42099196648583 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.66910867066957 * S_AcceptedCmpTotal + -0.81073730531351 * S_Frq
+ -0.92904249004165 * S_Income + -0.71459542981691 * S_Mnt + -0.40393540462056 * S_MntFruits +
-0.20281878016562 * S_MntGoldProds + 0.17444715052802 * S_MntMeatProducts + 0.16618230229073 *
S_MntSweetProducts + 0.80060397308165 * S_NumCatalogPurchases + 0.55840526773277 *
S_NumWebPurchases + -0.09080307227601 * S_RFMstat + 0.05982566462633 * S_RMntFrq +
-0.42099196648583 * S_Recency ;
1362870   +   H13  =    -0.15105936730245 * S_AcceptedCmpTotal  +     1.16357039711749 *
1362871   +        S_Frq  +     0.22437164680037 * S_Income  +     1.43365592130923 *
1362872   +        S_Mnt  +    -0.14312453132189 * S_MntFruits  +    -0.31473112363001 *
1362873   +        S_MntGoldProds  +    -2.13920511789248 * S_MntMeatProducts
1362874   +          +    -0.17184538549757 * S_MntSweetProducts
1362875   +          +    -0.69381764338971 * S_NumCatalogPurchases
1362876   +          +    -1.00049208220128 * S_NumWebPurchases
1362877   +          +    -0.12191208845807 * S_RFMstat  +     1.62722348145663 *
1362878   +        S_RMntFrq  +     0.22384852404779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.15105936730245 * S_AcceptedCmpTotal + 1.16357039711749 * S_Frq
+ 0.22437164680037 * S_Income + 1.43365592130923 * S_Mnt + -0.14312453132189 * S_MntFruits +
-0.31473112363001 * S_MntGoldProds + -2.13920511789248 * S_MntMeatProducts + -0.17184538549757
* S_MntSweetProducts + -0.69381764338971 * S_NumCatalogPurchases + -1.00049208220128 *
S_NumWebPurchases + -0.12191208845807 * S_RFMstat + 1.62722348145663 * S_RMntFrq +
0.22384852404779 * S_Recency ;
1362879   +   H14  =    -0.30303374230593 * S_AcceptedCmpTotal  +    -0.62477404644887 *
1362880   +        S_Frq  +    -0.43520735188047 * S_Income  +     0.05599198595582 *
1362881   +        S_Mnt  +     0.00600099391846 * S_MntFruits  +    -0.09476560363866 *
1362882   +        S_MntGoldProds  +    -0.00009188415985 * S_MntMeatProducts
1362883   +          +     0.23752183521653 * S_MntSweetProducts
1362884   +          +    -0.28855285082926 * S_NumCatalogPurchases
1362885   +          +     0.22915352115856 * S_NumWebPurchases
1362886   +          +    -0.11884330592736 * S_RFMstat  +    -0.64276224884242 *
1362887   +        S_RMntFrq  +     0.92099032026404 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.30303374230593 * S_AcceptedCmpTotal + -0.62477404644887 * S_Frq
+ -0.43520735188047 * S_Income + 0.05599198595582 * S_Mnt + 0.00600099391846 * S_MntFruits +
-0.09476560363866 * S_MntGoldProds + -0.00009188415985 * S_MntMeatProducts + 0.23752183521653
* S_MntSweetProducts + -0.28855285082926 * S_NumCatalogPurchases + 0.22915352115856 *
S_NumWebPurchases + -0.11884330592736 * S_RFMstat + -0.64276224884242 * S_RMntFrq +
0.92099032026404 * S_Recency ;
1362888   +   H15  =     0.69494967673266 * S_AcceptedCmpTotal  +    -1.38070782248656 *
1362889   +        S_Frq  +    -0.32839057322808 * S_Income  +    -0.08175715513223 *
1362890   +        S_Mnt  +    -0.20002754133592 * S_MntFruits  +    -0.11045646973193 *
1362891   +        S_MntGoldProds  +     -0.0204672560747 * S_MntMeatProducts
1362892   +          +     0.02112120768705 * S_MntSweetProducts
1362893   +          +     0.56037303009349 * S_NumCatalogPurchases
1362894   +          +     0.16645734799944 * S_NumWebPurchases
1362895   +          +    -0.08683405137098 * S_RFMstat  +     0.67174291855061 *
1362896   +        S_RMntFrq  +    -0.73931649005757 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.69494967673266 * S_AcceptedCmpTotal + -1.38070782248656 * S_Frq
+ -0.32839057322808 * S_Income + -0.08175715513223 * S_Mnt + -0.20002754133592 * S_MntFruits +
-0.11045646973193 * S_MntGoldProds + -0.0204672560747 * S_MntMeatProducts + 0.02112120768705 *
S_MntSweetProducts + 0.56037303009349 * S_NumCatalogPurchases + 0.16645734799944 *
S_NumWebPurchases + -0.08683405137098 * S_RFMstat + 0.67174291855061 * S_RMntFrq +
-0.73931649005757 * S_Recency ;
1362897   +   H11  = H11  +    -0.06672320657697 * G_Marital_Status0
1362898   +          +     0.26608073179469 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06672320657697 * G_Marital_Status0 + 0.26608073179469 *
G_Marital_Status1 ;
1362899   +   H12  = H12  +    -0.50978529257766 * G_Marital_Status0
1362900   +          +    -0.79456480121636 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.50978529257766 * G_Marital_Status0 + -0.79456480121636 *
G_Marital_Status1 ;
1362901   +   H13  = H13  +     0.10010493470347 * G_Marital_Status0
1362902   +          +    -0.36513536279898 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.10010493470347 * G_Marital_Status0 + -0.36513536279898 *
G_Marital_Status1 ;
1362903   +   H14  = H14  +    -0.69765939438555 * G_Marital_Status0
1362904   +          +    -0.11679147660596 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.69765939438555 * G_Marital_Status0 + -0.11679147660596 *
G_Marital_Status1 ;
1362905   +   H15  = H15  +     0.53791694284218 * G_Marital_Status0
1362906   +          +      0.4394922352118 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53791694284218 * G_Marital_Status0 + 0.4394922352118 *
G_Marital_Status1 ;
1362907   +   H11  =    -2.24311986759404 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24311986759404 + H11 ;
1362908   +   H12  =    -0.72214357959265 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.72214357959265 + H12 ;
1362909   +   H13  =     0.67332529871332 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.67332529871332 + H13 ;
1362910   +   H14  =      3.2917179565774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.2917179565774 + H14 ;
1362911   +   H15  =     0.60464077032534 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.60464077032534 + H15 ;
1362912   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1362913   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1362914   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1362915   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1362916   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1362917   +END;
MPRINT(EM_DIAGRAM):   END;
1362918   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362919   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1362920   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1362921   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1362922   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1362923   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1362924   +END;
MPRINT(EM_DIAGRAM):   END;
1362925   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362926   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1362927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362928   +
1362929   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1362930   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1362931   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1362932   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1362933   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1362934   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1362935   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1362936   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1362937   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1362938   +end;
MPRINT(EM_DIAGRAM):   end;
1362939   +else do;
MPRINT(EM_DIAGRAM):   else do;
1362940   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1362941   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1362942   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1362943   +   end;
MPRINT(EM_DIAGRAM):   end;
1362944   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1362945   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1362946   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1362947   +   end;
MPRINT(EM_DIAGRAM):   end;
1362948   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1362949   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1362950   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1362951   +   end;
MPRINT(EM_DIAGRAM):   end;
1362952   +end;
MPRINT(EM_DIAGRAM):   end;
1362953   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1362954   +   P_DepVar1  =    -3.62613662430208 * H11  +     1.55068674489409 * H12
1362955   +          +    -3.01839961891379 * H13  +    -4.27170883586144 * H14
1362956   +          +     2.62887939759638 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.62613662430208 * H11 + 1.55068674489409 * H12 +
-3.01839961891379 * H13 + -4.27170883586144 * H14 + 2.62887939759638 * H15 ;
1362957   +   P_DepVar1  =    -1.19158347943696 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.19158347943696 + P_DepVar1 ;
1362958   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1362959   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1362960   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1362961   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1362962   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1362963   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1362964   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1362965   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1362966   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1362967   +END;
MPRINT(EM_DIAGRAM):   END;
1362968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1362969   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1362970   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1362971   +END;
MPRINT(EM_DIAGRAM):   END;
1362972   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1362973   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1362974   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1362975   +END;
MPRINT(EM_DIAGRAM):   END;
1362976   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1362977   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1362978   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1362979   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1362980   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1362981   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1362982   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1362983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362984   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1362985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1362986   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1362987   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1362988   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1362989   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1362990   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1362991   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1362992   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1362993   +END;
MPRINT(EM_DIAGRAM):   END;
1362994   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1362995   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1362996   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1362997   +drop
1362998   +H11
1362999   +H12
1363000   +H13
1363001   +H14
1363002   +H15
1363003   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1363004   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1363005   +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
1363006   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363007   +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
1363008   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363009   +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
1363010   +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
1363011   +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
1363012   +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
1363013   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363014   +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
1363015   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363016   +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
1363017   +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
1363018   +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
1363019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363020   +* Ensmbl4: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 6 of 10;
1363021   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363022   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363023   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1363024   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1363025   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
1363026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363027   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1363028   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1363029   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1363030   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1363031   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1363032   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1363033   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1363034   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1363035   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1363036   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1363037   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1363038   +LENGTH _WARN_ $4
1363039   +      F_DepVar  $ 12
1363040   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1363041   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1363042   +
1363043   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1363044   +
1363045   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1363046   +
1363047   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1363048   +
1363049   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1363050   +
1363051   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1363052   +
1363053   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1363054   +
1363055   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1363056   +
1363057   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1363058   +
1363059   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1363060   +
1363061   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1363062   +
1363063   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1363064   +
1363065   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1363066   +
1363067   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1363068   +
1363069   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1363070   +
1363071   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1363072   +
1363073   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1363074   +
1363075   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1363076   +
1363077   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1363078   +
1363079   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1363080   +
1363081   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1363082   +
1363083   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1363084   +
1363085   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1363086   +
1363087   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1363088   +
1363089   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1363090   +
1363091   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1363092   +
1363093   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1363094   +
1363095   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1363096   +
1363097   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1363098   +
1363099   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1363100   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1363101   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1363102   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1363103   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1363104   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1363105   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1363106   +end;
MPRINT(EM_DIAGRAM):   end;
1363107   +else do;
MPRINT(EM_DIAGRAM):   else do;
1363108   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1363109   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1363110   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1363111   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1363112   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1363113   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1363114   +   end;
MPRINT(EM_DIAGRAM):   end;
1363115   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1363116   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1363117   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1363118   +   end;
MPRINT(EM_DIAGRAM):   end;
1363119   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1363120   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1363121   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1363122   +   end;
MPRINT(EM_DIAGRAM):   end;
1363123   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1363124   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1363125   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1363126   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1363127   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1363128   +   end;
MPRINT(EM_DIAGRAM):   end;
1363129   +end;
MPRINT(EM_DIAGRAM):   end;
1363130   +
1363131   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363132   +*** Checking missing input Interval
1363133   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1363134   +
1363135   +IF NMISS(
1363136   +   AcceptedCmpTotal ,
1363137   +   Frq ,
1363138   +   Income ,
1363139   +   Mnt ,
1363140   +   MntFruits ,
1363141   +   MntGoldProds ,
1363142   +   MntMeatProducts ,
1363143   +   MntSweetProducts ,
1363144   +   NumCatalogPurchases ,
1363145   +   NumWebPurchases ,
1363146   +   RFMstat ,
1363147   +   RMntFrq ,
1363148   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1363149   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1363150   +
1363151   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1363152   +END;
MPRINT(EM_DIAGRAM):   END;
1363153   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363154   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1363155   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363156   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1363157   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1363158   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1363159   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1363160   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1363161   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1363162   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1363163   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1363164   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1363165   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1363166   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1363167   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1363168   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1363169   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1363170   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1363171   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1363172   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1363173   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1363174   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1363175   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1363176   +END;
MPRINT(EM_DIAGRAM):   END;
1363177   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363178   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1363179   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1363180   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1363181   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1363182   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1363183   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1363184   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1363185   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1363186   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1363187   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1363188   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1363189   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1363190   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1363191   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1363192   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1363193   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1363194   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1363195   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1363196   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1363197   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1363198   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1363199   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1363200   +   ELSE S_NumCatalogPurchases
1363201   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1363202   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1363203   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1363204   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1363205   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1363206   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1363207   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1363208   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1363209   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1363210   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1363211   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1363212   +END;
MPRINT(EM_DIAGRAM):   END;
1363213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363214   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1363215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363216   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363217   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1363218   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363219   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1363220   +   H11  =     0.82631693872377 * S_AcceptedCmpTotal  +    -0.72798667283699 *
1363221   +        S_Frq  +     0.15911649036122 * S_Income  +    -0.60456350734571 *
1363222   +        S_Mnt  +    -0.74377544096034 * S_MntFruits  +    -0.12263914971644 *
1363223   +        S_MntGoldProds  +     0.17677796203072 * S_MntMeatProducts
1363224   +          +    -0.50748691839629 * S_MntSweetProducts
1363225   +          +     0.64296516693494 * S_NumCatalogPurchases
1363226   +          +     1.28350004565407 * S_NumWebPurchases
1363227   +          +     0.21030868312225 * S_RFMstat  +    -0.39695828920844 *
1363228   +        S_RMntFrq  +    -0.89895080438896 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.82631693872377 * S_AcceptedCmpTotal + -0.72798667283699 * S_Frq
+ 0.15911649036122 * S_Income + -0.60456350734571 * S_Mnt + -0.74377544096034 * S_MntFruits +
-0.12263914971644 * S_MntGoldProds + 0.17677796203072 * S_MntMeatProducts + -0.50748691839629
* S_MntSweetProducts + 0.64296516693494 * S_NumCatalogPurchases + 1.28350004565407 *
S_NumWebPurchases + 0.21030868312225 * S_RFMstat + -0.39695828920844 * S_RMntFrq +
-0.89895080438896 * S_Recency ;
1363229   +   H12  =     0.11667862669372 * S_AcceptedCmpTotal  +    -1.01106011934145 *
1363230   +        S_Frq  +    -0.17716076384549 * S_Income  +    -0.24293226300477 *
1363231   +        S_Mnt  +     -0.0787175302374 * S_MntFruits  +     0.00532047873906 *
1363232   +        S_MntGoldProds  +     1.29466535738179 * S_MntMeatProducts
1363233   +          +     0.17384010941361 * S_MntSweetProducts
1363234   +          +     0.92948439877935 * S_NumCatalogPurchases
1363235   +          +     0.22516927332959 * S_NumWebPurchases
1363236   +          +     0.05028067999269 * S_RFMstat  +     0.78999743446302 *
1363237   +        S_RMntFrq  +    -0.20939117765596 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.11667862669372 * S_AcceptedCmpTotal + -1.01106011934145 * S_Frq
+ -0.17716076384549 * S_Income + -0.24293226300477 * S_Mnt + -0.0787175302374 * S_MntFruits +
0.00532047873906 * S_MntGoldProds + 1.29466535738179 * S_MntMeatProducts + 0.17384010941361 *
S_MntSweetProducts + 0.92948439877935 * S_NumCatalogPurchases + 0.22516927332959 *
S_NumWebPurchases + 0.05028067999269 * S_RFMstat + 0.78999743446302 * S_RMntFrq +
-0.20939117765596 * S_Recency ;
1363238   +   H13  =     0.04357769443186 * S_AcceptedCmpTotal  +     0.15406703269953 *
1363239   +        S_Frq  +     0.30195133876726 * S_Income  +     0.28819360890276 *
1363240   +        S_Mnt  +     0.09892781576641 * S_MntFruits  +     0.49225212949739 *
1363241   +        S_MntGoldProds  +     0.29770764897396 * S_MntMeatProducts
1363242   +          +     -0.2000873376449 * S_MntSweetProducts
1363243   +          +     0.12566784354514 * S_NumCatalogPurchases
1363244   +          +     0.02104112723179 * S_NumWebPurchases
1363245   +          +    -0.43415514019088 * S_RFMstat  +    -0.17022294749993 *
1363246   +        S_RMntFrq  +     0.30357171575981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.04357769443186 * S_AcceptedCmpTotal + 0.15406703269953 * S_Frq +
0.30195133876726 * S_Income + 0.28819360890276 * S_Mnt + 0.09892781576641 * S_MntFruits +
0.49225212949739 * S_MntGoldProds + 0.29770764897396 * S_MntMeatProducts + -0.2000873376449 *
S_MntSweetProducts + 0.12566784354514 * S_NumCatalogPurchases + 0.02104112723179 *
S_NumWebPurchases + -0.43415514019088 * S_RFMstat + -0.17022294749993 * S_RMntFrq +
0.30357171575981 * S_Recency ;
1363247   +   H14  =     0.89017550554492 * S_AcceptedCmpTotal  +    -1.24866436391906 *
1363248   +        S_Frq  +    -0.83458596455814 * S_Income  +    -0.66942952173326 *
1363249   +        S_Mnt  +    -0.22543485387319 * S_MntFruits  +    -0.10688181972933 *
1363250   +        S_MntGoldProds  +     0.85050982143614 * S_MntMeatProducts
1363251   +          +     0.12117759215087 * S_MntSweetProducts
1363252   +          +     0.80203773582494 * S_NumCatalogPurchases
1363253   +          +     0.17374160185958 * S_NumWebPurchases
1363254   +          +    -0.12855081884938 * S_RFMstat  +     0.45921570261849 *
1363255   +        S_RMntFrq  +    -1.09092321008268 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.89017550554492 * S_AcceptedCmpTotal + -1.24866436391906 * S_Frq
+ -0.83458596455814 * S_Income + -0.66942952173326 * S_Mnt + -0.22543485387319 * S_MntFruits +
-0.10688181972933 * S_MntGoldProds + 0.85050982143614 * S_MntMeatProducts + 0.12117759215087 *
S_MntSweetProducts + 0.80203773582494 * S_NumCatalogPurchases + 0.17374160185958 *
S_NumWebPurchases + -0.12855081884938 * S_RFMstat + 0.45921570261849 * S_RMntFrq +
-1.09092321008268 * S_Recency ;
1363256   +   H15  =    -0.68386094226468 * S_AcceptedCmpTotal  +    -0.44368664779237 *
1363257   +        S_Frq  +    -0.63118593216016 * S_Income  +     -0.8549673235883 *
1363258   +        S_Mnt  +     -0.4174049500068 * S_MntFruits  +    -0.02221537411568 *
1363259   +        S_MntGoldProds  +      0.0634004340553 * S_MntMeatProducts
1363260   +          +      0.2989820991785 * S_MntSweetProducts
1363261   +          +     0.04398783976739 * S_NumCatalogPurchases
1363262   +          +     0.40368640676572 * S_NumWebPurchases
1363263   +          +    -0.50987577368598 * S_RFMstat  +    -0.24616064467414 *
1363264   +        S_RMntFrq  +    -0.01932947962302 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.68386094226468 * S_AcceptedCmpTotal + -0.44368664779237 * S_Frq
+ -0.63118593216016 * S_Income + -0.8549673235883 * S_Mnt + -0.4174049500068 * S_MntFruits +
-0.02221537411568 * S_MntGoldProds + 0.0634004340553 * S_MntMeatProducts + 0.2989820991785 *
S_MntSweetProducts + 0.04398783976739 * S_NumCatalogPurchases + 0.40368640676572 *
S_NumWebPurchases + -0.50987577368598 * S_RFMstat + -0.24616064467414 * S_RMntFrq +
-0.01932947962302 * S_Recency ;
1363265   +   H16  =    -0.69633356297868 * S_AcceptedCmpTotal  +     0.25580106272723 *
1363266   +        S_Frq  +    -0.15941056497212 * S_Income  +     1.01091236070049 *
1363267   +        S_Mnt  +    -0.16421220259024 * S_MntFruits  +    -0.28158219367628 *
1363268   +        S_MntGoldProds  +    -0.80473865500071 * S_MntMeatProducts
1363269   +          +     0.10950268819222 * S_MntSweetProducts
1363270   +          +    -0.59025524598908 * S_NumCatalogPurchases
1363271   +          +    -0.02069421817896 * S_NumWebPurchases
1363272   +          +     -0.3615429826151 * S_RFMstat  +    -0.41611769964424 *
1363273   +        S_RMntFrq  +     0.96940490611968 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.69633356297868 * S_AcceptedCmpTotal + 0.25580106272723 * S_Frq
+ -0.15941056497212 * S_Income + 1.01091236070049 * S_Mnt + -0.16421220259024 * S_MntFruits +
-0.28158219367628 * S_MntGoldProds + -0.80473865500071 * S_MntMeatProducts + 0.10950268819222
* S_MntSweetProducts + -0.59025524598908 * S_NumCatalogPurchases + -0.02069421817896 *
S_NumWebPurchases + -0.3615429826151 * S_RFMstat + -0.41611769964424 * S_RMntFrq +
0.96940490611968 * S_Recency ;
1363274   +   H11  = H11  +        0.45545922927 * G_Marital_Status0
1363275   +          +     0.12818067118838 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.45545922927 * G_Marital_Status0 + 0.12818067118838 *
G_Marital_Status1 ;
1363276   +   H12  = H12  +    -0.20371081343188 * G_Marital_Status0
1363277   +          +      0.0869800653918 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20371081343188 * G_Marital_Status0 + 0.0869800653918 *
G_Marital_Status1 ;
1363278   +   H13  = H13  +    -0.33845151454936 * G_Marital_Status0
1363279   +          +    -0.43733288680739 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.33845151454936 * G_Marital_Status0 + -0.43733288680739 *
G_Marital_Status1 ;
1363280   +   H14  = H14  +     0.11759980770855 * G_Marital_Status0
1363281   +          +    -0.01680808105992 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11759980770855 * G_Marital_Status0 + -0.01680808105992 *
G_Marital_Status1 ;
1363282   +   H15  = H15  +    -0.20605143700963 * G_Marital_Status0
1363283   +          +     0.04987739539035 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.20605143700963 * G_Marital_Status0 + 0.04987739539035 *
G_Marital_Status1 ;
1363284   +   H16  = H16  +    -0.99478088512585 * G_Marital_Status0
1363285   +          +    -0.35983290751115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.99478088512585 * G_Marital_Status0 + -0.35983290751115 *
G_Marital_Status1 ;
1363286   +   H11  =    -0.72044866217862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72044866217862 + H11 ;
1363287   +   H12  =     0.73797915336977 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73797915336977 + H12 ;
1363288   +   H13  =     0.82989235994379 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.82989235994379 + H13 ;
1363289   +   H14  =    -0.48103007102008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.48103007102008 + H14 ;
1363290   +   H15  =     -0.4352791778041 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4352791778041 + H15 ;
1363291   +   H16  =      2.7027355184778 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.7027355184778 + H16 ;
1363292   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1363293   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1363294   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1363295   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1363296   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1363297   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1363298   +END;
MPRINT(EM_DIAGRAM):   END;
1363299   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363300   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1363301   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1363302   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1363303   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1363304   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1363305   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1363306   +END;
MPRINT(EM_DIAGRAM):   END;
1363307   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363308   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1363309   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363310   +
1363311   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1363312   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1363313   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1363314   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1363315   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1363316   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1363317   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1363318   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1363319   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1363320   +end;
MPRINT(EM_DIAGRAM):   end;
1363321   +else do;
MPRINT(EM_DIAGRAM):   else do;
1363322   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1363323   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1363324   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1363325   +   end;
MPRINT(EM_DIAGRAM):   end;
1363326   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1363327   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1363328   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1363329   +   end;
MPRINT(EM_DIAGRAM):   end;
1363330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1363331   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1363332   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1363333   +   end;
MPRINT(EM_DIAGRAM):   end;
1363334   +end;
MPRINT(EM_DIAGRAM):   end;
1363335   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1363336   +   P_DepVar1  =     1.53646139060035 * H11  +     1.98227889313385 * H12
1363337   +          +     0.69366657666187 * H13  +      1.4458071195477 * H14
1363338   +          +     0.81229467076169 * H15  +     -2.4762533950508 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.53646139060035 * H11 + 1.98227889313385 * H12 +
0.69366657666187 * H13 + 1.4458071195477 * H14 + 0.81229467076169 * H15 + -2.4762533950508 *
H16 ;
1363339   +   P_DepVar1  =    -0.95559108382775 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.95559108382775 + P_DepVar1 ;
1363340   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1363341   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1363342   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1363343   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1363344   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1363345   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1363346   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1363347   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1363348   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1363349   +END;
MPRINT(EM_DIAGRAM):   END;
1363350   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363351   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1363352   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1363353   +END;
MPRINT(EM_DIAGRAM):   END;
1363354   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1363355   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1363356   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1363357   +END;
MPRINT(EM_DIAGRAM):   END;
1363358   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1363359   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1363360   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1363361   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1363362   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1363363   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1363364   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1363365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363366   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1363367   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363368   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1363369   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1363370   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363371   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1363372   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1363373   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1363374   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1363375   +END;
MPRINT(EM_DIAGRAM):   END;
1363376   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1363377   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1363378   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1363379   +drop
1363380   +H11
1363381   +H12
1363382   +H13
1363383   +H14
1363384   +H15
1363385   +H16
1363386   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1363387   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1363388   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
1363389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363390   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
1363391   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363392   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
1363393   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
1363394   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
1363395   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
1363396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363397   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
1363398   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363399   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
1363400   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
1363401   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
1363402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363403   +* Ensmbl4: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 7 of 10;
1363404   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363405   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363406   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1363407   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1363408   +* NODE: Neural8;
MPRINT(EM_DIAGRAM):   * NODE: Neural8;
1363409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363410   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1363411   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1363412   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1363413   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1363414   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1363415   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1363416   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1363417   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1363418   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1363419   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1363420   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1363421   +LENGTH _WARN_ $4
1363422   +      F_DepVar  $ 12
1363423   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1363424   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1363425   +
1363426   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1363427   +
1363428   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1363429   +
1363430   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1363431   +
1363432   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1363433   +
1363434   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1363435   +
1363436   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1363437   +
1363438   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1363439   +
1363440   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1363441   +
1363442   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1363443   +
1363444   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1363445   +
1363446   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1363447   +
1363448   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1363449   +
1363450   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1363451   +
1363452   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1363453   +
1363454   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1363455   +
1363456   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1363457   +
1363458   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1363459   +
1363460   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1363461   +
1363462   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1363463   +
1363464   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1363465   +
1363466   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1363467   +
1363468   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1363469   +
1363470   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1363471   +
1363472   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1363473   +
1363474   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1363475   +
1363476   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1363477   +
1363478   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1363479   +
1363480   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1363481   +
1363482   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1363483   +
1363484   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1363485   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1363486   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1363487   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1363488   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1363489   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1363490   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1363491   +end;
MPRINT(EM_DIAGRAM):   end;
1363492   +else do;
MPRINT(EM_DIAGRAM):   else do;
1363493   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1363494   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1363495   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1363496   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1363497   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1363498   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1363499   +   end;
MPRINT(EM_DIAGRAM):   end;
1363500   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1363501   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1363502   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1363503   +   end;
MPRINT(EM_DIAGRAM):   end;
1363504   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1363505   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1363506   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1363507   +   end;
MPRINT(EM_DIAGRAM):   end;
1363508   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1363509   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1363510   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1363511   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1363512   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1363513   +   end;
MPRINT(EM_DIAGRAM):   end;
1363514   +end;
MPRINT(EM_DIAGRAM):   end;
1363515   +
1363516   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363517   +*** Checking missing input Interval
1363518   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1363519   +
1363520   +IF NMISS(
1363521   +   AcceptedCmpTotal ,
1363522   +   Frq ,
1363523   +   Income ,
1363524   +   Mnt ,
1363525   +   MntFruits ,
1363526   +   MntGoldProds ,
1363527   +   MntMeatProducts ,
1363528   +   MntSweetProducts ,
1363529   +   NumCatalogPurchases ,
1363530   +   NumWebPurchases ,
1363531   +   RFMstat ,
1363532   +   RMntFrq ,
1363533   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1363534   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1363535   +
1363536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1363537   +END;
MPRINT(EM_DIAGRAM):   END;
1363538   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363539   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1363540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363541   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1363542   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1363543   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1363544   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1363545   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1363546   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1363547   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1363548   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1363549   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1363550   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1363551   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1363552   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1363553   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1363554   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1363555   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1363556   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1363557   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1363558   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1363559   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1363560   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1363561   +END;
MPRINT(EM_DIAGRAM):   END;
1363562   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363563   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1363564   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1363565   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1363566   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1363567   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1363568   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1363569   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1363570   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1363571   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1363572   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1363573   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1363574   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1363575   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1363576   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1363577   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1363578   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1363579   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1363580   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1363581   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1363582   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1363583   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1363584   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1363585   +   ELSE S_NumCatalogPurchases
1363586   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1363587   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1363588   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1363589   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1363590   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1363591   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1363592   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1363593   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1363594   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1363595   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1363596   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1363597   +END;
MPRINT(EM_DIAGRAM):   END;
1363598   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363599   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1363600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363601   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363602   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1363603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363604   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1363605   +   H11  =     0.00179298802892 * S_AcceptedCmpTotal  +     0.01784009275608 *
1363606   +        S_Frq  +     0.69409617936033 * S_Income  +    -0.28641816886809 *
1363607   +        S_Mnt  +     0.21745721720131 * S_MntFruits  +    -0.38924339437831 *
1363608   +        S_MntGoldProds  +     0.48302006424722 * S_MntMeatProducts
1363609   +          +     0.32217287817742 * S_MntSweetProducts
1363610   +          +     0.37317765763795 * S_NumCatalogPurchases
1363611   +          +     0.31712152035565 * S_NumWebPurchases
1363612   +          +    -0.00101711956377 * S_RFMstat  +    -0.50814709993968 *
1363613   +        S_RMntFrq  +     -0.2674878177058 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.00179298802892 * S_AcceptedCmpTotal + 0.01784009275608 * S_Frq +
0.69409617936033 * S_Income + -0.28641816886809 * S_Mnt + 0.21745721720131 * S_MntFruits +
-0.38924339437831 * S_MntGoldProds + 0.48302006424722 * S_MntMeatProducts + 0.32217287817742 *
S_MntSweetProducts + 0.37317765763795 * S_NumCatalogPurchases + 0.31712152035565 *
S_NumWebPurchases + -0.00101711956377 * S_RFMstat + -0.50814709993968 * S_RMntFrq +
-0.2674878177058 * S_Recency ;
1363614   +   H12  =    -0.13522102699695 * S_AcceptedCmpTotal  +     0.62468738576113 *
1363615   +        S_Frq  +     0.33525631913577 * S_Income  +     0.49596519260867 *
1363616   +        S_Mnt  +    -0.07840703709606 * S_MntFruits  +    -0.13407863606593 *
1363617   +        S_MntGoldProds  +     0.07892036440987 * S_MntMeatProducts
1363618   +          +    -0.19345300638771 * S_MntSweetProducts
1363619   +          +     0.37926806634405 * S_NumCatalogPurchases
1363620   +          +     0.17926711405358 * S_NumWebPurchases
1363621   +          +    -0.56247478537915 * S_RFMstat  +    -0.83222377723575 *
1363622   +        S_RMntFrq  +     0.06152905340066 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.13522102699695 * S_AcceptedCmpTotal + 0.62468738576113 * S_Frq
+ 0.33525631913577 * S_Income + 0.49596519260867 * S_Mnt + -0.07840703709606 * S_MntFruits +
-0.13407863606593 * S_MntGoldProds + 0.07892036440987 * S_MntMeatProducts + -0.19345300638771
* S_MntSweetProducts + 0.37926806634405 * S_NumCatalogPurchases + 0.17926711405358 *
S_NumWebPurchases + -0.56247478537915 * S_RFMstat + -0.83222377723575 * S_RMntFrq +
0.06152905340066 * S_Recency ;
1363623   +   H13  =     0.52085707566671 * S_AcceptedCmpTotal  +    -0.43119445779869 *
1363624   +        S_Frq  +    -0.38451776725994 * S_Income  +    -0.43893571865073 *
1363625   +        S_Mnt  +    -0.18147736658896 * S_MntFruits  +    -0.02759924916073 *
1363626   +        S_MntGoldProds  +     0.41710329802839 * S_MntMeatProducts
1363627   +          +    -0.11238728777733 * S_MntSweetProducts
1363628   +          +     0.39955878063516 * S_NumCatalogPurchases
1363629   +          +     0.37701883017309 * S_NumWebPurchases
1363630   +          +    -0.03011513977353 * S_RFMstat  +     0.05558894855861 *
1363631   +        S_RMntFrq  +    -0.53097904952065 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.52085707566671 * S_AcceptedCmpTotal + -0.43119445779869 * S_Frq
+ -0.38451776725994 * S_Income + -0.43893571865073 * S_Mnt + -0.18147736658896 * S_MntFruits +
-0.02759924916073 * S_MntGoldProds + 0.41710329802839 * S_MntMeatProducts + -0.11238728777733
* S_MntSweetProducts + 0.39955878063516 * S_NumCatalogPurchases + 0.37701883017309 *
S_NumWebPurchases + -0.03011513977353 * S_RFMstat + 0.05558894855861 * S_RMntFrq +
-0.53097904952065 * S_Recency ;
1363632   +   H14  =     0.01011198652387 * S_AcceptedCmpTotal  +     0.50914419302954 *
1363633   +        S_Frq  +     0.36935051571942 * S_Income  +    -0.14541266632981 *
1363634   +        S_Mnt  +     0.70809835135242 * S_MntFruits  +     0.17636828127553 *
1363635   +        S_MntGoldProds  +    -0.39065133922684 * S_MntMeatProducts
1363636   +          +      0.2693109494597 * S_MntSweetProducts
1363637   +          +      0.1081864929712 * S_NumCatalogPurchases
1363638   +          +     0.04463189601793 * S_NumWebPurchases
1363639   +          +     0.17598396305598 * S_RFMstat  +    -0.26428585222285 *
1363640   +        S_RMntFrq  +    -0.35066600356743 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.01011198652387 * S_AcceptedCmpTotal + 0.50914419302954 * S_Frq +
0.36935051571942 * S_Income + -0.14541266632981 * S_Mnt + 0.70809835135242 * S_MntFruits +
0.17636828127553 * S_MntGoldProds + -0.39065133922684 * S_MntMeatProducts + 0.2693109494597 *
S_MntSweetProducts + 0.1081864929712 * S_NumCatalogPurchases + 0.04463189601793 *
S_NumWebPurchases + 0.17598396305598 * S_RFMstat + -0.26428585222285 * S_RMntFrq +
-0.35066600356743 * S_Recency ;
1363641   +   H15  =     0.25974646459449 * S_AcceptedCmpTotal  +    -0.01084764302849 *
1363642   +        S_Frq  +    -0.25453296848623 * S_Income  +    -0.24485320547361 *
1363643   +        S_Mnt  +      0.3523119885561 * S_MntFruits  +    -0.23948230282173 *
1363644   +        S_MntGoldProds  +    -0.61077291955379 * S_MntMeatProducts
1363645   +          +     0.69250340520766 * S_MntSweetProducts
1363646   +          +    -0.92476508978686 * S_NumCatalogPurchases
1363647   +          +    -0.85062812213631 * S_NumWebPurchases
1363648   +          +    -0.13668170504261 * S_RFMstat  +    -0.39159958659757 *
1363649   +        S_RMntFrq  +     0.31541831647045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.25974646459449 * S_AcceptedCmpTotal + -0.01084764302849 * S_Frq
+ -0.25453296848623 * S_Income + -0.24485320547361 * S_Mnt + 0.3523119885561 * S_MntFruits +
-0.23948230282173 * S_MntGoldProds + -0.61077291955379 * S_MntMeatProducts + 0.69250340520766
* S_MntSweetProducts + -0.92476508978686 * S_NumCatalogPurchases + -0.85062812213631 *
S_NumWebPurchases + -0.13668170504261 * S_RFMstat + -0.39159958659757 * S_RMntFrq +
0.31541831647045 * S_Recency ;
1363650   +   H16  =     0.30881424897223 * S_AcceptedCmpTotal  +      0.2794364053658 *
1363651   +        S_Frq  +    -0.13255692208785 * S_Income  +      0.1084623497397 *
1363652   +        S_Mnt  +    -0.21377822064675 * S_MntFruits  +     0.66167304100171 *
1363653   +        S_MntGoldProds  +    -0.18059030828344 * S_MntMeatProducts
1363654   +          +      0.1342841887454 * S_MntSweetProducts
1363655   +          +    -0.35353451726224 * S_NumCatalogPurchases
1363656   +          +     0.19726071632213 * S_NumWebPurchases
1363657   +          +    -0.67773182477521 * S_RFMstat  +    -0.05559124023026 *
1363658   +        S_RMntFrq  +     0.29135046009186 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.30881424897223 * S_AcceptedCmpTotal + 0.2794364053658 * S_Frq +
-0.13255692208785 * S_Income + 0.1084623497397 * S_Mnt + -0.21377822064675 * S_MntFruits +
0.66167304100171 * S_MntGoldProds + -0.18059030828344 * S_MntMeatProducts + 0.1342841887454 *
S_MntSweetProducts + -0.35353451726224 * S_NumCatalogPurchases + 0.19726071632213 *
S_NumWebPurchases + -0.67773182477521 * S_RFMstat + -0.05559124023026 * S_RMntFrq +
0.29135046009186 * S_Recency ;
1363659   +   H17  =    -0.56474657283939 * S_AcceptedCmpTotal  +     0.49714469636668 *
1363660   +        S_Frq  +     0.38873911121939 * S_Income  +     0.18672296356038 *
1363661   +        S_Mnt  +    -0.12290033905766 * S_MntFruits  +    -0.55117454621073 *
1363662   +        S_MntGoldProds  +    -0.34157249684624 * S_MntMeatProducts
1363663   +          +    -0.03878223698579 * S_MntSweetProducts
1363664   +          +    -0.44318159654535 * S_NumCatalogPurchases
1363665   +          +     0.28629379958053 * S_NumWebPurchases
1363666   +          +    -0.33628587814816 * S_RFMstat  +     0.01539005969109 *
1363667   +        S_RMntFrq  +      0.4669281349511 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.56474657283939 * S_AcceptedCmpTotal + 0.49714469636668 * S_Frq
+ 0.38873911121939 * S_Income + 0.18672296356038 * S_Mnt + -0.12290033905766 * S_MntFruits +
-0.55117454621073 * S_MntGoldProds + -0.34157249684624 * S_MntMeatProducts + -0.03878223698579
* S_MntSweetProducts + -0.44318159654535 * S_NumCatalogPurchases + 0.28629379958053 *
S_NumWebPurchases + -0.33628587814816 * S_RFMstat + 0.01539005969109 * S_RMntFrq +
0.4669281349511 * S_Recency ;
1363668   +   H11  = H11  +     0.54366812821853 * G_Marital_Status0
1363669   +          +    -0.24270884269566 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.54366812821853 * G_Marital_Status0 + -0.24270884269566 *
G_Marital_Status1 ;
1363670   +   H12  = H12  +     0.12201873252315 * G_Marital_Status0
1363671   +          +      0.2708540168877 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12201873252315 * G_Marital_Status0 + 0.2708540168877 *
G_Marital_Status1 ;
1363672   +   H13  = H13  +     0.21773390953206 * G_Marital_Status0
1363673   +          +      0.1849184915243 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21773390953206 * G_Marital_Status0 + 0.1849184915243 *
G_Marital_Status1 ;
1363674   +   H14  = H14  +     0.42359989920789 * G_Marital_Status0
1363675   +          +     -0.0427682060318 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42359989920789 * G_Marital_Status0 + -0.0427682060318 *
G_Marital_Status1 ;
1363676   +   H15  = H15  +     0.39852794737212 * G_Marital_Status0
1363677   +          +      0.4834959104522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.39852794737212 * G_Marital_Status0 + 0.4834959104522 *
G_Marital_Status1 ;
1363678   +   H16  = H16  +     0.34117172602716 * G_Marital_Status0
1363679   +          +     0.01719507366738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.34117172602716 * G_Marital_Status0 + 0.01719507366738 *
G_Marital_Status1 ;
1363680   +   H17  = H17  +    -0.48271020073977 * G_Marital_Status0
1363681   +          +    -0.38643265086902 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.48271020073977 * G_Marital_Status0 + -0.38643265086902 *
G_Marital_Status1 ;
1363682   +   H11  =    -1.92887755316705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.92887755316705 + H11 ;
1363683   +   H12  =     1.10580453552439 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.10580453552439 + H12 ;
1363684   +   H13  =     -0.0396459221076 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.0396459221076 + H13 ;
1363685   +   H14  =    -0.24030684440152 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.24030684440152 + H14 ;
1363686   +   H15  =    -1.57024900687106 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.57024900687106 + H15 ;
1363687   +   H16  =    -0.33224481657704 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.33224481657704 + H16 ;
1363688   +   H17  =     1.22710614099789 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.22710614099789 + H17 ;
1363689   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1363690   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1363691   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1363692   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1363693   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1363694   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1363695   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1363696   +END;
MPRINT(EM_DIAGRAM):   END;
1363697   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363698   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1363699   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1363700   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1363701   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1363702   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1363703   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1363704   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1363705   +END;
MPRINT(EM_DIAGRAM):   END;
1363706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363707   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1363708   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363709   +
1363710   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1363711   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1363712   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1363713   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1363714   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1363715   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1363716   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1363717   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1363718   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1363719   +end;
MPRINT(EM_DIAGRAM):   end;
1363720   +else do;
MPRINT(EM_DIAGRAM):   else do;
1363721   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1363722   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1363723   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1363724   +   end;
MPRINT(EM_DIAGRAM):   end;
1363725   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1363726   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1363727   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1363728   +   end;
MPRINT(EM_DIAGRAM):   end;
1363729   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1363730   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1363731   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1363732   +   end;
MPRINT(EM_DIAGRAM):   end;
1363733   +end;
MPRINT(EM_DIAGRAM):   end;
1363734   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1363735   +   P_DepVar1  =     1.21462455419854 * H11  +    -0.32480789724651 * H12
1363736   +          +     2.96475008226038 * H13  +     -0.7919726093423 * H14
1363737   +          +    -2.29353966226595 * H15  +     -0.7223088500433 * H16
1363738   +          +    -2.44182031584859 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.21462455419854 * H11 + -0.32480789724651 * H12 +
2.96475008226038 * H13 + -0.7919726093423 * H14 + -2.29353966226595 * H15 + -0.7223088500433 *
H16 + -2.44182031584859 * H17 ;
1363739   +   P_DepVar1  =    -1.63832895249218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.63832895249218 + P_DepVar1 ;
1363740   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1363741   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1363742   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1363743   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1363744   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1363745   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1363746   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1363747   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1363748   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1363749   +END;
MPRINT(EM_DIAGRAM):   END;
1363750   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363751   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1363752   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1363753   +END;
MPRINT(EM_DIAGRAM):   END;
1363754   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1363755   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1363756   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1363757   +END;
MPRINT(EM_DIAGRAM):   END;
1363758   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1363759   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1363760   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1363761   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1363762   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1363763   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1363764   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1363765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363766   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1363767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1363768   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1363769   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1363770   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363771   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1363772   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1363773   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1363774   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1363775   +END;
MPRINT(EM_DIAGRAM):   END;
1363776   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1363777   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1363778   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1363779   +drop
1363780   +H11
1363781   +H12
1363782   +H13
1363783   +H14
1363784   +H15
1363785   +H16
1363786   +H17
1363787   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1363788   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1363789   +* Renaming variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural8;
1363790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363791   +* Renaming Posterior variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural8;
1363792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363793   +drop Neural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar1;
1363794   +Neural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar1 = P_DepVar1;
1363795   +drop Neural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar0;
1363796   +Neural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar0 = P_DepVar0;
1363797   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363798   +* Renaming _WARN_ variable for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural8;
1363799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363800   +length Neural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural8_WARN_ $4;
1363801   +drop Neural8_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural8_WARN_;
1363802   +Neural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural8_WARN_ = _WARN_;
1363803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363804   +* Ensmbl4: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 8 of 10;
1363805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363806   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363807   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1363808   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1363809   +* NODE: Tree4;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
1363810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1363811   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1363812   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1363813   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1363814   +
1363815   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1363816   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1363817   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1363818   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1363819   +
1363820   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1363821   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1363822   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1363823   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1363824   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1363825   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1363826   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1363827   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1363828   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1363829   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1363830   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1363831   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1363832   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1363833   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1363834   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1363835   +
1363836   +
1363837   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1363838   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1363839   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1363840   +
1363841   +
1363842   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1363843   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1363844   +
1363845   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1363846   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1363847   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1363848   +  IF  NOT MISSING(Recency ) AND
1363849   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1363850   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1363851   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1363852   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1363853   +      _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1363854   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1363855   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1363856   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1363857   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1363858   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1363859   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1363860   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363861   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363862   +      END;
MPRINT(EM_DIAGRAM):   END;
1363863   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363864   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1363865   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1363866   +      IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1363867   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1363868   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1363869   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1363870   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1363871   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1363872   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1363873   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1363874   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1363875   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363876   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363877   +        END;
MPRINT(EM_DIAGRAM):   END;
1363878   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363879   +        IF  NOT MISSING(Recency ) AND
1363880   +          Recency  <                 15.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 15.5 THEN DO;
1363881   +          _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
1363882   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1363883   +          P_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35714285714285;
1363884   +          P_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64285714285714;
1363885   +          Q_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35714285714285;
1363886   +          Q_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64285714285714;
1363887   +          V_DepVar0  =               0.4375;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4375;
1363888   +          V_DepVar1  =               0.5625;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.5625;
1363889   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363890   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363891   +          END;
MPRINT(EM_DIAGRAM):   END;
1363892   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363893   +          IF  NOT MISSING(RFMstat ) AND
1363894   +            RFMstat  <     259.685185185185 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND RFMstat < 259.685185185185 THEN DO;
1363895   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1363896   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1363897   +            P_DepVar0  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35294117647058;
1363898   +            P_DepVar1  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64705882352941;
1363899   +            Q_DepVar0  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35294117647058;
1363900   +            Q_DepVar1  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64705882352941;
1363901   +            V_DepVar0  =                0.375;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.375;
1363902   +            V_DepVar1  =                0.625;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.625;
1363903   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363904   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363905   +            END;
MPRINT(EM_DIAGRAM):   END;
1363906   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363907   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1363908   +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1363909   +            P_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.83333333333333;
1363910   +            P_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.16666666666666;
1363911   +            Q_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.83333333333333;
1363912   +            Q_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.16666666666666;
1363913   +            V_DepVar0  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.73684210526315;
1363914   +            V_DepVar1  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.26315789473684;
1363915   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1363916   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1363917   +            END;
MPRINT(EM_DIAGRAM):   END;
1363918   +          END;
MPRINT(EM_DIAGRAM):   END;
1363919   +        END;
MPRINT(EM_DIAGRAM):   END;
1363920   +      END;
MPRINT(EM_DIAGRAM):   END;
1363921   +    END;
MPRINT(EM_DIAGRAM):   END;
1363922   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363923   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1363924   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1363925   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1363926   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1363927   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1363928   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1363929   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1363930   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1363931   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1363932   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1363933   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363934   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363935   +      END;
MPRINT(EM_DIAGRAM):   END;
1363936   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363937   +      IF  NOT MISSING(NumCatalogPurchases ) AND
1363938   +                        10.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 10.5 <= NumCatalogPurchases
THEN DO;
1363939   +        IF  NOT MISSING(Frq ) AND
1363940   +                          25.5 <= Frq  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND 25.5 <= Frq THEN DO;
1363941   +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
1363942   +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1363943   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1363944   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1363945   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1363946   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1363947   +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
1363948   +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
1363949   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1363950   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1363951   +          END;
MPRINT(EM_DIAGRAM):   END;
1363952   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363953   +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
1363954   +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1363955   +          P_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1363956   +          P_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1;
1363957   +          Q_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0;
1363958   +          Q_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 1;
1363959   +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
1363960   +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
1363961   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363962   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363963   +          END;
MPRINT(EM_DIAGRAM):   END;
1363964   +        END;
MPRINT(EM_DIAGRAM):   END;
1363965   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363966   +        _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1363967   +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1363968   +        IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1363969   +          IF  NOT MISSING(MntMeatProducts ) AND
1363970   +                           596.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 596.5 <= MntMeatProducts THEN DO;
1363971   +            _NODE_  =                   55;
MPRINT(EM_DIAGRAM):   _NODE_ = 55;
1363972   +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1363973   +            P_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2;
1363974   +            P_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8;
1363975   +            Q_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2;
1363976   +            Q_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8;
1363977   +            V_DepVar0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4;
1363978   +            V_DepVar1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.6;
1363979   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1363980   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1363981   +            END;
MPRINT(EM_DIAGRAM):   END;
1363982   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363983   +            _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
1363984   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1363985   +            P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
1363986   +            P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
1363987   +            Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
1363988   +            Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
1363989   +            V_DepVar0  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.70588235294117;
1363990   +            V_DepVar1  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.29411764705882;
1363991   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1363992   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1363993   +            END;
MPRINT(EM_DIAGRAM):   END;
1363994   +          END;
MPRINT(EM_DIAGRAM):   END;
1363995   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1363996   +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
1363997   +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1363998   +          P_DepVar0  =     0.90532544378698;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90532544378698;
1363999   +          P_DepVar1  =     0.09467455621301;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09467455621301;
1364000   +          Q_DepVar0  =     0.90532544378698;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90532544378698;
1364001   +          Q_DepVar1  =     0.09467455621301;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09467455621301;
1364002   +          V_DepVar0  =     0.90588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.90588235294117;
1364003   +          V_DepVar1  =     0.09411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.09411764705882;
1364004   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1364005   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1364006   +          END;
MPRINT(EM_DIAGRAM):   END;
1364007   +        END;
MPRINT(EM_DIAGRAM):   END;
1364008   +      END;
MPRINT(EM_DIAGRAM):   END;
1364009   +    END;
MPRINT(EM_DIAGRAM):   END;
1364010   +  END;
MPRINT(EM_DIAGRAM):   END;
1364011   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364012   +  IF  NOT MISSING(Recency ) AND
1364013   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1364014   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1364015   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN
DO;
1364016   +      IF  NOT MISSING(Recency ) AND
1364017   +                          19 <= Recency  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND 19 <= Recency THEN DO;
1364018   +        IF  NOT MISSING(MntMeatProducts ) AND
1364019   +                         370.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 370.5 <= MntMeatProducts THEN DO;
1364020   +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
1364021   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1364022   +          P_DepVar0  =     0.36363636363636;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.36363636363636;
1364023   +          P_DepVar1  =     0.63636363636363;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.63636363636363;
1364024   +          Q_DepVar0  =     0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.36363636363636;
1364025   +          Q_DepVar1  =     0.63636363636363;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.63636363636363;
1364026   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1364027   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1364028   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1364029   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1364030   +          END;
MPRINT(EM_DIAGRAM):   END;
1364031   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364032   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1364033   +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1364034   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1364035   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1364036   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1364037   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1364038   +          V_DepVar0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.85714285714285;
1364039   +          V_DepVar1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.14285714285714;
1364040   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1364041   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1364042   +          END;
MPRINT(EM_DIAGRAM):   END;
1364043   +        END;
MPRINT(EM_DIAGRAM):   END;
1364044   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364045   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1364046   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1364047   +        P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
1364048   +        P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
1364049   +        Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
1364050   +        Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
1364051   +        V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1364052   +        V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1364053   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1364054   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1364055   +        END;
MPRINT(EM_DIAGRAM):   END;
1364056   +      END;
MPRINT(EM_DIAGRAM):   END;
1364057   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364058   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1364059   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1364060   +      P_DepVar0  =     0.84285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84285714285714;
1364061   +      P_DepVar1  =     0.15714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15714285714285;
1364062   +      Q_DepVar0  =     0.84285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84285714285714;
1364063   +      Q_DepVar1  =     0.15714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15714285714285;
1364064   +      V_DepVar0  =     0.81048387096774;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81048387096774;
1364065   +      V_DepVar1  =     0.18951612903225;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18951612903225;
1364066   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1364067   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1364068   +      END;
MPRINT(EM_DIAGRAM):   END;
1364069   +    END;
MPRINT(EM_DIAGRAM):   END;
1364070   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364071   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1364072   +    _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1364073   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1364074   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1364075   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1364076   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1364077   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1364078   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1364079   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1364080   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1364081   +    END;
MPRINT(EM_DIAGRAM):   END;
1364082   +  END;
MPRINT(EM_DIAGRAM):   END;
1364083   +
1364084   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1364085   +IF  F_DepVar  NE '0'
1364086   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1364087   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1364088   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1364089   + END;
MPRINT(EM_DIAGRAM):   END;
1364090   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364091   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1364092   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1364093   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1364094   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1364095   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1364096   +       END;
MPRINT(EM_DIAGRAM):   END;
1364097   + END;
MPRINT(EM_DIAGRAM):   END;
1364098   +
1364099   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1364100   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1364101   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1364102   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1364103   +* Renaming variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree4;
1364104   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364105   +* Renaming Posterior variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree4;
1364106   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364107   +drop Tree4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar1;
1364108   +Tree4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar1 = P_DepVar1;
1364109   +drop Tree4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar0;
1364110   +Tree4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar0 = P_DepVar0;
1364111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364112   +* Renaming _WARN_ variable for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree4;
1364113   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364114   +length Tree4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree4_WARN_ $4;
1364115   +drop Tree4_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree4_WARN_;
1364116   +Tree4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree4_WARN_ = _WARN_;
1364117   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364118   +* Ensmbl4: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 9 of 10;
1364119   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364120   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364121   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1364122   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1364123   +* NODE: Reg4;
MPRINT(EM_DIAGRAM):   * NODE: Reg4;
1364124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364125   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364126   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1364127   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364128   +
1364129   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1364130   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1364131   +
1364132   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1364133   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1364134   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1364135   +array REG4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG4DRF [2] $12 _temporary_ ('1' '0' );
1364136   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1364137   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1364138   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1364139   +ARRAY REG4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG4DRU[2] _TEMPORARY_ (1 0);
1364140   +
1364141   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1364142   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1364143   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1364144   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1364145   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1364146   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1364147   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1364148   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1364149   +end;
MPRINT(EM_DIAGRAM):   end;
1364150   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364151   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1364152   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1364153   +   end;
MPRINT(EM_DIAGRAM):   end;
1364154   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1364155   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1364156   +   end;
MPRINT(EM_DIAGRAM):   end;
1364157   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1364158   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1364159   +   end;
MPRINT(EM_DIAGRAM):   end;
1364160   +end;
MPRINT(EM_DIAGRAM):   end;
1364161   +
1364162   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1364163   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1364164   +
1364165   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1364166   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1364167   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364168   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364169   +end;
MPRINT(EM_DIAGRAM):   end;
1364170   +
1364171   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1364172   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1364173   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364174   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364175   +end;
MPRINT(EM_DIAGRAM):   end;
1364176   +
1364177   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1364178   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1364179   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364180   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364181   +end;
MPRINT(EM_DIAGRAM):   end;
1364182   +
1364183   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1364184   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1364185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364187   +end;
MPRINT(EM_DIAGRAM):   end;
1364188   +
1364189   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1364190   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1364191   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364192   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364193   +end;
MPRINT(EM_DIAGRAM):   end;
1364194   +
1364195   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1364196   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1364197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364199   +end;
MPRINT(EM_DIAGRAM):   end;
1364200   +
1364201   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1364202   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1364203   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364204   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364205   +end;
MPRINT(EM_DIAGRAM):   end;
1364206   +
1364207   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1364208   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1364209   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364210   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364211   +end;
MPRINT(EM_DIAGRAM):   end;
1364212   +
1364213   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1364214   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1364215   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364216   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364217   +end;
MPRINT(EM_DIAGRAM):   end;
1364218   +
1364219   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1364220   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1364221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364223   +end;
MPRINT(EM_DIAGRAM):   end;
1364224   +
1364225   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1364226   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1364227   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364228   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364229   +end;
MPRINT(EM_DIAGRAM):   end;
1364230   +
1364231   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1364232   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1364233   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364234   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364235   +end;
MPRINT(EM_DIAGRAM):   end;
1364236   +
1364237   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1364238   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1364239   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1364240   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1364241   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1364242   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364243   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364244   +end;
MPRINT(EM_DIAGRAM):   end;
1364245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364246   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1364247   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1364248   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1364249   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1364250   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1364251   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1364252   +   end;
MPRINT(EM_DIAGRAM):   end;
1364253   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1364254   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1364255   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1364256   +   end;
MPRINT(EM_DIAGRAM):   end;
1364257   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1364258   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1364259   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1364260   +   end;
MPRINT(EM_DIAGRAM):   end;
1364261   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1364262   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1364263   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1364264   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1364265   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364266   +   end;
MPRINT(EM_DIAGRAM):   end;
1364267   +end;
MPRINT(EM_DIAGRAM):   end;
1364268   +
1364269   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1364270   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1364271   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1364272   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1364273   +   goto REG4DR1;
MPRINT(EM_DIAGRAM):   goto REG4DR1;
1364274   +end;
MPRINT(EM_DIAGRAM):   end;
1364275   +
1364276   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1364277   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1364278   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1364279   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1364280   +
1364281   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1364282   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1364283   +_LP0 = _LP0 + (    2.40018327652155 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.40018327652155 * _TEMP);
1364284   +
1364285   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1364286   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1364287   +_LP0 = _LP0 + (   -0.21673510532954 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21673510532954 * _TEMP);
1364288   +
1364289   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1364290   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1364291   +_LP0 = _LP0 + (    0.64180357562788) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.64180357562788) * _TEMP * _1_0;
1364292   +_LP0 = _LP0 + (    0.16431128010113) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16431128010113) * _TEMP * _1_1;
1364293   +
1364294   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1364295   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1364296   +_LP0 = _LP0 + (   -0.00003686881561 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00003686881561 * _TEMP);
1364297   +
1364298   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1364299   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1364300   +_LP0 = _LP0 + (   -0.00434744593089 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00434744593089 * _TEMP);
1364301   +
1364302   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1364303   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1364304   +_LP0 = _LP0 + (   -0.00828741579845 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00828741579845 * _TEMP);
1364305   +
1364306   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1364307   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1364308   +_LP0 = _LP0 + (    0.00530468850331 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00530468850331 * _TEMP);
1364309   +
1364310   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1364311   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1364312   +_LP0 = _LP0 + (    0.00775743174762 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00775743174762 * _TEMP);
1364313   +
1364314   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1364315   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1364316   +_LP0 = _LP0 + (    0.70059514546632 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.70059514546632 * _TEMP);
1364317   +
1364318   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1364319   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1364320   +_LP0 = _LP0 + (    0.39070014327883 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39070014327883 * _TEMP);
1364321   +
1364322   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1364323   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1364324   +_LP0 = _LP0 + (    0.00018898206939 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00018898206939 * _TEMP);
1364325   +
1364326   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1364327   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1364328   +_LP0 = _LP0 + (    0.03694284437431 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03694284437431 * _TEMP);
1364329   +
1364330   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1364331   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1364332   +_LP0 = _LP0 + (   -0.06739289968934 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06739289968934 * _TEMP);
1364333   +
1364334   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1364335   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1364336   +_TEMP =     0.42102377735904 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.42102377735904 + _LP0;
1364337   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1364338   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1364339   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1364340   +end;
MPRINT(EM_DIAGRAM):   end;
1364341   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1364342   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1364343   +
1364344   +REG4DR1:
1364345   +
1364346   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG4DR1: *** Residuals;
1364347   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1364348   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1364349   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1364350   +end;
MPRINT(EM_DIAGRAM):   end;
1364351   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364352   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1364353   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1364354   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1364355   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1364356   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1364357   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1364358   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1364359   +   end;
MPRINT(EM_DIAGRAM):   end;
1364360   +end;
MPRINT(EM_DIAGRAM):   end;
1364361   +
1364362   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1364363   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1364364   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1364365   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1364366   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1364367   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1364368   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1364369   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1364370   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1364371   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1364372   +end;
MPRINT(EM_DIAGRAM):   end;
1364373   +I_DepVar = REG4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG4DRF[_IY];
1364374   +U_DepVar = REG4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG4DRU[_IY];
1364375   +
1364376   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364377   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1364378   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364379   +* Renaming variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg4;
1364380   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364381   +* Renaming Posterior variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg4;
1364382   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364383   +drop Reg4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar1;
1364384   +Reg4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar1 = P_DepVar1;
1364385   +drop Reg4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar0;
1364386   +Reg4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar0 = P_DepVar0;
1364387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364388   +* Renaming _WARN_ variable for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg4;
1364389   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364390   +length Reg4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg4_WARN_ $4;
1364391   +drop Reg4_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg4_WARN_;
1364392   +Reg4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg4_WARN_ = _WARN_;
1364393   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364394   +* Ensmbl4: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 10 of 10;
1364395   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364396   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364397   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1364398   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1364399   +* NODE: Reg8;
MPRINT(EM_DIAGRAM):   * NODE: Reg8;
1364400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364401   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364402   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1364403   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364404   +
1364405   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1364406   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1364407   +
1364408   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1364409   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1364410   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1364411   +array REG8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG8DRF [2] $12 _temporary_ ('1' '0' );
1364412   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1364413   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1364414   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1364415   +ARRAY REG8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG8DRU[2] _TEMPORARY_ (1 0);
1364416   +
1364417   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1364418   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1364419   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1364420   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1364421   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1364422   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1364423   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1364424   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1364425   +end;
MPRINT(EM_DIAGRAM):   end;
1364426   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364427   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1364428   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1364429   +   end;
MPRINT(EM_DIAGRAM):   end;
1364430   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1364431   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1364432   +   end;
MPRINT(EM_DIAGRAM):   end;
1364433   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1364434   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1364435   +   end;
MPRINT(EM_DIAGRAM):   end;
1364436   +end;
MPRINT(EM_DIAGRAM):   end;
1364437   +
1364438   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1364439   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1364440   +
1364441   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1364442   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1364443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364445   +end;
MPRINT(EM_DIAGRAM):   end;
1364446   +
1364447   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1364448   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1364449   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364450   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364451   +end;
MPRINT(EM_DIAGRAM):   end;
1364452   +
1364453   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1364454   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1364455   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364456   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364457   +end;
MPRINT(EM_DIAGRAM):   end;
1364458   +
1364459   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1364460   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1364461   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364462   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364463   +end;
MPRINT(EM_DIAGRAM):   end;
1364464   +
1364465   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1364466   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1364467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364469   +end;
MPRINT(EM_DIAGRAM):   end;
1364470   +
1364471   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1364472   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1364473   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364474   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364475   +end;
MPRINT(EM_DIAGRAM):   end;
1364476   +
1364477   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1364478   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1364479   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364480   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364481   +end;
MPRINT(EM_DIAGRAM):   end;
1364482   +
1364483   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1364484   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1364485   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364486   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364487   +end;
MPRINT(EM_DIAGRAM):   end;
1364488   +
1364489   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1364490   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1364491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364493   +end;
MPRINT(EM_DIAGRAM):   end;
1364494   +
1364495   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1364496   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1364497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364499   +end;
MPRINT(EM_DIAGRAM):   end;
1364500   +
1364501   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1364502   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1364503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364505   +end;
MPRINT(EM_DIAGRAM):   end;
1364506   +
1364507   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1364508   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1364509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364511   +end;
MPRINT(EM_DIAGRAM):   end;
1364512   +
1364513   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1364514   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1364515   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1364516   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1364517   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1364518   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364519   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364520   +end;
MPRINT(EM_DIAGRAM):   end;
1364521   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364522   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1364523   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1364524   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1364525   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1364526   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1364527   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1364528   +   end;
MPRINT(EM_DIAGRAM):   end;
1364529   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1364530   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1364531   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1364532   +   end;
MPRINT(EM_DIAGRAM):   end;
1364533   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1364534   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1364535   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1364536   +   end;
MPRINT(EM_DIAGRAM):   end;
1364537   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1364538   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1364539   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1364540   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1364541   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364542   +   end;
MPRINT(EM_DIAGRAM):   end;
1364543   +end;
MPRINT(EM_DIAGRAM):   end;
1364544   +
1364545   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1364546   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1364547   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1364548   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1364549   +   goto REG8DR1;
MPRINT(EM_DIAGRAM):   goto REG8DR1;
1364550   +end;
MPRINT(EM_DIAGRAM):   end;
1364551   +
1364552   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1364553   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1364554   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1364555   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1364556   +
1364557   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1364558   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1364559   +_LP0 = _LP0 + (    1.30282761826006 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.30282761826006 * _TEMP);
1364560   +
1364561   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1364562   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1364563   +_LP0 = _LP0 + (   -0.12461246583448 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.12461246583448 * _TEMP);
1364564   +
1364565   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1364566   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1364567   +_LP0 = _LP0 + (    0.35055822679312) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.35055822679312) * _TEMP * _1_0;
1364568   +_LP0 = _LP0 + (    0.06578421633721) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06578421633721) * _TEMP * _1_1;
1364569   +
1364570   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1364571   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1364572   +_LP0 = _LP0 + (   -0.00001965833893 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001965833893 * _TEMP);
1364573   +
1364574   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1364575   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1364576   +_LP0 = _LP0 + (   -0.00237919371816 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00237919371816 * _TEMP);
1364577   +
1364578   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1364579   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1364580   +_LP0 = _LP0 + (   -0.00490441121869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00490441121869 * _TEMP);
1364581   +
1364582   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1364583   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1364584   +_LP0 = _LP0 + (     0.0027445180197 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0027445180197 * _TEMP);
1364585   +
1364586   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1364587   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1364588   +_LP0 = _LP0 + (    0.00427794030308 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00427794030308 * _TEMP);
1364589   +
1364590   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1364591   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1364592   +_LP0 = _LP0 + (    0.38768279900123 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38768279900123 * _TEMP);
1364593   +
1364594   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1364595   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1364596   +_LP0 = _LP0 + (    0.21939343331463 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21939343331463 * _TEMP);
1364597   +
1364598   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1364599   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1364600   +_LP0 = _LP0 + (    0.00011370233217 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00011370233217 * _TEMP);
1364601   +
1364602   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1364603   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1364604   +_LP0 = _LP0 + (    0.02046669609103 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02046669609103 * _TEMP);
1364605   +
1364606   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1364607   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1364608   +_LP0 = _LP0 + (   -0.03547597645545 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03547597645545 * _TEMP);
1364609   +
1364610   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1364611   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1364612   +_P0 = probnorm((    0.18495497784379) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( 0.18495497784379) + _LP0);
1364613   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1364614   +
1364615   +REG8DR1:
1364616   +
1364617   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG8DR1: *** Residuals;
1364618   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1364619   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1364620   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1364621   +end;
MPRINT(EM_DIAGRAM):   end;
1364622   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364623   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1364624   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1364625   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1364626   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1364627   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1364628   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1364629   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1364630   +   end;
MPRINT(EM_DIAGRAM):   end;
1364631   +end;
MPRINT(EM_DIAGRAM):   end;
1364632   +
1364633   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1364634   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1364635   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1364636   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1364637   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1364638   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1364639   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1364640   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1364641   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1364642   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1364643   +end;
MPRINT(EM_DIAGRAM):   end;
1364644   +I_DepVar = REG8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG8DRF[_IY];
1364645   +U_DepVar = REG8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG8DRU[_IY];
1364646   +
1364647   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364648   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1364649   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1364650   +* Renaming variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg8;
1364651   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364652   +* Renaming Posterior variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg8;
1364653   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364654   +drop Reg8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar1;
1364655   +Reg8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar1 = P_DepVar1;
1364656   +drop Reg8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar0;
1364657   +Reg8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar0 = P_DepVar0;
1364658   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364659   +* Renaming _WARN_ variable for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg8;
1364660   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364661   +length Reg8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg8_WARN_ $4;
1364662   +drop Reg8_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg8_WARN_;
1364663   +Reg8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg8_WARN_ = _WARN_;
1364664   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364665   +* Ensmbl4: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Average Posteriors of 10 models;
1364666   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364667   +P_DepVar1 = (
1364668   +Neural29_P_DepVar1 +
1364669   +Neural24_P_DepVar1 +
1364670   +Neural25_P_DepVar1 +
1364671   +Neural26_P_DepVar1 +
1364672   +Neural27_P_DepVar1 +
1364673   +Neural28_P_DepVar1 +
1364674   +Neural8_P_DepVar1 +
1364675   +Tree4_P_DepVar1 +
1364676   +Reg4_P_DepVar1 +
1364677   +Reg8_P_DepVar1
1364678   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural29_P_DepVar1 + Neural24_P_DepVar1 +
Neural25_P_DepVar1 + Neural26_P_DepVar1 + Neural27_P_DepVar1 + Neural28_P_DepVar1 +
Neural8_P_DepVar1 + Tree4_P_DepVar1 + Reg4_P_DepVar1 + Reg8_P_DepVar1 )/10;
1364679   +P_DepVar0 = (
1364680   +Neural29_P_DepVar0 +
1364681   +Neural24_P_DepVar0 +
1364682   +Neural25_P_DepVar0 +
1364683   +Neural26_P_DepVar0 +
1364684   +Neural27_P_DepVar0 +
1364685   +Neural28_P_DepVar0 +
1364686   +Neural8_P_DepVar0 +
1364687   +Tree4_P_DepVar0 +
1364688   +Reg4_P_DepVar0 +
1364689   +Reg8_P_DepVar0
1364690   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural29_P_DepVar0 + Neural24_P_DepVar0 +
Neural25_P_DepVar0 + Neural26_P_DepVar0 + Neural27_P_DepVar0 + Neural28_P_DepVar0 +
Neural8_P_DepVar0 + Tree4_P_DepVar0 + Reg4_P_DepVar0 + Reg8_P_DepVar0 )/10;
1364691   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364692   +* Ensmbl4: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Classification Vars;
1364693   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364694   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1364695   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1364696   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1364697   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1364698   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1364699   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1364700   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1364701   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1364702   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1364703   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1364704   +end;
MPRINT(EM_DIAGRAM):   end;
1364705   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1364706   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1364707   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1364708   +end;
MPRINT(EM_DIAGRAM):   end;
1364709   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1364710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364711   +* Ensmbl4: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Producing Unformatted variable;
1364712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364713   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1364714   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1364715   +else
1364716   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1364717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364718   +* Ensmbl4: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing _WARN_ Variable;
1364719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364720   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1364721   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1364722   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1364723   +if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1364723  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1364724   +if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1364724  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1364725   +if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1364725  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1364726   +if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1364726  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1364727   +if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1364727  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1364728   +if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1364728  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1364729   +if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1364729  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1364730   +if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1364730  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1364731   +if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1364731  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1364732   +if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1364732  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1364733   +if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1364733  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1364734   +if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1364734  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1364735   +if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1364735  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1364736   +if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1364736  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1364737   +if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1364737  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1364738   +if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1364738  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1364739   +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1364739  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1364740   +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1364740  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1364741   +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1364741  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1364742   +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1364742  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1364743   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1364743  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1364744   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1364744  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1364745   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1364745  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1364746   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1364746  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1364747   +if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1364748   +if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1364749   +if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1364750   +if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1364751   +if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1364752   +if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1364753   +if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1364754   +if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1364755   +if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1364756   +if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1364757   +if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1364758   +if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1364759   +if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1364760   +if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1364761   +if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1364762   +if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1364763   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364764   +* Ensmbl4: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Residual Vars;
1364765   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1364766   +if
1364767   +F_DepVar NE '1'
1364768   +AND F_DepVar NE '0'
1364769   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1364770   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1364771   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1364772   +end;
MPRINT(EM_DIAGRAM):   end;
1364773   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364774   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1364775   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1364776   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1364777   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1364778   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1364779   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1364780   +END;
MPRINT(EM_DIAGRAM):   END;
1364781   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1364782    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL29_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1364783    quit;
1364784    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl4_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl4_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl4_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1364844    filename _pref
1364844  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural29\EMPUBLISHSCORE.sas";
1364845    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1364846    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural29\EMPUBLISHSCORE.sas.
1364847   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1364848   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1364849   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1364850   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1364851   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1364852   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1364853   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1364854   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1364855   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1364856   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1364857   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1364858   +LENGTH _WARN_ $4
1364859   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1364860   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1364861   +
1364862   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1364863   +
1364864   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1364865   +
1364866   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1364867   +
1364868   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1364869   +
1364870   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1364871   +
1364872   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1364873   +
1364874   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1364875   +
1364876   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1364877   +
1364878   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1364879   +
1364880   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1364881   +
1364882   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1364883   +
1364884   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1364885   +
1364886   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1364887   +
1364888   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1364889   +
1364890   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1364891   +
1364892   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1364893   +
1364894   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1364895   +
1364896   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1364897   +
1364898   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1364899   +
1364900   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1364901   +
1364902   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1364903   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1364904   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1364905   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1364906   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1364907   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1364908   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364909   +end;
MPRINT(EM_DIAGRAM):   end;
1364910   +else do;
MPRINT(EM_DIAGRAM):   else do;
1364911   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1364912   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1364913   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1364914   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1364915   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1364916   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1364917   +   end;
MPRINT(EM_DIAGRAM):   end;
1364918   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1364919   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1364920   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1364921   +   end;
MPRINT(EM_DIAGRAM):   end;
1364922   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1364923   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1364924   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1364925   +   end;
MPRINT(EM_DIAGRAM):   end;
1364926   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1364927   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1364928   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1364929   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1364930   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364931   +   end;
MPRINT(EM_DIAGRAM):   end;
1364932   +end;
MPRINT(EM_DIAGRAM):   end;
1364933   +
1364934   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1364935   +*** Checking missing input Interval
1364936   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1364937   +
1364938   +IF NMISS(
1364939   +   AcceptedCmpTotal ,
1364940   +   Frq ,
1364941   +   Income ,
1364942   +   Mnt ,
1364943   +   MntFruits ,
1364944   +   MntGoldProds ,
1364945   +   MntMeatProducts ,
1364946   +   MntSweetProducts ,
1364947   +   NumCatalogPurchases ,
1364948   +   NumWebPurchases ,
1364949   +   RFMstat ,
1364950   +   RMntFrq ,
1364951   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1364952   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1364953   +
1364954   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1364955   +END;
MPRINT(EM_DIAGRAM):   END;
1364956   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1364957   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1364958   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1364959   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1364960   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1364961   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1364962   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1364963   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1364964   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1364965   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1364966   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1364967   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1364968   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1364969   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1364970   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1364971   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1364972   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1364973   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1364974   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1364975   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1364976   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1364977   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1364978   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1364979   +END;
MPRINT(EM_DIAGRAM):   END;
1364980   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1364981   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1364982   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1364983   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1364984   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1364985   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1364986   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1364987   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1364988   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1364989   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1364990   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1364991   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1364992   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1364993   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1364994   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1364995   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1364996   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1364997   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1364998   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1364999   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1365000   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1365001   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1365002   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1365003   +   ELSE S_NumCatalogPurchases
1365004   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1365005   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1365006   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1365007   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1365008   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1365009   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1365010   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1365011   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1365012   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1365013   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1365014   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1365015   +END;
MPRINT(EM_DIAGRAM):   END;
1365016   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365017   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1365018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365019   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365020   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1365021   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365022   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1365023   +   H11  =     0.07081605827454 * S_AcceptedCmpTotal  +    -0.06698977764548 *
1365024   +        S_Frq  +    -0.03430870177464 * S_Income  +    -0.11360176415097 *
1365025   +        S_Mnt  +    -0.01238418440333 * S_MntFruits  +     0.01232617973423 *
1365026   +        S_MntGoldProds  +     0.07483946106207 * S_MntMeatProducts
1365027   +          +     -0.0079701278424 * S_MntSweetProducts
1365028   +          +     0.08585038786425 * S_NumCatalogPurchases
1365029   +          +     0.04419619029921 * S_NumWebPurchases
1365030   +          +     0.01256447914587 * S_RFMstat  +     0.04947774665638 *
1365031   +        S_RMntFrq  +    -0.08738179516843 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.07081605827454 * S_AcceptedCmpTotal + -0.06698977764548 * S_Frq
+ -0.03430870177464 * S_Income + -0.11360176415097 * S_Mnt + -0.01238418440333 * S_MntFruits +
0.01232617973423 * S_MntGoldProds + 0.07483946106207 * S_MntMeatProducts + -0.0079701278424 *
S_MntSweetProducts + 0.08585038786425 * S_NumCatalogPurchases + 0.04419619029921 *
S_NumWebPurchases + 0.01256447914587 * S_RFMstat + 0.04947774665638 * S_RMntFrq +
-0.08738179516843 * S_Recency ;
1365032   +   H11  = H11  +     0.02930876660681 * G_Marital_Status0
1365033   +          +     0.00712629273648 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.02930876660681 * G_Marital_Status0 + 0.00712629273648 *
G_Marital_Status1 ;
1365034   +   H11  =    -0.46602666061325 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.46602666061325 + H11 ;
1365035   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1365036   +END;
MPRINT(EM_DIAGRAM):   END;
1365037   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1365038   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1365039   +END;
MPRINT(EM_DIAGRAM):   END;
1365040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365041   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1365042   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365043   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1365044   +   P_DepVar1  =      25.813843010399 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 25.813843010399 * H11 ;
1365045   +   P_DepVar1  =     8.06674391252456 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 8.06674391252456 + P_DepVar1 ;
1365046   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1365047   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1365048   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1365049   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1365050   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1365051   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1365052   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1365053   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1365054   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1365055   +END;
MPRINT(EM_DIAGRAM):   END;
1365056   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1365057   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1365058   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1365059   +END;
MPRINT(EM_DIAGRAM):   END;
1365060   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1365061   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1365062   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1365063   +END;
MPRINT(EM_DIAGRAM):   END;
1365064   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365065   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1365066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365067   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1365068   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1365069   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1365070   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1365071   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1365072   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1365073   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1365074   +END;
MPRINT(EM_DIAGRAM):   END;
1365075   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1365076   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1365077   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1365078   +drop
1365079   +H11
1365080   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1365081   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365082    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365083    quit;
1365084    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365085    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365086    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365087    retain ID 2 Node "Neural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural29";
1365088    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 711 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 711 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365090    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 711 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 711 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365093    proc sort data=EMWS8.Neural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural29_variableset out=_temp2(keep=NAME CREATOR);
1365094    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365096    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365097    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365098    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365099    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365100    proc contents data=EMWS8.Neural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural29_train out=_meta(keep=NAME) noprint;
1365101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1365102    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365103    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365104    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365105    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365106    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365107    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365108    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365109    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365110    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365110  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 401 rows and 5 columns.
 
1365111    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365112    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 401 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 401 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365114    filename _pref
1365114  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1365115    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365116    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1365117   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1365118   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1365119   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1365120   +
1365121   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1365122   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1365123   +
1365124   +
1365125   +/*----G_Marital_Status begin----*/
1365126   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1365127   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1365128   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1365129   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1365130   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1365131   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1365132   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1365133   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1365134   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1365135   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1365136   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1365137   +end;
MPRINT(EM_DIAGRAM):   end;
1365138   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1365139   +/*----G_Marital_Status end----*/
1365140   +
1365141   +
1365142   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1365143   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1365144   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365145    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365146    quit;
1365147    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365148    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365149    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365150    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1365151    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365152    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365153    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365154    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365155    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365156    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1365157    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365158    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365159    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365160    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365161    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365162    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365163    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1365164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1365165    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365167    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365168    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365169    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365170    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365171    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365172    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365173    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365173  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1365174    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
The SAS System
 
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365175    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 404 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365177    filename _pref
1365177  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1365178    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365179    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1365180   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1365181   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1365182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1365183   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1365184   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1365185   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365186    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365187    quit;
1365188    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365189    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365190    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365191    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1365192    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365193    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365194    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365195    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365197    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1365198    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365199    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365200    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365201    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365202    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365204    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1365205    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1365206    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365207    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365208    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365209    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365210    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365212    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365213    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365214    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365214  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1365215    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365216    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365217    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 408 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365218    filename _pref
1365218  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1365219    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365220    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1365221   +
1365222   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1365223   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1365223  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1365224   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1365225   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1365226   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1365227   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1365228   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365229    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365230    quit;
1365231    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365232    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365233    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365234    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1365235    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365237    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365238    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365240    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1365241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365244    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365245    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365247    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1365248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365249    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365252    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365253    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365255    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365256    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365257    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365257  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1365258    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365259    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 447 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365261    filename _pref
1365261  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1365262    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365263    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1365264   +
1365265   +
1365266   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1365267   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1365268   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1365269   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1365270   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1365271   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365272   +
1365273   +
1365274   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1365275   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1365276   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1365277   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1365278   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1365279   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365280   +
1365281   +
1365282   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1365283   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1365284   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1365285   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1365286   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1365287   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365288   +
1365289   +
1365290   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1365291   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1365292   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1365293   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1365294   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1365295   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365296   +
1365297   +
1365298   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1365299   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1365300   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1365301   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1365302   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1365303   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365304   +
1365305   +
1365306   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1365307   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1365308   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1365309   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1365310   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1365311   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365312   +
1365313   +
1365314   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1365315   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1365316   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1365317   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1365318   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1365319   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365320   +
1365321   +
1365322   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1365323   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1365324   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1365325   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1365326   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1365327   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365328   +if
1365329   +_FILTERNORM1 not in ( '.')
1365330   + and
1365331   +_FILTERNORM2 not in ( '.')
1365332   + and
1365333   +_FILTERNORM3 not in ( '.')
1365334   + and
1365335   +_FILTERNORM4 not in ( '.')
1365336   + and
1365337   +_FILTERNORM5 not in ( '.')
1365338   + and
1365339   +_FILTERNORM6 not in ( '.')
1365340   + and
1365341   +_FILTERNORM7 not in ( ' ')
1365342   + and
1365343   +_FILTERNORM8 not in ( ' ')
1365344   +and
1365345   +( Dt_Customer ne .)
1365346   +and ( Income ne . and (Income<=107000))
1365347   +and ( Kidhome ne .)
1365348   +and ( MntFishProducts ne .)
1365349   +and ( MntFruits ne .)
1365350   +and ( MntGoldProds ne .)
1365351   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1365352   +and ( MntSweetProducts ne .)
1365353   +and ( MntWines ne .)
1365354   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1365355   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1365356   +and ( NumStorePurchases ne .)
1365357   +and ( NumWebPurchases ne .)
1365358   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1365359   +and ( Recency ne .)
1365360   +and ( Teenhome ne .)
1365361   +and ( Year_Birth ne .)
1365362   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1365363   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1365364   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1365365   +end;
MPRINT(EM_DIAGRAM):   end;
1365366   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1365367   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365368    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365369    quit;
1365370    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365371    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365372    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365373    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1365374    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365375    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365376    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365377    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365379    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1365380    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365381    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365382    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365383    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365384    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365385    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365386    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1365387    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365388    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365389    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365390    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365391    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365392    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365393    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365394    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365395    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365396    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365396  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1365397    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365398    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365399    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 513 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365400    %macro varDept(fcmpdata=,id=);
1365401    %global nobs&id scoreFlag&id;
1365402    %let scoreFlag&id = 0;
1365403    %if &id=1 or ^&fcmpStart %then %do;
1365404    proc sort data=&fcmpdata out=_temp&id nodupkey;
1365405    by NAME;
1365406    where id=&id and LHS in( %let j=1;
1365407    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1365408    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1365409    "&var" %let j = %eval(&j+1);
1365410    %end;
1365411    );
1365412    run;
1365413    %let dsid = %sysfunc(open(_temp&id));
1365414    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1365415    %let dsid = %sysfunc(close(&dsid));
1365416    %if &&nobs&id %then %do;
1365417    %let scoreFlag&id = 1;
1365418    %let fcmpStart = 1;
1365419    %end;
1365420    %else %let fcmpStart = 0;
1365421    %end;
1365422    %else %do;
1365423    proc sort data=&fcmpdata out=_tempid;
1365424    where id=&id;
1365425    by LHS;
1365426    run;
1365427    %let dsid = %sysfunc(open(_tempid));
1365428    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1365429    %let dsid = %sysfunc(close(&dsid));
1365430    %if ^&&nobs&id %then %do;
1365431    proc datasets lib=work nolist;
1365432    delete _tempid;
1365433    run;
1365434    quit;
1365435    %end;
1365436    %else %do;
1365437    data _tempAll;
1365438    set %let j=%eval(&id-1);
1365439    %do x=1 %to &j;
1365440    %if &&nobs&x %then %do;
1365441    _temp&x %end;
1365442    %end;
1365443    ;
1365444    run;
1365445    proc sql;
1365446    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1365446  ! work._tempid p2 where p.name=p2.lhs;
1365447    quit;
1365448    data _temp&id;
1365449    set _temp&id;
1365450    where LHS ne '' and NAME ne '' and Node ne '';
1365451    run;
1365452    proc datasets lib=work nolist;
1365453    delete _tempAll;
1365454    run;
1365455    %let dsid = %sysfunc(open(_temp&id));
1365456    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1365457    %let dsid = %sysfunc(close(&dsid));
1365458    %if ^&&nobs&id %then %do;
1365459    proc datasets lib=work nolist;
1365460    delete _temp&id;
1365461    run;
1365462    quit;
1365463    %end;
1365464    %else %do;
1365465    %let scoreFlag&id = 1;
1365466    data _temp&id;
1365467    set _temp&id;
1365468    where LHS ne NAME and node ne '';
1365469    run;
1365470    %let dsid = %sysfunc(open(_temp&id));
1365471    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1365472    %let dsid = %sysfunc(close(&dsid));
1365473    %if ^&&nobs&id %then %do;
1365474    proc datasets lib=work nolist;
1365475    delete _temp&id;
1365476    run;
1365477    quit;
1365478    %end;
1365479    %else %do;
1365480    proc sort data=_temp&id nodupkey;
1365481    by LHS NAME;
1365482    run;
1365483    %end;
1365484    %end;
1365485    %end;
1365486    %end;
1365487    %mend varDept;
1365488    %macro optCode(outdata=fcmpdata);
1365489    %global fcmpStart;
1365490    %let fcmpStart = 0;
1365491    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1365492    %let NumNodes=9;
1365493    %do k=1 %to &NumNodes;
1365494    %vardept(fcmpdata=&outdata, id=&k);
1365495    %end;
1365496    %mend optCode;
1365497    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1365498    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1365499    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1365500    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1365501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365502    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1365503    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1365504    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1365505    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365506    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365507    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1365507  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1365508    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365509    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1365510    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1365511    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365512    filename _pref
1365512  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural24\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural24\EMPUBLISHSCORE.sas";
1365513    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365514    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural24\EMPUBLISHSCORE.sas.
1365515   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1365516   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1365517   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1365518   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1365519   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1365520   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1365521   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1365522   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1365523   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1365524   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1365525   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1365526   +LENGTH _WARN_ $4
1365527   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1365528   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1365529   +
1365530   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1365531   +
1365532   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1365533   +
1365534   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1365535   +
1365536   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1365537   +
1365538   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1365539   +
1365540   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1365541   +
1365542   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1365543   +
1365544   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1365545   +
1365546   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1365547   +
1365548   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1365549   +
1365550   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1365551   +
1365552   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1365553   +
1365554   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1365555   +
1365556   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1365557   +
1365558   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1365559   +
1365560   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1365561   +
1365562   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1365563   +
1365564   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1365565   +
1365566   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1365567   +
1365568   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1365569   +
1365570   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1365571   +
1365572   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1365573   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1365574   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1365575   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1365576   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1365577   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1365578   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1365579   +end;
MPRINT(EM_DIAGRAM):   end;
1365580   +else do;
MPRINT(EM_DIAGRAM):   else do;
1365581   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1365582   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1365583   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1365584   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1365585   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1365586   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1365587   +   end;
MPRINT(EM_DIAGRAM):   end;
1365588   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1365589   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1365590   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1365591   +   end;
MPRINT(EM_DIAGRAM):   end;
1365592   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1365593   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1365594   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1365595   +   end;
MPRINT(EM_DIAGRAM):   end;
1365596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1365597   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1365598   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1365599   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1365600   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1365601   +   end;
MPRINT(EM_DIAGRAM):   end;
1365602   +end;
MPRINT(EM_DIAGRAM):   end;
1365603   +
1365604   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365605   +*** Checking missing input Interval
1365606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1365607   +
1365608   +IF NMISS(
1365609   +   AcceptedCmpTotal ,
1365610   +   Frq ,
1365611   +   Income ,
1365612   +   Mnt ,
1365613   +   MntFruits ,
1365614   +   MntGoldProds ,
1365615   +   MntMeatProducts ,
1365616   +   MntSweetProducts ,
1365617   +   NumCatalogPurchases ,
1365618   +   NumWebPurchases ,
1365619   +   RFMstat ,
1365620   +   RMntFrq ,
1365621   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1365622   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1365623   +
1365624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1365625   +END;
MPRINT(EM_DIAGRAM):   END;
1365626   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365627   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1365628   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365629   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1365630   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1365631   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1365632   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1365633   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1365634   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1365635   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1365636   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1365637   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1365638   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1365639   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1365640   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1365641   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1365642   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1365643   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1365644   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1365645   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1365646   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1365647   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1365648   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1365649   +END;
MPRINT(EM_DIAGRAM):   END;
1365650   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1365651   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1365652   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1365653   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1365654   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1365655   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1365656   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1365657   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1365658   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1365659   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1365660   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1365661   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1365662   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1365663   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1365664   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1365665   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1365666   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1365667   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1365668   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1365669   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1365670   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1365671   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1365672   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1365673   +   ELSE S_NumCatalogPurchases
1365674   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1365675   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1365676   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1365677   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1365678   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1365679   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1365680   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1365681   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1365682   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1365683   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1365684   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1365685   +END;
MPRINT(EM_DIAGRAM):   END;
1365686   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365687   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1365688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365690   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1365691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365692   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1365693   +   H11  =    -0.23012961341552 * S_AcceptedCmpTotal  +     0.46196798170863 *
1365694   +        S_Frq  +     0.10792957007496 * S_Income  +     0.01598495816724 *
1365695   +        S_Mnt  +     0.04110199082094 * S_MntFruits  +    -0.03861520815517 *
1365696   +        S_MntGoldProds  +    -0.21282606264093 * S_MntMeatProducts
1365697   +          +     0.01715600461602 * S_MntSweetProducts
1365698   +          +    -0.23329547812839 * S_NumCatalogPurchases
1365699   +          +    -0.11507537772092 * S_NumWebPurchases
1365700   +          +    -0.03410149182919 * S_RFMstat  +     0.14966504694497 *
1365701   +        S_RMntFrq  +     0.28566269847001 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.23012961341552 * S_AcceptedCmpTotal + 0.46196798170863 * S_Frq
+ 0.10792957007496 * S_Income + 0.01598495816724 * S_Mnt + 0.04110199082094 * S_MntFruits +
-0.03861520815517 * S_MntGoldProds + -0.21282606264093 * S_MntMeatProducts + 0.01715600461602
* S_MntSweetProducts + -0.23329547812839 * S_NumCatalogPurchases + -0.11507537772092 *
S_NumWebPurchases + -0.03410149182919 * S_RFMstat + 0.14966504694497 * S_RMntFrq +
0.28566269847001 * S_Recency ;
1365702   +   H12  =     0.05540254918167 * S_AcceptedCmpTotal  +     1.29235531722682 *
1365703   +        S_Frq  +     0.06366828093255 * S_Income  +    -0.26947825948002 *
1365704   +        S_Mnt  +     0.21714508305015 * S_MntFruits  +     0.26812345284438 *
1365705   +        S_MntGoldProds  +    -4.04479521582802 * S_MntMeatProducts
1365706   +          +     0.04792709763034 * S_MntSweetProducts
1365707   +          +    -1.08549455020763 * S_NumCatalogPurchases
1365708   +          +    -0.48337305556946 * S_NumWebPurchases
1365709   +          +    -0.22222278831599 * S_RFMstat  +    -0.23407358569927 *
1365710   +        S_RMntFrq  +    -0.01186280761112 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.05540254918167 * S_AcceptedCmpTotal + 1.29235531722682 * S_Frq +
0.06366828093255 * S_Income + -0.26947825948002 * S_Mnt + 0.21714508305015 * S_MntFruits +
0.26812345284438 * S_MntGoldProds + -4.04479521582802 * S_MntMeatProducts + 0.04792709763034 *
S_MntSweetProducts + -1.08549455020763 * S_NumCatalogPurchases + -0.48337305556946 *
S_NumWebPurchases + -0.22222278831599 * S_RFMstat + -0.23407358569927 * S_RMntFrq +
-0.01186280761112 * S_Recency ;
1365711   +   H11  = H11  +    -0.14627707216264 * G_Marital_Status0
1365712   +          +    -0.05689581037738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.14627707216264 * G_Marital_Status0 + -0.05689581037738 *
G_Marital_Status1 ;
1365713   +   H12  = H12  +     0.20389328110579 * G_Marital_Status0
1365714   +          +     0.12863423712687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.20389328110579 * G_Marital_Status0 + 0.12863423712687 *
G_Marital_Status1 ;
1365715   +   H11  =     0.26937694072834 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 0.26937694072834 + H11 ;
1365716   +   H12  =    -3.07173299704836 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -3.07173299704836 + H12 ;
1365717   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1365718   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1365719   +END;
MPRINT(EM_DIAGRAM):   END;
1365720   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1365721   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1365722   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1365723   +END;
MPRINT(EM_DIAGRAM):   END;
1365724   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365725   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1365726   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365727   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1365728   +   P_DepVar1  =    -8.61120981649634 * H11  +    -5.72570140806215 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -8.61120981649634 * H11 + -5.72570140806215 * H12 ;
1365729   +   P_DepVar1  =    -4.82159913495753 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.82159913495753 + P_DepVar1 ;
1365730   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1365731   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1365732   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1365733   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1365734   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1365735   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1365736   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1365737   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1365738   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1365739   +END;
MPRINT(EM_DIAGRAM):   END;
1365740   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1365741   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1365742   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1365743   +END;
MPRINT(EM_DIAGRAM):   END;
1365744   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1365745   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1365746   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1365747   +END;
MPRINT(EM_DIAGRAM):   END;
1365748   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365749   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1365750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1365751   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1365752   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1365753   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1365754   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1365755   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1365756   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1365757   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1365758   +END;
MPRINT(EM_DIAGRAM):   END;
1365759   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1365760   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1365761   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1365762   +drop
1365763   +H11
1365764   +H12
1365765   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1365766   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365767    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365768    quit;
1365769    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365770    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365771    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365772    retain ID 2 Node "Neural24";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural24";
1365773    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 797 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 797 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365775    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 797 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 797 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365778    proc sort data=EMWS8.Neural24_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural24_variableset out=_temp2(keep=NAME CREATOR);
1365779    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365780    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL24_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365781    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365782    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365783    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365784    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365785    proc contents data=EMWS8.Neural24_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural24_train out=_meta(keep=NAME) noprint;
1365786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1365787    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365788    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365789    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365790    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365791    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365793    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365794    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365795    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365795  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 429 rows and 5 columns.
 
1365796    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365797    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365798    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 429 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 429 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365799    filename _pref
1365799  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1365800    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365801    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1365802   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1365803   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1365804   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1365805   +
1365806   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1365807   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1365808   +
1365809   +
1365810   +/*----G_Marital_Status begin----*/
1365811   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1365812   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1365813   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1365814   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1365815   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1365816   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1365817   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1365818   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1365819   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1365820   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1365821   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1365822   +end;
MPRINT(EM_DIAGRAM):   end;
1365823   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1365824   +/*----G_Marital_Status end----*/
1365825   +
1365826   +
1365827   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1365828   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1365829   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365830    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365831    quit;
1365832    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365833    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365834    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365835    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1365836    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365837    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365838    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365839    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365840    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365841    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1365842    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365844    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365845    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365846    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365848    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1365849    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1365850    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365851    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365853    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365854    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365856    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365857    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365858    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365858  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1365859    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365860    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 432 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365862    filename _pref
1365862  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1365863    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365864    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1365865   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1365866   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1365867   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1365868   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1365869   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1365870   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365871    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365872    quit;
1365873    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365874    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365875    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365876    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1365877    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365878    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365879    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365880    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365882    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1365883    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365884    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365885    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365886    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365887    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365888    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365889    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1365890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1365891    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365892    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365894    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365895    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365896    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365897    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365898    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365899    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365899  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1365900    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365901    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365902    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 436 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365903    filename _pref
1365903  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1365904    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365905    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1365906   +
1365907   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1365908   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1365908  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1365909   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1365910   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1365911   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1365912   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1365913   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1365914    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1365915    quit;
1365916    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1365917    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1365918    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1365919    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1365920    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1365921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365922    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1365923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365925    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1365926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1365928    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365929    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1365930    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1365931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365932    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1365933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365934    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1365935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365937    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1365938    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1365939    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1365940    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365941    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1365942    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1365942  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1365943    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1365944    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1365945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 475 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1365946    filename _pref
1365946  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1365947    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1365948    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1365949   +
1365950   +
1365951   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1365952   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1365953   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1365954   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1365955   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1365956   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365957   +
1365958   +
1365959   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1365960   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1365961   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1365962   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1365963   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1365964   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365965   +
1365966   +
1365967   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1365968   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1365969   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1365970   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1365971   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1365972   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365973   +
1365974   +
1365975   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1365976   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1365977   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1365978   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1365979   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1365980   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365981   +
1365982   +
1365983   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1365984   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1365985   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1365986   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1365987   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1365988   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365989   +
1365990   +
1365991   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1365992   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1365993   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1365994   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1365995   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1365996   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1365997   +
1365998   +
1365999   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1366000   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1366001   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1366002   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1366003   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1366004   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366005   +
1366006   +
1366007   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1366008   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1366009   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1366010   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1366011   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1366012   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366013   +if
1366014   +_FILTERNORM1 not in ( '.')
1366015   + and
1366016   +_FILTERNORM2 not in ( '.')
1366017   + and
1366018   +_FILTERNORM3 not in ( '.')
1366019   + and
1366020   +_FILTERNORM4 not in ( '.')
1366021   + and
1366022   +_FILTERNORM5 not in ( '.')
1366023   + and
1366024   +_FILTERNORM6 not in ( '.')
1366025   + and
1366026   +_FILTERNORM7 not in ( ' ')
1366027   + and
1366028   +_FILTERNORM8 not in ( ' ')
1366029   +and
1366030   +( Dt_Customer ne .)
1366031   +and ( Income ne . and (Income<=107000))
1366032   +and ( Kidhome ne .)
1366033   +and ( MntFishProducts ne .)
1366034   +and ( MntFruits ne .)
1366035   +and ( MntGoldProds ne .)
1366036   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1366037   +and ( MntSweetProducts ne .)
1366038   +and ( MntWines ne .)
1366039   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1366040   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1366041   +and ( NumStorePurchases ne .)
1366042   +and ( NumWebPurchases ne .)
1366043   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1366044   +and ( Recency ne .)
1366045   +and ( Teenhome ne .)
1366046   +and ( Year_Birth ne .)
1366047   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1366048   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1366049   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1366050   +end;
MPRINT(EM_DIAGRAM):   end;
1366051   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1366052   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1366053    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1366054    quit;
1366055    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1366056    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1366057    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1366058    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1366059    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1366060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366061    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1366062    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366064    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1366065    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366067    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366068    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1366069    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1366070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366071    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1366072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366073    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1366074    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366075    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366076    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366077    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1366078    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366079    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366080    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366081    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1366081  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1366082    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366083    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1366084    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 541 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366085    %macro varDept(fcmpdata=,id=);
1366086    %global nobs&id scoreFlag&id;
1366087    %let scoreFlag&id = 0;
1366088    %if &id=1 or ^&fcmpStart %then %do;
1366089    proc sort data=&fcmpdata out=_temp&id nodupkey;
1366090    by NAME;
1366091    where id=&id and LHS in( %let j=1;
1366092    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1366093    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1366094    "&var" %let j = %eval(&j+1);
1366095    %end;
1366096    );
1366097    run;
1366098    %let dsid = %sysfunc(open(_temp&id));
1366099    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366100    %let dsid = %sysfunc(close(&dsid));
1366101    %if &&nobs&id %then %do;
1366102    %let scoreFlag&id = 1;
1366103    %let fcmpStart = 1;
1366104    %end;
1366105    %else %let fcmpStart = 0;
1366106    %end;
1366107    %else %do;
1366108    proc sort data=&fcmpdata out=_tempid;
1366109    where id=&id;
1366110    by LHS;
1366111    run;
1366112    %let dsid = %sysfunc(open(_tempid));
1366113    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366114    %let dsid = %sysfunc(close(&dsid));
1366115    %if ^&&nobs&id %then %do;
1366116    proc datasets lib=work nolist;
1366117    delete _tempid;
1366118    run;
1366119    quit;
1366120    %end;
1366121    %else %do;
1366122    data _tempAll;
1366123    set %let j=%eval(&id-1);
1366124    %do x=1 %to &j;
1366125    %if &&nobs&x %then %do;
1366126    _temp&x %end;
1366127    %end;
1366128    ;
1366129    run;
1366130    proc sql;
1366131    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1366131  ! work._tempid p2 where p.name=p2.lhs;
1366132    quit;
1366133    data _temp&id;
1366134    set _temp&id;
1366135    where LHS ne '' and NAME ne '' and Node ne '';
1366136    run;
1366137    proc datasets lib=work nolist;
1366138    delete _tempAll;
1366139    run;
1366140    %let dsid = %sysfunc(open(_temp&id));
1366141    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366142    %let dsid = %sysfunc(close(&dsid));
1366143    %if ^&&nobs&id %then %do;
1366144    proc datasets lib=work nolist;
1366145    delete _temp&id;
1366146    run;
1366147    quit;
1366148    %end;
1366149    %else %do;
1366150    %let scoreFlag&id = 1;
1366151    data _temp&id;
1366152    set _temp&id;
1366153    where LHS ne NAME and node ne '';
1366154    run;
1366155    %let dsid = %sysfunc(open(_temp&id));
1366156    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366157    %let dsid = %sysfunc(close(&dsid));
1366158    %if ^&&nobs&id %then %do;
1366159    proc datasets lib=work nolist;
1366160    delete _temp&id;
1366161    run;
1366162    quit;
1366163    %end;
1366164    %else %do;
1366165    proc sort data=_temp&id nodupkey;
1366166    by LHS NAME;
1366167    run;
1366168    %end;
1366169    %end;
1366170    %end;
1366171    %end;
1366172    %mend varDept;
1366173    %macro optCode(outdata=fcmpdata);
1366174    %global fcmpStart;
1366175    %let fcmpStart = 0;
1366176    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1366177    %let NumNodes=9;
1366178    %do k=1 %to &NumNodes;
1366179    %vardept(fcmpdata=&outdata, id=&k);
1366180    %end;
1366181    %mend optCode;
1366182    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1366183    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1366184    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1366185    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1366186    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366187    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1366188    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1366189    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1366190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366191    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366192    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1366192  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1366193    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1366194    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1366195    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1366196    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366197    filename _pref
1366197  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural25\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural25\EMPUBLISHSCORE.sas";
1366198    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1366199    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural25\EMPUBLISHSCORE.sas.
1366200   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1366201   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1366202   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1366203   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1366204   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1366205   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1366206   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1366207   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1366208   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1366209   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1366210   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1366211   +LENGTH _WARN_ $4
1366212   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1366213   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1366214   +
1366215   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1366216   +
1366217   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1366218   +
1366219   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1366220   +
1366221   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1366222   +
1366223   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1366224   +
1366225   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1366226   +
1366227   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1366228   +
1366229   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1366230   +
1366231   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1366232   +
1366233   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1366234   +
1366235   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1366236   +
1366237   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1366238   +
1366239   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1366240   +
1366241   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1366242   +
1366243   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1366244   +
1366245   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1366246   +
1366247   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1366248   +
1366249   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1366250   +
1366251   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1366252   +
1366253   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1366254   +
1366255   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1366256   +
1366257   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1366258   +
1366259   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1366260   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1366261   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1366262   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1366263   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1366264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1366265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1366266   +end;
MPRINT(EM_DIAGRAM):   end;
1366267   +else do;
MPRINT(EM_DIAGRAM):   else do;
1366268   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1366269   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1366270   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1366271   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1366272   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1366273   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1366274   +   end;
MPRINT(EM_DIAGRAM):   end;
1366275   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1366276   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1366277   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1366278   +   end;
MPRINT(EM_DIAGRAM):   end;
1366279   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1366280   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1366281   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1366282   +   end;
MPRINT(EM_DIAGRAM):   end;
1366283   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1366284   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1366285   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1366286   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1366287   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1366288   +   end;
MPRINT(EM_DIAGRAM):   end;
1366289   +end;
MPRINT(EM_DIAGRAM):   end;
1366290   +
1366291   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366292   +*** Checking missing input Interval
1366293   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1366294   +
1366295   +IF NMISS(
1366296   +   AcceptedCmpTotal ,
1366297   +   Frq ,
1366298   +   Income ,
1366299   +   Mnt ,
1366300   +   MntFruits ,
1366301   +   MntGoldProds ,
1366302   +   MntMeatProducts ,
1366303   +   MntSweetProducts ,
1366304   +   NumCatalogPurchases ,
1366305   +   NumWebPurchases ,
1366306   +   RFMstat ,
1366307   +   RMntFrq ,
1366308   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1366309   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1366310   +
1366311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1366312   +END;
MPRINT(EM_DIAGRAM):   END;
1366313   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366314   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1366315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1366317   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1366318   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1366319   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1366320   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1366321   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1366322   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1366323   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1366324   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1366325   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1366326   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1366327   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1366328   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1366329   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1366330   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1366331   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1366332   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1366333   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1366334   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1366335   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1366336   +END;
MPRINT(EM_DIAGRAM):   END;
1366337   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1366338   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1366339   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1366340   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1366341   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1366342   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1366343   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1366344   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1366345   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1366346   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1366347   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1366348   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1366349   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1366350   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1366351   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1366352   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1366353   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1366354   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1366355   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1366356   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1366357   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1366358   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1366359   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1366360   +   ELSE S_NumCatalogPurchases
1366361   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1366362   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1366363   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1366364   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1366365   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1366366   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1366367   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1366368   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1366369   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1366370   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1366371   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1366372   +END;
MPRINT(EM_DIAGRAM):   END;
1366373   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366374   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1366375   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366376   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366377   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1366378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366379   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1366380   +   H11  =    -0.29033160943141 * S_AcceptedCmpTotal  +     1.65008720168986 *
1366381   +        S_Frq  +     0.06251288055572 * S_Income  +      0.0668512722962 *
1366382   +        S_Mnt  +     0.03892214147304 * S_MntFruits  +     0.20062210213612 *
1366383   +        S_MntGoldProds  +    -3.11480309420656 * S_MntMeatProducts
1366384   +          +    -0.04673959319989 * S_MntSweetProducts
1366385   +          +    -1.21625330274707 * S_NumCatalogPurchases
1366386   +          +     -0.4971041829957 * S_NumWebPurchases
1366387   +          +    -0.17470099705144 * S_RFMstat  +    -0.53358474622759 *
1366388   +        S_RMntFrq  +     0.38389131134706 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.29033160943141 * S_AcceptedCmpTotal + 1.65008720168986 * S_Frq
+ 0.06251288055572 * S_Income + 0.0668512722962 * S_Mnt + 0.03892214147304 * S_MntFruits +
0.20062210213612 * S_MntGoldProds + -3.11480309420656 * S_MntMeatProducts + -0.04673959319989
* S_MntSweetProducts + -1.21625330274707 * S_NumCatalogPurchases + -0.4971041829957 *
S_NumWebPurchases + -0.17470099705144 * S_RFMstat + -0.53358474622759 * S_RMntFrq +
0.38389131134706 * S_Recency ;
1366389   +   H12  =     0.45303153795041 * S_AcceptedCmpTotal  +    -0.78996479450613 *
1366390   +        S_Frq  +    -0.58298284968136 * S_Income  +     0.14918533356272 *
1366391   +        S_Mnt  +    -0.40559802868396 * S_MntFruits  +     0.11972304240892 *
1366392   +        S_MntGoldProds  +     0.31356670313089 * S_MntMeatProducts
1366393   +          +    -0.14032278714215 * S_MntSweetProducts
1366394   +          +     0.13835096224468 * S_NumCatalogPurchases
1366395   +          +     0.13800491118955 * S_NumWebPurchases
1366396   +          +     0.10506847679186 * S_RFMstat  +    -0.29903179406638 *
1366397   +        S_RMntFrq  +    -0.52813041903353 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.45303153795041 * S_AcceptedCmpTotal + -0.78996479450613 * S_Frq
+ -0.58298284968136 * S_Income + 0.14918533356272 * S_Mnt + -0.40559802868396 * S_MntFruits +
0.11972304240892 * S_MntGoldProds + 0.31356670313089 * S_MntMeatProducts + -0.14032278714215 *
S_MntSweetProducts + 0.13835096224468 * S_NumCatalogPurchases + 0.13800491118955 *
S_NumWebPurchases + 0.10506847679186 * S_RFMstat + -0.29903179406638 * S_RMntFrq +
-0.52813041903353 * S_Recency ;
1366398   +   H13  =    -0.60990818976997 * S_AcceptedCmpTotal  +     0.78563794151057 *
1366399   +        S_Frq  +    -0.67740326666919 * S_Income  +     0.64266139486854 *
1366400   +        S_Mnt  +    -0.14912060810947 * S_MntFruits  +    -0.06683180032017 *
1366401   +        S_MntGoldProds  +    -1.00660670853382 * S_MntMeatProducts
1366402   +          +     0.01239684835876 * S_MntSweetProducts
1366403   +          +    -1.19356791317323 * S_NumCatalogPurchases
1366404   +          +    -0.62897909821994 * S_NumWebPurchases
1366405   +          +      -0.010489589719 * S_RFMstat  +      0.1434960860838 *
1366406   +        S_RMntFrq  +     1.20335007293573 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.60990818976997 * S_AcceptedCmpTotal + 0.78563794151057 * S_Frq
+ -0.67740326666919 * S_Income + 0.64266139486854 * S_Mnt + -0.14912060810947 * S_MntFruits +
-0.06683180032017 * S_MntGoldProds + -1.00660670853382 * S_MntMeatProducts + 0.01239684835876
* S_MntSweetProducts + -1.19356791317323 * S_NumCatalogPurchases + -0.62897909821994 *
S_NumWebPurchases + -0.010489589719 * S_RFMstat + 0.1434960860838 * S_RMntFrq +
1.20335007293573 * S_Recency ;
1366407   +   H11  = H11  +    -0.02749612145805 * G_Marital_Status0
1366408   +          +     0.04851614991645 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.02749612145805 * G_Marital_Status0 + 0.04851614991645 *
G_Marital_Status1 ;
1366409   +   H12  = H12  +     0.25900717859534 * G_Marital_Status0
1366410   +          +    -0.00514755509392 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.25900717859534 * G_Marital_Status0 + -0.00514755509392 *
G_Marital_Status1 ;
1366411   +   H13  = H13  +    -0.74074264175662 * G_Marital_Status0
1366412   +          +    -0.23517796339687 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.74074264175662 * G_Marital_Status0 + -0.23517796339687 *
G_Marital_Status1 ;
1366413   +   H11  =    -1.76667308717451 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.76667308717451 + H11 ;
1366414   +   H12  =    -0.06899369466405 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.06899369466405 + H12 ;
1366415   +   H13  =     4.22583207425873 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 4.22583207425873 + H13 ;
1366416   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1366417   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1366418   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1366419   +END;
MPRINT(EM_DIAGRAM):   END;
1366420   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1366421   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1366422   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1366423   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1366424   +END;
MPRINT(EM_DIAGRAM):   END;
1366425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366426   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1366427   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366428   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1366429   +   P_DepVar1  =    -4.70859697618201 * H11  +     3.63900660721997 * H12
1366430   +          +    -4.60310081273681 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.70859697618201 * H11 + 3.63900660721997 * H12 +
-4.60310081273681 * H13 ;
1366431   +   P_DepVar1  =     -0.6194274413348 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.6194274413348 + P_DepVar1 ;
1366432   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1366433   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1366434   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1366435   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1366436   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1366437   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1366438   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1366439   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1366440   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1366441   +END;
MPRINT(EM_DIAGRAM):   END;
1366442   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1366443   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1366444   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1366445   +END;
MPRINT(EM_DIAGRAM):   END;
1366446   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1366447   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1366448   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1366449   +END;
MPRINT(EM_DIAGRAM):   END;
1366450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366451   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1366452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366453   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1366454   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1366455   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1366456   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1366457   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1366458   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1366459   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1366460   +END;
MPRINT(EM_DIAGRAM):   END;
1366461   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1366462   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1366463   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1366464   +drop
1366465   +H11
1366466   +H12
1366467   +H13
1366468   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1366469   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1366470    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1366471    quit;
1366472    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1366473    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1366474    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1366475    retain ID 2 Node "Neural25";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural25";
1366476    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1366477    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 883 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 883 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366478    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1366479    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366480    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 883 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 883 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366481    proc sort data=EMWS8.Neural25_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural25_variableset out=_temp2(keep=NAME CREATOR);
1366482    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL25_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366484    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366485    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1366486    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1366487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366488    proc contents data=EMWS8.Neural25_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural25_train out=_meta(keep=NAME) noprint;
1366489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1366490    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1366491    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366492    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366493    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366494    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1366495    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366496    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366497    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366498    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1366498  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 457 rows and 5 columns.
 
1366499    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366500    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1366501    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 457 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 457 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366502    filename _pref
1366502  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1366503    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1366504    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1366505   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1366506   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1366507   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1366508   +
1366509   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1366510   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1366511   +
1366512   +
1366513   +/*----G_Marital_Status begin----*/
1366514   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1366515   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1366516   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1366517   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1366518   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1366519   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1366520   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1366521   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1366522   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1366523   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1366524   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1366525   +end;
MPRINT(EM_DIAGRAM):   end;
1366526   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1366527   +/*----G_Marital_Status end----*/
1366528   +
1366529   +
1366530   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1366531   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1366532   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1366533    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1366534    quit;
1366535    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1366536    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1366537    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1366538    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1366539    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1366540    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366541    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1366542    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366543    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366544    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1366545    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366547    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366548    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1366549    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1366550    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366551    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1366552    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366553    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1366554    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366555    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366556    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366557    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1366558    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366559    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366560    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366561    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1366561  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1366562    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366563    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1366564    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 460 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366565    filename _pref
1366565  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1366566    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1366567    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1366568   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1366569   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1366570   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1366571   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1366572   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1366573   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1366574    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1366575    quit;
1366576    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1366577    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1366578    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1366579    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1366580    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1366581    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366582    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1366583    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366584    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366585    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1366586    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366587    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1366588    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366589    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1366590    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1366591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366592    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1366593    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
1366594    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1366595    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366596    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366597    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366598    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1366599    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366600    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366601    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366602    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1366602  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1366603    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366604    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1366605    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 464 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366606    filename _pref
1366606  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1366607    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1366608    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1366609   +
1366610   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1366611   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1366611  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1366612   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1366613   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1366614   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1366615   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1366616   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1366617    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1366618    quit;
1366619    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1366620    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1366621    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1366622    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1366623    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1366624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366625    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1366626    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366628    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1366629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366631    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366632    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1366633    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1366634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366635    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1366636    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366637    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1366638    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366640    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366641    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1366642    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366643    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366644    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366645    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1366645  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1366646    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366647    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1366648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 503 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366649    filename _pref
1366649  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1366650    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1366651    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1366652   +
1366653   +
1366654   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1366655   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1366656   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1366657   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1366658   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1366659   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366660   +
1366661   +
1366662   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1366663   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1366664   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1366665   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1366666   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1366667   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366668   +
1366669   +
1366670   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1366671   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1366672   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1366673   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1366674   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1366675   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366676   +
1366677   +
1366678   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1366679   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1366680   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1366681   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1366682   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1366683   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366684   +
1366685   +
1366686   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1366687   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1366688   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1366689   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1366690   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1366691   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366692   +
1366693   +
1366694   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1366695   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1366696   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1366697   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1366698   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1366699   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366700   +
1366701   +
1366702   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1366703   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1366704   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1366705   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1366706   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1366707   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366708   +
1366709   +
1366710   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1366711   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1366712   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1366713   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1366714   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1366715   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1366716   +if
1366717   +_FILTERNORM1 not in ( '.')
1366718   + and
1366719   +_FILTERNORM2 not in ( '.')
1366720   + and
1366721   +_FILTERNORM3 not in ( '.')
1366722   + and
1366723   +_FILTERNORM4 not in ( '.')
1366724   + and
1366725   +_FILTERNORM5 not in ( '.')
1366726   + and
1366727   +_FILTERNORM6 not in ( '.')
1366728   + and
1366729   +_FILTERNORM7 not in ( ' ')
1366730   + and
1366731   +_FILTERNORM8 not in ( ' ')
1366732   +and
1366733   +( Dt_Customer ne .)
1366734   +and ( Income ne . and (Income<=107000))
1366735   +and ( Kidhome ne .)
1366736   +and ( MntFishProducts ne .)
1366737   +and ( MntFruits ne .)
1366738   +and ( MntGoldProds ne .)
1366739   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1366740   +and ( MntSweetProducts ne .)
1366741   +and ( MntWines ne .)
1366742   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1366743   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1366744   +and ( NumStorePurchases ne .)
1366745   +and ( NumWebPurchases ne .)
1366746   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1366747   +and ( Recency ne .)
1366748   +and ( Teenhome ne .)
1366749   +and ( Year_Birth ne .)
1366750   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1366751   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1366752   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1366753   +end;
MPRINT(EM_DIAGRAM):   end;
1366754   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1366755   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1366756    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1366757    quit;
1366758    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1366759    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1366760    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1366761    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1366762    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1366763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366764    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1366765    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366766    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366767    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1366768    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366769    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366770    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366771    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1366772    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1366773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366774    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1366775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1366776    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1366777    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366778    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366779    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1366780    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1366781    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1366782    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366783    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366784    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1366784  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1366785    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366786    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1366787    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 569 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366788    %macro varDept(fcmpdata=,id=);
1366789    %global nobs&id scoreFlag&id;
1366790    %let scoreFlag&id = 0;
1366791    %if &id=1 or ^&fcmpStart %then %do;
1366792    proc sort data=&fcmpdata out=_temp&id nodupkey;
1366793    by NAME;
1366794    where id=&id and LHS in( %let j=1;
1366795    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1366796    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1366797    "&var" %let j = %eval(&j+1);
1366798    %end;
1366799    );
1366800    run;
1366801    %let dsid = %sysfunc(open(_temp&id));
1366802    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366803    %let dsid = %sysfunc(close(&dsid));
1366804    %if &&nobs&id %then %do;
1366805    %let scoreFlag&id = 1;
1366806    %let fcmpStart = 1;
1366807    %end;
1366808    %else %let fcmpStart = 0;
1366809    %end;
1366810    %else %do;
1366811    proc sort data=&fcmpdata out=_tempid;
1366812    where id=&id;
1366813    by LHS;
1366814    run;
1366815    %let dsid = %sysfunc(open(_tempid));
1366816    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366817    %let dsid = %sysfunc(close(&dsid));
1366818    %if ^&&nobs&id %then %do;
1366819    proc datasets lib=work nolist;
1366820    delete _tempid;
1366821    run;
1366822    quit;
1366823    %end;
1366824    %else %do;
1366825    data _tempAll;
1366826    set %let j=%eval(&id-1);
1366827    %do x=1 %to &j;
1366828    %if &&nobs&x %then %do;
1366829    _temp&x %end;
1366830    %end;
1366831    ;
1366832    run;
1366833    proc sql;
1366834    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1366834  ! work._tempid p2 where p.name=p2.lhs;
1366835    quit;
1366836    data _temp&id;
1366837    set _temp&id;
1366838    where LHS ne '' and NAME ne '' and Node ne '';
1366839    run;
1366840    proc datasets lib=work nolist;
1366841    delete _tempAll;
1366842    run;
1366843    %let dsid = %sysfunc(open(_temp&id));
1366844    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366845    %let dsid = %sysfunc(close(&dsid));
1366846    %if ^&&nobs&id %then %do;
1366847    proc datasets lib=work nolist;
1366848    delete _temp&id;
1366849    run;
1366850    quit;
1366851    %end;
1366852    %else %do;
1366853    %let scoreFlag&id = 1;
1366854    data _temp&id;
1366855    set _temp&id;
1366856    where LHS ne NAME and node ne '';
1366857    run;
1366858    %let dsid = %sysfunc(open(_temp&id));
1366859    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1366860    %let dsid = %sysfunc(close(&dsid));
1366861    %if ^&&nobs&id %then %do;
1366862    proc datasets lib=work nolist;
1366863    delete _temp&id;
1366864    run;
1366865    quit;
1366866    %end;
1366867    %else %do;
1366868    proc sort data=_temp&id nodupkey;
1366869    by LHS NAME;
1366870    run;
1366871    %end;
1366872    %end;
1366873    %end;
1366874    %end;
1366875    %mend varDept;
1366876    %macro optCode(outdata=fcmpdata);
1366877    %global fcmpStart;
1366878    %let fcmpStart = 0;
1366879    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1366880    %let NumNodes=9;
1366881    %do k=1 %to &NumNodes;
1366882    %vardept(fcmpdata=&outdata, id=&k);
1366883    %end;
1366884    %mend optCode;
1366885    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1366886    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1366887    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1366888    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1366889    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1366890    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1366891    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1366892    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1366893    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366894    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1366895    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1366895  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1366896    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1366897    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1366898    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1366899    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1366900    filename _pref
1366900  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas";
1366901    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1366902    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas.
1366903   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1366904   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1366905   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1366906   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1366907   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1366908   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1366909   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1366910   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1366911   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1366912   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1366913   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1366914   +LENGTH _WARN_ $4
1366915   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1366916   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1366917   +
1366918   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1366919   +
1366920   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1366921   +
1366922   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1366923   +
1366924   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1366925   +
1366926   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1366927   +
1366928   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1366929   +
1366930   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1366931   +
1366932   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1366933   +
1366934   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1366935   +
1366936   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1366937   +
1366938   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1366939   +
1366940   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1366941   +
1366942   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1366943   +
1366944   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1366945   +
1366946   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1366947   +
1366948   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1366949   +
1366950   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1366951   +
1366952   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1366953   +
1366954   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1366955   +
1366956   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1366957   +
1366958   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1366959   +
1366960   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1366961   +
1366962   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1366963   +
1366964   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1366965   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1366966   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1366967   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1366968   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1366969   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1366970   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1366971   +end;
MPRINT(EM_DIAGRAM):   end;
1366972   +else do;
MPRINT(EM_DIAGRAM):   else do;
1366973   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1366974   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1366975   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1366976   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1366977   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1366978   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1366979   +   end;
MPRINT(EM_DIAGRAM):   end;
1366980   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1366981   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1366982   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1366983   +   end;
MPRINT(EM_DIAGRAM):   end;
1366984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1366985   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1366986   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1366987   +   end;
MPRINT(EM_DIAGRAM):   end;
1366988   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1366989   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1366990   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1366991   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1366992   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1366993   +   end;
MPRINT(EM_DIAGRAM):   end;
1366994   +end;
MPRINT(EM_DIAGRAM):   end;
1366995   +
1366996   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1366997   +*** Checking missing input Interval
1366998   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1366999   +
1367000   +IF NMISS(
1367001   +   AcceptedCmpTotal ,
1367002   +   Frq ,
1367003   +   Income ,
1367004   +   Mnt ,
1367005   +   MntFruits ,
1367006   +   MntGoldProds ,
1367007   +   MntMeatProducts ,
1367008   +   MntSweetProducts ,
1367009   +   NumCatalogPurchases ,
1367010   +   NumWebPurchases ,
1367011   +   RFMstat ,
1367012   +   RMntFrq ,
1367013   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1367014   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1367015   +
1367016   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1367017   +END;
MPRINT(EM_DIAGRAM):   END;
1367018   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367019   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1367020   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367021   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1367022   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1367023   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1367024   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1367025   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1367026   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1367027   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1367028   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1367029   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1367030   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1367031   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1367032   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1367033   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1367034   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1367035   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1367036   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1367037   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1367038   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1367039   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1367040   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1367041   +END;
MPRINT(EM_DIAGRAM):   END;
1367042   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1367043   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1367044   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1367045   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1367046   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1367047   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1367048   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1367049   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1367050   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1367051   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1367052   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1367053   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1367054   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1367055   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1367056   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1367057   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1367058   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1367059   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1367060   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1367061   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1367062   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1367063   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1367064   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1367065   +   ELSE S_NumCatalogPurchases
1367066   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1367067   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1367068   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1367069   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1367070   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1367071   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1367072   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1367073   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1367074   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1367075   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1367076   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1367077   +END;
MPRINT(EM_DIAGRAM):   END;
1367078   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367079   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1367080   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367081   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367082   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1367083   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367084   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1367085   +   H11  =    -1.12938466101576 * S_AcceptedCmpTotal  +     0.61534183742192 *
1367086   +        S_Frq  +     0.21605471415782 * S_Income  +     1.00718645972599 *
1367087   +        S_Mnt  +    -0.04712823237951 * S_MntFruits  +    -0.07929121432621 *
1367088   +        S_MntGoldProds  +    -0.41982161110641 * S_MntMeatProducts
1367089   +          +     0.30688676656325 * S_MntSweetProducts
1367090   +          +    -0.31936466951531 * S_NumCatalogPurchases
1367091   +          +    -0.40503981142414 * S_NumWebPurchases
1367092   +          +    -0.00368867286865 * S_RFMstat  +     0.37807775340916 *
1367093   +        S_RMntFrq  +     0.94794577395963 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -1.12938466101576 * S_AcceptedCmpTotal + 0.61534183742192 * S_Frq
+ 0.21605471415782 * S_Income + 1.00718645972599 * S_Mnt + -0.04712823237951 * S_MntFruits +
-0.07929121432621 * S_MntGoldProds + -0.41982161110641 * S_MntMeatProducts + 0.30688676656325
* S_MntSweetProducts + -0.31936466951531 * S_NumCatalogPurchases + -0.40503981142414 *
S_NumWebPurchases + -0.00368867286865 * S_RFMstat + 0.37807775340916 * S_RMntFrq +
0.94794577395963 * S_Recency ;
1367094   +   H12  =    -0.12113443728514 * S_AcceptedCmpTotal  +     0.93537745252849 *
1367095   +        S_Frq  +    -0.09891671631341 * S_Income  +     1.99038480756089 *
1367096   +        S_Mnt  +     0.17709370706747 * S_MntFruits  +    -0.26193027989873 *
1367097   +        S_MntGoldProds  +    -1.32538448369411 * S_MntMeatProducts
1367098   +          +    -0.57511617685848 * S_MntSweetProducts
1367099   +          +    -0.80584166120088 * S_NumCatalogPurchases
1367100   +          +    -0.46226595005401 * S_NumWebPurchases
1367101   +          +     0.10198567130706 * S_RFMstat  +     0.21276308472657 *
1367102   +        S_RMntFrq  +     0.20830913301712 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12113443728514 * S_AcceptedCmpTotal + 0.93537745252849 * S_Frq
+ -0.09891671631341 * S_Income + 1.99038480756089 * S_Mnt + 0.17709370706747 * S_MntFruits +
-0.26193027989873 * S_MntGoldProds + -1.32538448369411 * S_MntMeatProducts + -0.57511617685848
* S_MntSweetProducts + -0.80584166120088 * S_NumCatalogPurchases + -0.46226595005401 *
S_NumWebPurchases + 0.10198567130706 * S_RFMstat + 0.21276308472657 * S_RMntFrq +
0.20830913301712 * S_Recency ;
1367103   +   H13  =    -0.26642267115951 * S_AcceptedCmpTotal  +    -0.93821950754639 *
1367104   +        S_Frq  +     0.01733680104129 * S_Income  +    -0.34674569831914 *
1367105   +        S_Mnt  +    -0.13141804104196 * S_MntFruits  +    -0.08208570095055 *
1367106   +        S_MntGoldProds  +     0.33076491610846 * S_MntMeatProducts
1367107   +          +     0.13151485846279 * S_MntSweetProducts
1367108   +          +    -0.12544664418198 * S_NumCatalogPurchases
1367109   +          +     0.31794108898576 * S_NumWebPurchases
1367110   +          +    -0.09733881043326 * S_RFMstat  +    -0.55416616488207 *
1367111   +        S_RMntFrq  +      0.6850072112056 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26642267115951 * S_AcceptedCmpTotal + -0.93821950754639 * S_Frq
+ 0.01733680104129 * S_Income + -0.34674569831914 * S_Mnt + -0.13141804104196 * S_MntFruits +
-0.08208570095055 * S_MntGoldProds + 0.33076491610846 * S_MntMeatProducts + 0.13151485846279 *
S_MntSweetProducts + -0.12544664418198 * S_NumCatalogPurchases + 0.31794108898576 *
S_NumWebPurchases + -0.09733881043326 * S_RFMstat + -0.55416616488207 * S_RMntFrq +
0.6850072112056 * S_Recency ;
1367112   +   H14  =    -0.26331970415451 * S_AcceptedCmpTotal  +     0.91045762420144 *
1367113   +        S_Frq  +     0.47866760167028 * S_Income  +     1.96822454637646 *
1367114   +        S_Mnt  +     0.37467695392633 * S_MntFruits  +     0.35024846355131 *
1367115   +        S_MntGoldProds  +    -1.12912963812687 * S_MntMeatProducts
1367116   +          +     0.55003060492603 * S_MntSweetProducts
1367117   +          +    -0.81895769875154 * S_NumCatalogPurchases
1367118   +          +    -0.73905791041531 * S_NumWebPurchases
1367119   +          +    -0.05892830686928 * S_RFMstat  +    -2.20288127458579 *
1367120   +        S_RMntFrq  +     0.31097790354738 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.26331970415451 * S_AcceptedCmpTotal + 0.91045762420144 * S_Frq
+ 0.47866760167028 * S_Income + 1.96822454637646 * S_Mnt + 0.37467695392633 * S_MntFruits +
0.35024846355131 * S_MntGoldProds + -1.12912963812687 * S_MntMeatProducts + 0.55003060492603 *
S_MntSweetProducts + -0.81895769875154 * S_NumCatalogPurchases + -0.73905791041531 *
S_NumWebPurchases + -0.05892830686928 * S_RFMstat + -2.20288127458579 * S_RMntFrq +
0.31097790354738 * S_Recency ;
1367121   +   H11  = H11  +    -0.15769833524163 * G_Marital_Status0
1367122   +          +    -0.63616832118402 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.15769833524163 * G_Marital_Status0 + -0.63616832118402 *
G_Marital_Status1 ;
1367123   +   H12  = H12  +    -0.02031957824974 * G_Marital_Status0
1367124   +          +    -0.05261414754191 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.02031957824974 * G_Marital_Status0 + -0.05261414754191 *
G_Marital_Status1 ;
1367125   +   H13  = H13  +    -0.66558713728702 * G_Marital_Status0
1367126   +          +    -0.01155707859856 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.66558713728702 * G_Marital_Status0 + -0.01155707859856 *
G_Marital_Status1 ;
1367127   +   H14  = H14  +     0.12565386008933 * G_Marital_Status0
1367128   +          +     0.07125401506996 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.12565386008933 * G_Marital_Status0 + 0.07125401506996 *
G_Marital_Status1 ;
1367129   +   H11  =    -0.47940901026517 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.47940901026517 + H11 ;
1367130   +   H12  =     0.72706446657517 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.72706446657517 + H12 ;
1367131   +   H13  =     2.64976292189629 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 2.64976292189629 + H13 ;
1367132   +   H14  =     0.18030319416595 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.18030319416595 + H14 ;
1367133   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1367134   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1367135   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1367136   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1367137   +END;
MPRINT(EM_DIAGRAM):   END;
1367138   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1367139   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1367140   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1367141   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1367142   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1367143   +END;
MPRINT(EM_DIAGRAM):   END;
1367144   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367145   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1367146   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367147   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1367148   +   P_DepVar1  =    -2.16840231556862 * H11  +    -2.67201260012597 * H12
1367149   +          +    -4.82460682607153 * H13  +    -2.93480893396507 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.16840231556862 * H11 + -2.67201260012597 * H12 +
-4.82460682607153 * H13 + -2.93480893396507 * H14 ;
1367150   +   P_DepVar1  =     1.13227729187339 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.13227729187339 + P_DepVar1 ;
1367151   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1367152   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1367153   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1367154   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1367155   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1367156   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1367157   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1367158   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1367159   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1367160   +END;
MPRINT(EM_DIAGRAM):   END;
1367161   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1367162   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1367163   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1367164   +END;
MPRINT(EM_DIAGRAM):   END;
1367165   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1367166   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1367167   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1367168   +END;
MPRINT(EM_DIAGRAM):   END;
1367169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367170   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1367171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367172   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1367173   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1367174   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1367175   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1367176   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1367177   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1367178   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1367179   +END;
MPRINT(EM_DIAGRAM):   END;
1367180   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1367181   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1367182   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1367183   +drop
1367184   +H11
1367185   +H12
1367186   +H13
1367187   +H14
1367188   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1367189   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367190    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367191    quit;
1367192    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367193    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367194    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367195    retain ID 2 Node "Neural26";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural26";
1367196    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367197    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 969 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 969 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367198    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1367199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367200    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 969 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 969 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367201    proc sort data=EMWS8.Neural26_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural26_variableset out=_temp2(keep=NAME CREATOR);
1367202    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367203    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL26_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367204    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367205    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1367206    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1367207    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367208    proc contents data=EMWS8.Neural26_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural26_train out=_meta(keep=NAME) noprint;
1367209    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1367210    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1367211    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367212    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367213    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367214    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1367215    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367216    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367217    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367218    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1367218  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 485 rows and 5 columns.
 
1367219    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367220    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1367221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 485 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 485 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367222    filename _pref
1367222  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1367223    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1367224    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1367225   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1367226   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1367227   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1367228   +
1367229   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1367230   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1367231   +
1367232   +
1367233   +/*----G_Marital_Status begin----*/
1367234   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1367235   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1367236   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1367237   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1367238   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1367239   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1367240   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1367241   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1367242   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1367243   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1367244   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1367245   +end;
MPRINT(EM_DIAGRAM):   end;
1367246   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1367247   +/*----G_Marital_Status end----*/
1367248   +
1367249   +
1367250   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1367251   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1367252   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367253    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367254    quit;
1367255    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367256    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367257    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367258    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1367259    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367261    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1367262    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367263    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367264    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1367265    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367266    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367267    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367268    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1367269    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1367270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367271    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1367272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1367273    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1367274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367276    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367277    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1367278    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367279    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1367280    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367281    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1367281  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1367282    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367283    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1367284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 488 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367285    filename _pref
1367285  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1367286    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1367287    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1367288   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1367289   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1367290   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1367291   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1367292   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1367293   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367294    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367295    quit;
1367296    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367297    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367298    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367299    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1367300    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367301    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367302    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1367303    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367304    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367305    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1367306    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367307    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367308    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367309    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1367310    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1367311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367312    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1367313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1367314    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1367315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1367317    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367318    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1367319    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367320    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367321    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367322    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1367322  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1367323    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367324    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1367325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 492 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367326    filename _pref
1367326  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1367327    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1367328    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1367329   +
1367330   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1367331   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1367331  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1367332   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1367333   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1367334   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1367335   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1367336   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367337    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367338    quit;
1367339    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367340    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367341    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367342    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1367343    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367345    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1367346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367348    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1367349    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367351    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367352    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1367353    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1367354    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367355    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1367356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367357    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1367358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367359    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367360    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367361    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1367362    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367363    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367364    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367365    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1367365  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1367366    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367367    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1367368    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367369    filename _pref
1367369  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1367370    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1367371    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1367372   +
1367373   +
1367374   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1367375   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1367376   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1367377   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1367378   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1367379   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367380   +
1367381   +
1367382   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1367383   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1367384   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1367385   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1367386   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1367387   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367388   +
1367389   +
1367390   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1367391   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1367392   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1367393   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1367394   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1367395   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367396   +
1367397   +
1367398   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1367399   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1367400   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1367401   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1367402   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1367403   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367404   +
1367405   +
1367406   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1367407   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1367408   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1367409   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1367410   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1367411   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367412   +
1367413   +
1367414   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1367415   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1367416   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1367417   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1367418   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1367419   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367420   +
1367421   +
1367422   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1367423   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1367424   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1367425   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1367426   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1367427   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367428   +
1367429   +
1367430   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1367431   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1367432   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1367433   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1367434   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1367435   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1367436   +if
1367437   +_FILTERNORM1 not in ( '.')
1367438   + and
1367439   +_FILTERNORM2 not in ( '.')
1367440   + and
1367441   +_FILTERNORM3 not in ( '.')
1367442   + and
1367443   +_FILTERNORM4 not in ( '.')
1367444   + and
1367445   +_FILTERNORM5 not in ( '.')
1367446   + and
1367447   +_FILTERNORM6 not in ( '.')
1367448   + and
1367449   +_FILTERNORM7 not in ( ' ')
1367450   + and
1367451   +_FILTERNORM8 not in ( ' ')
1367452   +and
1367453   +( Dt_Customer ne .)
1367454   +and ( Income ne . and (Income<=107000))
1367455   +and ( Kidhome ne .)
1367456   +and ( MntFishProducts ne .)
1367457   +and ( MntFruits ne .)
1367458   +and ( MntGoldProds ne .)
1367459   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1367460   +and ( MntSweetProducts ne .)
1367461   +and ( MntWines ne .)
1367462   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1367463   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1367464   +and ( NumStorePurchases ne .)
1367465   +and ( NumWebPurchases ne .)
1367466   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1367467   +and ( Recency ne .)
1367468   +and ( Teenhome ne .)
1367469   +and ( Year_Birth ne .)
1367470   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1367471   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1367472   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1367473   +end;
MPRINT(EM_DIAGRAM):   end;
1367474   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1367475   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367476    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367477    quit;
1367478    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367479    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367480    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367481    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1367482    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367483    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367484    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1367485    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367486    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367487    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1367488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367489    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367490    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367491    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1367492    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1367493    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367494    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1367495    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1367496    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1367497    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367499    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367500    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1367501    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367502    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367503    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367504    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1367504  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1367505    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367506    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1367507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 597 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367508    %macro varDept(fcmpdata=,id=);
1367509    %global nobs&id scoreFlag&id;
1367510    %let scoreFlag&id = 0;
1367511    %if &id=1 or ^&fcmpStart %then %do;
1367512    proc sort data=&fcmpdata out=_temp&id nodupkey;
1367513    by NAME;
1367514    where id=&id and LHS in( %let j=1;
1367515    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1367516    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1367517    "&var" %let j = %eval(&j+1);
1367518    %end;
1367519    );
1367520    run;
1367521    %let dsid = %sysfunc(open(_temp&id));
1367522    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1367523    %let dsid = %sysfunc(close(&dsid));
1367524    %if &&nobs&id %then %do;
1367525    %let scoreFlag&id = 1;
1367526    %let fcmpStart = 1;
1367527    %end;
1367528    %else %let fcmpStart = 0;
1367529    %end;
1367530    %else %do;
1367531    proc sort data=&fcmpdata out=_tempid;
1367532    where id=&id;
1367533    by LHS;
1367534    run;
1367535    %let dsid = %sysfunc(open(_tempid));
1367536    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1367537    %let dsid = %sysfunc(close(&dsid));
1367538    %if ^&&nobs&id %then %do;
1367539    proc datasets lib=work nolist;
1367540    delete _tempid;
1367541    run;
1367542    quit;
1367543    %end;
1367544    %else %do;
1367545    data _tempAll;
1367546    set %let j=%eval(&id-1);
1367547    %do x=1 %to &j;
1367548    %if &&nobs&x %then %do;
1367549    _temp&x %end;
1367550    %end;
1367551    ;
1367552    run;
1367553    proc sql;
1367554    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1367554  ! work._tempid p2 where p.name=p2.lhs;
1367555    quit;
1367556    data _temp&id;
1367557    set _temp&id;
1367558    where LHS ne '' and NAME ne '' and Node ne '';
1367559    run;
1367560    proc datasets lib=work nolist;
1367561    delete _tempAll;
1367562    run;
1367563    %let dsid = %sysfunc(open(_temp&id));
1367564    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1367565    %let dsid = %sysfunc(close(&dsid));
1367566    %if ^&&nobs&id %then %do;
1367567    proc datasets lib=work nolist;
1367568    delete _temp&id;
1367569    run;
1367570    quit;
1367571    %end;
1367572    %else %do;
1367573    %let scoreFlag&id = 1;
1367574    data _temp&id;
1367575    set _temp&id;
1367576    where LHS ne NAME and node ne '';
1367577    run;
1367578    %let dsid = %sysfunc(open(_temp&id));
1367579    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1367580    %let dsid = %sysfunc(close(&dsid));
1367581    %if ^&&nobs&id %then %do;
1367582    proc datasets lib=work nolist;
1367583    delete _temp&id;
1367584    run;
1367585    quit;
1367586    %end;
1367587    %else %do;
1367588    proc sort data=_temp&id nodupkey;
1367589    by LHS NAME;
1367590    run;
1367591    %end;
1367592    %end;
1367593    %end;
1367594    %end;
1367595    %mend varDept;
1367596    %macro optCode(outdata=fcmpdata);
1367597    %global fcmpStart;
1367598    %let fcmpStart = 0;
1367599    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1367600    %let NumNodes=9;
1367601    %do k=1 %to &NumNodes;
1367602    %vardept(fcmpdata=&outdata, id=&k);
1367603    %end;
1367604    %mend optCode;
1367605    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.29 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1367606    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1367607    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1367608    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1367609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367610    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1367611    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1367612    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1367613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367614    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367615    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1367615  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1367616    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367617    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1367618    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1367619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367620    filename _pref
1367620  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
1367621    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1367622    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas.
1367623   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1367624   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1367625   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1367626   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1367627   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1367628   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1367629   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1367630   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1367631   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1367632   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1367633   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1367634   +LENGTH _WARN_ $4
1367635   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1367636   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1367637   +
1367638   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1367639   +
1367640   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1367641   +
1367642   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1367643   +
1367644   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1367645   +
1367646   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1367647   +
1367648   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1367649   +
1367650   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1367651   +
1367652   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1367653   +
1367654   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1367655   +
1367656   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1367657   +
1367658   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1367659   +
1367660   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1367661   +
1367662   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1367663   +
1367664   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1367665   +
1367666   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1367667   +
1367668   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1367669   +
1367670   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1367671   +
1367672   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1367673   +
1367674   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1367675   +
1367676   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1367677   +
1367678   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1367679   +
1367680   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1367681   +
1367682   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1367683   +
1367684   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1367685   +
1367686   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1367687   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1367688   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1367689   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1367690   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1367691   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1367692   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1367693   +end;
MPRINT(EM_DIAGRAM):   end;
1367694   +else do;
MPRINT(EM_DIAGRAM):   else do;
1367695   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1367696   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1367697   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1367698   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1367699   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1367700   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1367701   +   end;
MPRINT(EM_DIAGRAM):   end;
1367702   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1367703   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1367704   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1367705   +   end;
MPRINT(EM_DIAGRAM):   end;
1367706   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1367707   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1367708   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1367709   +   end;
MPRINT(EM_DIAGRAM):   end;
1367710   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1367711   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1367712   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1367713   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1367714   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1367715   +   end;
MPRINT(EM_DIAGRAM):   end;
1367716   +end;
MPRINT(EM_DIAGRAM):   end;
1367717   +
1367718   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367719   +*** Checking missing input Interval
1367720   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1367721   +
1367722   +IF NMISS(
1367723   +   AcceptedCmpTotal ,
1367724   +   Frq ,
1367725   +   Income ,
1367726   +   Mnt ,
1367727   +   MntFruits ,
1367728   +   MntGoldProds ,
1367729   +   MntMeatProducts ,
1367730   +   MntSweetProducts ,
1367731   +   NumCatalogPurchases ,
1367732   +   NumWebPurchases ,
1367733   +   RFMstat ,
1367734   +   RMntFrq ,
1367735   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1367736   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1367737   +
1367738   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1367739   +END;
MPRINT(EM_DIAGRAM):   END;
1367740   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367741   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1367742   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367743   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1367744   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1367745   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1367746   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1367747   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1367748   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1367749   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1367750   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1367751   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1367752   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1367753   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1367754   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1367755   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1367756   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1367757   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1367758   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1367759   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1367760   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1367761   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1367762   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1367763   +END;
MPRINT(EM_DIAGRAM):   END;
1367764   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1367765   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1367766   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1367767   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1367768   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1367769   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1367770   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1367771   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1367772   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1367773   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1367774   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1367775   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1367776   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1367777   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1367778   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1367779   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1367780   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1367781   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1367782   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1367783   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1367784   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1367785   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1367786   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1367787   +   ELSE S_NumCatalogPurchases
1367788   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1367789   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1367790   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1367791   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1367792   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1367793   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1367794   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1367795   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1367796   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1367797   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1367798   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1367799   +END;
MPRINT(EM_DIAGRAM):   END;
1367800   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367801   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1367802   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367803   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367804   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1367805   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367806   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1367807   +   H11  =     -0.0913777931029 * S_AcceptedCmpTotal  +     0.60888959215918 *
1367808   +        S_Frq  +    -0.24839207108705 * S_Income  +     0.12904699470351 *
1367809   +        S_Mnt  +     0.54811037634684 * S_MntFruits  +    -0.08131311507182 *
1367810   +        S_MntGoldProds  +    -1.97616589442941 * S_MntMeatProducts
1367811   +          +     0.82261116064356 * S_MntSweetProducts
1367812   +          +    -1.55909661993581 * S_NumCatalogPurchases
1367813   +          +    -0.16340954706378 * S_NumWebPurchases
1367814   +          +    -1.23424537997161 * S_RFMstat  +    -0.80043433144556 *
1367815   +        S_RMntFrq  +     0.30674447000925 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.0913777931029 * S_AcceptedCmpTotal + 0.60888959215918 * S_Frq +
-0.24839207108705 * S_Income + 0.12904699470351 * S_Mnt + 0.54811037634684 * S_MntFruits +
-0.08131311507182 * S_MntGoldProds + -1.97616589442941 * S_MntMeatProducts + 0.82261116064356
* S_MntSweetProducts + -1.55909661993581 * S_NumCatalogPurchases + -0.16340954706378 *
S_NumWebPurchases + -1.23424537997161 * S_RFMstat + -0.80043433144556 * S_RMntFrq +
0.30674447000925 * S_Recency ;
1367816   +   H12  =     0.66910867066957 * S_AcceptedCmpTotal  +    -0.81073730531351 *
1367817   +        S_Frq  +    -0.92904249004165 * S_Income  +    -0.71459542981691 *
1367818   +        S_Mnt  +    -0.40393540462056 * S_MntFruits  +    -0.20281878016562 *
1367819   +        S_MntGoldProds  +     0.17444715052802 * S_MntMeatProducts
1367820   +          +     0.16618230229073 * S_MntSweetProducts
1367821   +          +     0.80060397308165 * S_NumCatalogPurchases
1367822   +          +     0.55840526773277 * S_NumWebPurchases
1367823   +          +    -0.09080307227601 * S_RFMstat  +     0.05982566462633 *
1367824   +        S_RMntFrq  +    -0.42099196648583 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.66910867066957 * S_AcceptedCmpTotal + -0.81073730531351 * S_Frq
+ -0.92904249004165 * S_Income + -0.71459542981691 * S_Mnt + -0.40393540462056 * S_MntFruits +
-0.20281878016562 * S_MntGoldProds + 0.17444715052802 * S_MntMeatProducts + 0.16618230229073 *
S_MntSweetProducts + 0.80060397308165 * S_NumCatalogPurchases + 0.55840526773277 *
S_NumWebPurchases + -0.09080307227601 * S_RFMstat + 0.05982566462633 * S_RMntFrq +
-0.42099196648583 * S_Recency ;
1367825   +   H13  =    -0.15105936730245 * S_AcceptedCmpTotal  +     1.16357039711749 *
1367826   +        S_Frq  +     0.22437164680037 * S_Income  +     1.43365592130923 *
1367827   +        S_Mnt  +    -0.14312453132189 * S_MntFruits  +    -0.31473112363001 *
1367828   +        S_MntGoldProds  +    -2.13920511789248 * S_MntMeatProducts
1367829   +          +    -0.17184538549757 * S_MntSweetProducts
1367830   +          +    -0.69381764338971 * S_NumCatalogPurchases
1367831   +          +    -1.00049208220128 * S_NumWebPurchases
1367832   +          +    -0.12191208845807 * S_RFMstat  +     1.62722348145663 *
1367833   +        S_RMntFrq  +     0.22384852404779 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.15105936730245 * S_AcceptedCmpTotal + 1.16357039711749 * S_Frq
+ 0.22437164680037 * S_Income + 1.43365592130923 * S_Mnt + -0.14312453132189 * S_MntFruits +
-0.31473112363001 * S_MntGoldProds + -2.13920511789248 * S_MntMeatProducts + -0.17184538549757
* S_MntSweetProducts + -0.69381764338971 * S_NumCatalogPurchases + -1.00049208220128 *
S_NumWebPurchases + -0.12191208845807 * S_RFMstat + 1.62722348145663 * S_RMntFrq +
0.22384852404779 * S_Recency ;
1367834   +   H14  =    -0.30303374230593 * S_AcceptedCmpTotal  +    -0.62477404644887 *
1367835   +        S_Frq  +    -0.43520735188047 * S_Income  +     0.05599198595582 *
1367836   +        S_Mnt  +     0.00600099391846 * S_MntFruits  +    -0.09476560363866 *
1367837   +        S_MntGoldProds  +    -0.00009188415985 * S_MntMeatProducts
1367838   +          +     0.23752183521653 * S_MntSweetProducts
1367839   +          +    -0.28855285082926 * S_NumCatalogPurchases
1367840   +          +     0.22915352115856 * S_NumWebPurchases
1367841   +          +    -0.11884330592736 * S_RFMstat  +    -0.64276224884242 *
1367842   +        S_RMntFrq  +     0.92099032026404 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = -0.30303374230593 * S_AcceptedCmpTotal + -0.62477404644887 * S_Frq
+ -0.43520735188047 * S_Income + 0.05599198595582 * S_Mnt + 0.00600099391846 * S_MntFruits +
-0.09476560363866 * S_MntGoldProds + -0.00009188415985 * S_MntMeatProducts + 0.23752183521653
* S_MntSweetProducts + -0.28855285082926 * S_NumCatalogPurchases + 0.22915352115856 *
S_NumWebPurchases + -0.11884330592736 * S_RFMstat + -0.64276224884242 * S_RMntFrq +
0.92099032026404 * S_Recency ;
1367843   +   H15  =     0.69494967673266 * S_AcceptedCmpTotal  +    -1.38070782248656 *
1367844   +        S_Frq  +    -0.32839057322808 * S_Income  +    -0.08175715513223 *
1367845   +        S_Mnt  +    -0.20002754133592 * S_MntFruits  +    -0.11045646973193 *
1367846   +        S_MntGoldProds  +     -0.0204672560747 * S_MntMeatProducts
1367847   +          +     0.02112120768705 * S_MntSweetProducts
1367848   +          +     0.56037303009349 * S_NumCatalogPurchases
1367849   +          +     0.16645734799944 * S_NumWebPurchases
1367850   +          +    -0.08683405137098 * S_RFMstat  +     0.67174291855061 *
1367851   +        S_RMntFrq  +    -0.73931649005757 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.69494967673266 * S_AcceptedCmpTotal + -1.38070782248656 * S_Frq
+ -0.32839057322808 * S_Income + -0.08175715513223 * S_Mnt + -0.20002754133592 * S_MntFruits +
-0.11045646973193 * S_MntGoldProds + -0.0204672560747 * S_MntMeatProducts + 0.02112120768705 *
S_MntSweetProducts + 0.56037303009349 * S_NumCatalogPurchases + 0.16645734799944 *
S_NumWebPurchases + -0.08683405137098 * S_RFMstat + 0.67174291855061 * S_RMntFrq +
-0.73931649005757 * S_Recency ;
1367852   +   H11  = H11  +    -0.06672320657697 * G_Marital_Status0
1367853   +          +     0.26608073179469 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.06672320657697 * G_Marital_Status0 + 0.26608073179469 *
G_Marital_Status1 ;
1367854   +   H12  = H12  +    -0.50978529257766 * G_Marital_Status0
1367855   +          +    -0.79456480121636 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.50978529257766 * G_Marital_Status0 + -0.79456480121636 *
G_Marital_Status1 ;
1367856   +   H13  = H13  +     0.10010493470347 * G_Marital_Status0
1367857   +          +    -0.36513536279898 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.10010493470347 * G_Marital_Status0 + -0.36513536279898 *
G_Marital_Status1 ;
1367858   +   H14  = H14  +    -0.69765939438555 * G_Marital_Status0
1367859   +          +    -0.11679147660596 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.69765939438555 * G_Marital_Status0 + -0.11679147660596 *
G_Marital_Status1 ;
1367860   +   H15  = H15  +     0.53791694284218 * G_Marital_Status0
1367861   +          +      0.4394922352118 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.53791694284218 * G_Marital_Status0 + 0.4394922352118 *
G_Marital_Status1 ;
1367862   +   H11  =    -2.24311986759404 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.24311986759404 + H11 ;
1367863   +   H12  =    -0.72214357959265 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.72214357959265 + H12 ;
1367864   +   H13  =     0.67332529871332 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.67332529871332 + H13 ;
1367865   +   H14  =      3.2917179565774 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 3.2917179565774 + H14 ;
1367866   +   H15  =     0.60464077032534 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.60464077032534 + H15 ;
1367867   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1367868   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1367869   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1367870   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1367871   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1367872   +END;
MPRINT(EM_DIAGRAM):   END;
1367873   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1367874   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1367875   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1367876   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1367877   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1367878   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1367879   +END;
MPRINT(EM_DIAGRAM):   END;
1367880   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367881   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1367882   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367883   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1367884   +   P_DepVar1  =    -3.62613662430208 * H11  +     1.55068674489409 * H12
1367885   +          +    -3.01839961891379 * H13  +    -4.27170883586144 * H14
1367886   +          +     2.62887939759638 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -3.62613662430208 * H11 + 1.55068674489409 * H12 +
-3.01839961891379 * H13 + -4.27170883586144 * H14 + 2.62887939759638 * H15 ;
1367887   +   P_DepVar1  =    -1.19158347943696 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.19158347943696 + P_DepVar1 ;
1367888   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1367889   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1367890   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1367891   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1367892   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1367893   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1367894   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1367895   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1367896   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1367897   +END;
MPRINT(EM_DIAGRAM):   END;
1367898   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1367899   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1367900   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1367901   +END;
MPRINT(EM_DIAGRAM):   END;
1367902   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1367903   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1367904   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1367905   +END;
MPRINT(EM_DIAGRAM):   END;
1367906   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367907   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1367908   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1367909   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1367910   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1367911   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1367912   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1367913   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1367914   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1367915   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1367916   +END;
MPRINT(EM_DIAGRAM):   END;
1367917   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1367918   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1367919   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1367920   +drop
1367921   +H11
1367922   +H12
1367923   +H13
1367924   +H14
1367925   +H15
1367926   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1367927   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367928    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367929    quit;
1367930    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367931    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367932    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367933    retain ID 2 Node "Neural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural27";
1367934    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367935    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1055 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1055 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367936    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1367937    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367938    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1055 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1055 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367939    proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
1367940    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367941    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367942    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367943    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1367944    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1367945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367946    proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
1367947    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367948    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1367949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367950    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367951    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1367952    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1367953    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1367954    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367955    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1367956    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1367956  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 513 rows and 5 columns.
 
1367957    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367958    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1367959    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 513 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 513 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1367960    filename _pref
1367960  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1367961    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1367962    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1367963   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1367964   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1367965   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1367966   +
1367967   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1367968   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1367969   +
1367970   +
1367971   +/*----G_Marital_Status begin----*/
1367972   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1367973   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1367974   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1367975   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1367976   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1367977   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1367978   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1367979   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1367980   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1367981   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1367982   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1367983   +end;
MPRINT(EM_DIAGRAM):   end;
1367984   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1367985   +/*----G_Marital_Status end----*/
1367986   +
1367987   +
1367988   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1367989   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1367990   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1367991    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1367992    quit;
1367993    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1367994    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1367995    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1367996    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1367997    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1367998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1367999    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368002    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1368003    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368004    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368005    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368006    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368007    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368008    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368009    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1368010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1368011    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368012    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368013    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368014    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368015    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368016    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368017    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368018    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368019    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368019  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1368020    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368021    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368022    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 516 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368023    filename _pref
1368023  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1368024    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368025    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1368026   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1368027   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1368028   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1368029   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1368030   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1368031   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368032    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368033    quit;
1368034    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368035    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368036    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368037    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1368038    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368039    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368040    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368041    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368042    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368043    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1368044    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368045    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368046    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368047    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368048    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368049    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368050    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1368051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368052    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368055    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368056    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368058    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368059    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368060    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368060  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1368061    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368062    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 520 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368064    filename _pref
1368064  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1368065    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368066    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1368067   +
1368068   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1368069   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1368069  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1368070   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1368071   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1368072   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1368073   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1368074   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368075    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368076    quit;
1368077    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368078    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368079    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368080    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1368081    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368082    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368083    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368084    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368085    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368086    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1368087    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368088    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368089    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368090    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368091    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368093    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1368094    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368095    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368096    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368097    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368098    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368099    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368101    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368102    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368103    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368103  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1368104    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368105    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 559 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368107    filename _pref
1368107  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1368108    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368109    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1368110   +
1368111   +
1368112   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1368113   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1368114   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1368115   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1368116   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1368117   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368118   +
1368119   +
1368120   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1368121   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1368122   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1368123   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1368124   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1368125   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368126   +
1368127   +
1368128   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1368129   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1368130   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1368131   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1368132   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1368133   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368134   +
1368135   +
1368136   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1368137   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1368138   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1368139   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1368140   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1368141   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368142   +
1368143   +
1368144   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1368145   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1368146   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1368147   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1368148   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1368149   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368150   +
1368151   +
1368152   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1368153   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1368154   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1368155   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1368156   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1368157   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368158   +
1368159   +
1368160   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1368161   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1368162   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1368163   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1368164   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1368165   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368166   +
1368167   +
1368168   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1368169   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1368170   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1368171   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1368172   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1368173   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368174   +if
1368175   +_FILTERNORM1 not in ( '.')
1368176   + and
1368177   +_FILTERNORM2 not in ( '.')
1368178   + and
1368179   +_FILTERNORM3 not in ( '.')
1368180   + and
1368181   +_FILTERNORM4 not in ( '.')
1368182   + and
1368183   +_FILTERNORM5 not in ( '.')
1368184   + and
1368185   +_FILTERNORM6 not in ( '.')
1368186   + and
1368187   +_FILTERNORM7 not in ( ' ')
1368188   + and
1368189   +_FILTERNORM8 not in ( ' ')
1368190   +and
1368191   +( Dt_Customer ne .)
1368192   +and ( Income ne . and (Income<=107000))
1368193   +and ( Kidhome ne .)
1368194   +and ( MntFishProducts ne .)
1368195   +and ( MntFruits ne .)
1368196   +and ( MntGoldProds ne .)
1368197   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1368198   +and ( MntSweetProducts ne .)
1368199   +and ( MntWines ne .)
1368200   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1368201   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1368202   +and ( NumStorePurchases ne .)
1368203   +and ( NumWebPurchases ne .)
1368204   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1368205   +and ( Recency ne .)
1368206   +and ( Teenhome ne .)
1368207   +and ( Year_Birth ne .)
1368208   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1368209   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1368210   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1368211   +end;
MPRINT(EM_DIAGRAM):   end;
1368212   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1368213   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368214    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368215    quit;
1368216    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368217    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368218    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368219    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1368220    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368221    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368222    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368223    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368224    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368225    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1368226    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368227    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368228    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368229    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368230    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368232    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1368233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368234    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368235    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368237    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368238    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368239    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368240    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368241    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368242    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368242  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1368243    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368244    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368245    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 625 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368246    %macro varDept(fcmpdata=,id=);
1368247    %global nobs&id scoreFlag&id;
1368248    %let scoreFlag&id = 0;
1368249    %if &id=1 or ^&fcmpStart %then %do;
1368250    proc sort data=&fcmpdata out=_temp&id nodupkey;
1368251    by NAME;
1368252    where id=&id and LHS in( %let j=1;
1368253    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1368254    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1368255    "&var" %let j = %eval(&j+1);
1368256    %end;
1368257    );
1368258    run;
1368259    %let dsid = %sysfunc(open(_temp&id));
1368260    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1368261    %let dsid = %sysfunc(close(&dsid));
1368262    %if &&nobs&id %then %do;
1368263    %let scoreFlag&id = 1;
1368264    %let fcmpStart = 1;
1368265    %end;
1368266    %else %let fcmpStart = 0;
1368267    %end;
1368268    %else %do;
1368269    proc sort data=&fcmpdata out=_tempid;
1368270    where id=&id;
1368271    by LHS;
1368272    run;
1368273    %let dsid = %sysfunc(open(_tempid));
1368274    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1368275    %let dsid = %sysfunc(close(&dsid));
1368276    %if ^&&nobs&id %then %do;
1368277    proc datasets lib=work nolist;
1368278    delete _tempid;
1368279    run;
1368280    quit;
1368281    %end;
1368282    %else %do;
1368283    data _tempAll;
1368284    set %let j=%eval(&id-1);
1368285    %do x=1 %to &j;
1368286    %if &&nobs&x %then %do;
1368287    _temp&x %end;
1368288    %end;
1368289    ;
1368290    run;
1368291    proc sql;
1368292    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1368292  ! work._tempid p2 where p.name=p2.lhs;
1368293    quit;
1368294    data _temp&id;
1368295    set _temp&id;
1368296    where LHS ne '' and NAME ne '' and Node ne '';
1368297    run;
1368298    proc datasets lib=work nolist;
1368299    delete _tempAll;
1368300    run;
1368301    %let dsid = %sysfunc(open(_temp&id));
1368302    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1368303    %let dsid = %sysfunc(close(&dsid));
1368304    %if ^&&nobs&id %then %do;
1368305    proc datasets lib=work nolist;
1368306    delete _temp&id;
1368307    run;
1368308    quit;
1368309    %end;
1368310    %else %do;
1368311    %let scoreFlag&id = 1;
1368312    data _temp&id;
1368313    set _temp&id;
1368314    where LHS ne NAME and node ne '';
1368315    run;
1368316    %let dsid = %sysfunc(open(_temp&id));
1368317    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1368318    %let dsid = %sysfunc(close(&dsid));
1368319    %if ^&&nobs&id %then %do;
1368320    proc datasets lib=work nolist;
1368321    delete _temp&id;
1368322    run;
1368323    quit;
1368324    %end;
1368325    %else %do;
1368326    proc sort data=_temp&id nodupkey;
1368327    by LHS NAME;
1368328    run;
1368329    %end;
1368330    %end;
1368331    %end;
1368332    %end;
1368333    %mend varDept;
1368334    %macro optCode(outdata=fcmpdata);
1368335    %global fcmpStart;
1368336    %let fcmpStart = 0;
1368337    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1368338    %let NumNodes=9;
1368339    %do k=1 %to &NumNodes;
1368340    %vardept(fcmpdata=&outdata, id=&k);
1368341    %end;
1368342    %mend optCode;
1368343    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1368344    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1368345    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1368346    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1368347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368348    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1368349    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1368350    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1368351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368352    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368353    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1368353  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1368354    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368355    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1368356    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1368357    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368358    filename _pref
1368358  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
1368359    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368360    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas.
1368361   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1368362   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1368363   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1368364   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
The SAS System
 
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1368365   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1368366   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1368367   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1368368   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1368369   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1368370   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1368371   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1368372   +LENGTH _WARN_ $4
1368373   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1368374   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1368375   +
1368376   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1368377   +
1368378   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1368379   +
1368380   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1368381   +
1368382   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1368383   +
1368384   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1368385   +
1368386   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1368387   +
1368388   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1368389   +
1368390   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1368391   +
1368392   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1368393   +
1368394   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1368395   +
1368396   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1368397   +
1368398   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1368399   +
1368400   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1368401   +
1368402   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1368403   +
1368404   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1368405   +
1368406   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1368407   +
1368408   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1368409   +
1368410   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1368411   +
1368412   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1368413   +
1368414   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1368415   +
1368416   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1368417   +
1368418   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1368419   +
1368420   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1368421   +
1368422   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1368423   +
1368424   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1368425   +
1368426   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1368427   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1368428   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1368429   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1368430   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1368431   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1368432   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1368433   +end;
MPRINT(EM_DIAGRAM):   end;
1368434   +else do;
MPRINT(EM_DIAGRAM):   else do;
1368435   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1368436   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1368437   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1368438   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1368439   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1368440   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1368441   +   end;
MPRINT(EM_DIAGRAM):   end;
1368442   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1368443   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1368444   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1368445   +   end;
MPRINT(EM_DIAGRAM):   end;
1368446   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1368447   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1368448   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1368449   +   end;
MPRINT(EM_DIAGRAM):   end;
1368450   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1368451   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1368452   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1368453   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1368454   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1368455   +   end;
MPRINT(EM_DIAGRAM):   end;
1368456   +end;
MPRINT(EM_DIAGRAM):   end;
1368457   +
1368458   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368459   +*** Checking missing input Interval
1368460   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1368461   +
1368462   +IF NMISS(
1368463   +   AcceptedCmpTotal ,
1368464   +   Frq ,
1368465   +   Income ,
1368466   +   Mnt ,
1368467   +   MntFruits ,
1368468   +   MntGoldProds ,
1368469   +   MntMeatProducts ,
1368470   +   MntSweetProducts ,
1368471   +   NumCatalogPurchases ,
1368472   +   NumWebPurchases ,
1368473   +   RFMstat ,
1368474   +   RMntFrq ,
1368475   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1368476   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1368477   +
1368478   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1368479   +END;
MPRINT(EM_DIAGRAM):   END;
1368480   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368481   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1368482   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368483   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1368484   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1368485   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1368486   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1368487   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1368488   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1368489   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1368490   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1368491   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1368492   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1368493   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1368494   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1368495   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1368496   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1368497   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1368498   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1368499   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1368500   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1368501   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1368502   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1368503   +END;
MPRINT(EM_DIAGRAM):   END;
1368504   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1368505   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1368506   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1368507   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1368508   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1368509   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1368510   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1368511   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1368512   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1368513   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1368514   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1368515   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1368516   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1368517   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1368518   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1368519   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1368520   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1368521   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1368522   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1368523   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1368524   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1368525   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1368526   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1368527   +   ELSE S_NumCatalogPurchases
1368528   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1368529   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1368530   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1368531   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1368532   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1368533   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1368534   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1368535   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1368536   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1368537   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1368538   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1368539   +END;
MPRINT(EM_DIAGRAM):   END;
1368540   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368541   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1368542   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368544   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1368545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368546   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1368547   +   H11  =     0.82631693872377 * S_AcceptedCmpTotal  +    -0.72798667283699 *
1368548   +        S_Frq  +     0.15911649036122 * S_Income  +    -0.60456350734571 *
1368549   +        S_Mnt  +    -0.74377544096034 * S_MntFruits  +    -0.12263914971644 *
1368550   +        S_MntGoldProds  +     0.17677796203072 * S_MntMeatProducts
1368551   +          +    -0.50748691839629 * S_MntSweetProducts
1368552   +          +     0.64296516693494 * S_NumCatalogPurchases
1368553   +          +     1.28350004565407 * S_NumWebPurchases
1368554   +          +     0.21030868312225 * S_RFMstat  +    -0.39695828920844 *
1368555   +        S_RMntFrq  +    -0.89895080438896 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.82631693872377 * S_AcceptedCmpTotal + -0.72798667283699 * S_Frq
+ 0.15911649036122 * S_Income + -0.60456350734571 * S_Mnt + -0.74377544096034 * S_MntFruits +
-0.12263914971644 * S_MntGoldProds + 0.17677796203072 * S_MntMeatProducts + -0.50748691839629
* S_MntSweetProducts + 0.64296516693494 * S_NumCatalogPurchases + 1.28350004565407 *
S_NumWebPurchases + 0.21030868312225 * S_RFMstat + -0.39695828920844 * S_RMntFrq +
-0.89895080438896 * S_Recency ;
1368556   +   H12  =     0.11667862669372 * S_AcceptedCmpTotal  +    -1.01106011934145 *
1368557   +        S_Frq  +    -0.17716076384549 * S_Income  +    -0.24293226300477 *
1368558   +        S_Mnt  +     -0.0787175302374 * S_MntFruits  +     0.00532047873906 *
1368559   +        S_MntGoldProds  +     1.29466535738179 * S_MntMeatProducts
1368560   +          +     0.17384010941361 * S_MntSweetProducts
1368561   +          +     0.92948439877935 * S_NumCatalogPurchases
1368562   +          +     0.22516927332959 * S_NumWebPurchases
1368563   +          +     0.05028067999269 * S_RFMstat  +     0.78999743446302 *
1368564   +        S_RMntFrq  +    -0.20939117765596 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.11667862669372 * S_AcceptedCmpTotal + -1.01106011934145 * S_Frq
+ -0.17716076384549 * S_Income + -0.24293226300477 * S_Mnt + -0.0787175302374 * S_MntFruits +
0.00532047873906 * S_MntGoldProds + 1.29466535738179 * S_MntMeatProducts + 0.17384010941361 *
S_MntSweetProducts + 0.92948439877935 * S_NumCatalogPurchases + 0.22516927332959 *
S_NumWebPurchases + 0.05028067999269 * S_RFMstat + 0.78999743446302 * S_RMntFrq +
-0.20939117765596 * S_Recency ;
1368565   +   H13  =     0.04357769443186 * S_AcceptedCmpTotal  +     0.15406703269953 *
1368566   +        S_Frq  +     0.30195133876726 * S_Income  +     0.28819360890276 *
1368567   +        S_Mnt  +     0.09892781576641 * S_MntFruits  +     0.49225212949739 *
1368568   +        S_MntGoldProds  +     0.29770764897396 * S_MntMeatProducts
1368569   +          +     -0.2000873376449 * S_MntSweetProducts
1368570   +          +     0.12566784354514 * S_NumCatalogPurchases
1368571   +          +     0.02104112723179 * S_NumWebPurchases
1368572   +          +    -0.43415514019088 * S_RFMstat  +    -0.17022294749993 *
1368573   +        S_RMntFrq  +     0.30357171575981 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.04357769443186 * S_AcceptedCmpTotal + 0.15406703269953 * S_Frq +
0.30195133876726 * S_Income + 0.28819360890276 * S_Mnt + 0.09892781576641 * S_MntFruits +
0.49225212949739 * S_MntGoldProds + 0.29770764897396 * S_MntMeatProducts + -0.2000873376449 *
S_MntSweetProducts + 0.12566784354514 * S_NumCatalogPurchases + 0.02104112723179 *
S_NumWebPurchases + -0.43415514019088 * S_RFMstat + -0.17022294749993 * S_RMntFrq +
0.30357171575981 * S_Recency ;
1368574   +   H14  =     0.89017550554492 * S_AcceptedCmpTotal  +    -1.24866436391906 *
1368575   +        S_Frq  +    -0.83458596455814 * S_Income  +    -0.66942952173326 *
1368576   +        S_Mnt  +    -0.22543485387319 * S_MntFruits  +    -0.10688181972933 *
1368577   +        S_MntGoldProds  +     0.85050982143614 * S_MntMeatProducts
1368578   +          +     0.12117759215087 * S_MntSweetProducts
1368579   +          +     0.80203773582494 * S_NumCatalogPurchases
1368580   +          +     0.17374160185958 * S_NumWebPurchases
1368581   +          +    -0.12855081884938 * S_RFMstat  +     0.45921570261849 *
1368582   +        S_RMntFrq  +    -1.09092321008268 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.89017550554492 * S_AcceptedCmpTotal + -1.24866436391906 * S_Frq
+ -0.83458596455814 * S_Income + -0.66942952173326 * S_Mnt + -0.22543485387319 * S_MntFruits +
-0.10688181972933 * S_MntGoldProds + 0.85050982143614 * S_MntMeatProducts + 0.12117759215087 *
S_MntSweetProducts + 0.80203773582494 * S_NumCatalogPurchases + 0.17374160185958 *
S_NumWebPurchases + -0.12855081884938 * S_RFMstat + 0.45921570261849 * S_RMntFrq +
-1.09092321008268 * S_Recency ;
1368583   +   H15  =    -0.68386094226468 * S_AcceptedCmpTotal  +    -0.44368664779237 *
1368584   +        S_Frq  +    -0.63118593216016 * S_Income  +     -0.8549673235883 *
1368585   +        S_Mnt  +     -0.4174049500068 * S_MntFruits  +    -0.02221537411568 *
1368586   +        S_MntGoldProds  +      0.0634004340553 * S_MntMeatProducts
1368587   +          +      0.2989820991785 * S_MntSweetProducts
1368588   +          +     0.04398783976739 * S_NumCatalogPurchases
1368589   +          +     0.40368640676572 * S_NumWebPurchases
1368590   +          +    -0.50987577368598 * S_RFMstat  +    -0.24616064467414 *
1368591   +        S_RMntFrq  +    -0.01932947962302 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.68386094226468 * S_AcceptedCmpTotal + -0.44368664779237 * S_Frq
+ -0.63118593216016 * S_Income + -0.8549673235883 * S_Mnt + -0.4174049500068 * S_MntFruits +
-0.02221537411568 * S_MntGoldProds + 0.0634004340553 * S_MntMeatProducts + 0.2989820991785 *
S_MntSweetProducts + 0.04398783976739 * S_NumCatalogPurchases + 0.40368640676572 *
S_NumWebPurchases + -0.50987577368598 * S_RFMstat + -0.24616064467414 * S_RMntFrq +
-0.01932947962302 * S_Recency ;
1368592   +   H16  =    -0.69633356297868 * S_AcceptedCmpTotal  +     0.25580106272723 *
1368593   +        S_Frq  +    -0.15941056497212 * S_Income  +     1.01091236070049 *
1368594   +        S_Mnt  +    -0.16421220259024 * S_MntFruits  +    -0.28158219367628 *
1368595   +        S_MntGoldProds  +    -0.80473865500071 * S_MntMeatProducts
1368596   +          +     0.10950268819222 * S_MntSweetProducts
1368597   +          +    -0.59025524598908 * S_NumCatalogPurchases
1368598   +          +    -0.02069421817896 * S_NumWebPurchases
1368599   +          +     -0.3615429826151 * S_RFMstat  +    -0.41611769964424 *
1368600   +        S_RMntFrq  +     0.96940490611968 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.69633356297868 * S_AcceptedCmpTotal + 0.25580106272723 * S_Frq
+ -0.15941056497212 * S_Income + 1.01091236070049 * S_Mnt + -0.16421220259024 * S_MntFruits +
-0.28158219367628 * S_MntGoldProds + -0.80473865500071 * S_MntMeatProducts + 0.10950268819222
* S_MntSweetProducts + -0.59025524598908 * S_NumCatalogPurchases + -0.02069421817896 *
S_NumWebPurchases + -0.3615429826151 * S_RFMstat + -0.41611769964424 * S_RMntFrq +
0.96940490611968 * S_Recency ;
1368601   +   H11  = H11  +        0.45545922927 * G_Marital_Status0
1368602   +          +     0.12818067118838 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.45545922927 * G_Marital_Status0 + 0.12818067118838 *
G_Marital_Status1 ;
1368603   +   H12  = H12  +    -0.20371081343188 * G_Marital_Status0
1368604   +          +      0.0869800653918 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.20371081343188 * G_Marital_Status0 + 0.0869800653918 *
G_Marital_Status1 ;
1368605   +   H13  = H13  +    -0.33845151454936 * G_Marital_Status0
1368606   +          +    -0.43733288680739 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.33845151454936 * G_Marital_Status0 + -0.43733288680739 *
G_Marital_Status1 ;
1368607   +   H14  = H14  +     0.11759980770855 * G_Marital_Status0
1368608   +          +    -0.01680808105992 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.11759980770855 * G_Marital_Status0 + -0.01680808105992 *
G_Marital_Status1 ;
1368609   +   H15  = H15  +    -0.20605143700963 * G_Marital_Status0
1368610   +          +     0.04987739539035 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.20605143700963 * G_Marital_Status0 + 0.04987739539035 *
G_Marital_Status1 ;
1368611   +   H16  = H16  +    -0.99478088512585 * G_Marital_Status0
1368612   +          +    -0.35983290751115 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.99478088512585 * G_Marital_Status0 + -0.35983290751115 *
G_Marital_Status1 ;
1368613   +   H11  =    -0.72044866217862 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.72044866217862 + H11 ;
1368614   +   H12  =     0.73797915336977 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.73797915336977 + H12 ;
1368615   +   H13  =     0.82989235994379 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.82989235994379 + H13 ;
1368616   +   H14  =    -0.48103007102008 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.48103007102008 + H14 ;
1368617   +   H15  =     -0.4352791778041 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.4352791778041 + H15 ;
1368618   +   H16  =      2.7027355184778 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 2.7027355184778 + H16 ;
1368619   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1368620   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1368621   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1368622   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1368623   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1368624   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1368625   +END;
MPRINT(EM_DIAGRAM):   END;
1368626   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1368627   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1368628   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1368629   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1368630   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1368631   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1368632   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1368633   +END;
MPRINT(EM_DIAGRAM):   END;
1368634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368635   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1368636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368637   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1368638   +   P_DepVar1  =     1.53646139060035 * H11  +     1.98227889313385 * H12
1368639   +          +     0.69366657666187 * H13  +      1.4458071195477 * H14
1368640   +          +     0.81229467076169 * H15  +     -2.4762533950508 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.53646139060035 * H11 + 1.98227889313385 * H12 +
0.69366657666187 * H13 + 1.4458071195477 * H14 + 0.81229467076169 * H15 + -2.4762533950508 *
H16 ;
1368641   +   P_DepVar1  =    -0.95559108382775 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.95559108382775 + P_DepVar1 ;
1368642   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1368643   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1368644   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1368645   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1368646   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1368647   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1368648   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1368649   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1368650   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1368651   +END;
MPRINT(EM_DIAGRAM):   END;
1368652   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1368653   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1368654   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1368655   +END;
MPRINT(EM_DIAGRAM):   END;
1368656   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1368657   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1368658   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1368659   +END;
MPRINT(EM_DIAGRAM):   END;
1368660   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368661   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1368662   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1368663   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1368664   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1368665   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1368666   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1368667   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1368668   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1368669   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1368670   +END;
MPRINT(EM_DIAGRAM):   END;
1368671   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1368672   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1368673   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1368674   +drop
1368675   +H11
1368676   +H12
1368677   +H13
1368678   +H14
1368679   +H15
1368680   +H16
1368681   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1368682   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368683    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368684    quit;
1368685    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368686    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368687    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368688    retain ID 2 Node "Neural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural28";
1368689    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368690    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1141 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1141 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368691    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368692    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1141 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1141 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368694    proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
1368695    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368697    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368698    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368699    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368700    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368701    proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
1368702    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1368703    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368704    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368705    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368706    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368707    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368708    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368709    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368710    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368711    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368711  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 541 rows and 5 columns.
 
1368712    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368713    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368714    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 541 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 541 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368715    filename _pref
1368715  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1368716    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368717    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1368718   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1368719   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1368720   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1368721   +
1368722   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1368723   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1368724   +
1368725   +
1368726   +/*----G_Marital_Status begin----*/
1368727   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1368728   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1368729   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1368730   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1368731   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1368732   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1368733   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1368734   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1368735   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1368736   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1368737   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1368738   +end;
MPRINT(EM_DIAGRAM):   end;
1368739   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1368740   +/*----G_Marital_Status end----*/
1368741   +
1368742   +
1368743   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1368744   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1368745   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368746    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368747    quit;
1368748    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368749    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368750    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368751    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1368752    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368754    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368755    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368756    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368757    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1368758    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368760    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368761    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368762    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368764    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1368765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368766    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368769    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368770    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368771    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368772    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368773    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368774    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368774  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1368775    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368776    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 544 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368778    filename _pref
1368778  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1368779    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368780    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1368781   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1368782   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1368783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1368784   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1368785   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1368786   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368787    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368788    quit;
1368789    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368790    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368791    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368792    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1368793    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368795    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368798    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1368799    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368800    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368801    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368802    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368803    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368804    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368805    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1368806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368807    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368809    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368810    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368811    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368812    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368813    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368814    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368815    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368815  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1368816    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368817    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368818    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 548 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368819    filename _pref
1368819  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1368820    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368821    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1368822   +
1368823   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1368824   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1368824  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1368825   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1368826   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1368827   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1368828   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1368829   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368830    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368831    quit;
1368832    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368833    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368834    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368835    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1368836    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368837    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368838    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368839    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368840    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368841    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1368842    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368844    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368845    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368846    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368847    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368848    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1368849    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368850    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368851    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368852    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368853    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368854    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368855    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368856    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368857    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368858    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368858  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1368859    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368860    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1368861    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 587 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368862    filename _pref
1368862  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1368863    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1368864    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1368865   +
1368866   +
1368867   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1368868   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1368869   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1368870   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1368871   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1368872   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368873   +
1368874   +
1368875   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1368876   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1368877   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1368878   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1368879   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1368880   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368881   +
1368882   +
1368883   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1368884   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1368885   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1368886   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1368887   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1368888   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368889   +
1368890   +
1368891   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1368892   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1368893   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1368894   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1368895   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1368896   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368897   +
1368898   +
1368899   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1368900   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1368901   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1368902   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1368903   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1368904   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368905   +
1368906   +
1368907   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1368908   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1368909   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1368910   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1368911   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1368912   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368913   +
1368914   +
1368915   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1368916   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1368917   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1368918   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1368919   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1368920   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368921   +
1368922   +
1368923   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1368924   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1368925   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1368926   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1368927   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1368928   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1368929   +if
1368930   +_FILTERNORM1 not in ( '.')
1368931   + and
1368932   +_FILTERNORM2 not in ( '.')
1368933   + and
1368934   +_FILTERNORM3 not in ( '.')
1368935   + and
1368936   +_FILTERNORM4 not in ( '.')
1368937   + and
1368938   +_FILTERNORM5 not in ( '.')
1368939   + and
1368940   +_FILTERNORM6 not in ( '.')
1368941   + and
1368942   +_FILTERNORM7 not in ( ' ')
1368943   + and
1368944   +_FILTERNORM8 not in ( ' ')
1368945   +and
1368946   +( Dt_Customer ne .)
1368947   +and ( Income ne . and (Income<=107000))
1368948   +and ( Kidhome ne .)
1368949   +and ( MntFishProducts ne .)
1368950   +and ( MntFruits ne .)
1368951   +and ( MntGoldProds ne .)
1368952   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1368953   +and ( MntSweetProducts ne .)
1368954   +and ( MntWines ne .)
1368955   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1368956   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1368957   +and ( NumStorePurchases ne .)
1368958   +and ( NumWebPurchases ne .)
1368959   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1368960   +and ( Recency ne .)
1368961   +and ( Teenhome ne .)
1368962   +and ( Year_Birth ne .)
1368963   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1368964   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1368965   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1368966   +end;
MPRINT(EM_DIAGRAM):   end;
1368967   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1368968   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1368969    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1368970    quit;
1368971    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1368972    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1368973    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1368974    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1368975    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1368976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368977    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1368978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368980    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1368981    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368982    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368983    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368984    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1368985    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1368986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368987    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1368988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1368989    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1368990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368991    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368992    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1368993    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1368994    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1368995    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1368996    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1368997    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1368997  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1368998    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1368999    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1369000    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 653 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369001    %macro varDept(fcmpdata=,id=);
1369002    %global nobs&id scoreFlag&id;
1369003    %let scoreFlag&id = 0;
1369004    %if &id=1 or ^&fcmpStart %then %do;
1369005    proc sort data=&fcmpdata out=_temp&id nodupkey;
1369006    by NAME;
1369007    where id=&id and LHS in( %let j=1;
1369008    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1369009    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1369010    "&var" %let j = %eval(&j+1);
1369011    %end;
1369012    );
1369013    run;
1369014    %let dsid = %sysfunc(open(_temp&id));
1369015    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369016    %let dsid = %sysfunc(close(&dsid));
1369017    %if &&nobs&id %then %do;
1369018    %let scoreFlag&id = 1;
1369019    %let fcmpStart = 1;
1369020    %end;
1369021    %else %let fcmpStart = 0;
1369022    %end;
1369023    %else %do;
1369024    proc sort data=&fcmpdata out=_tempid;
1369025    where id=&id;
1369026    by LHS;
1369027    run;
1369028    %let dsid = %sysfunc(open(_tempid));
1369029    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369030    %let dsid = %sysfunc(close(&dsid));
1369031    %if ^&&nobs&id %then %do;
1369032    proc datasets lib=work nolist;
1369033    delete _tempid;
1369034    run;
1369035    quit;
1369036    %end;
1369037    %else %do;
1369038    data _tempAll;
1369039    set %let j=%eval(&id-1);
1369040    %do x=1 %to &j;
1369041    %if &&nobs&x %then %do;
1369042    _temp&x %end;
1369043    %end;
1369044    ;
1369045    run;
1369046    proc sql;
1369047    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1369047  ! work._tempid p2 where p.name=p2.lhs;
1369048    quit;
1369049    data _temp&id;
1369050    set _temp&id;
1369051    where LHS ne '' and NAME ne '' and Node ne '';
1369052    run;
1369053    proc datasets lib=work nolist;
1369054    delete _tempAll;
1369055    run;
1369056    %let dsid = %sysfunc(open(_temp&id));
1369057    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369058    %let dsid = %sysfunc(close(&dsid));
1369059    %if ^&&nobs&id %then %do;
1369060    proc datasets lib=work nolist;
1369061    delete _temp&id;
1369062    run;
1369063    quit;
1369064    %end;
1369065    %else %do;
1369066    %let scoreFlag&id = 1;
1369067    data _temp&id;
1369068    set _temp&id;
1369069    where LHS ne NAME and node ne '';
1369070    run;
1369071    %let dsid = %sysfunc(open(_temp&id));
1369072    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369073    %let dsid = %sysfunc(close(&dsid));
1369074    %if ^&&nobs&id %then %do;
1369075    proc datasets lib=work nolist;
1369076    delete _temp&id;
1369077    run;
1369078    quit;
1369079    %end;
1369080    %else %do;
1369081    proc sort data=_temp&id nodupkey;
1369082    by LHS NAME;
1369083    run;
1369084    %end;
1369085    %end;
1369086    %end;
1369087    %end;
1369088    %mend varDept;
1369089    %macro optCode(outdata=fcmpdata);
1369090    %global fcmpStart;
1369091    %let fcmpStart = 0;
1369092    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1369093    %let NumNodes=9;
1369094    %do k=1 %to &NumNodes;
1369095    %vardept(fcmpdata=&outdata, id=&k);
1369096    %end;
1369097    %mend optCode;
1369098    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1369099    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1369100    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1369101    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1369102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369103    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1369104    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1369105    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1369106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369107    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369108    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1369108  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1369109    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369110    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1369111    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1369112    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369113    filename _pref
1369113  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas";
1369114    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1369115    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas.
1369116   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1369117   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1369118   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1369119   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1369120   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1369121   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1369122   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1369123   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1369124   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1369125   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1369126   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1369127   +LENGTH _WARN_ $4
1369128   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1369129   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1369130   +
1369131   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1369132   +
1369133   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1369134   +
1369135   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1369136   +
1369137   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1369138   +
1369139   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1369140   +
1369141   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1369142   +
1369143   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1369144   +
1369145   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1369146   +
1369147   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1369148   +
1369149   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1369150   +
1369151   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1369152   +
1369153   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1369154   +
1369155   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1369156   +
1369157   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1369158   +
1369159   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1369160   +
1369161   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1369162   +
1369163   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1369164   +
1369165   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1369166   +
1369167   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1369168   +
1369169   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1369170   +
1369171   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1369172   +
1369173   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1369174   +
1369175   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1369176   +
1369177   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1369178   +
1369179   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1369180   +
1369181   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1369182   +
1369183   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1369184   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1369185   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1369186   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1369187   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1369188   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1369189   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1369190   +end;
MPRINT(EM_DIAGRAM):   end;
1369191   +else do;
MPRINT(EM_DIAGRAM):   else do;
1369192   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1369193   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1369194   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1369195   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1369196   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1369197   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1369198   +   end;
MPRINT(EM_DIAGRAM):   end;
1369199   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1369200   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1369201   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1369202   +   end;
MPRINT(EM_DIAGRAM):   end;
1369203   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1369204   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1369205   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1369206   +   end;
MPRINT(EM_DIAGRAM):   end;
1369207   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1369208   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1369209   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1369210   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1369211   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1369212   +   end;
MPRINT(EM_DIAGRAM):   end;
1369213   +end;
MPRINT(EM_DIAGRAM):   end;
1369214   +
1369215   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369216   +*** Checking missing input Interval
1369217   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1369218   +
1369219   +IF NMISS(
1369220   +   AcceptedCmpTotal ,
1369221   +   Frq ,
1369222   +   Income ,
1369223   +   Mnt ,
1369224   +   MntFruits ,
1369225   +   MntGoldProds ,
1369226   +   MntMeatProducts ,
1369227   +   MntSweetProducts ,
1369228   +   NumCatalogPurchases ,
1369229   +   NumWebPurchases ,
1369230   +   RFMstat ,
1369231   +   RMntFrq ,
1369232   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntFruits ,
MntGoldProds , MntMeatProducts , MntSweetProducts , NumCatalogPurchases , NumWebPurchases ,
RFMstat , RMntFrq , Recency ) THEN DO;
1369233   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1369234   +
1369235   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1369236   +END;
MPRINT(EM_DIAGRAM):   END;
1369237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369238   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1369239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369240   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1369241   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1369242   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1369243   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1369244   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1369245   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1369246   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1369247   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1369248   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1369249   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1369250   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1369251   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1369252   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1369253   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1369254   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1369255   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1369256   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1369257   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1369258   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1369259   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1369260   +END;
MPRINT(EM_DIAGRAM):   END;
1369261   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369262   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1369263   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1369264   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1369265   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1369266   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1369267   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1369268   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1369269   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1369270   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1369271   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1369272   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1369273   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1369274   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1369275   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1369276   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1369277   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1369278   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1369279   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1369280   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1369281   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1369282   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 *
MntSweetProducts ;
1369283   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1369284   +   ELSE S_NumCatalogPurchases
1369285   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1369286   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 *
NumCatalogPurchases ;
1369287   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1369288   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1369289   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 *
NumWebPurchases ;
1369290   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1369291   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1369292   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1369293   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1369294   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1369295   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1369296   +END;
MPRINT(EM_DIAGRAM):   END;
1369297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369298   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1369299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369300   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369301   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1369302   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369303   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1369304   +   H11  =     0.00179298802892 * S_AcceptedCmpTotal  +     0.01784009275608 *
1369305   +        S_Frq  +     0.69409617936033 * S_Income  +    -0.28641816886809 *
1369306   +        S_Mnt  +     0.21745721720131 * S_MntFruits  +    -0.38924339437831 *
1369307   +        S_MntGoldProds  +     0.48302006424722 * S_MntMeatProducts
1369308   +          +     0.32217287817742 * S_MntSweetProducts
1369309   +          +     0.37317765763795 * S_NumCatalogPurchases
1369310   +          +     0.31712152035565 * S_NumWebPurchases
1369311   +          +    -0.00101711956377 * S_RFMstat  +    -0.50814709993968 *
1369312   +        S_RMntFrq  +     -0.2674878177058 * S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.00179298802892 * S_AcceptedCmpTotal + 0.01784009275608 * S_Frq +
0.69409617936033 * S_Income + -0.28641816886809 * S_Mnt + 0.21745721720131 * S_MntFruits +
-0.38924339437831 * S_MntGoldProds + 0.48302006424722 * S_MntMeatProducts + 0.32217287817742 *
S_MntSweetProducts + 0.37317765763795 * S_NumCatalogPurchases + 0.31712152035565 *
S_NumWebPurchases + -0.00101711956377 * S_RFMstat + -0.50814709993968 * S_RMntFrq +
-0.2674878177058 * S_Recency ;
1369313   +   H12  =    -0.13522102699695 * S_AcceptedCmpTotal  +     0.62468738576113 *
1369314   +        S_Frq  +     0.33525631913577 * S_Income  +     0.49596519260867 *
1369315   +        S_Mnt  +    -0.07840703709606 * S_MntFruits  +    -0.13407863606593 *
1369316   +        S_MntGoldProds  +     0.07892036440987 * S_MntMeatProducts
1369317   +          +    -0.19345300638771 * S_MntSweetProducts
1369318   +          +     0.37926806634405 * S_NumCatalogPurchases
1369319   +          +     0.17926711405358 * S_NumWebPurchases
1369320   +          +    -0.56247478537915 * S_RFMstat  +    -0.83222377723575 *
1369321   +        S_RMntFrq  +     0.06152905340066 * S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.13522102699695 * S_AcceptedCmpTotal + 0.62468738576113 * S_Frq
+ 0.33525631913577 * S_Income + 0.49596519260867 * S_Mnt + -0.07840703709606 * S_MntFruits +
-0.13407863606593 * S_MntGoldProds + 0.07892036440987 * S_MntMeatProducts + -0.19345300638771
* S_MntSweetProducts + 0.37926806634405 * S_NumCatalogPurchases + 0.17926711405358 *
S_NumWebPurchases + -0.56247478537915 * S_RFMstat + -0.83222377723575 * S_RMntFrq +
0.06152905340066 * S_Recency ;
1369322   +   H13  =     0.52085707566671 * S_AcceptedCmpTotal  +    -0.43119445779869 *
1369323   +        S_Frq  +    -0.38451776725994 * S_Income  +    -0.43893571865073 *
1369324   +        S_Mnt  +    -0.18147736658896 * S_MntFruits  +    -0.02759924916073 *
1369325   +        S_MntGoldProds  +     0.41710329802839 * S_MntMeatProducts
1369326   +          +    -0.11238728777733 * S_MntSweetProducts
1369327   +          +     0.39955878063516 * S_NumCatalogPurchases
1369328   +          +     0.37701883017309 * S_NumWebPurchases
1369329   +          +    -0.03011513977353 * S_RFMstat  +     0.05558894855861 *
1369330   +        S_RMntFrq  +    -0.53097904952065 * S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.52085707566671 * S_AcceptedCmpTotal + -0.43119445779869 * S_Frq
+ -0.38451776725994 * S_Income + -0.43893571865073 * S_Mnt + -0.18147736658896 * S_MntFruits +
-0.02759924916073 * S_MntGoldProds + 0.41710329802839 * S_MntMeatProducts + -0.11238728777733
* S_MntSweetProducts + 0.39955878063516 * S_NumCatalogPurchases + 0.37701883017309 *
S_NumWebPurchases + -0.03011513977353 * S_RFMstat + 0.05558894855861 * S_RMntFrq +
-0.53097904952065 * S_Recency ;
1369331   +   H14  =     0.01011198652387 * S_AcceptedCmpTotal  +     0.50914419302954 *
1369332   +        S_Frq  +     0.36935051571942 * S_Income  +    -0.14541266632981 *
1369333   +        S_Mnt  +     0.70809835135242 * S_MntFruits  +     0.17636828127553 *
1369334   +        S_MntGoldProds  +    -0.39065133922684 * S_MntMeatProducts
1369335   +          +      0.2693109494597 * S_MntSweetProducts
1369336   +          +      0.1081864929712 * S_NumCatalogPurchases
1369337   +          +     0.04463189601793 * S_NumWebPurchases
1369338   +          +     0.17598396305598 * S_RFMstat  +    -0.26428585222285 *
1369339   +        S_RMntFrq  +    -0.35066600356743 * S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.01011198652387 * S_AcceptedCmpTotal + 0.50914419302954 * S_Frq +
0.36935051571942 * S_Income + -0.14541266632981 * S_Mnt + 0.70809835135242 * S_MntFruits +
0.17636828127553 * S_MntGoldProds + -0.39065133922684 * S_MntMeatProducts + 0.2693109494597 *
S_MntSweetProducts + 0.1081864929712 * S_NumCatalogPurchases + 0.04463189601793 *
S_NumWebPurchases + 0.17598396305598 * S_RFMstat + -0.26428585222285 * S_RMntFrq +
-0.35066600356743 * S_Recency ;
1369340   +   H15  =     0.25974646459449 * S_AcceptedCmpTotal  +    -0.01084764302849 *
1369341   +        S_Frq  +    -0.25453296848623 * S_Income  +    -0.24485320547361 *
1369342   +        S_Mnt  +      0.3523119885561 * S_MntFruits  +    -0.23948230282173 *
1369343   +        S_MntGoldProds  +    -0.61077291955379 * S_MntMeatProducts
1369344   +          +     0.69250340520766 * S_MntSweetProducts
1369345   +          +    -0.92476508978686 * S_NumCatalogPurchases
1369346   +          +    -0.85062812213631 * S_NumWebPurchases
1369347   +          +    -0.13668170504261 * S_RFMstat  +    -0.39159958659757 *
1369348   +        S_RMntFrq  +     0.31541831647045 * S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.25974646459449 * S_AcceptedCmpTotal + -0.01084764302849 * S_Frq
+ -0.25453296848623 * S_Income + -0.24485320547361 * S_Mnt + 0.3523119885561 * S_MntFruits +
-0.23948230282173 * S_MntGoldProds + -0.61077291955379 * S_MntMeatProducts + 0.69250340520766
* S_MntSweetProducts + -0.92476508978686 * S_NumCatalogPurchases + -0.85062812213631 *
S_NumWebPurchases + -0.13668170504261 * S_RFMstat + -0.39159958659757 * S_RMntFrq +
0.31541831647045 * S_Recency ;
1369349   +   H16  =     0.30881424897223 * S_AcceptedCmpTotal  +      0.2794364053658 *
1369350   +        S_Frq  +    -0.13255692208785 * S_Income  +      0.1084623497397 *
1369351   +        S_Mnt  +    -0.21377822064675 * S_MntFruits  +     0.66167304100171 *
1369352   +        S_MntGoldProds  +    -0.18059030828344 * S_MntMeatProducts
1369353   +          +      0.1342841887454 * S_MntSweetProducts
1369354   +          +    -0.35353451726224 * S_NumCatalogPurchases
1369355   +          +     0.19726071632213 * S_NumWebPurchases
1369356   +          +    -0.67773182477521 * S_RFMstat  +    -0.05559124023026 *
1369357   +        S_RMntFrq  +     0.29135046009186 * S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.30881424897223 * S_AcceptedCmpTotal + 0.2794364053658 * S_Frq +
-0.13255692208785 * S_Income + 0.1084623497397 * S_Mnt + -0.21377822064675 * S_MntFruits +
0.66167304100171 * S_MntGoldProds + -0.18059030828344 * S_MntMeatProducts + 0.1342841887454 *
S_MntSweetProducts + -0.35353451726224 * S_NumCatalogPurchases + 0.19726071632213 *
S_NumWebPurchases + -0.67773182477521 * S_RFMstat + -0.05559124023026 * S_RMntFrq +
0.29135046009186 * S_Recency ;
1369358   +   H17  =    -0.56474657283939 * S_AcceptedCmpTotal  +     0.49714469636668 *
1369359   +        S_Frq  +     0.38873911121939 * S_Income  +     0.18672296356038 *
1369360   +        S_Mnt  +    -0.12290033905766 * S_MntFruits  +    -0.55117454621073 *
1369361   +        S_MntGoldProds  +    -0.34157249684624 * S_MntMeatProducts
1369362   +          +    -0.03878223698579 * S_MntSweetProducts
1369363   +          +    -0.44318159654535 * S_NumCatalogPurchases
1369364   +          +     0.28629379958053 * S_NumWebPurchases
1369365   +          +    -0.33628587814816 * S_RFMstat  +     0.01539005969109 *
1369366   +        S_RMntFrq  +      0.4669281349511 * S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = -0.56474657283939 * S_AcceptedCmpTotal + 0.49714469636668 * S_Frq
+ 0.38873911121939 * S_Income + 0.18672296356038 * S_Mnt + -0.12290033905766 * S_MntFruits +
-0.55117454621073 * S_MntGoldProds + -0.34157249684624 * S_MntMeatProducts + -0.03878223698579
* S_MntSweetProducts + -0.44318159654535 * S_NumCatalogPurchases + 0.28629379958053 *
S_NumWebPurchases + -0.33628587814816 * S_RFMstat + 0.01539005969109 * S_RMntFrq +
0.4669281349511 * S_Recency ;
1369367   +   H11  = H11  +     0.54366812821853 * G_Marital_Status0
1369368   +          +    -0.24270884269566 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.54366812821853 * G_Marital_Status0 + -0.24270884269566 *
G_Marital_Status1 ;
1369369   +   H12  = H12  +     0.12201873252315 * G_Marital_Status0
1369370   +          +      0.2708540168877 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12201873252315 * G_Marital_Status0 + 0.2708540168877 *
G_Marital_Status1 ;
1369371   +   H13  = H13  +     0.21773390953206 * G_Marital_Status0
1369372   +          +      0.1849184915243 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21773390953206 * G_Marital_Status0 + 0.1849184915243 *
G_Marital_Status1 ;
1369373   +   H14  = H14  +     0.42359989920789 * G_Marital_Status0
1369374   +          +     -0.0427682060318 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42359989920789 * G_Marital_Status0 + -0.0427682060318 *
G_Marital_Status1 ;
1369375   +   H15  = H15  +     0.39852794737212 * G_Marital_Status0
1369376   +          +      0.4834959104522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.39852794737212 * G_Marital_Status0 + 0.4834959104522 *
G_Marital_Status1 ;
1369377   +   H16  = H16  +     0.34117172602716 * G_Marital_Status0
1369378   +          +     0.01719507366738 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.34117172602716 * G_Marital_Status0 + 0.01719507366738 *
G_Marital_Status1 ;
1369379   +   H17  = H17  +    -0.48271020073977 * G_Marital_Status0
1369380   +          +    -0.38643265086902 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + -0.48271020073977 * G_Marital_Status0 + -0.38643265086902 *
G_Marital_Status1 ;
1369381   +   H11  =    -1.92887755316705 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.92887755316705 + H11 ;
1369382   +   H12  =     1.10580453552439 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 1.10580453552439 + H12 ;
1369383   +   H13  =     -0.0396459221076 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.0396459221076 + H13 ;
1369384   +   H14  =    -0.24030684440152 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.24030684440152 + H14 ;
1369385   +   H15  =    -1.57024900687106 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -1.57024900687106 + H15 ;
1369386   +   H16  =    -0.33224481657704 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.33224481657704 + H16 ;
1369387   +   H17  =     1.22710614099789 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 1.22710614099789 + H17 ;
1369388   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1369389   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1369390   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1369391   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1369392   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1369393   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1369394   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1369395   +END;
MPRINT(EM_DIAGRAM):   END;
1369396   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369397   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1369398   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1369399   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1369400   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1369401   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1369402   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1369403   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1369404   +END;
MPRINT(EM_DIAGRAM):   END;
1369405   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369406   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1369407   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369408   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1369409   +   P_DepVar1  =     1.21462455419854 * H11  +    -0.32480789724651 * H12
1369410   +          +     2.96475008226038 * H13  +     -0.7919726093423 * H14
1369411   +          +    -2.29353966226595 * H15  +     -0.7223088500433 * H16
1369412   +          +    -2.44182031584859 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1.21462455419854 * H11 + -0.32480789724651 * H12 +
2.96475008226038 * H13 + -0.7919726093423 * H14 + -2.29353966226595 * H15 + -0.7223088500433 *
H16 + -2.44182031584859 * H17 ;
1369413   +   P_DepVar1  =    -1.63832895249218 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.63832895249218 + P_DepVar1 ;
1369414   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1369415   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1369416   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1369417   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1369418   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1369419   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1369420   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1369421   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1369422   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1369423   +END;
MPRINT(EM_DIAGRAM):   END;
1369424   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369425   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1369426   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1369427   +END;
MPRINT(EM_DIAGRAM):   END;
1369428   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1369429   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1369430   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1369431   +END;
MPRINT(EM_DIAGRAM):   END;
1369432   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369433   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1369434   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1369435   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1369436   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1369437   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1369438   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1369439   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1369440   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1369441   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1369442   +END;
MPRINT(EM_DIAGRAM):   END;
1369443   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1369444   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1369445   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1369446   +drop
1369447   +H11
1369448   +H12
1369449   +H13
1369450   +H14
1369451   +H15
1369452   +H16
1369453   +H17
1369454   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1369455   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1369456    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1369457    quit;
1369458    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1369459    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1369460    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1369461    retain ID 2 Node "Neural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural8";
1369462    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1369463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1227 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1227 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1369464    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1369465    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1227 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1227 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369467    proc sort data=EMWS8.Neural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural8_variableset out=_temp2(keep=NAME CREATOR);
1369468    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.NEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369470    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369471    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1369472    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1369473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369474    proc contents data=EMWS8.Neural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural8_train out=_meta(keep=NAME) noprint;
1369475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1369476    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1369477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369479    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369480    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1369481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369482    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369483    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369484    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1369484  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 569 rows and 5 columns.
 
1369485    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369486    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1369487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 569 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 569 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369488    filename _pref
1369488  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1369489    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1369490    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1369491   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1369492   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1369493   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1369494   +
1369495   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1369496   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1369497   +
1369498   +
1369499   +/*----G_Marital_Status begin----*/
1369500   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1369501   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1369502   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1369503   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1369504   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1369505   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1369506   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1369507   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1369508   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1369509   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1369510   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1369511   +end;
MPRINT(EM_DIAGRAM):   end;
1369512   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1369513   +/*----G_Marital_Status end----*/
1369514   +
1369515   +
1369516   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1369517   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1369518   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1369519    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1369520    quit;
1369521    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1369522    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1369523    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1369524    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1369525    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1369526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1369527    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1369528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369530    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1369531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369533    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369534    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1369535    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1369536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369537    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1369538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369539    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1369540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369542    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369543    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1369544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369545    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369546    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369547    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1369547  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1369548    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369549    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1369550    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 572 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369551    filename _pref
1369551  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1369552    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1369553    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1369554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1369555   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1369556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1369557   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1369558   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1369559   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1369560    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1369561    quit;
1369562    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1369563    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1369564    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1369565    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1369566    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1369567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369568    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1369569    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369571    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1369572    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369574    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369575    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1369576    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1369577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369578    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1369579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1369580    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1369581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369584    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1369585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369586    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369587    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369588    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1369588  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1369589    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369590    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1369591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 576 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369592    filename _pref
1369592  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1369593    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1369594    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1369595   +
1369596   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1369597   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1369597  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1369598   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1369599   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1369600   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1369601   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1369602   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1369603    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1369604    quit;
1369605    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1369606    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1369607    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1369608    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1369609    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1369610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369611    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1369612    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369614    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1369615    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369617    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369618    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1369619    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1369620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369621    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1369622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369623    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1369624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1369626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369627    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1369628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369629    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369630    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369631    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1369631  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1369632    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369633    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1369634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 615 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369635    filename _pref
1369635  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1369636    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1369637    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1369638   +
1369639   +
1369640   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1369641   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1369642   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1369643   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1369644   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1369645   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369646   +
1369647   +
1369648   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1369649   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1369650   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1369651   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1369652   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1369653   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369654   +
1369655   +
1369656   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1369657   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1369658   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1369659   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1369660   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1369661   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369662   +
1369663   +
1369664   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1369665   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1369666   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1369667   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1369668   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1369669   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369670   +
1369671   +
1369672   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1369673   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1369674   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1369675   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1369676   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1369677   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369678   +
1369679   +
1369680   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1369681   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1369682   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1369683   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1369684   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1369685   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369686   +
1369687   +
1369688   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1369689   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1369690   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1369691   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1369692   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1369693   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369694   +
1369695   +
1369696   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1369697   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1369698   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1369699   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1369700   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1369701   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1369702   +if
1369703   +_FILTERNORM1 not in ( '.')
1369704   + and
1369705   +_FILTERNORM2 not in ( '.')
1369706   + and
1369707   +_FILTERNORM3 not in ( '.')
1369708   + and
1369709   +_FILTERNORM4 not in ( '.')
1369710   + and
1369711   +_FILTERNORM5 not in ( '.')
1369712   + and
1369713   +_FILTERNORM6 not in ( '.')
1369714   + and
1369715   +_FILTERNORM7 not in ( ' ')
1369716   + and
1369717   +_FILTERNORM8 not in ( ' ')
1369718   +and
1369719   +( Dt_Customer ne .)
1369720   +and ( Income ne . and (Income<=107000))
1369721   +and ( Kidhome ne .)
1369722   +and ( MntFishProducts ne .)
1369723   +and ( MntFruits ne .)
1369724   +and ( MntGoldProds ne .)
1369725   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1369726   +and ( MntSweetProducts ne .)
1369727   +and ( MntWines ne .)
1369728   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1369729   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1369730   +and ( NumStorePurchases ne .)
1369731   +and ( NumWebPurchases ne .)
1369732   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1369733   +and ( Recency ne .)
1369734   +and ( Teenhome ne .)
1369735   +and ( Year_Birth ne .)
1369736   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1369737   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1369738   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1369739   +end;
MPRINT(EM_DIAGRAM):   end;
1369740   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1369741   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1369742    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1369743    quit;
1369744    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1369745    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1369746    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1369747    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1369748    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1369749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369750    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1369751    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369753    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1369754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369756    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369757    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1369758    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1369759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369760    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1369761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1369762    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1369763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369765    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1369766    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1369767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1369768    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369769    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369770    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1369770  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1369771    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369772    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1369773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 681 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369774    %macro varDept(fcmpdata=,id=);
1369775    %global nobs&id scoreFlag&id;
1369776    %let scoreFlag&id = 0;
1369777    %if &id=1 or ^&fcmpStart %then %do;
1369778    proc sort data=&fcmpdata out=_temp&id nodupkey;
1369779    by NAME;
1369780    where id=&id and LHS in( %let j=1;
1369781    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1369782    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1369783    "&var" %let j = %eval(&j+1);
1369784    %end;
1369785    );
1369786    run;
1369787    %let dsid = %sysfunc(open(_temp&id));
1369788    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369789    %let dsid = %sysfunc(close(&dsid));
1369790    %if &&nobs&id %then %do;
1369791    %let scoreFlag&id = 1;
1369792    %let fcmpStart = 1;
1369793    %end;
1369794    %else %let fcmpStart = 0;
1369795    %end;
1369796    %else %do;
1369797    proc sort data=&fcmpdata out=_tempid;
1369798    where id=&id;
1369799    by LHS;
1369800    run;
1369801    %let dsid = %sysfunc(open(_tempid));
1369802    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369803    %let dsid = %sysfunc(close(&dsid));
1369804    %if ^&&nobs&id %then %do;
1369805    proc datasets lib=work nolist;
1369806    delete _tempid;
1369807    run;
1369808    quit;
1369809    %end;
1369810    %else %do;
1369811    data _tempAll;
1369812    set %let j=%eval(&id-1);
1369813    %do x=1 %to &j;
1369814    %if &&nobs&x %then %do;
1369815    _temp&x %end;
1369816    %end;
1369817    ;
1369818    run;
1369819    proc sql;
1369820    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1369820  ! work._tempid p2 where p.name=p2.lhs;
1369821    quit;
1369822    data _temp&id;
1369823    set _temp&id;
1369824    where LHS ne '' and NAME ne '' and Node ne '';
1369825    run;
1369826    proc datasets lib=work nolist;
1369827    delete _tempAll;
1369828    run;
1369829    %let dsid = %sysfunc(open(_temp&id));
1369830    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369831    %let dsid = %sysfunc(close(&dsid));
1369832    %if ^&&nobs&id %then %do;
1369833    proc datasets lib=work nolist;
1369834    delete _temp&id;
1369835    run;
1369836    quit;
1369837    %end;
1369838    %else %do;
1369839    %let scoreFlag&id = 1;
1369840    data _temp&id;
1369841    set _temp&id;
1369842    where LHS ne NAME and node ne '';
1369843    run;
1369844    %let dsid = %sysfunc(open(_temp&id));
1369845    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1369846    %let dsid = %sysfunc(close(&dsid));
1369847    %if ^&&nobs&id %then %do;
1369848    proc datasets lib=work nolist;
1369849    delete _temp&id;
1369850    run;
1369851    quit;
1369852    %end;
1369853    %else %do;
1369854    proc sort data=_temp&id nodupkey;
1369855    by LHS NAME;
1369856    run;
1369857    %end;
1369858    %end;
1369859    %end;
1369860    %end;
1369861    %mend varDept;
1369862    %macro optCode(outdata=fcmpdata);
1369863    %global fcmpStart;
1369864    %let fcmpStart = 0;
1369865    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1369866    %let NumNodes=9;
1369867    %do k=1 %to &NumNodes;
1369868    %vardept(fcmpdata=&outdata, id=&k);
1369869    %end;
1369870    %mend optCode;
1369871    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 62 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 46 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 16 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 16 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 16 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1369872    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1369873    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1369874    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1369875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369876    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1369877    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1369878    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1369879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369880    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1369881    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1369881  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1369882    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1369883    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1369884    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1369885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1369886    filename _pref
1369886  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Tree4\EMPUBLISHSCORE.sas";
1369887    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1369888    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Tree4\EMPUBLISHSCORE.sas.
1369889   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1369890   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1369891   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1369892   +
1369893   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1369894   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1369895   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1369896   +
1369897   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1369898   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1369899   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1369900   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1369901   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1369902   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1369903   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1369904   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1369905   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1369906   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1369907   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1369908   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1369909   +
1369910   +
1369911   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1369912   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1369913   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1369914   +
1369915   +
1369916   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE
******;
1369917   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1369918   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1369919   +  IF  NOT MISSING(Recency ) AND
1369920   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1369921   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1369922   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1369923   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1369924   +      _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1369925   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1369926   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1369927   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1369928   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1369929   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1369930   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1369931   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1369932   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1369933   +      END;
MPRINT(EM_DIAGRAM):   END;
1369934   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369935   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1369936   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1369937   +      IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1369938   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1369939   +        _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1369940   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1369941   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1369942   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1369943   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1369944   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1369945   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1369946   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1369947   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1369948   +        END;
MPRINT(EM_DIAGRAM):   END;
1369949   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369950   +        IF  NOT MISSING(Recency ) AND
1369951   +          Recency  <                 15.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 15.5 THEN DO;
1369952   +          _NODE_  =                   40;
MPRINT(EM_DIAGRAM):   _NODE_ = 40;
1369953   +          _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1369954   +          P_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35714285714285;
1369955   +          P_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64285714285714;
1369956   +          Q_DepVar0  =     0.35714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35714285714285;
1369957   +          Q_DepVar1  =     0.64285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64285714285714;
1369958   +          V_DepVar0  =               0.4375;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4375;
1369959   +          V_DepVar1  =               0.5625;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.5625;
1369960   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1369961   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1369962   +          END;
MPRINT(EM_DIAGRAM):   END;
1369963   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369964   +          IF  NOT MISSING(RFMstat ) AND
1369965   +            RFMstat  <     259.685185185185 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND RFMstat < 259.685185185185 THEN DO;
1369966   +            _NODE_  =                   52;
MPRINT(EM_DIAGRAM):   _NODE_ = 52;
1369967   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1369968   +            P_DepVar0  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.35294117647058;
1369969   +            P_DepVar1  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.64705882352941;
1369970   +            Q_DepVar0  =     0.35294117647058;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.35294117647058;
1369971   +            Q_DepVar1  =     0.64705882352941;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.64705882352941;
1369972   +            V_DepVar0  =                0.375;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.375;
1369973   +            V_DepVar1  =                0.625;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.625;
1369974   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1369975   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1369976   +            END;
MPRINT(EM_DIAGRAM):   END;
1369977   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369978   +            _NODE_  =                   53;
MPRINT(EM_DIAGRAM):   _NODE_ = 53;
1369979   +            _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1369980   +            P_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.83333333333333;
1369981   +            P_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.16666666666666;
1369982   +            Q_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.83333333333333;
1369983   +            Q_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.16666666666666;
1369984   +            V_DepVar0  =     0.73684210526315;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.73684210526315;
1369985   +            V_DepVar1  =     0.26315789473684;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.26315789473684;
1369986   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1369987   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1369988   +            END;
MPRINT(EM_DIAGRAM):   END;
1369989   +          END;
MPRINT(EM_DIAGRAM):   END;
1369990   +        END;
MPRINT(EM_DIAGRAM):   END;
1369991   +      END;
MPRINT(EM_DIAGRAM):   END;
1369992   +    END;
MPRINT(EM_DIAGRAM):   END;
1369993   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1369994   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1369995   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1369996   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1369997   +      _LEAF_  =                   16;
MPRINT(EM_DIAGRAM):   _LEAF_ = 16;
1369998   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1369999   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1370000   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1370001   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1370002   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1370003   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1370004   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1370005   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1370006   +      END;
MPRINT(EM_DIAGRAM):   END;
1370007   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370008   +      IF  NOT MISSING(NumCatalogPurchases ) AND
1370009   +                        10.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 10.5 <= NumCatalogPurchases
THEN DO;
1370010   +        IF  NOT MISSING(Frq ) AND
1370011   +                          25.5 <= Frq  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Frq ) AND 25.5 <= Frq THEN DO;
1370012   +          _NODE_  =                   45;
MPRINT(EM_DIAGRAM):   _NODE_ = 45;
1370013   +          _LEAF_  =                   15;
MPRINT(EM_DIAGRAM):   _LEAF_ = 15;
1370014   +          P_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.71428571428571;
1370015   +          P_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.28571428571428;
1370016   +          Q_DepVar0  =     0.71428571428571;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.71428571428571;
1370017   +          Q_DepVar1  =     0.28571428571428;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.28571428571428;
1370018   +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
1370019   +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
1370020   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1370021   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1370022   +          END;
MPRINT(EM_DIAGRAM):   END;
1370023   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370024   +          _NODE_  =                   44;
MPRINT(EM_DIAGRAM):   _NODE_ = 44;
1370025   +          _LEAF_  =                   14;
MPRINT(EM_DIAGRAM):   _LEAF_ = 14;
1370026   +          P_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1370027   +          P_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 1;
1370028   +          Q_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0;
1370029   +          Q_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 1;
1370030   +          V_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 1;
1370031   +          V_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0;
1370032   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1370033   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1370034   +          END;
MPRINT(EM_DIAGRAM):   END;
1370035   +        END;
MPRINT(EM_DIAGRAM):   END;
1370036   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370037   +        _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1370038   +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1370039   +        IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1370040   +          IF  NOT MISSING(MntMeatProducts ) AND
1370041   +                           596.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 596.5 <= MntMeatProducts THEN DO;
1370042   +            _NODE_  =                   55;
MPRINT(EM_DIAGRAM):   _NODE_ = 55;
1370043   +            _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1370044   +            P_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2;
1370045   +            P_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.8;
1370046   +            Q_DepVar0  =                  0.2;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2;
1370047   +            Q_DepVar1  =                  0.8;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.8;
1370048   +            V_DepVar0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4;
1370049   +            V_DepVar1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.6;
1370050   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1370051   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1370052   +            END;
MPRINT(EM_DIAGRAM):   END;
1370053   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370054   +            _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
1370055   +            _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1370056   +            P_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.81818181818181;
1370057   +            P_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.18181818181818;
1370058   +            Q_DepVar0  =     0.81818181818181;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.81818181818181;
1370059   +            Q_DepVar1  =     0.18181818181818;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.18181818181818;
1370060   +            V_DepVar0  =     0.70588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.70588235294117;
1370061   +            V_DepVar1  =     0.29411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.29411764705882;
1370062   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1370063   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1370064   +            END;
MPRINT(EM_DIAGRAM):   END;
1370065   +          END;
MPRINT(EM_DIAGRAM):   END;
1370066   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370067   +          _NODE_  =                   43;
MPRINT(EM_DIAGRAM):   _NODE_ = 43;
1370068   +          _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1370069   +          P_DepVar0  =     0.90532544378698;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.90532544378698;
1370070   +          P_DepVar1  =     0.09467455621301;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.09467455621301;
1370071   +          Q_DepVar0  =     0.90532544378698;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.90532544378698;
1370072   +          Q_DepVar1  =     0.09467455621301;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.09467455621301;
1370073   +          V_DepVar0  =     0.90588235294117;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.90588235294117;
1370074   +          V_DepVar1  =     0.09411764705882;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.09411764705882;
1370075   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1370076   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1370077   +          END;
MPRINT(EM_DIAGRAM):   END;
1370078   +        END;
MPRINT(EM_DIAGRAM):   END;
1370079   +      END;
MPRINT(EM_DIAGRAM):   END;
1370080   +    END;
MPRINT(EM_DIAGRAM):   END;
1370081   +  END;
MPRINT(EM_DIAGRAM):   END;
1370082   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370083   +  IF  NOT MISSING(Recency ) AND
1370084   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1370085   +    IF  NOT MISSING(NumCatalogPurchases ) AND
1370086   +                       5.5 <= NumCatalogPurchases  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(NumCatalogPurchases ) AND 5.5 <= NumCatalogPurchases THEN
DO;
1370087   +      IF  NOT MISSING(Recency ) AND
1370088   +                          19 <= Recency  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND 19 <= Recency THEN DO;
1370089   +        IF  NOT MISSING(MntMeatProducts ) AND
1370090   +                         370.5 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 370.5 <= MntMeatProducts THEN DO;
1370091   +          _NODE_  =                   33;
MPRINT(EM_DIAGRAM):   _NODE_ = 33;
1370092   +          _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1370093   +          P_DepVar0  =     0.36363636363636;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.36363636363636;
1370094   +          P_DepVar1  =     0.63636363636363;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.63636363636363;
1370095   +          Q_DepVar0  =     0.36363636363636;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.36363636363636;
1370096   +          Q_DepVar1  =     0.63636363636363;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.63636363636363;
1370097   +          V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1370098   +          V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1370099   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1370100   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1370101   +          END;
MPRINT(EM_DIAGRAM):   END;
1370102   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370103   +          _NODE_  =                   32;
MPRINT(EM_DIAGRAM):   _NODE_ = 32;
1370104   +          _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1370105   +          P_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 1;
1370106   +          P_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0;
1370107   +          Q_DepVar0  =                    1;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 1;
1370108   +          Q_DepVar1  =                    0;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0;
1370109   +          V_DepVar0  =     0.85714285714285;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.85714285714285;
1370110   +          V_DepVar1  =     0.14285714285714;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.14285714285714;
1370111   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1370112   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1370113   +          END;
MPRINT(EM_DIAGRAM):   END;
1370114   +        END;
MPRINT(EM_DIAGRAM):   END;
1370115   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370116   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1370117   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1370118   +        P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
1370119   +        P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
1370120   +        Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
1370121   +        Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
1370122   +        V_DepVar0  =     0.44444444444444;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.44444444444444;
1370123   +        V_DepVar1  =     0.55555555555555;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.55555555555555;
1370124   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1370125   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1370126   +        END;
MPRINT(EM_DIAGRAM):   END;
1370127   +      END;
MPRINT(EM_DIAGRAM):   END;
1370128   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370129   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1370130   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1370131   +      P_DepVar0  =     0.84285714285714;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84285714285714;
1370132   +      P_DepVar1  =     0.15714285714285;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15714285714285;
1370133   +      Q_DepVar0  =     0.84285714285714;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84285714285714;
1370134   +      Q_DepVar1  =     0.15714285714285;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15714285714285;
1370135   +      V_DepVar0  =     0.81048387096774;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.81048387096774;
1370136   +      V_DepVar1  =     0.18951612903225;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.18951612903225;
1370137   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1370138   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1370139   +      END;
MPRINT(EM_DIAGRAM):   END;
1370140   +    END;
MPRINT(EM_DIAGRAM):   END;
1370141   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1370142   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1370143   +    _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1370144   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1370145   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1370146   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1370147   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1370148   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1370149   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1370150   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1370151   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1370152   +    END;
MPRINT(EM_DIAGRAM):   END;
1370153   +  END;
MPRINT(EM_DIAGRAM):   END;
1370154   +
1370155   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1370156   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1370157   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1370158   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370159    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370160    quit;
1370161    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370162    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370163    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370164    retain ID 2 Node "Tree4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree4";
1370165    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370166    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 84 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370167    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370168    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370169    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 84 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 84 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370170    proc sort data=EMWS8.Tree4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree4_variableset out=_temp2(keep=NAME CREATOR);
1370171    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370172    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.TREE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370173    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370174    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370175    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370177    proc contents data=EMWS8.Tree4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree4_train out=_meta(keep=NAME) noprint;
1370178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1370179    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370180    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370181    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370182    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370183    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370184    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370185    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370186    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370187    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370187  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 74 rows and 5 columns.
 
1370188    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370189    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370190    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 74 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 74 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370191    filename _pref
1370191  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1370192    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370193    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1370194   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1370195   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1370196   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1370197   +
1370198   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1370199   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1370200   +
1370201   +
1370202   +/*----G_Marital_Status begin----*/
1370203   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1370204   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1370205   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1370206   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1370207   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1370208   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1370209   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1370210   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1370211   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1370212   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1370213   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1370214   +end;
MPRINT(EM_DIAGRAM):   end;
1370215   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1370216   +/*----G_Marital_Status end----*/
1370217   +
1370218   +
1370219   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1370220   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1370221   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370222    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370223    quit;
1370224    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370225    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370226    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370227    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1370228    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370230    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370231    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370232    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370233    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1370234    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370236    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370237    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370238    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370240    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1370241    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1370242    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370243    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370245    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370246    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370247    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370248    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370249    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370250    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370250  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1370251    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370252    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370253    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 77 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370254    filename _pref
1370254  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1370255    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370256    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1370257   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1370258   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1370259   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1370260   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1370261   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1370262   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370263    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370264    quit;
1370265    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370266    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370267    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370268    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1370269    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370270    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370271    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370272    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370273    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370274    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1370275    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370276    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370277    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370278    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370279    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370280    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1370281    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1370282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370283    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370284    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370286    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370287    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370288    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370289    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370290    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370291    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370291  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1370292    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370293    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370294    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 81 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370295    filename _pref
1370295  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1370296    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370297    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1370298   +
1370299   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1370300   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1370300  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1370301   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1370302   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1370303   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1370304   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1370305   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370306    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370307    quit;
1370308    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370309    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370310    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370311    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1370312    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370313    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370314    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370315    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370316    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370317    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1370318    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370319    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370320    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370321    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370322    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370324    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1370325    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370326    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370327    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370328    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370329    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370330    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370331    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370332    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370333    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370334    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370334  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1370335    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370336    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370337    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 120 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370338    filename _pref
1370338  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1370339    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370340    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1370341   +
1370342   +
1370343   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1370344   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1370345   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1370346   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1370347   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1370348   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370349   +
1370350   +
1370351   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1370352   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1370353   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1370354   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1370355   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1370356   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370357   +
1370358   +
1370359   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1370360   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1370361   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1370362   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1370363   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1370364   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370365   +
1370366   +
1370367   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1370368   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1370369   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1370370   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1370371   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1370372   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370373   +
1370374   +
1370375   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1370376   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1370377   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1370378   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1370379   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1370380   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370381   +
1370382   +
1370383   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1370384   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1370385   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1370386   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1370387   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1370388   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370389   +
1370390   +
1370391   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1370392   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1370393   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1370394   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1370395   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1370396   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370397   +
1370398   +
1370399   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1370400   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1370401   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1370402   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1370403   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1370404   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1370405   +if
1370406   +_FILTERNORM1 not in ( '.')
1370407   + and
1370408   +_FILTERNORM2 not in ( '.')
1370409   + and
1370410   +_FILTERNORM3 not in ( '.')
1370411   + and
1370412   +_FILTERNORM4 not in ( '.')
1370413   + and
1370414   +_FILTERNORM5 not in ( '.')
1370415   + and
1370416   +_FILTERNORM6 not in ( '.')
1370417   + and
1370418   +_FILTERNORM7 not in ( ' ')
1370419   + and
1370420   +_FILTERNORM8 not in ( ' ')
1370421   +and
1370422   +( Dt_Customer ne .)
1370423   +and ( Income ne . and (Income<=107000))
1370424   +and ( Kidhome ne .)
1370425   +and ( MntFishProducts ne .)
1370426   +and ( MntFruits ne .)
1370427   +and ( MntGoldProds ne .)
1370428   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1370429   +and ( MntSweetProducts ne .)
1370430   +and ( MntWines ne .)
1370431   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1370432   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1370433   +and ( NumStorePurchases ne .)
1370434   +and ( NumWebPurchases ne .)
1370435   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1370436   +and ( Recency ne .)
1370437   +and ( Teenhome ne .)
1370438   +and ( Year_Birth ne .)
1370439   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1370440   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1370441   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1370442   +end;
MPRINT(EM_DIAGRAM):   end;
1370443   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1370444   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370445    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370446    quit;
1370447    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370448    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370449    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370450    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1370451    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370452    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370453    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370454    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1370456    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1370457    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370458    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370459    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370460    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370461    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370462    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370463    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1370464    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1370465    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370466    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370467    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370468    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370469    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370470    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370471    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370472    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370473    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370473  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1370474    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370475    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 186 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370477    %macro varDept(fcmpdata=,id=);
1370478    %global nobs&id scoreFlag&id;
1370479    %let scoreFlag&id = 0;
1370480    %if &id=1 or ^&fcmpStart %then %do;
1370481    proc sort data=&fcmpdata out=_temp&id nodupkey;
1370482    by NAME;
1370483    where id=&id and LHS in( %let j=1;
1370484    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1370485    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1370486    "&var" %let j = %eval(&j+1);
1370487    %end;
1370488    );
1370489    run;
1370490    %let dsid = %sysfunc(open(_temp&id));
1370491    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1370492    %let dsid = %sysfunc(close(&dsid));
1370493    %if &&nobs&id %then %do;
1370494    %let scoreFlag&id = 1;
1370495    %let fcmpStart = 1;
1370496    %end;
1370497    %else %let fcmpStart = 0;
1370498    %end;
1370499    %else %do;
1370500    proc sort data=&fcmpdata out=_tempid;
1370501    where id=&id;
1370502    by LHS;
1370503    run;
1370504    %let dsid = %sysfunc(open(_tempid));
1370505    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1370506    %let dsid = %sysfunc(close(&dsid));
1370507    %if ^&&nobs&id %then %do;
1370508    proc datasets lib=work nolist;
1370509    delete _tempid;
1370510    run;
1370511    quit;
1370512    %end;
1370513    %else %do;
1370514    data _tempAll;
1370515    set %let j=%eval(&id-1);
1370516    %do x=1 %to &j;
1370517    %if &&nobs&x %then %do;
1370518    _temp&x %end;
1370519    %end;
1370520    ;
1370521    run;
1370522    proc sql;
1370523    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1370523  ! work._tempid p2 where p.name=p2.lhs;
1370524    quit;
1370525    data _temp&id;
1370526    set _temp&id;
1370527    where LHS ne '' and NAME ne '' and Node ne '';
1370528    run;
1370529    proc datasets lib=work nolist;
1370530    delete _tempAll;
1370531    run;
1370532    %let dsid = %sysfunc(open(_temp&id));
1370533    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1370534    %let dsid = %sysfunc(close(&dsid));
1370535    %if ^&&nobs&id %then %do;
1370536    proc datasets lib=work nolist;
1370537    delete _temp&id;
1370538    run;
1370539    quit;
1370540    %end;
1370541    %else %do;
1370542    %let scoreFlag&id = 1;
1370543    data _temp&id;
1370544    set _temp&id;
1370545    where LHS ne NAME and node ne '';
1370546    run;
1370547    %let dsid = %sysfunc(open(_temp&id));
1370548    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1370549    %let dsid = %sysfunc(close(&dsid));
1370550    %if ^&&nobs&id %then %do;
1370551    proc datasets lib=work nolist;
1370552    delete _temp&id;
1370553    run;
1370554    quit;
1370555    %end;
1370556    %else %do;
1370557    proc sort data=_temp&id nodupkey;
1370558    by LHS NAME;
1370559    run;
1370560    %end;
1370561    %end;
1370562    %end;
1370563    %end;
1370564    %mend varDept;
1370565    %macro optCode(outdata=fcmpdata);
1370566    %global fcmpStart;
1370567    %let fcmpStart = 0;
1370568    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1370569    %let NumNodes=9;
1370570    %do k=1 %to &NumNodes;
1370571    %vardept(fcmpdata=&outdata, id=&k);
1370572    %end;
1370573    %mend optCode;
1370574    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 21 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 14 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 7 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 8 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 20 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 7 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 20 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 28 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1370575    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1370576    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1370577    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1370578    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370579    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1370580    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1370581    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1370582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370583    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370584    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1370584  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1370585    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370586    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1370587    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1370588    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370589    filename _pref
1370589  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg4\EMPUBLISHSCORE.sas";
1370590    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370591    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg4\EMPUBLISHSCORE.sas.
1370592   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1370593   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1370594   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1370595   +
1370596   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1370597   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1370598   +
1370599   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1370600   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1370601   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1370602   +array REG4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG4DRF [2] $12 _temporary_ ('1' '0' );
1370603   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1370604   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1370605   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1370606   +ARRAY REG4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG4DRU[2] _TEMPORARY_ (1 0);
1370607   +
1370608   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1370609   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1370610   +
1370611   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1370612   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1370613   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370614   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370615   +end;
MPRINT(EM_DIAGRAM):   end;
1370616   +
1370617   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1370618   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1370619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370621   +end;
MPRINT(EM_DIAGRAM):   end;
1370622   +
1370623   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1370624   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1370625   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370626   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370627   +end;
MPRINT(EM_DIAGRAM):   end;
1370628   +
1370629   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1370630   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1370631   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370632   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370633   +end;
MPRINT(EM_DIAGRAM):   end;
1370634   +
1370635   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1370636   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1370637   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370638   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370639   +end;
MPRINT(EM_DIAGRAM):   end;
1370640   +
1370641   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1370642   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1370643   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370644   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370645   +end;
MPRINT(EM_DIAGRAM):   end;
1370646   +
1370647   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1370648   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1370649   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370650   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370651   +end;
MPRINT(EM_DIAGRAM):   end;
1370652   +
1370653   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1370654   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1370655   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370656   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370657   +end;
MPRINT(EM_DIAGRAM):   end;
1370658   +
1370659   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1370660   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1370661   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370662   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370663   +end;
MPRINT(EM_DIAGRAM):   end;
1370664   +
1370665   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1370666   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1370667   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370668   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370669   +end;
MPRINT(EM_DIAGRAM):   end;
1370670   +
1370671   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1370672   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1370673   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370674   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370675   +end;
MPRINT(EM_DIAGRAM):   end;
1370676   +
1370677   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1370678   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1370679   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370680   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370681   +end;
MPRINT(EM_DIAGRAM):   end;
1370682   +
1370683   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1370684   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1370685   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1370686   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1370687   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1370688   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1370689   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370690   +end;
MPRINT(EM_DIAGRAM):   end;
1370691   +else do;
MPRINT(EM_DIAGRAM):   else do;
1370692   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1370693   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1370694   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1370695   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1370696   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1370697   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1370698   +   end;
MPRINT(EM_DIAGRAM):   end;
1370699   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1370700   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1370701   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1370702   +   end;
MPRINT(EM_DIAGRAM):   end;
1370703   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1370704   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1370705   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1370706   +   end;
MPRINT(EM_DIAGRAM):   end;
1370707   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1370708   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1370709   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1370710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1370711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1370712   +   end;
MPRINT(EM_DIAGRAM):   end;
1370713   +end;
MPRINT(EM_DIAGRAM):   end;
1370714   +
1370715   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1370716   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1370717   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1370718   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1370719   +   goto REG4DR1;
MPRINT(EM_DIAGRAM):   goto REG4DR1;
1370720   +end;
MPRINT(EM_DIAGRAM):   end;
1370721   +
1370722   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1370723   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1370724   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1370725   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1370726   +
1370727   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1370728   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1370729   +_LP0 = _LP0 + (    2.40018327652155 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.40018327652155 * _TEMP);
1370730   +
1370731   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1370732   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1370733   +_LP0 = _LP0 + (   -0.21673510532954 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.21673510532954 * _TEMP);
1370734   +
1370735   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1370736   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1370737   +_LP0 = _LP0 + (    0.64180357562788) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.64180357562788) * _TEMP * _1_0;
1370738   +_LP0 = _LP0 + (    0.16431128010113) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16431128010113) * _TEMP * _1_1;
1370739   +
1370740   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1370741   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1370742   +_LP0 = _LP0 + (   -0.00003686881561 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00003686881561 * _TEMP);
1370743   +
1370744   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1370745   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1370746   +_LP0 = _LP0 + (   -0.00434744593089 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00434744593089 * _TEMP);
1370747   +
1370748   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1370749   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1370750   +_LP0 = _LP0 + (   -0.00828741579845 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00828741579845 * _TEMP);
1370751   +
1370752   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1370753   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1370754   +_LP0 = _LP0 + (    0.00530468850331 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00530468850331 * _TEMP);
1370755   +
1370756   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1370757   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1370758   +_LP0 = _LP0 + (    0.00775743174762 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00775743174762 * _TEMP);
1370759   +
1370760   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1370761   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1370762   +_LP0 = _LP0 + (    0.70059514546632 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.70059514546632 * _TEMP);
1370763   +
1370764   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1370765   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1370766   +_LP0 = _LP0 + (    0.39070014327883 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.39070014327883 * _TEMP);
1370767   +
1370768   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1370769   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1370770   +_LP0 = _LP0 + (    0.00018898206939 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00018898206939 * _TEMP);
1370771   +
1370772   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1370773   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1370774   +_LP0 = _LP0 + (    0.03694284437431 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.03694284437431 * _TEMP);
1370775   +
1370776   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1370777   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1370778   +_LP0 = _LP0 + (   -0.06739289968934 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06739289968934 * _TEMP);
1370779   +
1370780   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1370781   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1370782   +_TEMP =     0.42102377735904 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.42102377735904 + _LP0;
1370783   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1370784   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1370785   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1370786   +end;
MPRINT(EM_DIAGRAM):   end;
1370787   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1370788   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1370789   +
1370790   +REG4DR1:
1370791   +
1370792   +
1370793   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG4DR1: *** Posterior Probabilities and Predicted Level;
1370794   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1370795   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1370796   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1370797   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1370798   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1370799   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1370800   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1370801   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1370802   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1370803   +end;
MPRINT(EM_DIAGRAM):   end;
1370804   +I_DepVar = REG4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG4DRF[_IY];
1370805   +U_DepVar = REG4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG4DRU[_IY];
1370806   +
1370807   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1370808   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1370809   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370810    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370811    quit;
1370812    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370813    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370814    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370815    retain ID 2 Node "Reg4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg4";
1370816    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370817    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 300 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 300 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370818    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370819    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370820    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 300 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 300 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370821    proc sort data=EMWS8.Reg4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg4_variableset out=_temp2(keep=NAME CREATOR);
1370822    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370823    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.REG4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1370824    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370825    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370826    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370827    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370828    proc contents data=EMWS8.Reg4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg4_train out=_meta(keep=NAME) noprint;
1370829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1370830    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370831    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370832    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370833    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370834    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370835    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370836    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370837    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370838    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370838  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 185 rows and 5 columns.
 
1370839    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370840    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370841    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 185 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 185 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370842    filename _pref
1370842  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1370843    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370844    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1370845   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1370846   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1370847   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1370848   +
1370849   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1370850   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1370851   +
1370852   +
1370853   +/*----G_Marital_Status begin----*/
1370854   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1370855   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1370856   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1370857   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1370858   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1370859   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1370860   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1370861   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1370862   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1370863   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1370864   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1370865   +end;
MPRINT(EM_DIAGRAM):   end;
1370866   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1370867   +/*----G_Marital_Status end----*/
1370868   +
1370869   +
1370870   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1370871   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1370872   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370873    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370874    quit;
1370875    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370876    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370877    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370878    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1370879    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370880    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370881    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370882    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370883    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370884    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1370885    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370886    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370887    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370888    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370889    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370891    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1370892    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1370893    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370894    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370895    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370896    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370897    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370898    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370899    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370900    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370901    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370901  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1370902    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370903    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370904    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 188 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370905    filename _pref
1370905  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1370906    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370907    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1370908   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1370909   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1370910   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1370911   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1370912   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1370913   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370914    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370915    quit;
1370916    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370917    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370918    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370919    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1370920    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370922    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370925    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1370926    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370927    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370928    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370929    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370930    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370931    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370932    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1370933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370934    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370937    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370938    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370939    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370940    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370941    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370942    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370942  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1370943    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370944    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 192 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370946    filename _pref
1370946  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1370947    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370948    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1370949   +
1370950   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1370951   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1370951  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1370952   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1370953   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1370954   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1370955   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1370956   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1370957    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1370958    quit;
1370959    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1370960    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1370961    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1370962    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1370963    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1370964    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370965    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1370966    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370967    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370968    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1370969    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370970    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370971    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370972    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1370973    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1370974    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370975    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1370976    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1370977    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1370978    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370979    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370980    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1370981    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1370982    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1370983    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370984    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1370985    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1370985  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1370986    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370987    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1370988    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 231 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1370989    filename _pref
1370989  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1370990    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1370991    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1370992   +
1370993   +
1370994   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1370995   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1370996   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1370997   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1370998   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1370999   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371000   +
1371001   +
1371002   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1371003   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1371004   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1371005   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1371006   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1371007   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371008   +
1371009   +
1371010   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1371011   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1371012   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1371013   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1371014   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1371015   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371016   +
1371017   +
1371018   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1371019   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1371020   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1371021   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1371022   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1371023   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371024   +
1371025   +
1371026   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1371027   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1371028   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1371029   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1371030   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1371031   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371032   +
1371033   +
1371034   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1371035   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1371036   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1371037   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1371038   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1371039   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371040   +
1371041   +
1371042   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1371043   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1371044   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1371045   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1371046   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1371047   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371048   +
1371049   +
1371050   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1371051   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1371052   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1371053   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1371054   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1371055   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371056   +if
1371057   +_FILTERNORM1 not in ( '.')
1371058   + and
1371059   +_FILTERNORM2 not in ( '.')
1371060   + and
1371061   +_FILTERNORM3 not in ( '.')
1371062   + and
1371063   +_FILTERNORM4 not in ( '.')
1371064   + and
1371065   +_FILTERNORM5 not in ( '.')
1371066   + and
1371067   +_FILTERNORM6 not in ( '.')
1371068   + and
1371069   +_FILTERNORM7 not in ( ' ')
1371070   + and
1371071   +_FILTERNORM8 not in ( ' ')
1371072   +and
1371073   +( Dt_Customer ne .)
1371074   +and ( Income ne . and (Income<=107000))
1371075   +and ( Kidhome ne .)
1371076   +and ( MntFishProducts ne .)
1371077   +and ( MntFruits ne .)
1371078   +and ( MntGoldProds ne .)
1371079   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1371080   +and ( MntSweetProducts ne .)
1371081   +and ( MntWines ne .)
1371082   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1371083   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1371084   +and ( NumStorePurchases ne .)
1371085   +and ( NumWebPurchases ne .)
1371086   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1371087   +and ( Recency ne .)
1371088   +and ( Teenhome ne .)
1371089   +and ( Year_Birth ne .)
1371090   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1371091   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1371092   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1371093   +end;
MPRINT(EM_DIAGRAM):   end;
1371094   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1371095   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1371096    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1371097    quit;
1371098    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1371099    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1371100    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1371101    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1371102    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1371103    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371104    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1371105    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371106    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371107    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1371108    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371109    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371110    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371111    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1371112    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1371113    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1371114    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1371115    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371116    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1371117    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371118    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371119    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371120    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1371121    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371122    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371123    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371124    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1371124  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1371125    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371126    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1371127    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 297 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371128    %macro varDept(fcmpdata=,id=);
1371129    %global nobs&id scoreFlag&id;
1371130    %let scoreFlag&id = 0;
1371131    %if &id=1 or ^&fcmpStart %then %do;
1371132    proc sort data=&fcmpdata out=_temp&id nodupkey;
1371133    by NAME;
1371134    where id=&id and LHS in( %let j=1;
1371135    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1371136    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1371137    "&var" %let j = %eval(&j+1);
1371138    %end;
1371139    );
1371140    run;
1371141    %let dsid = %sysfunc(open(_temp&id));
1371142    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371143    %let dsid = %sysfunc(close(&dsid));
1371144    %if &&nobs&id %then %do;
1371145    %let scoreFlag&id = 1;
1371146    %let fcmpStart = 1;
1371147    %end;
1371148    %else %let fcmpStart = 0;
1371149    %end;
1371150    %else %do;
1371151    proc sort data=&fcmpdata out=_tempid;
1371152    where id=&id;
1371153    by LHS;
1371154    run;
1371155    %let dsid = %sysfunc(open(_tempid));
1371156    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371157    %let dsid = %sysfunc(close(&dsid));
1371158    %if ^&&nobs&id %then %do;
1371159    proc datasets lib=work nolist;
1371160    delete _tempid;
1371161    run;
1371162    quit;
1371163    %end;
1371164    %else %do;
1371165    data _tempAll;
1371166    set %let j=%eval(&id-1);
1371167    %do x=1 %to &j;
1371168    %if &&nobs&x %then %do;
1371169    _temp&x %end;
1371170    %end;
1371171    ;
1371172    run;
1371173    proc sql;
1371174    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1371174  ! work._tempid p2 where p.name=p2.lhs;
1371175    quit;
1371176    data _temp&id;
1371177    set _temp&id;
1371178    where LHS ne '' and NAME ne '' and Node ne '';
1371179    run;
1371180    proc datasets lib=work nolist;
1371181    delete _tempAll;
1371182    run;
1371183    %let dsid = %sysfunc(open(_temp&id));
1371184    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371185    %let dsid = %sysfunc(close(&dsid));
1371186    %if ^&&nobs&id %then %do;
1371187    proc datasets lib=work nolist;
1371188    delete _temp&id;
1371189    run;
1371190    quit;
1371191    %end;
1371192    %else %do;
1371193    %let scoreFlag&id = 1;
1371194    data _temp&id;
1371195    set _temp&id;
1371196    where LHS ne NAME and node ne '';
1371197    run;
1371198    %let dsid = %sysfunc(open(_temp&id));
1371199    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371200    %let dsid = %sysfunc(close(&dsid));
1371201    %if ^&&nobs&id %then %do;
1371202    proc datasets lib=work nolist;
1371203    delete _temp&id;
1371204    run;
1371205    quit;
1371206    %end;
1371207    %else %do;
1371208    proc sort data=_temp&id nodupkey;
1371209    by LHS NAME;
1371210    run;
1371211    %end;
1371212    %end;
1371213    %end;
1371214    %end;
1371215    %mend varDept;
1371216    %macro optCode(outdata=fcmpdata);
1371217    %global fcmpStart;
1371218    %let fcmpStart = 0;
1371219    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1371220    %let NumNodes=9;
1371221    %do k=1 %to &NumNodes;
1371222    %vardept(fcmpdata=&outdata, id=&k);
1371223    %end;
1371224    %mend optCode;
1371225    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 51 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.16 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1371226    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1371227    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1371228    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1371229    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371230    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1371231    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1371232    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1371233    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371234    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371235    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1371235  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1371236    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371237    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1371238    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1371239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1371240    filename _pref
1371240  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg8\EMPUBLISHSCORE.sas";
1371241    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1371242    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg8\EMPUBLISHSCORE.sas.
1371243   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1371244   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1371245   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1371246   +
1371247   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1371248   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1371249   +
1371250   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1371251   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1371252   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1371253   +array REG8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG8DRF [2] $12 _temporary_ ('1' '0' );
1371254   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1371255   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1371256   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1371257   +ARRAY REG8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG8DRU[2] _TEMPORARY_ (1 0);
1371258   +
1371259   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1371260   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1371261   +
1371262   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1371263   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1371264   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371265   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371266   +end;
MPRINT(EM_DIAGRAM):   end;
1371267   +
1371268   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1371269   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1371270   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371271   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371272   +end;
MPRINT(EM_DIAGRAM):   end;
1371273   +
1371274   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1371275   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1371276   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371277   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371278   +end;
MPRINT(EM_DIAGRAM):   end;
1371279   +
1371280   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1371281   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1371282   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371283   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371284   +end;
MPRINT(EM_DIAGRAM):   end;
1371285   +
1371286   +*** Check MntFruits for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntFruits for missing values ;
1371287   +if missing( MntFruits ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntFruits ) then do;
1371288   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371289   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371290   +end;
MPRINT(EM_DIAGRAM):   end;
1371291   +
1371292   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1371293   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1371294   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371295   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371296   +end;
MPRINT(EM_DIAGRAM):   end;
1371297   +
1371298   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1371299   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1371300   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371301   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371302   +end;
MPRINT(EM_DIAGRAM):   end;
1371303   +
1371304   +*** Check NumCatalogPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumCatalogPurchases for missing values ;
1371305   +if missing( NumCatalogPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumCatalogPurchases ) then do;
1371306   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371307   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371308   +end;
MPRINT(EM_DIAGRAM):   end;
1371309   +
1371310   +*** Check NumWebPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumWebPurchases for missing values ;
1371311   +if missing( NumWebPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumWebPurchases ) then do;
1371312   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371314   +end;
MPRINT(EM_DIAGRAM):   end;
1371315   +
1371316   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1371317   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1371318   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371319   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371320   +end;
MPRINT(EM_DIAGRAM):   end;
1371321   +
1371322   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1371323   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1371324   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371325   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371326   +end;
MPRINT(EM_DIAGRAM):   end;
1371327   +
1371328   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1371329   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1371330   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371331   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371332   +end;
MPRINT(EM_DIAGRAM):   end;
1371333   +
1371334   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1371335   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1371336   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1371337   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1371338   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1371339   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1371340   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371341   +end;
MPRINT(EM_DIAGRAM):   end;
1371342   +else do;
MPRINT(EM_DIAGRAM):   else do;
1371343   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1371344   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1371345   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1371346   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1371347   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1371348   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1371349   +   end;
MPRINT(EM_DIAGRAM):   end;
1371350   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1371351   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1371352   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1371353   +   end;
MPRINT(EM_DIAGRAM):   end;
1371354   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1371355   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1371356   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1371357   +   end;
MPRINT(EM_DIAGRAM):   end;
1371358   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1371359   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1371360   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1371361   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1371362   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1371363   +   end;
MPRINT(EM_DIAGRAM):   end;
1371364   +end;
MPRINT(EM_DIAGRAM):   end;
1371365   +
1371366   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1371367   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1371368   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1371369   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1371370   +   goto REG8DR1;
MPRINT(EM_DIAGRAM):   goto REG8DR1;
1371371   +end;
MPRINT(EM_DIAGRAM):   end;
1371372   +
1371373   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1371374   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1371375   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1371376   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1371377   +
1371378   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1371379   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1371380   +_LP0 = _LP0 + (    1.30282761826006 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.30282761826006 * _TEMP);
1371381   +
1371382   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1371383   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1371384   +_LP0 = _LP0 + (   -0.12461246583448 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.12461246583448 * _TEMP);
1371385   +
1371386   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1371387   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1371388   +_LP0 = _LP0 + (    0.35055822679312) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.35055822679312) * _TEMP * _1_0;
1371389   +_LP0 = _LP0 + (    0.06578421633721) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.06578421633721) * _TEMP * _1_1;
1371390   +
1371391   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1371392   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1371393   +_LP0 = _LP0 + (   -0.00001965833893 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001965833893 * _TEMP);
1371394   +
1371395   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1371396   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1371397   +_LP0 = _LP0 + (   -0.00237919371816 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00237919371816 * _TEMP);
1371398   +
1371399   +***  Effect: MntFruits ;
MPRINT(EM_DIAGRAM):   *** Effect: MntFruits ;
1371400   +_TEMP = MntFruits ;
MPRINT(EM_DIAGRAM):   _TEMP = MntFruits ;
1371401   +_LP0 = _LP0 + (   -0.00490441121869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00490441121869 * _TEMP);
1371402   +
1371403   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1371404   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1371405   +_LP0 = _LP0 + (     0.0027445180197 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.0027445180197 * _TEMP);
1371406   +
1371407   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1371408   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1371409   +_LP0 = _LP0 + (    0.00427794030308 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00427794030308 * _TEMP);
1371410   +
1371411   +***  Effect: NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumCatalogPurchases ;
1371412   +_TEMP = NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumCatalogPurchases ;
1371413   +_LP0 = _LP0 + (    0.38768279900123 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.38768279900123 * _TEMP);
1371414   +
1371415   +***  Effect: NumWebPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumWebPurchases ;
1371416   +_TEMP = NumWebPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumWebPurchases ;
1371417   +_LP0 = _LP0 + (    0.21939343331463 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.21939343331463 * _TEMP);
1371418   +
1371419   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1371420   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1371421   +_LP0 = _LP0 + (    0.00011370233217 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00011370233217 * _TEMP);
1371422   +
1371423   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1371424   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1371425   +_LP0 = _LP0 + (    0.02046669609103 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02046669609103 * _TEMP);
1371426   +
1371427   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1371428   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1371429   +_LP0 = _LP0 + (   -0.03547597645545 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03547597645545 * _TEMP);
1371430   +
1371431   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1371432   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1371433   +_P0 = probnorm((    0.18495497784379) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( 0.18495497784379) + _LP0);
1371434   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1371435   +
1371436   +REG8DR1:
1371437   +
1371438   +
1371439   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG8DR1: *** Posterior Probabilities and Predicted Level;
1371440   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1371441   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1371442   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1371443   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1371444   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1371445   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1371446   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1371447   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1371448   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1371449   +end;
MPRINT(EM_DIAGRAM):   end;
1371450   +I_DepVar = REG8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG8DRF[_IY];
1371451   +U_DepVar = REG8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG8DRU[_IY];
1371452   +
1371453   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1371454   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1371455   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1371456    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1371457    quit;
1371458    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1371459    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1371460    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1371461    retain ID 2 Node "Reg8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg8";
1371462    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1371463    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 262 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 262 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371464    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1371465    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371466    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 262 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 262 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371467    proc sort data=EMWS8.Reg8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg8_variableset out=_temp2(keep=NAME CREATOR);
1371468    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.REG8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
 
 
1371470    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371471    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1371472    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1371473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 15 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371474    proc contents data=EMWS8.Reg8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg8_train out=_meta(keep=NAME) noprint;
1371475    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1371476    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1371477    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371478    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371479    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371480    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1371481    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371482    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 15 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371483    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371484    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1371484  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 171 rows and 5 columns.
 
1371485    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371486    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1371487    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 171 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 171 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371488    filename _pref
1371488  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1371489    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1371490    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1371491   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1371492   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1371493   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1371494   +
1371495   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1371496   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1371497   +
1371498   +
1371499   +/*----G_Marital_Status begin----*/
1371500   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1371501   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1371502   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1371503   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1371504   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1371505   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1371506   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1371507   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1371508   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1371509   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1371510   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1371511   +end;
MPRINT(EM_DIAGRAM):   end;
1371512   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1371513   +/*----G_Marital_Status end----*/
1371514   +
1371515   +
1371516   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1371517   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1371518   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1371519    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1371520    quit;
1371521    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1371522    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1371523    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1371524    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1371525    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1371526    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371527    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1371528    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371529    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371530    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1371531    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371533    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371534    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1371535    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1371536    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1371537    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1371538    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371539    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1371540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371541    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371542    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371543    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1371544    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371545    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371546    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371547    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1371547  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1371548    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371549    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1371550    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371551    filename _pref
1371551  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1371552    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1371553    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1371554   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1371555   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1371556   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1371557   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1371558   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1371559   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1371560    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1371561    quit;
1371562    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1371563    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1371564    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1371565    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1371566    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1371567    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371568    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1371569    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371571    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1371572    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371574    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371575    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1371576    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1371577    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371578    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1371579    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
1371580    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1371581    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371583    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371584    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1371585    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371586    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371587    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371588    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1371588  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1371589    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371590    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1371591    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371592    filename _pref
1371592  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1371593    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1371594    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1371595   +
1371596   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1371597   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1371597  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1371598   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1371599   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1371600   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1371601   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1371602   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1371603    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1371604    quit;
1371605    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1371606    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1371607    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1371608    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1371609    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1371610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371611    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1371612    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371613    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371614    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1371615    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371616    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371617    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371618    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1371619    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1371620    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371621    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1371622    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1371623    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1371624    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371625    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371626    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371627    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1371628    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371629    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371630    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371631    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1371631  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1371632    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371633    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1371634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371635    filename _pref
1371635  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1371636    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1371637    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1371638   +
1371639   +
1371640   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1371641   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1371642   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1371643   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1371644   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1371645   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371646   +
1371647   +
1371648   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1371649   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1371650   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1371651   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1371652   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1371653   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371654   +
1371655   +
1371656   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1371657   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1371658   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1371659   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1371660   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1371661   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371662   +
1371663   +
1371664   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1371665   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1371666   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1371667   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1371668   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1371669   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371670   +
1371671   +
1371672   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1371673   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1371674   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1371675   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1371676   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1371677   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371678   +
1371679   +
1371680   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1371681   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1371682   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1371683   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1371684   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1371685   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371686   +
1371687   +
1371688   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1371689   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1371690   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1371691   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1371692   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1371693   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
The SAS System
 
1371694   +
1371695   +
1371696   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1371697   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1371698   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1371699   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1371700   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1371701   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1371702   +if
1371703   +_FILTERNORM1 not in ( '.')
1371704   + and
1371705   +_FILTERNORM2 not in ( '.')
1371706   + and
1371707   +_FILTERNORM3 not in ( '.')
1371708   + and
1371709   +_FILTERNORM4 not in ( '.')
1371710   + and
1371711   +_FILTERNORM5 not in ( '.')
1371712   + and
1371713   +_FILTERNORM6 not in ( '.')
1371714   + and
1371715   +_FILTERNORM7 not in ( ' ')
1371716   + and
1371717   +_FILTERNORM8 not in ( ' ')
1371718   +and
1371719   +( Dt_Customer ne .)
1371720   +and ( Income ne . and (Income<=107000))
1371721   +and ( Kidhome ne .)
1371722   +and ( MntFishProducts ne .)
1371723   +and ( MntFruits ne .)
1371724   +and ( MntGoldProds ne .)
1371725   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1371726   +and ( MntSweetProducts ne .)
1371727   +and ( MntWines ne .)
1371728   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1371729   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1371730   +and ( NumStorePurchases ne .)
1371731   +and ( NumWebPurchases ne .)
1371732   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1371733   +and ( Recency ne .)
1371734   +and ( Teenhome ne .)
1371735   +and ( Year_Birth ne .)
1371736   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1371737   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1371738   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1371739   +end;
MPRINT(EM_DIAGRAM):   end;
1371740   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1371741   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1371742    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1371743    quit;
1371744    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1371745    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1371746    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1371747    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1371748    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1371749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371750    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1371751    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371753    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1371754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371756    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371757    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1371758    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1371759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371760    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1371761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
1371762    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1371763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371765    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1371766    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1371767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1371768    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371769    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371770    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1371770  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1371771    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371772    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1371773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371774    %macro varDept(fcmpdata=,id=);
1371775    %global nobs&id scoreFlag&id;
1371776    %let scoreFlag&id = 0;
1371777    %if &id=1 or ^&fcmpStart %then %do;
1371778    proc sort data=&fcmpdata out=_temp&id nodupkey;
1371779    by NAME;
1371780    where id=&id and LHS in( %let j=1;
1371781    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1371782    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1371783    "&var" %let j = %eval(&j+1);
1371784    %end;
1371785    );
1371786    run;
1371787    %let dsid = %sysfunc(open(_temp&id));
1371788    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371789    %let dsid = %sysfunc(close(&dsid));
1371790    %if &&nobs&id %then %do;
1371791    %let scoreFlag&id = 1;
1371792    %let fcmpStart = 1;
1371793    %end;
1371794    %else %let fcmpStart = 0;
1371795    %end;
1371796    %else %do;
1371797    proc sort data=&fcmpdata out=_tempid;
1371798    where id=&id;
1371799    by LHS;
1371800    run;
1371801    %let dsid = %sysfunc(open(_tempid));
1371802    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371803    %let dsid = %sysfunc(close(&dsid));
1371804    %if ^&&nobs&id %then %do;
1371805    proc datasets lib=work nolist;
1371806    delete _tempid;
1371807    run;
1371808    quit;
1371809    %end;
1371810    %else %do;
1371811    data _tempAll;
1371812    set %let j=%eval(&id-1);
1371813    %do x=1 %to &j;
1371814    %if &&nobs&x %then %do;
1371815    _temp&x %end;
1371816    %end;
1371817    ;
1371818    run;
1371819    proc sql;
1371820    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1371820  ! work._tempid p2 where p.name=p2.lhs;
1371821    quit;
1371822    data _temp&id;
1371823    set _temp&id;
1371824    where LHS ne '' and NAME ne '' and Node ne '';
1371825    run;
1371826    proc datasets lib=work nolist;
1371827    delete _tempAll;
1371828    run;
1371829    %let dsid = %sysfunc(open(_temp&id));
1371830    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371831    %let dsid = %sysfunc(close(&dsid));
1371832    %if ^&&nobs&id %then %do;
1371833    proc datasets lib=work nolist;
1371834    delete _temp&id;
1371835    run;
1371836    quit;
1371837    %end;
1371838    %else %do;
1371839    %let scoreFlag&id = 1;
1371840    data _temp&id;
1371841    set _temp&id;
1371842    where LHS ne NAME and node ne '';
1371843    run;
1371844    %let dsid = %sysfunc(open(_temp&id));
1371845    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1371846    %let dsid = %sysfunc(close(&dsid));
1371847    %if ^&&nobs&id %then %do;
1371848    proc datasets lib=work nolist;
1371849    delete _temp&id;
1371850    run;
1371851    quit;
1371852    %end;
1371853    %else %do;
1371854    proc sort data=_temp&id nodupkey;
1371855    by LHS NAME;
1371856    run;
1371857    %end;
1371858    %end;
1371859    %end;
1371860    %end;
1371861    %mend varDept;
1371862    %macro optCode(outdata=fcmpdata);
1371863    %global fcmpStart;
1371864    %let fcmpStart = 0;
1371865    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1371866    %let NumNodes=9;
1371867    %do k=1 %to &NumNodes;
1371868    %vardept(fcmpdata=&outdata, id=&k);
1371869    %end;
1371870    %mend optCode;
1371871    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 52 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 39 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 13 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 51 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1371872    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1371873    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1371874    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1371875    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371876    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1371877    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1371878    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1371879    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371880    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1371881    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1371881  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1371882    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1371883    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1371884    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1371885    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1371886    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1371887    * Ensmbl4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing metadata for TRAIN data;
1371888    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL4_TRAIN.VIEW used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl4_TRAIN out=WORK.M2IY8RPT noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IY8RPT;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2IY8RPT(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IY8RPT;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2IY8RPT;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0L6G6X7 NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M05IL6P_(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   set WORK.M0L6G6X7;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural29_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural29_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl4";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl4";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1372208    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1372209    set EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMINFO;
1372210    where DATA='Ensmbl4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1372211    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_EMINFO.
      WHERE (DATA='Ensmbl4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372212    data EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMINFO;
1372213    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1372214    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1372215    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1372219    run;
1372220    data EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMINFO;
1372221    set EMWS8.Ensmbl4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMINFO WORK.MODELTEMP_INFO;
1372222    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372223    proc sort data = EMWS8.Ensmbl4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl4_EMINFO NOTHREADS;
1372224    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1372225    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_EMINFO.
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372226    proc sort data = EMWS8.Neural29_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural29_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1372227    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1372228    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.NEURAL29_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1372229    proc sort data = EMWS8.Ensmbl4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1372230    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1372231    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372232    data EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMINFO;
1372233    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1372234    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1372235    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372236    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1372237    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1372238    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1372239    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
NOTE: View EMWS8.ENSMBL4_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
NOTE: View EMWS8.ENSMBL4_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "19. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "11.19 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                19. April 2016
Time:                11.19 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0PXKGOD
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0PXKGOD new;
MPRINT(EM_DIAGRAM):   run;
1372263    data EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMOUTFIT;
1372264    set EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMOUTFIT;
1372265    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1372266    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1372266  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1372267    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1372268    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL4_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL4_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372269    proc sort data=EMWS8.Ensmbl4_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl4_EMREPORTFIT nothreads;
1372270    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1372271    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL4_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL4_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372272    %let _EMwarndup = 0;
1372273    %let _EMtargetdup =;
1372274    %let _EMASEtargetdup =;
1372275    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1372276    set EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMOUTFIT;
1372277    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1372278    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1372279    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1372280    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1372281    end;
MPRINT(EM_DIAGRAM):   end;
1372282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL4_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372283    proc sort data=EMWS8.Neural25_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural25_CMeta_TRAIN out=WORK.SUBSETINMETA;
1372284    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1372285    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set EMWS8.NEURAL25_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 25 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372286    proc sort data=EMWS8.Ensmbl4_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl4_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
1372287    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1372288    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS8.ENSMBL4_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 15 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372289    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1372290    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1372291    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1372292    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 25 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 15 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 25 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1372293    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1372294    set EMWS8.Ensmbl4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_CMeta_TRAIN;
1372295    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1372295  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1372296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.ENSMBL4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1372297    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1372298    set EMWS8.Ensmbl4_TRAIN(keep=
1372299    F_DepVar
1372300    I_DepVar
1372301    P_DepVar0
1372302    P_DepVar1
1372303    R_DepVar0
1372304    R_DepVar1
1372305    U_DepVar
1372306    V_DepVar0
1372307    V_DepVar1
1372308    _WARN_
1372309    DepVar
1372310    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar V_DepVar0 V_DepVar1 _WARN_ DepVar );
1372311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: View EMWS8.ENSMBL4_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.NEURAL29_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL4_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.13 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl4_32SJP4O nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4_32SJP4O;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_32SJP4O(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_32SJP4O;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_32SJP4O;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural25_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0020808467 OVLMAX 0.9953556148 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1376577    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1376578    set EMWS8.Ensmbl4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_CMeta_TRAIN;
1376579    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1376579  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1376580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.ENSMBL4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1376581    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1376582    set EMWS8.Ensmbl4_VALIDATE(keep=
1376583    F_DepVar
1376584    I_DepVar
1376585    P_DepVar0
1376586    P_DepVar1
1376587    R_DepVar0
1376588    R_DepVar1
1376589    U_DepVar
1376590    V_DepVar0
1376591    V_DepVar1
1376592    _WARN_
1376593    DepVar
1376594    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar V_DepVar0 V_DepVar1 _WARN_ DepVar );
1376595    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: View EMWS8.ENSMBL4_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.11 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.NEURAL29_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL4_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl4_1YBXEX1 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4_1YBXEX1;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_1YBXEX1(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMCLASSIFICATION WORK.Ensmbl4_1YBXEX1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_1YBXEX1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural25_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0020297029 OVLMAX 0.993797234 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1380870    %let _cn = %sysfunc(getoption(CENTER));
1380871    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1380872    proc print data=EMWS8.Ensmbl4_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMREPORTFIT noobs label;
1380873    var STAT LABEL TRAIN
1380874    VALIDATE
1380875    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1380876    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1380877    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1380878    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1380879    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL4_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1008.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1380880    title10;
MPRINT(EM_DIAGRAM):   title10;
1380881    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1380882    proc sort data=EMWS8.Ensmbl4_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl4_EMCLASSIFICATION nothreads;
1380883    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1380884    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL4_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL4_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1380885    %let _cn = %sysfunc(getoption(CENTER));
1380886    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1380887    proc print data=EMWS8.Ensmbl4_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMCLASSIFICATION noobs label;
1380888    var from into pct_row pct_col count percent
1380889    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1380890    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1380891    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1380892    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1380893    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1380894    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1380895    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1380896    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1380897    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1380898    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1380899    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1380900    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL4_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1009.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1380901    title9;
MPRINT(EM_DIAGRAM):   title9;
1380902    title10;
MPRINT(EM_DIAGRAM):   title10;
1380903    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1380904    %let _cn = %sysfunc(getoption(CENTER));
1380905    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1380906    data EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMEVENTREPORT;
1380907    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1380907  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1380908    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1380908  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1380908  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1380908  ! FALSEEVENT
1380909    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1380909  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1380909  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1380910       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1380911    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1380912    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1380913    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1380914    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1380915    set EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMEVENTREPORT;
1380916    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL4_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL4_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1380917    proc print data=EMWS8.Ensmbl4_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMEVENTREPORT noobs label;
1380918    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1380919    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1380920    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1380921    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL4_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1010.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1380922    title10;
MPRINT(EM_DIAGRAM):   title10;
1380923    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1380924    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1380925    modify Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1380926    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1380927    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1380927  ! ;
MPRINT(EM_DIAGRAM):   run;
1380928    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL4_EMRANK.DATA.
1380929    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
1380930    %let _cn = %sysfunc(getoption(CENTER));
1380931    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1380932    proc print data=EMWS8.Ensmbl4_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMRANK label noobs;
1380933    var
1380934    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1380935    by
1380936    notsorted DATAROLE
1380937    notsorted TARGET
1380938    notsorted TARGETLABEL
1380939    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1380940    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1380941    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1380942    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL4_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1011.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1380943    title10;
MPRINT(EM_DIAGRAM):   title10;
1380944    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1380945    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1380946    modify Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1380947    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1380947  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1380948    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1380948  ! ;
MPRINT(EM_DIAGRAM):   run;
1380949    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL4_EMSCOREDIST.DATA.
1380950    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.07 seconds
      cpu time            0.07 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
