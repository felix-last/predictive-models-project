*------------------------------------------------------------*
User:                Lukas Fahr
Date:                20. April 2016
Time:                17.33 Uhr
Site:                70107571
Platform:            X64_7PRO
Maintenance Release: 9.03.01M2P081512
EM Version:          12.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                20. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O10N7G8O
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O10N7G8O new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70107571";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_7PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.03.01M2P081512";
MPRINT(EM_DIAGRAM):   put "EM Version:          12.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                Lukas Fahr";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_
'C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMRUNSTATUS.xml' encoding="UTF-8"
NOBOM;
(FREQ=(WHERE='ROLE = "FREQ"' DEFAULT='Y' RULE=(RULE1=(DESCRIPTION='USEATMOST1FREQ'
VALUES=(VALUE1='Y' )[243811] MAX=1 EXCEEDMAXVALUE='' )[243815] )[243809]
VALIDCHOICES=(CHOICE1='Y' )[243813] )[244097] INPUTREJECT=(WHERE='ROLE in("INPUT",
"REJECTED")' DEFAULT='D' VALIDCHOICES=(CHOICE1='D' )[243819]
RULE=(RULE1=(DESCRIPTION='USEATLEAST1INPUTREJECT' WHERE='(ROLE = "INPUT" and USE in("Y" "D"))
or (ROLE = "REJECTED" and USE = "Y")' MIN=. )[243823] )[243821] )[243817] TARGET=(WHERE='ROLE
= "TARGET"' DEFAULT='Y' VALIDCHOICES=(CHOICE1='Y' CHOICE2='N' )[243827]
RULE=(RULE1=(DESCRIPTION='METADATA.USE1TARGET' VALUES=(VALUE1='Y' )[243833] MIN=1 MAX=1
EXCEEDMAXVALUE='N' )[243831] )[243829] )[243825] )[243807]
1695510    proc freq data=EMWS8.Ensmbl4_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS8.Ensmbl4_VariableSet noprint;
1695511    table ROLE*LEVEL/out=WORK.Ensmbl4META;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.Ensmbl4META;
1695512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.ENSMBL4_VARIABLESET.
NOTE: The data set WORK.ENSMBL4META has 3 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1695513    proc print data=WORK.Ensmbl4META label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl4META label noobs;
1695514    var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
1695515    label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL =
1695515  ! "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT =
1695515  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency
Count";
1695516    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1695517    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
1695518    run;
 
NOTE: There were 3 observations read from the data set WORK.ENSMBL4META.
NOTE: The PROCEDURE PRINT printed page 1830.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695519    title10;
MPRINT(EM_DIAGRAM):   title10;
1695520    %let EMNORLEN = %DMNORLEN;
MPRINT(EM_DIAGRAM):
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN EMWS8 Neural25_TRAIN
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN
EMWS8.Neural25_TRAIN EMWS8.Neural25_TRAIN EMWS8 Neural25_TRAIN
MPRINT(EM_DIAGRAM):    proc dmdb data=EMWS8.Neural25_TRAIN
classout=WORK._DMDBCLASSTARGET(keep=NAME NRAW CRAW LEVEL FREQUENCY NMISSPERCENT);
MPRINT(EM_DIAGRAM):   class DepVar(DESC) ;
MPRINT(EM_DIAGRAM):   run;
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _INIT >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL setMetaData >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL next >>
Executing  SASHELP.EMCORE.EMINFOITERATOR.SCL _term >>
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set WORK._DMDBCLASSTARGET;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   if _N_=1 then call symput('_newevent', strip(LEVEL));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._DMDBCLASSTARGET out=_TEMPCLASS(keep=LEVEL FREQUENCY
NMISSPERCENT rename=(LEVEL=DepVar));
MPRINT(EM_DIAGRAM):   by LEVEL;
MPRINT(EM_DIAGRAM):   where ^(NRAW eq . and CRAW eq '') and NAME="DepVar";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _TEMPCLASS;
MPRINT(EM_DIAGRAM):   set _TEMPCLASS;
MPRINT(EM_DIAGRAM):   NMISSPERCENT= NMISSPERCENT/100;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural25_DepVar_DD out=_sortedDecdata;
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   merge _TEMPCLASS(in=_a) _sortedDecdata(in=_b);
MPRINT(EM_DIAGRAM):   by DepVar;
MPRINT(EM_DIAGRAM):   if (_a and ^_b) or (^_a and _b) then call symput('_emresetDec', '1');
MPRINT(EM_DIAGRAM):   run;
1695549    data WORK.Ensmbl4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS ORDER);
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4_EVENT(KEEP=VARIABLE LABEL LEVEL EVENT NUMLEVELS
ORDER);
1695550    length ORDER $20;
MPRINT(EM_DIAGRAM):   length ORDER $20;
1695551    label VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel,  NOQUOTE))"
1695551  ! EVENT = "%sysfunc(sasmsg(sashelp.dmine, assmt_event_vlabel, NOQUOTE))" NUMLEVELS =
1695551  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_numcat_vlabel, NOQUOTE))" LEVEL =
1695552       "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" ORDER =
1695552  ! "%sysfunc(sasmsg(sashelp.dmine, meta_order_vlabel, NOQUOTE))" LABEL =
1695552  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Target" EVENT = "Event" NUMLEVELS = "Number of Levels"
LEVEL = "Measurement Level" ORDER = "Order" LABEL = "Label";
1695553    set EMWS8.NEURAL25_DEPVAR_DM( where=(_TYPE_="TARGET"));
MPRINT(EM_DIAGRAM):   set EMWS8.NEURAL25_DEPVAR_DM( where=(_TYPE_="TARGET"));
1695554    NumLevels=2;
MPRINT(EM_DIAGRAM):   NumLevels=2;
1695555    select(upcase(ORDER));
MPRINT(EM_DIAGRAM):   select(upcase(ORDER));
1695556    when('DESC') ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   when('DESC') ORDER = 'Descending';
1695557    when('ASC') ORDER = 'Ascending';
MPRINT(EM_DIAGRAM):   when('ASC') ORDER = 'Ascending';
1695558    when('FMTDESC') ORDER = 'Formatted Descending';
MPRINT(EM_DIAGRAM):   when('FMTDESC') ORDER = 'Formatted Descending';
1695559    when('FMTASC') ORDER = 'Formatted Ascending';
MPRINT(EM_DIAGRAM):   when('FMTASC') ORDER = 'Formatted Ascending';
1695560    otherwise ORDER = 'Descending';
MPRINT(EM_DIAGRAM):   otherwise ORDER = 'Descending';
1695561    end;
MPRINT(EM_DIAGRAM):   end;
1695562    output;
MPRINT(EM_DIAGRAM):   output;
1695563    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.NEURAL25_DEPVAR_DM.
      WHERE _TYPE_='TARGET';
NOTE: The data set WORK.ENSMBL4_EVENT has 1 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1695564    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1695565    proc print data=WORK.Ensmbl4_EVENT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl4_EVENT noobs label;
1695566    var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
MPRINT(EM_DIAGRAM):   var VARIABLE EVENT LEVEL NUMLEVELS ORDER LABEL;
1695567    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1695568    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_modelEvent_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Model Events";
MPRINT(EM_DIAGRAM):   run;
1695569    run;
 
NOTE: There were 1 observations read from the data set WORK.ENSMBL4_EVENT.
NOTE: The PROCEDURE PRINT printed page 1831.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695570    title10;
MPRINT(EM_DIAGRAM):   title10;
"No decisions defined for target "DepVar"."
1695571    proc print data = EMWS8.Neural25_DepVar_DM noobs label;
MPRINT(EM_DIAGRAM):    proc print data = EMWS8.Neural25_DepVar_DM noobs label;
1695572    var _type_ variable label;
MPRINT(EM_DIAGRAM):   var _type_ variable label;
1695573    where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR', 'DECPRIOR');
MPRINT(EM_DIAGRAM):   where _type_ ^in('MATRIX', 'DECISION', 'TRAINPRIOR', 'DATAPRIOR',
'DECPRIOR');
1695574    label _TYPE_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel,     NOQUOTE))"
1695574  ! VARIABLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))" LABEL =
1695574  ! "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Type" VARIABLE = "Variable" LABEL = "Label";
1695575    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1695576    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_predDecVars_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Predicted and decision variables";
MPRINT(EM_DIAGRAM):   run;
1695577    run;
 
NOTE: There were 7 observations read from the data set EMWS8.NEURAL25_DEPVAR_DM.
      WHERE _type_ not in ('DATAPRIOR', 'DECISION', 'DECPRIOR', 'MATRIX', 'TRAINPRIOR');
NOTE: The PROCEDURE PRINT printed page 1832.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695578    title10;
MPRINT(EM_DIAGRAM):   title10;
1695579    %let groupid =;
1695580    %let endGroupid =;
1695581    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695582    set EMWS8.Reg8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg8_EMINFO;
1695583    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695583  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695584    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695585    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695586    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695587    %let groupid =;
1695588    %let endGroupid =;
1695589    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695590    set EMWS8.Reg4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg4_EMINFO;
1695591    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695591  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695592    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695593    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695594    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.REG4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695595    %let groupid =;
1695596    %let endGroupid =;
1695597    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695598    set EMWS8.Tree4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Tree4_EMINFO;
1695599    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695599  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695600    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695601    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695602    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TREE4_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695603    %let groupid =;
1695604    %let endGroupid =;
1695605    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695606    set EMWS8.Neural8_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural8_EMINFO;
1695607    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695607  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695608    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695609    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695610    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL8_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695611    %let groupid =;
1695612    %let endGroupid =;
1695613    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695614    set EMWS8.Neural28_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural28_EMINFO;
1695615    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695615  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695616    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695617    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695618    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL28_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695619    %let groupid =;
1695620    %let endGroupid =;
1695621    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695622    set EMWS8.Neural27_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural27_EMINFO;
1695623    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695623  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695624    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695625    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL27_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695627    %let groupid =;
1695628    %let endGroupid =;
1695629    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695630    set EMWS8.Neural26_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural26_EMINFO;
1695631    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695631  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695632    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695633    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695634    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL26_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695635    %let groupid =;
1695636    %let endGroupid =;
1695637    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695638    set EMWS8.Neural25_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural25_EMINFO;
1695639    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695639  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695640    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695641    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL25_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695643    %let groupid =;
1695644    %let endGroupid =;
1695645    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695646    set EMWS8.Neural24_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural24_EMINFO;
1695647    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695647  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695648    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695649    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL24_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695651    %let groupid =;
1695652    %let endGroupid =;
1695653    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1695654    set EMWS8.Neural29_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural29_EMINFO;
1695655    where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO', 'TARGETINFO',
1695655  ! 'INDEXINFO');
MPRINT(EM_DIAGRAM):   where key in('ENDGROUP', 'GROUPINFO', 'BOOSTINFO', 'BAGINFO',
'TARGETINFO', 'INDEXINFO');
1695656    if key = 'ENDGROUP' then call symput('endGroupId', DATA);
MPRINT(EM_DIAGRAM):   if key = 'ENDGROUP' then call symput('endGroupId', DATA);
1695657    else call symput('groupId', DATA);
MPRINT(EM_DIAGRAM):   else call symput('groupId', DATA);
1695658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.NEURAL29_EMINFO.
      WHERE key in ('BAGINFO', 'BOOSTINFO', 'ENDGROUP', 'GROUPINFO', 'INDEXINFO',
      'TARGETINFO');
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695659    data WORK.Ensmbl4;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4;
1695660    length NodeId $32 Model $64;
MPRINT(EM_DIAGRAM):   length NodeId $32 Model $64;
1695661    label Nodeid = "%sysfunc(sasmsg(sashelp.dmine, rpt_nodeId_vlabel,  NOQUOTE))" Model
1695661  ! = "%sysfunc(sasmsg(sashelp.dmine, rpt_modeltype,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label Nodeid = "Node Id" Model = "rpt_modeltype";
1695662    nodeid="REG8";
MPRINT(EM_DIAGRAM):   nodeid="REG8";
1695663    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1695664    output;
MPRINT(EM_DIAGRAM):   output;
1695665    nodeid="REG4";
MPRINT(EM_DIAGRAM):   nodeid="REG4";
1695666    model="Regression";
MPRINT(EM_DIAGRAM):   model="Regression";
1695667    output;
MPRINT(EM_DIAGRAM):   output;
1695668    nodeid="TREE4";
MPRINT(EM_DIAGRAM):   nodeid="TREE4";
1695669    model="Decision Tree";
MPRINT(EM_DIAGRAM):   model="Decision Tree";
1695670    output;
MPRINT(EM_DIAGRAM):   output;
1695671    nodeid="NEURAL8";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL8";
1695672    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695673    output;
MPRINT(EM_DIAGRAM):   output;
1695674    nodeid="NEURAL28";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL28";
1695675    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695676    output;
MPRINT(EM_DIAGRAM):   output;
1695677    nodeid="NEURAL27";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL27";
1695678    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695679    output;
MPRINT(EM_DIAGRAM):   output;
1695680    nodeid="NEURAL26";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL26";
1695681    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695682    output;
MPRINT(EM_DIAGRAM):   output;
1695683    nodeid="NEURAL25";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL25";
1695684    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695685    output;
MPRINT(EM_DIAGRAM):   output;
1695686    nodeid="NEURAL24";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL24";
1695687    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695688    output;
MPRINT(EM_DIAGRAM):   output;
1695689    nodeid="NEURAL29";
MPRINT(EM_DIAGRAM):   nodeid="NEURAL29";
1695690    model="Neural";
MPRINT(EM_DIAGRAM):   model="Neural";
1695691    output;
MPRINT(EM_DIAGRAM):   output;
1695692    ;
MPRINT(EM_DIAGRAM):   ;
1695693    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.ENSMBL4 has 10 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1695694    title;
MPRINT(EM_DIAGRAM):   title;
1695695    proc print data=WORK.Ensmbl4 label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.Ensmbl4 label noobs;
1695696    title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_combinemodels_title,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imported Models to be Combined";
1695697    title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   title10 "Probability Function: Average";
MPRINT(EM_DIAGRAM):   run;
1695698    run;
 
NOTE: There were 10 observations read from the data set WORK.ENSMBL4.
NOTE: The PROCEDURE PRINT printed page 1833.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1695699    title9;
MPRINT(EM_DIAGRAM):   title9;
1695700    title10;
MPRINT(EM_DIAGRAM):   title10;
1695701    data WORK.M1R2IUED;
MPRINT(EM_DIAGRAM):    data WORK.M1R2IUED;
1695702    set WORK.M1R2IUED;
MPRINT(EM_DIAGRAM):   set WORK.M1R2IUED;
1695703    where NAME = "DepVar";
MPRINT(EM_DIAGRAM):   where NAME = "DepVar";
1695704    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.M1R2IUED.
      WHERE NAME='DepVar';
NOTE: The data set WORK.M1R2IUED has 1 observations and 22 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1695705    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
1695706    * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
1695707    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1695708    %macro DMDBClass;
1695709        DepVar(DESC)
1695710    %mend DMDBClass;
1695711    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1695712    * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
1695713    *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
1695714    %macro DMDBVar;
1695715
1695716    %mend DMDBVar;
1695717    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695718    * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
1695719    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695720    proc dmdb batch data=EMWS8.Reg8_TRAIN
1695721    dmdbcat=WORK.EM_DMDB
1695722    maxlevel = 513
1695723    ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS8.Reg8_TRAIN dmdbcat=WORK.EM_DMDB maxlevel =
513 ;
MPRINT(EM_DIAGRAM):   class
1695724    class %DMDBClass;
MPRINT(DMDBCLASS):   DepVar(DESC)
MPRINT(EM_DIAGRAM):  ;
1695725    target
1695726    DepVar
1695727    ;
MPRINT(EM_DIAGRAM):   target DepVar ;
1695728    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2374   Memory used = 511K.
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: View EMWS8.REG8_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.REG8_TRAIN.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
1695729    quit;
1695730    *--- end code ---*;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                20. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O04G6N59
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O04G6N59 new;
MPRINT(EM_DIAGRAM):   run;
1695832    filename emflow
1695832  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring REG8_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695833    *------------------------------------------------------------*;
1695834    * Ensmbl4: Scoring REG8_TRAIN data;
1695835    *------------------------------------------------------------*;
1695836    data EMWS8.Ensmbl4_TRAIN
1695837    / view=EMWS8.Ensmbl4_TRAIN
1695838    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_TRAIN / view=EMWS8.Ensmbl4_TRAIN ;
1695839    set EMWS8.Reg8_TRAIN
1695840    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg8_TRAIN ;
1695841    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas.
1695842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695843   +* Ensmbl4: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Combine model for DepVar;
1695844   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695845   +* Ensmbl4: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 1 of 10;
1695846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695847   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695848   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1695849   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1695850   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1695851   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695852   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695853   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1695854   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1695855   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1695856   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695857   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695858   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1695859   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1695860   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1695861   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695863   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1695864   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1695865   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1695866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695867   +
1695868   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1695869   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1695869  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1695870   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1695871   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1695872   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1695873   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1695874   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1695875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695876   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1695877   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1695878   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1695879   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695881   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1695882   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695883   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1695884   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1695885   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1695886   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695887   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1695888   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1695889   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1695890   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695891   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695892   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1695893   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1695894   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1695895   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695896   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1695897   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1695898   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1695899   +
1695900   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1695901   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1695902   +
1695903   +
1695904   +/*----G_Marital_Status begin----*/
1695905   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1695906   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1695907   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695908   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1695909   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1695910   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1695911   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1695912   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1695913   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1695914   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1695915   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1695916   +end;
MPRINT(EM_DIAGRAM):   end;
1695917   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1695918   +/*----G_Marital_Status end----*/
1695919   +
1695920   +
1695921   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1695922   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1695923   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1695924   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695925   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1695926   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1695927   +* NODE: Reg8;
MPRINT(EM_DIAGRAM):   * NODE: Reg8;
1695928   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1695929   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1695930   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1695931   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1695932   +
1695933   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1695934   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1695935   +
1695936   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1695937   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1695938   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1695939   +array REG8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG8DRF [2] $12 _temporary_ ('1' '0' );
1695940   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1695941   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1695942   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1695943   +ARRAY REG8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG8DRU[2] _TEMPORARY_ (1 0);
1695944   +
1695945   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1695946   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1695947   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1695948   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1695949   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1695950   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1695951   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1695952   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1695953   +end;
MPRINT(EM_DIAGRAM):   end;
1695954   +else do;
MPRINT(EM_DIAGRAM):   else do;
1695955   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1695956   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1695957   +   end;
MPRINT(EM_DIAGRAM):   end;
1695958   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1695959   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1695960   +   end;
MPRINT(EM_DIAGRAM):   end;
1695961   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1695962   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1695963   +   end;
MPRINT(EM_DIAGRAM):   end;
1695964   +end;
MPRINT(EM_DIAGRAM):   end;
1695965   +
1695966   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1695967   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1695968   +
1695969   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1695970   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1695971   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695972   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695973   +end;
MPRINT(EM_DIAGRAM):   end;
1695974   +
1695975   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1695976   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1695977   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695978   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695979   +end;
MPRINT(EM_DIAGRAM):   end;
1695980   +
1695981   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1695982   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1695983   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695984   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695985   +end;
MPRINT(EM_DIAGRAM):   end;
1695986   +
1695987   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1695988   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1695989   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695990   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695991   +end;
MPRINT(EM_DIAGRAM):   end;
1695992   +
1695993   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1695994   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1695995   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1695996   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1695997   +end;
MPRINT(EM_DIAGRAM):   end;
1695998   +
1695999   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1696000   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1696001   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696002   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696003   +end;
MPRINT(EM_DIAGRAM):   end;
1696004   +
1696005   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1696006   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1696007   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696008   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696009   +end;
MPRINT(EM_DIAGRAM):   end;
1696010   +
1696011   +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
1696012   +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
1696013   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696014   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696015   +end;
MPRINT(EM_DIAGRAM):   end;
1696016   +
1696017   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1696018   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1696019   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696020   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696021   +end;
MPRINT(EM_DIAGRAM):   end;
1696022   +
1696023   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1696024   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1696025   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696026   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696027   +end;
MPRINT(EM_DIAGRAM):   end;
1696028   +
1696029   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1696030   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1696031   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696032   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696033   +end;
MPRINT(EM_DIAGRAM):   end;
1696034   +
1696035   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1696036   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1696037   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1696038   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1696039   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1696040   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696041   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696042   +end;
MPRINT(EM_DIAGRAM):   end;
1696043   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696044   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696045   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1696046   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696047   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1696048   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1696049   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1696050   +   end;
MPRINT(EM_DIAGRAM):   end;
1696051   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1696052   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1696053   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1696054   +   end;
MPRINT(EM_DIAGRAM):   end;
1696055   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696056   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1696057   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1696058   +   end;
MPRINT(EM_DIAGRAM):   end;
1696059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696060   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1696061   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1696062   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696063   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696064   +   end;
MPRINT(EM_DIAGRAM):   end;
1696065   +end;
MPRINT(EM_DIAGRAM):   end;
1696066   +
1696067   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1696068   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1696069   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1696070   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1696071   +   goto REG8DR1;
MPRINT(EM_DIAGRAM):   goto REG8DR1;
1696072   +end;
MPRINT(EM_DIAGRAM):   end;
1696073   +
1696074   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1696075   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1696076   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1696077   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1696078   +
1696079   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1696080   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1696081   +_LP0 = _LP0 + (    1.25564379942555 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.25564379942555 * _TEMP);
1696082   +
1696083   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1696084   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1696085   +_LP0 = _LP0 + (   -0.13843763252919 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13843763252919 * _TEMP);
1696086   +
1696087   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1696088   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1696089   +_LP0 = _LP0 + (     0.3450416036947) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3450416036947) * _TEMP * _1_0;
1696090   +_LP0 = _LP0 + (    0.07017894213738) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07017894213738) * _TEMP * _1_1;
1696091   +
1696092   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1696093   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1696094   +_LP0 = _LP0 + (   -0.00001593150299 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001593150299 * _TEMP);
1696095   +
1696096   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1696097   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1696098   +_LP0 = _LP0 + (   -0.00413312986127 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00413312986127 * _TEMP);
1696099   +
1696100   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1696101   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1696102   +_LP0 = _LP0 + (    0.00530471713016 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00530471713016 * _TEMP);
1696103   +
1696104   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1696105   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1696106   +_LP0 = _LP0 + (    0.00672044183978 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00672044183978 * _TEMP);
1696107   +
1696108   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1696109   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1696110   +_LP0 = _LP0 + (    0.00218768007222 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00218768007222 * _TEMP);
1696111   +
1696112   +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
1696113   +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
1696114   +_LP0 = _LP0 + (    0.29153437702669 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29153437702669 * _TEMP);
1696115   +
1696116   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1696117   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1696118   +_LP0 = _LP0 + (    0.00010476102078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00010476102078 * _TEMP);
1696119   +
1696120   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1696121   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1696122   +_LP0 = _LP0 + (    0.01569818995068 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01569818995068 * _TEMP);
1696123   +
1696124   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1696125   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1696126   +_LP0 = _LP0 + (   -0.03379881900362 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03379881900362 * _TEMP);
1696127   +
1696128   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1696129   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1696130   +_P0 = probnorm((    0.03244157586194) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( 0.03244157586194) + _LP0);
1696131   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1696132   +
1696133   +REG8DR1:
1696134   +
1696135   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG8DR1: *** Residuals;
1696136   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1696137   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1696138   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1696139   +end;
MPRINT(EM_DIAGRAM):   end;
1696140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696141   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1696142   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1696143   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1696144   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1696145   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1696146   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1696147   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1696148   +   end;
MPRINT(EM_DIAGRAM):   end;
1696149   +end;
MPRINT(EM_DIAGRAM):   end;
1696150   +
1696151   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1696152   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1696153   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1696154   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1696155   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1696156   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1696157   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1696158   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1696159   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1696160   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1696161   +end;
MPRINT(EM_DIAGRAM):   end;
1696162   +I_DepVar = REG8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG8DRF[_IY];
1696163   +U_DepVar = REG8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG8DRU[_IY];
1696164   +
1696165   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1696166   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1696167   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1696168   +* Renaming variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg8;
1696169   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696170   +* Renaming Posterior variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg8;
1696171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696172   +drop Reg8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar1;
1696173   +Reg8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar1 = P_DepVar1;
1696174   +drop Reg8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar0;
1696175   +Reg8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar0 = P_DepVar0;
1696176   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696177   +* Renaming _WARN_ variable for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg8;
1696178   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696179   +length Reg8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg8_WARN_ $4;
1696180   +drop Reg8_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg8_WARN_;
1696181   +Reg8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg8_WARN_ = _WARN_;
1696182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696183   +* Ensmbl4: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 2 of 10;
1696184   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696185   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696186   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1696187   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1696188   +* NODE: Reg4;
MPRINT(EM_DIAGRAM):   * NODE: Reg4;
1696189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696190   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1696191   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1696192   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1696193   +
1696194   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1696195   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1696196   +
1696197   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1696198   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1696199   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1696200   +array REG4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG4DRF [2] $12 _temporary_ ('1' '0' );
1696201   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1696202   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1696203   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1696204   +ARRAY REG4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG4DRU[2] _TEMPORARY_ (1 0);
1696205   +
1696206   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1696207   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1696208   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1696209   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1696210   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1696211   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696212   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1696213   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1696214   +end;
MPRINT(EM_DIAGRAM):   end;
1696215   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696216   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1696217   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1696218   +   end;
MPRINT(EM_DIAGRAM):   end;
1696219   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1696220   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1696221   +   end;
MPRINT(EM_DIAGRAM):   end;
1696222   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696223   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1696224   +   end;
MPRINT(EM_DIAGRAM):   end;
1696225   +end;
MPRINT(EM_DIAGRAM):   end;
1696226   +
1696227   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1696228   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1696229   +
1696230   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1696231   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1696232   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696233   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696234   +end;
MPRINT(EM_DIAGRAM):   end;
1696235   +
1696236   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1696237   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1696238   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696239   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696240   +end;
MPRINT(EM_DIAGRAM):   end;
1696241   +
1696242   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1696243   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1696244   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696245   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696246   +end;
MPRINT(EM_DIAGRAM):   end;
1696247   +
1696248   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1696249   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1696250   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696251   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696252   +end;
MPRINT(EM_DIAGRAM):   end;
1696253   +
1696254   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1696255   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1696256   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696257   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696258   +end;
MPRINT(EM_DIAGRAM):   end;
1696259   +
1696260   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1696261   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1696262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696264   +end;
MPRINT(EM_DIAGRAM):   end;
1696265   +
1696266   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1696267   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1696268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696270   +end;
MPRINT(EM_DIAGRAM):   end;
1696271   +
1696272   +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
1696273   +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
1696274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696276   +end;
MPRINT(EM_DIAGRAM):   end;
1696277   +
1696278   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1696279   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1696280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696282   +end;
MPRINT(EM_DIAGRAM):   end;
1696283   +
1696284   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1696285   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1696286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696288   +end;
MPRINT(EM_DIAGRAM):   end;
1696289   +
1696290   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1696291   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1696292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696294   +end;
MPRINT(EM_DIAGRAM):   end;
1696295   +
1696296   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1696297   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1696298   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1696299   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1696300   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1696301   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696302   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696303   +end;
MPRINT(EM_DIAGRAM):   end;
1696304   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696305   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696306   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1696307   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696308   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1696309   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1696310   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1696311   +   end;
MPRINT(EM_DIAGRAM):   end;
1696312   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1696313   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1696314   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1696315   +   end;
MPRINT(EM_DIAGRAM):   end;
1696316   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696317   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1696318   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1696319   +   end;
MPRINT(EM_DIAGRAM):   end;
1696320   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696321   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1696322   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1696323   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696324   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696325   +   end;
MPRINT(EM_DIAGRAM):   end;
1696326   +end;
MPRINT(EM_DIAGRAM):   end;
1696327   +
1696328   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1696329   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1696330   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1696331   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1696332   +   goto REG4DR1;
MPRINT(EM_DIAGRAM):   goto REG4DR1;
1696333   +end;
MPRINT(EM_DIAGRAM):   end;
1696334   +
1696335   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1696336   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1696337   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1696338   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1696339   +
1696340   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1696341   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1696342   +_LP0 = _LP0 + (     2.3101146636742 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.3101146636742 * _TEMP);
1696343   +
1696344   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1696345   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1696346   +_LP0 = _LP0 + (   -0.24397863929446 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.24397863929446 * _TEMP);
1696347   +
1696348   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1696349   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1696350   +_LP0 = _LP0 + (    0.62662142005613) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62662142005613) * _TEMP * _1_0;
1696351   +_LP0 = _LP0 + (    0.16948281370783) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16948281370783) * _TEMP * _1_1;
1696352   +
1696353   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1696354   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1696355   +_LP0 = _LP0 + (   -0.00002912500869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00002912500869 * _TEMP);
1696356   +
1696357   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1696358   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1696359   +_LP0 = _LP0 + (   -0.00725366255775 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00725366255775 * _TEMP);
1696360   +
1696361   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1696362   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1696363   +_LP0 = _LP0 + (    0.00966782899986 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00966782899986 * _TEMP);
1696364   +
1696365   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1696366   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1696367   +_LP0 = _LP0 + (    0.01188232167165 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01188232167165 * _TEMP);
1696368   +
1696369   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1696370   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1696371   +_LP0 = _LP0 + (      0.003639907135 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.003639907135 * _TEMP);
1696372   +
1696373   +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
1696374   +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
1696375   +_LP0 = _LP0 + (    0.52674791091038 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.52674791091038 * _TEMP);
1696376   +
1696377   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1696378   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1696379   +_LP0 = _LP0 + (      0.000175187797 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.000175187797 * _TEMP);
1696380   +
1696381   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1696382   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1696383   +_LP0 = _LP0 + (    0.02790898517022 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02790898517022 * _TEMP);
1696384   +
1696385   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1696386   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1696387   +_LP0 = _LP0 + (   -0.06390893610641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06390893610641 * _TEMP);
1696388   +
1696389   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1696390   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1696391   +_TEMP =     0.12264575618785 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.12264575618785 + _LP0;
1696392   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1696393   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1696394   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1696395   +end;
MPRINT(EM_DIAGRAM):   end;
1696396   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1696397   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1696398   +
1696399   +REG4DR1:
1696400   +
1696401   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG4DR1: *** Residuals;
1696402   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1696403   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1696404   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1696405   +end;
MPRINT(EM_DIAGRAM):   end;
1696406   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696407   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1696408   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1696409   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1696410   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1696411   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1696412   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1696413   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1696414   +   end;
MPRINT(EM_DIAGRAM):   end;
1696415   +end;
MPRINT(EM_DIAGRAM):   end;
1696416   +
1696417   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1696418   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1696419   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1696420   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1696421   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1696422   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1696423   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1696424   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1696425   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1696426   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1696427   +end;
MPRINT(EM_DIAGRAM):   end;
1696428   +I_DepVar = REG4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG4DRF[_IY];
1696429   +U_DepVar = REG4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG4DRU[_IY];
1696430   +
1696431   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1696432   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1696433   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1696434   +* Renaming variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg4;
1696435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696436   +* Renaming Posterior variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg4;
1696437   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696438   +drop Reg4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar1;
1696439   +Reg4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar1 = P_DepVar1;
1696440   +drop Reg4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar0;
1696441   +Reg4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar0 = P_DepVar0;
1696442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696443   +* Renaming _WARN_ variable for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg4;
1696444   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696445   +length Reg4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg4_WARN_ $4;
1696446   +drop Reg4_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg4_WARN_;
1696447   +Reg4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg4_WARN_ = _WARN_;
1696448   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696449   +* Ensmbl4: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 3 of 10;
1696450   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696451   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696452   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1696453   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1696454   +* NODE: Tree4;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
1696455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696456   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1696457   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1696458   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1696459   +
1696460   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1696461   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1696462   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1696463   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1696464   +
1696465   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1696466   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1696467   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1696468   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1696469   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1696470   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1696471   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1696472   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1696473   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1696474   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1696475   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1696476   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1696477   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1696478   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1696479   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1696480   +
1696481   +
1696482   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1696483   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1696484   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1696485   +
1696486   +
1696487   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1696488   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1696489   +
1696490   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1696491   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1696492   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1696493   +  IF  NOT MISSING(Recency ) AND
1696494   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1696495   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1696496   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1696497   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1696498   +      _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1696499   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1696500   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1696501   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1696502   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1696503   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1696504   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1696505   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696506   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696507   +      END;
MPRINT(EM_DIAGRAM):   END;
1696508   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696509   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1696510   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1696511   +      IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1696512   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1696513   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1696514   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1696515   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1696516   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1696517   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1696518   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1696519   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1696520   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696521   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696522   +        END;
MPRINT(EM_DIAGRAM):   END;
1696523   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696524   +        IF  NOT MISSING(MntWines ) AND
1696525   +          MntWines  <                  169 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 169 THEN DO;
1696526   +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
1696527   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1696528   +          P_DepVar0  =     0.24137931034482;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.24137931034482;
1696529   +          P_DepVar1  =     0.75862068965517;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75862068965517;
1696530   +          Q_DepVar0  =     0.24137931034482;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.24137931034482;
1696531   +          Q_DepVar1  =     0.75862068965517;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75862068965517;
1696532   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1696533   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1696534   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696535   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696536   +          END;
MPRINT(EM_DIAGRAM):   END;
1696537   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696538   +          IF  NOT MISSING(RFMstat ) AND
1696539   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1696540   +            _NODE_  =                   55;
MPRINT(EM_DIAGRAM):   _NODE_ = 55;
1696541   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1696542   +            P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
1696543   +            P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
1696544   +            Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
1696545   +            Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
1696546   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1696547   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1696548   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696549   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696550   +            END;
MPRINT(EM_DIAGRAM):   END;
1696551   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696552   +            _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
1696553   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1696554   +            P_DepVar0  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84615384615384;
1696555   +            P_DepVar1  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15384615384615;
1696556   +            Q_DepVar0  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84615384615384;
1696557   +            Q_DepVar1  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15384615384615;
1696558   +            V_DepVar0  =     0.67857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.67857142857142;
1696559   +            V_DepVar1  =     0.32142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.32142857142857;
1696560   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1696561   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696562   +            END;
MPRINT(EM_DIAGRAM):   END;
1696563   +          END;
MPRINT(EM_DIAGRAM):   END;
1696564   +        END;
MPRINT(EM_DIAGRAM):   END;
1696565   +      END;
MPRINT(EM_DIAGRAM):   END;
1696566   +    END;
MPRINT(EM_DIAGRAM):   END;
1696567   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696568   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1696569   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1696570   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1696571   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1696572   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1696573   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1696574   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1696575   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1696576   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1696577   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1696578   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696579   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696580   +      END;
MPRINT(EM_DIAGRAM):   END;
1696581   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696582   +      IF  NOT MISSING(MntMeatProducts ) AND
1696583   +                         598 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 598 <= MntMeatProducts THEN DO;
1696584   +        _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1696585   +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1696586   +        IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1696587   +          _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
1696588   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1696589   +          P_DepVar0  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15384615384615;
1696590   +          P_DepVar1  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84615384615384;
1696591   +          Q_DepVar0  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15384615384615;
1696592   +          Q_DepVar1  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84615384615384;
1696593   +          V_DepVar0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4;
1696594   +          V_DepVar1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.6;
1696595   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696596   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696597   +          END;
MPRINT(EM_DIAGRAM):   END;
1696598   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696599   +          _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
1696600   +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1696601   +          P_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.76;
1696602   +          P_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.24;
1696603   +          Q_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.76;
1696604   +          Q_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.24;
1696605   +          V_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.83333333333333;
1696606   +          V_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.16666666666666;
1696607   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1696608   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696609   +          END;
MPRINT(EM_DIAGRAM):   END;
1696610   +        END;
MPRINT(EM_DIAGRAM):   END;
1696611   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696612   +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
1696613   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1696614   +        P_DepVar0  =     0.86831275720164;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86831275720164;
1696615   +        P_DepVar1  =     0.13168724279835;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13168724279835;
1696616   +        Q_DepVar0  =     0.86831275720164;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.86831275720164;
1696617   +        Q_DepVar1  =     0.13168724279835;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.13168724279835;
1696618   +        V_DepVar0  =     0.85576923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.85576923076923;
1696619   +        V_DepVar1  =     0.14423076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.14423076923076;
1696620   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1696621   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696622   +        END;
MPRINT(EM_DIAGRAM):   END;
1696623   +      END;
MPRINT(EM_DIAGRAM):   END;
1696624   +    END;
MPRINT(EM_DIAGRAM):   END;
1696625   +  END;
MPRINT(EM_DIAGRAM):   END;
1696626   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696627   +  IF  NOT MISSING(Recency ) AND
1696628   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1696629   +    IF  NOT MISSING(MntMeatProducts ) AND
1696630   +                       431 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431 <= MntMeatProducts THEN DO;
1696631   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1696632   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1696633   +      IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1696634   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
1696635   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1696636   +        P_DepVar0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.65853658536585;
1696637   +        P_DepVar1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.34146341463414;
1696638   +        Q_DepVar0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.65853658536585;
1696639   +        Q_DepVar1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.34146341463414;
1696640   +        V_DepVar0  =               0.6875;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6875;
1696641   +        V_DepVar1  =               0.3125;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3125;
1696642   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1696643   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696644   +        END;
MPRINT(EM_DIAGRAM):   END;
1696645   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696646   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1696647   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1696648   +        P_DepVar0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05555555555555;
1696649   +        P_DepVar1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94444444444444;
1696650   +        Q_DepVar0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05555555555555;
1696651   +        Q_DepVar1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94444444444444;
1696652   +        V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1696653   +        V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1696654   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1696655   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1696656   +        END;
MPRINT(EM_DIAGRAM):   END;
1696657   +      END;
MPRINT(EM_DIAGRAM):   END;
1696658   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696659   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1696660   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1696661   +      P_DepVar0  =     0.84257602862254;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84257602862254;
1696662   +      P_DepVar1  =     0.15742397137745;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15742397137745;
1696663   +      Q_DepVar0  =     0.84257602862254;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84257602862254;
1696664   +      Q_DepVar1  =     0.15742397137745;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15742397137745;
1696665   +      V_DepVar0  =               0.8125;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8125;
1696666   +      V_DepVar1  =               0.1875;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.1875;
1696667   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1696668   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696669   +      END;
MPRINT(EM_DIAGRAM):   END;
1696670   +    END;
MPRINT(EM_DIAGRAM):   END;
1696671   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696672   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1696673   +    _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1696674   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1696675   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1696676   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1696677   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1696678   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1696679   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1696680   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1696681   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1696682   +    END;
MPRINT(EM_DIAGRAM):   END;
1696683   +  END;
MPRINT(EM_DIAGRAM):   END;
1696684   +
1696685   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1696686   +IF  F_DepVar  NE '0'
1696687   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1696688   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1696689   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1696690   + END;
MPRINT(EM_DIAGRAM):   END;
1696691   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696692   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1696693   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1696694   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1696695   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1696696   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1696697   +       END;
MPRINT(EM_DIAGRAM):   END;
1696698   + END;
MPRINT(EM_DIAGRAM):   END;
1696699   +
1696700   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1696701   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1696702   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1696703   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1696704   +* Renaming variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree4;
1696705   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696706   +* Renaming Posterior variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree4;
1696707   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696708   +drop Tree4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar1;
1696709   +Tree4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar1 = P_DepVar1;
1696710   +drop Tree4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar0;
1696711   +Tree4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar0 = P_DepVar0;
1696712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696713   +* Renaming _WARN_ variable for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree4;
1696714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696715   +length Tree4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree4_WARN_ $4;
1696716   +drop Tree4_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree4_WARN_;
1696717   +Tree4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree4_WARN_ = _WARN_;
1696718   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696719   +* Ensmbl4: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 4 of 10;
1696720   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696722   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1696723   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1696724   +* NODE: Neural8;
MPRINT(EM_DIAGRAM):   * NODE: Neural8;
1696725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1696726   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1696727   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1696728   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1696729   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1696730   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1696731   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1696732   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1696733   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1696734   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1696735   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1696736   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1696737   +LENGTH _WARN_ $4
1696738   +      F_DepVar  $ 12
1696739   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1696740   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1696741   +
1696742   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1696743   +
1696744   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1696745   +
1696746   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1696747   +
1696748   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1696749   +
1696750   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1696751   +
1696752   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1696753   +
1696754   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1696755   +
1696756   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1696757   +
1696758   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1696759   +
1696760   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1696761   +
1696762   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1696763   +
1696764   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1696765   +
1696766   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1696767   +
1696768   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1696769   +
1696770   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1696771   +
1696772   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1696773   +
1696774   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1696775   +
1696776   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1696777   +
1696778   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1696779   +
1696780   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1696781   +
1696782   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1696783   +
1696784   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1696785   +
1696786   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1696787   +
1696788   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1696789   +
1696790   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1696791   +
1696792   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1696793   +
1696794   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1696795   +
1696796   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1696797   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1696798   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1696799   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1696800   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1696801   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1696802   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696803   +end;
MPRINT(EM_DIAGRAM):   end;
1696804   +else do;
MPRINT(EM_DIAGRAM):   else do;
1696805   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1696806   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1696807   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1696808   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1696809   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1696810   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1696811   +   end;
MPRINT(EM_DIAGRAM):   end;
1696812   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1696813   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1696814   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1696815   +   end;
MPRINT(EM_DIAGRAM):   end;
1696816   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1696817   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1696818   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1696819   +   end;
MPRINT(EM_DIAGRAM):   end;
1696820   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1696821   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1696822   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1696823   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1696824   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696825   +   end;
MPRINT(EM_DIAGRAM):   end;
1696826   +end;
MPRINT(EM_DIAGRAM):   end;
1696827   +
1696828   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696829   +*** Checking missing input Interval
1696830   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1696831   +
1696832   +IF NMISS(
1696833   +   AcceptedCmpTotal ,
1696834   +   Frq ,
1696835   +   Income ,
1696836   +   Mnt ,
1696837   +   MntGoldProds ,
1696838   +   MntMeatProducts ,
1696839   +   MntWines ,
1696840   +   NumDistPurchases ,
1696841   +   RFMstat ,
1696842   +   RMntFrq ,
1696843   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1696844   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1696845   +
1696846   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1696847   +END;
MPRINT(EM_DIAGRAM):   END;
1696848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696849   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1696850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696851   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696852   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1696853   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1696854   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1696855   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1696856   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1696857   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1696858   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1696859   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1696860   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1696861   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1696862   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1696863   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1696864   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1696865   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1696866   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1696867   +END;
MPRINT(EM_DIAGRAM):   END;
1696868   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696869   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1696870   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1696871   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1696872   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1696873   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1696874   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1696875   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1696876   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1696877   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1696878   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1696879   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1696880   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1696881   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1696882   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1696883   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1696884   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1696885   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1696886   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1696887   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1696888   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1696889   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1696890   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1696891   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1696892   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1696893   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1696894   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1696895   +END;
MPRINT(EM_DIAGRAM):   END;
1696896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696897   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1696898   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696899   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696900   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1696901   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696902   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1696903   +   H11  =     0.33294813803267 * S_AcceptedCmpTotal  +    -1.24039573879629 *
1696904   +        S_Frq  +    -0.05312453396461 * S_Income  +    -1.10582794272994 *
1696905   +        S_Mnt  +    -0.07760643003938 * S_MntGoldProds
1696906   +          +     1.40615546889198 * S_MntMeatProducts
1696907   +          +    -0.07607000653866 * S_MntWines  +      1.3974050378538 *
1696908   +        S_NumDistPurchases  +     0.21523028866532 * S_RFMstat
1696909   +          +    -0.90250971189164 * S_RMntFrq  +    -0.29921926423225 *
1696910   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.33294813803267 * S_AcceptedCmpTotal + -1.24039573879629 * S_Frq
+ -0.05312453396461 * S_Income + -1.10582794272994 * S_Mnt + -0.07760643003938 *
S_MntGoldProds + 1.40615546889198 * S_MntMeatProducts + -0.07607000653866 * S_MntWines +
1.3974050378538 * S_NumDistPurchases + 0.21523028866532 * S_RFMstat + -0.90250971189164 *
S_RMntFrq + -0.29921926423225 * S_Recency ;
1696911   +   H12  =    -0.12895365437344 * S_AcceptedCmpTotal  +     -1.3313949600547 *
1696912   +        S_Frq  +    -1.37899106632441 * S_Income  +    -0.58761109294666 *
1696913   +        S_Mnt  +     0.35202206207132 * S_MntGoldProds
1696914   +          +     0.09184646817235 * S_MntMeatProducts
1696915   +          +     0.13335664554613 * S_MntWines  +     0.61353674232736 *
1696916   +        S_NumDistPurchases  +     0.35066529273924 * S_RFMstat
1696917   +          +     0.65664535290196 * S_RMntFrq  +    -0.18186117718946 *
1696918   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12895365437344 * S_AcceptedCmpTotal + -1.3313949600547 * S_Frq
+ -1.37899106632441 * S_Income + -0.58761109294666 * S_Mnt + 0.35202206207132 * S_MntGoldProds
+ 0.09184646817235 * S_MntMeatProducts + 0.13335664554613 * S_MntWines + 0.61353674232736 *
S_NumDistPurchases + 0.35066529273924 * S_RFMstat + 0.65664535290196 * S_RMntFrq +
-0.18186117718946 * S_Recency ;
1696919   +   H13  =     0.37357969261544 * S_AcceptedCmpTotal  +     0.39633284030412 *
1696920   +        S_Frq  +     0.64644973118257 * S_Income  +    -0.00934866805665 *
1696921   +        S_Mnt  +     0.34942371005238 * S_MntGoldProds
1696922   +          +     0.39891627134773 * S_MntMeatProducts
1696923   +          +    -0.03684678353498 * S_MntWines  +     1.02433172338367 *
1696924   +        S_NumDistPurchases  +     0.20910974889856 * S_RFMstat
1696925   +          +     0.07904474603466 * S_RMntFrq  +    -0.30357080495082 *
1696926   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.37357969261544 * S_AcceptedCmpTotal + 0.39633284030412 * S_Frq +
0.64644973118257 * S_Income + -0.00934866805665 * S_Mnt + 0.34942371005238 * S_MntGoldProds +
0.39891627134773 * S_MntMeatProducts + -0.03684678353498 * S_MntWines + 1.02433172338367 *
S_NumDistPurchases + 0.20910974889856 * S_RFMstat + 0.07904474603466 * S_RMntFrq +
-0.30357080495082 * S_Recency ;
1696927   +   H14  =     0.13554328647808 * S_AcceptedCmpTotal  +    -0.07048372524888 *
1696928   +        S_Frq  +     0.04610079419509 * S_Income  +     0.10924113857251 *
1696929   +        S_Mnt  +     0.12915488369242 * S_MntGoldProds
1696930   +          +     0.18610321199349 * S_MntMeatProducts
1696931   +          +     0.70556343816133 * S_MntWines  +     0.25728143320607 *
1696932   +        S_NumDistPurchases  +     0.15972524961567 * S_RFMstat
1696933   +          +     0.01276365258392 * S_RMntFrq  +    -0.66413982659745 *
1696934   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.13554328647808 * S_AcceptedCmpTotal + -0.07048372524888 * S_Frq
+ 0.04610079419509 * S_Income + 0.10924113857251 * S_Mnt + 0.12915488369242 * S_MntGoldProds +
0.18610321199349 * S_MntMeatProducts + 0.70556343816133 * S_MntWines + 0.25728143320607 *
S_NumDistPurchases + 0.15972524961567 * S_RFMstat + 0.01276365258392 * S_RMntFrq +
-0.66413982659745 * S_Recency ;
1696935   +   H15  =     -1.1420503402904 * S_AcceptedCmpTotal  +     0.71380555863062 *
1696936   +        S_Frq  +    -0.24803616582173 * S_Income  +     0.13154058420998 *
1696937   +        S_Mnt  +    -0.42749671288369 * S_MntGoldProds
1696938   +          +     -1.3154288229161 * S_MntMeatProducts
1696939   +          +      -0.255711705654 * S_MntWines  +     0.11914899881729 *
1696940   +        S_NumDistPurchases  +    -0.05982295822576 * S_RFMstat
1696941   +          +    -0.69679195615668 * S_RMntFrq  +    -0.21391830972623 *
1696942   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -1.1420503402904 * S_AcceptedCmpTotal + 0.71380555863062 * S_Frq +
-0.24803616582173 * S_Income + 0.13154058420998 * S_Mnt + -0.42749671288369 * S_MntGoldProds +
-1.3154288229161 * S_MntMeatProducts + -0.255711705654 * S_MntWines + 0.11914899881729 *
S_NumDistPurchases + -0.05982295822576 * S_RFMstat + -0.69679195615668 * S_RMntFrq +
-0.21391830972623 * S_Recency ;
1696943   +   H16  =     0.00981250946025 * S_AcceptedCmpTotal  +     0.04123504196179 *
1696944   +        S_Frq  +     0.12222635666431 * S_Income  +     0.29796072335771 *
1696945   +        S_Mnt  +     0.22410489312536 * S_MntGoldProds
1696946   +          +    -1.05184346257138 * S_MntMeatProducts
1696947   +          +     0.19959913357382 * S_MntWines  +    -0.69776033144787 *
1696948   +        S_NumDistPurchases  +    -0.40844675601616 * S_RFMstat
1696949   +          +    -0.86567751620087 * S_RMntFrq  +       0.363703677148 *
1696950   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.00981250946025 * S_AcceptedCmpTotal + 0.04123504196179 * S_Frq +
0.12222635666431 * S_Income + 0.29796072335771 * S_Mnt + 0.22410489312536 * S_MntGoldProds +
-1.05184346257138 * S_MntMeatProducts + 0.19959913357382 * S_MntWines + -0.69776033144787 *
S_NumDistPurchases + -0.40844675601616 * S_RFMstat + -0.86567751620087 * S_RMntFrq +
0.363703677148 * S_Recency ;
1696951   +   H17  =     0.94478838355387 * S_AcceptedCmpTotal  +    -0.70060201854486 *
1696952   +        S_Frq  +     -0.1828959052644 * S_Income  +    -0.69020858610444 *
1696953   +        S_Mnt  +    -0.10810625538739 * S_MntGoldProds
1696954   +          +     0.08623383006102 * S_MntMeatProducts
1696955   +          +    -0.10662594781542 * S_MntWines  +     0.49956982718189 *
1696956   +        S_NumDistPurchases  +    -0.52485639325545 * S_RFMstat
1696957   +          +    -0.21634639560711 * S_RMntFrq  +    -1.54075315391445 *
1696958   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = 0.94478838355387 * S_AcceptedCmpTotal + -0.70060201854486 * S_Frq
+ -0.1828959052644 * S_Income + -0.69020858610444 * S_Mnt + -0.10810625538739 * S_MntGoldProds
+ 0.08623383006102 * S_MntMeatProducts + -0.10662594781542 * S_MntWines + 0.49956982718189 *
S_NumDistPurchases + -0.52485639325545 * S_RFMstat + -0.21634639560711 * S_RMntFrq +
-1.54075315391445 * S_Recency ;
1696959   +   H11  = H11  +     0.16164655653565 * G_Marital_Status0
1696960   +          +     0.08705670063172 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16164655653565 * G_Marital_Status0 + 0.08705670063172 *
G_Marital_Status1 ;
1696961   +   H12  = H12  +     0.00173619463191 * G_Marital_Status0
1696962   +          +    -0.01602297769528 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00173619463191 * G_Marital_Status0 + -0.01602297769528 *
G_Marital_Status1 ;
1696963   +   H13  = H13  +    -0.20647507845797 * G_Marital_Status0
1696964   +          +    -0.14268881423356 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.20647507845797 * G_Marital_Status0 + -0.14268881423356 *
G_Marital_Status1 ;
1696965   +   H14  = H14  +     0.66515401547718 * G_Marital_Status0
1696966   +          +     0.13894686879381 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.66515401547718 * G_Marital_Status0 + 0.13894686879381 *
G_Marital_Status1 ;
1696967   +   H15  = H15  +    -0.10602970955306 * G_Marital_Status0
1696968   +          +     0.12966863964317 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.10602970955306 * G_Marital_Status0 + 0.12966863964317 *
G_Marital_Status1 ;
1696969   +   H16  = H16  +     0.25775977539205 * G_Marital_Status0
1696970   +          +     0.20902791963936 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.25775977539205 * G_Marital_Status0 + 0.20902791963936 *
G_Marital_Status1 ;
1696971   +   H17  = H17  +     0.54268893569335 * G_Marital_Status0
1696972   +          +     0.63641124967593 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.54268893569335 * G_Marital_Status0 + 0.63641124967593 *
G_Marital_Status1 ;
1696973   +   H11  =    -0.89307077259606 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.89307077259606 + H11 ;
1696974   +   H12  =    -0.52976269769549 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.52976269769549 + H12 ;
1696975   +   H13  =     1.93938724237609 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.93938724237609 + H13 ;
1696976   +   H14  =    -2.08624954900209 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.08624954900209 + H14 ;
1696977   +   H15  =     1.21926205411217 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.21926205411217 + H15 ;
1696978   +   H16  =    -0.82614580546756 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.82614580546756 + H16 ;
1696979   +   H17  =     0.88553151374376 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.88553151374376 + H17 ;
1696980   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1696981   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1696982   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1696983   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1696984   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1696985   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1696986   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1696987   +END;
MPRINT(EM_DIAGRAM):   END;
1696988   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1696989   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1696990   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1696991   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1696992   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1696993   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1696994   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1696995   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1696996   +END;
MPRINT(EM_DIAGRAM):   END;
1696997   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1696998   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1696999   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697000   +
1697001   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1697002   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1697003   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1697004   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1697005   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1697006   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697007   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1697008   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1697009   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1697010   +end;
MPRINT(EM_DIAGRAM):   end;
1697011   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697012   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1697013   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1697014   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1697015   +   end;
MPRINT(EM_DIAGRAM):   end;
1697016   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1697017   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1697018   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1697019   +   end;
MPRINT(EM_DIAGRAM):   end;
1697020   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697021   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1697022   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1697023   +   end;
MPRINT(EM_DIAGRAM):   end;
1697024   +end;
MPRINT(EM_DIAGRAM):   end;
1697025   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697026   +   P_DepVar1  =     2.95606472513759 * H11  +     1.89470964296724 * H12
1697027   +          +     1.54768089051578 * H13  +     1.66736822539449 * H14
1697028   +          +    -1.78269941197359 * H15  +    -1.37291423165719 * H16
1697029   +          +      2.0599951000352 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.95606472513759 * H11 + 1.89470964296724 * H12 +
1.54768089051578 * H13 + 1.66736822539449 * H14 + -1.78269941197359 * H15 + -1.37291423165719
* H16 + 2.0599951000352 * H17 ;
1697030   +   P_DepVar1  =    -1.26664447892937 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.26664447892937 + P_DepVar1 ;
1697031   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1697032   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1697033   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1697034   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1697035   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1697036   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1697037   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1697038   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1697039   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1697040   +END;
MPRINT(EM_DIAGRAM):   END;
1697041   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697042   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1697043   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1697044   +END;
MPRINT(EM_DIAGRAM):   END;
1697045   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1697046   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1697047   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1697048   +END;
MPRINT(EM_DIAGRAM):   END;
1697049   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1697050   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1697051   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1697052   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1697053   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1697054   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1697055   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1697056   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697057   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1697058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697059   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1697060   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1697061   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1697062   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1697063   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1697064   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1697065   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1697066   +END;
MPRINT(EM_DIAGRAM):   END;
1697067   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697068   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1697069   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697070   +drop
1697071   +H11
1697072   +H12
1697073   +H13
1697074   +H14
1697075   +H15
1697076   +H16
1697077   +H17
1697078   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1697079   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1697080   +* Renaming variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural8;
1697081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697082   +* Renaming Posterior variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural8;
1697083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697084   +drop Neural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar1;
1697085   +Neural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar1 = P_DepVar1;
1697086   +drop Neural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar0;
1697087   +Neural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar0 = P_DepVar0;
1697088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697089   +* Renaming _WARN_ variable for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural8;
1697090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697091   +length Neural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural8_WARN_ $4;
1697092   +drop Neural8_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural8_WARN_;
1697093   +Neural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural8_WARN_ = _WARN_;
1697094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697095   +* Ensmbl4: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 5 of 10;
1697096   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697097   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697098   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1697099   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1697100   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
1697101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697102   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697103   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1697104   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697105   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1697106   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1697107   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1697108   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1697109   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1697110   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1697111   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1697112   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1697113   +LENGTH _WARN_ $4
1697114   +      F_DepVar  $ 12
1697115   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1697116   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1697117   +
1697118   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1697119   +
1697120   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1697121   +
1697122   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1697123   +
1697124   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1697125   +
1697126   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1697127   +
1697128   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1697129   +
1697130   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1697131   +
1697132   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1697133   +
1697134   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1697135   +
1697136   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1697137   +
1697138   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1697139   +
1697140   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1697141   +
1697142   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1697143   +
1697144   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1697145   +
1697146   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1697147   +
1697148   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1697149   +
1697150   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1697151   +
1697152   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1697153   +
1697154   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1697155   +
1697156   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1697157   +
1697158   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1697159   +
1697160   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1697161   +
1697162   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1697163   +
1697164   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1697165   +
1697166   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1697167   +
1697168   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1697169   +
1697170   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1697171   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1697172   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1697173   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1697174   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1697175   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697176   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697177   +end;
MPRINT(EM_DIAGRAM):   end;
1697178   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697179   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697180   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1697181   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697182   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1697183   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1697184   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1697185   +   end;
MPRINT(EM_DIAGRAM):   end;
1697186   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1697187   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1697188   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1697189   +   end;
MPRINT(EM_DIAGRAM):   end;
1697190   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697191   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1697192   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1697193   +   end;
MPRINT(EM_DIAGRAM):   end;
1697194   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697195   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1697196   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1697197   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697198   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697199   +   end;
MPRINT(EM_DIAGRAM):   end;
1697200   +end;
MPRINT(EM_DIAGRAM):   end;
1697201   +
1697202   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697203   +*** Checking missing input Interval
1697204   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1697205   +
1697206   +IF NMISS(
1697207   +   AcceptedCmpTotal ,
1697208   +   Frq ,
1697209   +   Income ,
1697210   +   Mnt ,
1697211   +   MntGoldProds ,
1697212   +   MntMeatProducts ,
1697213   +   MntWines ,
1697214   +   NumDistPurchases ,
1697215   +   RFMstat ,
1697216   +   RMntFrq ,
1697217   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1697218   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1697219   +
1697220   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697221   +END;
MPRINT(EM_DIAGRAM):   END;
1697222   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697223   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1697224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697225   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697226   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697227   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697228   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697229   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697230   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697231   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697232   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1697233   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697234   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697235   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697236   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697237   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697238   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697239   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697240   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697241   +END;
MPRINT(EM_DIAGRAM):   END;
1697242   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697243   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1697244   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697245   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697246   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1697247   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697248   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1697249   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697250   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1697251   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697252   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1697253   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697254   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1697255   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1697256   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697257   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697258   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1697259   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697260   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1697261   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697262   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697263   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1697264   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697265   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1697266   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697267   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1697268   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697269   +END;
MPRINT(EM_DIAGRAM):   END;
1697270   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697271   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1697272   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697274   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1697275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697277   +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
1697278   +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
1697279   +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
1697280   +          +    -0.05910355740416 * S_MntMeatProducts
1697281   +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
1697282   +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
1697283   +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
1697284   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 *
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq +
-1.02114645988925 * S_Recency ;
1697285   +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
1697286   +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
1697287   +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
1697288   +          +     0.09400377526937 * S_MntMeatProducts
1697289   +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
1697290   +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
1697291   +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
1697292   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 *
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq +
0.39055670382948 * S_Recency ;
1697293   +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
1697294   +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
1697295   +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
1697296   +          +    -1.62740823190029 * S_MntMeatProducts
1697297   +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
1697298   +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
1697299   +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
1697300   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds +
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 *
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq +
0.17699292292485 * S_Recency ;
1697301   +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
1697302   +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
1697303   +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
1697304   +          +      0.3965117290354 * S_MntMeatProducts
1697305   +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
1697306   +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
1697307   +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
1697308   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 *
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq +
-0.4091862538023 * S_Recency ;
1697309   +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
1697310   +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
1697311   +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
1697312   +          +     1.44231431118379 * S_MntMeatProducts
1697313   +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
1697314   +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
1697315   +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
1697316   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 *
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq +
-0.38411527089703 * S_Recency ;
1697317   +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
1697318   +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
1697319   +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
1697320   +          +    -0.44244305964257 * S_MntMeatProducts
1697321   +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
1697322   +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
1697323   +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
1697324   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 *
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines +
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 *
S_RMntFrq + -0.65176917675454 * S_Recency ;
1697325   +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
1697326   +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 *
G_Marital_Status1 ;
1697327   +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
1697328   +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 *
G_Marital_Status1 ;
1697329   +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
1697330   +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 *
G_Marital_Status1 ;
1697331   +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
1697332   +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 *
G_Marital_Status1 ;
1697333   +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
1697334   +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 *
G_Marital_Status1 ;
1697335   +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
1697336   +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 *
G_Marital_Status1 ;
1697337   +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
1697338   +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
1697339   +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
1697340   +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
1697341   +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
1697342   +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
1697343   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1697344   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1697345   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1697346   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1697347   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1697348   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1697349   +END;
MPRINT(EM_DIAGRAM):   END;
1697350   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697351   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1697352   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1697353   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1697354   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1697355   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1697356   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1697357   +END;
MPRINT(EM_DIAGRAM):   END;
1697358   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697359   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1697360   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697361   +
1697362   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1697363   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1697364   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1697365   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1697366   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1697367   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697368   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1697369   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1697370   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1697371   +end;
MPRINT(EM_DIAGRAM):   end;
1697372   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697373   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1697374   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1697375   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1697376   +   end;
MPRINT(EM_DIAGRAM):   end;
1697377   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1697378   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1697379   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1697380   +   end;
MPRINT(EM_DIAGRAM):   end;
1697381   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697382   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1697383   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1697384   +   end;
MPRINT(EM_DIAGRAM):   end;
1697385   +end;
MPRINT(EM_DIAGRAM):   end;
1697386   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697387   +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
1697388   +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
1697389   +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 +
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361
* H16 ;
1697390   +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
1697391   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1697392   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1697393   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1697394   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1697395   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1697396   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1697397   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1697398   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1697399   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1697400   +END;
MPRINT(EM_DIAGRAM):   END;
1697401   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697402   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1697403   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1697404   +END;
MPRINT(EM_DIAGRAM):   END;
1697405   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1697406   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1697407   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1697408   +END;
MPRINT(EM_DIAGRAM):   END;
1697409   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1697410   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1697411   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1697412   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1697413   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1697414   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1697415   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1697416   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697417   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1697418   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697419   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1697420   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1697421   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1697422   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1697423   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1697424   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1697425   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1697426   +END;
MPRINT(EM_DIAGRAM):   END;
1697427   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697428   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1697429   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697430   +drop
1697431   +H11
1697432   +H12
1697433   +H13
1697434   +H14
1697435   +H15
1697436   +H16
1697437   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1697438   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1697439   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
1697440   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697441   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
1697442   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697443   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
1697444   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
1697445   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
1697446   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
1697447   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697448   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
1697449   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697450   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
1697451   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
1697452   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
1697453   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697454   +* Ensmbl4: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 6 of 10;
1697455   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697456   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697457   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1697458   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1697459   +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
1697460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697461   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697462   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1697463   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697464   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1697465   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1697466   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1697467   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1697468   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1697469   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1697470   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1697471   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1697472   +LENGTH _WARN_ $4
1697473   +      F_DepVar  $ 12
1697474   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1697475   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1697476   +
1697477   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1697478   +
1697479   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1697480   +
1697481   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1697482   +
1697483   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1697484   +
1697485   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1697486   +
1697487   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1697488   +
1697489   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1697490   +
1697491   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1697492   +
1697493   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1697494   +
1697495   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1697496   +
1697497   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1697498   +
1697499   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1697500   +
1697501   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1697502   +
1697503   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1697504   +
1697505   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1697506   +
1697507   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1697508   +
1697509   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1697510   +
1697511   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1697512   +
1697513   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1697514   +
1697515   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1697516   +
1697517   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1697518   +
1697519   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1697520   +
1697521   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1697522   +
1697523   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1697524   +
1697525   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1697526   +
1697527   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1697528   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1697529   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1697530   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1697531   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1697532   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697534   +end;
MPRINT(EM_DIAGRAM):   end;
1697535   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697536   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697537   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1697538   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697539   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1697540   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1697541   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1697542   +   end;
MPRINT(EM_DIAGRAM):   end;
1697543   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1697544   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1697545   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1697546   +   end;
MPRINT(EM_DIAGRAM):   end;
1697547   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697548   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1697549   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1697550   +   end;
MPRINT(EM_DIAGRAM):   end;
1697551   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697552   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1697553   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1697554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697556   +   end;
MPRINT(EM_DIAGRAM):   end;
1697557   +end;
MPRINT(EM_DIAGRAM):   end;
1697558   +
1697559   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697560   +*** Checking missing input Interval
1697561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1697562   +
1697563   +IF NMISS(
1697564   +   AcceptedCmpTotal ,
1697565   +   Frq ,
1697566   +   Income ,
1697567   +   Mnt ,
1697568   +   MntGoldProds ,
1697569   +   MntMeatProducts ,
1697570   +   MntWines ,
1697571   +   NumDistPurchases ,
1697572   +   RFMstat ,
1697573   +   RMntFrq ,
1697574   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1697575   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1697576   +
1697577   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697578   +END;
MPRINT(EM_DIAGRAM):   END;
1697579   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697580   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1697581   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697582   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697583   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697584   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697585   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697586   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697587   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697588   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697589   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1697590   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697591   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697592   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697593   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697594   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697595   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697596   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697597   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697598   +END;
MPRINT(EM_DIAGRAM):   END;
1697599   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697600   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1697601   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697602   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697603   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1697604   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697605   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1697606   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697607   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1697608   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697609   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1697610   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697611   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1697612   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1697613   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697614   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697615   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1697616   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697617   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1697618   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697619   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697620   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1697621   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697622   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1697623   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697624   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1697625   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697626   +END;
MPRINT(EM_DIAGRAM):   END;
1697627   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697628   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1697629   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697630   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697631   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1697632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697633   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697634   +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
1697635   +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
1697636   +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
1697637   +          +      0.5764056033267 * S_MntMeatProducts
1697638   +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
1697639   +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
1697640   +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
1697641   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 *
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq +
-0.66847972845367 * S_Recency ;
1697642   +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
1697643   +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
1697644   +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
1697645   +          +      0.5452732097143 * S_MntMeatProducts
1697646   +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
1697647   +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
1697648   +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
1697649   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 *
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq +
-0.36679237964697 * S_Recency ;
1697650   +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
1697651   +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
1697652   +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
1697653   +          +     -0.9040019705776 * S_MntMeatProducts
1697654   +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
1697655   +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
1697656   +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
1697657   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 *
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq +
0.36876094021551 * S_Recency ;
1697658   +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
1697659   +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
1697660   +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
1697661   +          +     1.04227983605332 * S_MntMeatProducts
1697662   +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
1697663   +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
1697664   +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
1697665   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 *
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines +
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 *
S_RMntFrq + -0.00929531662146 * S_Recency ;
1697666   +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
1697667   +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
1697668   +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
1697669   +          +     0.23454153115636 * S_MntMeatProducts
1697670   +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
1697671   +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
1697672   +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
1697673   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq +
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds +
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 *
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq +
0.62117853933635 * S_Recency ;
1697674   +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
1697675   +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 *
G_Marital_Status1 ;
1697676   +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
1697677   +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 *
G_Marital_Status1 ;
1697678   +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
1697679   +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 *
G_Marital_Status1 ;
1697680   +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
1697681   +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 *
G_Marital_Status1 ;
1697682   +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
1697683   +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 *
G_Marital_Status1 ;
1697684   +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
1697685   +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
1697686   +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
1697687   +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
1697688   +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
1697689   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1697690   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1697691   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1697692   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1697693   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1697694   +END;
MPRINT(EM_DIAGRAM):   END;
1697695   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697696   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1697697   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1697698   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1697699   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1697700   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1697701   +END;
MPRINT(EM_DIAGRAM):   END;
1697702   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697703   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1697704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697705   +
1697706   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1697707   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1697708   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1697709   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1697710   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1697711   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697712   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1697713   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1697714   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1697715   +end;
MPRINT(EM_DIAGRAM):   end;
1697716   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697717   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1697718   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1697719   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1697720   +   end;
MPRINT(EM_DIAGRAM):   end;
1697721   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1697722   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1697723   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1697724   +   end;
MPRINT(EM_DIAGRAM):   end;
1697725   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697726   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1697727   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1697728   +   end;
MPRINT(EM_DIAGRAM):   end;
1697729   +end;
MPRINT(EM_DIAGRAM):   end;
1697730   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697731   +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
1697732   +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
1697733   +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 +
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
1697734   +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
1697735   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1697736   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1697737   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1697738   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1697739   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1697740   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1697741   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1697742   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1697743   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1697744   +END;
MPRINT(EM_DIAGRAM):   END;
1697745   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697746   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1697747   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1697748   +END;
MPRINT(EM_DIAGRAM):   END;
1697749   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1697750   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1697751   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1697752   +END;
MPRINT(EM_DIAGRAM):   END;
1697753   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1697754   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1697755   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1697756   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1697757   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1697758   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1697759   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1697760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697761   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1697762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697763   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1697764   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1697765   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1697766   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1697767   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1697768   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1697769   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1697770   +END;
MPRINT(EM_DIAGRAM):   END;
1697771   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697772   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1697773   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1697774   +drop
1697775   +H11
1697776   +H12
1697777   +H13
1697778   +H14
1697779   +H15
1697780   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1697781   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1697782   +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
1697783   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697784   +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
1697785   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697786   +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
1697787   +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
1697788   +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
1697789   +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
1697790   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697791   +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
1697792   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697793   +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
1697794   +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
1697795   +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
1697796   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697797   +* Ensmbl4: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 7 of 10;
1697798   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697799   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697800   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1697801   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1697802   +* NODE: Neural26;
MPRINT(EM_DIAGRAM):   * NODE: Neural26;
1697803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1697804   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697805   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1697806   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1697807   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1697808   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1697809   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1697810   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1697811   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1697812   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1697813   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1697814   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1697815   +LENGTH _WARN_ $4
1697816   +      F_DepVar  $ 12
1697817   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1697818   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1697819   +
1697820   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1697821   +
1697822   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1697823   +
1697824   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1697825   +
1697826   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1697827   +
1697828   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1697829   +
1697830   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1697831   +
1697832   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1697833   +
1697834   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1697835   +
1697836   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1697837   +
1697838   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1697839   +
1697840   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1697841   +
1697842   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1697843   +
1697844   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1697845   +
1697846   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1697847   +
1697848   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1697849   +
1697850   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1697851   +
1697852   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1697853   +
1697854   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1697855   +
1697856   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1697857   +
1697858   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1697859   +
1697860   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1697861   +
1697862   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1697863   +
1697864   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1697865   +
1697866   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1697867   +
1697868   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1697869   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1697870   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1697871   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1697872   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1697873   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1697874   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697875   +end;
MPRINT(EM_DIAGRAM):   end;
1697876   +else do;
MPRINT(EM_DIAGRAM):   else do;
1697877   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1697878   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1697879   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1697880   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1697881   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1697882   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1697883   +   end;
MPRINT(EM_DIAGRAM):   end;
1697884   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1697885   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1697886   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1697887   +   end;
MPRINT(EM_DIAGRAM):   end;
1697888   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1697889   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1697890   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1697891   +   end;
MPRINT(EM_DIAGRAM):   end;
1697892   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1697893   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1697894   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1697895   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1697896   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697897   +   end;
MPRINT(EM_DIAGRAM):   end;
1697898   +end;
MPRINT(EM_DIAGRAM):   end;
1697899   +
1697900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697901   +*** Checking missing input Interval
1697902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1697903   +
1697904   +IF NMISS(
1697905   +   AcceptedCmpTotal ,
1697906   +   Frq ,
1697907   +   Income ,
1697908   +   Mnt ,
1697909   +   MntGoldProds ,
1697910   +   MntMeatProducts ,
1697911   +   MntWines ,
1697912   +   NumDistPurchases ,
1697913   +   RFMstat ,
1697914   +   RMntFrq ,
1697915   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1697916   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1697917   +
1697918   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1697919   +END;
MPRINT(EM_DIAGRAM):   END;
1697920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697921   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1697922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697923   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697924   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697925   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697926   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697927   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697928   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697929   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697930   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1697931   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697932   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697933   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697934   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697935   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697936   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697937   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697938   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697939   +END;
MPRINT(EM_DIAGRAM):   END;
1697940   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1697941   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1697942   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1697943   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1697944   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1697945   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1697946   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1697947   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1697948   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1697949   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1697950   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1697951   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1697952   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1697953   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1697954   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1697955   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1697956   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1697957   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1697958   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1697959   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1697960   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1697961   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1697962   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1697963   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1697964   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1697965   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1697966   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1697967   +END;
MPRINT(EM_DIAGRAM):   END;
1697968   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697969   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1697970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697971   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697972   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1697973   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1697974   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1697975   +   H11  =    -0.52455774235062 * S_AcceptedCmpTotal  +      0.8466329583809 *
1697976   +        S_Frq  +    -0.24140635088555 * S_Income  +     1.10423984303161 *
1697977   +        S_Mnt  +    -0.01619058875438 * S_MntGoldProds
1697978   +          +    -0.55263908764573 * S_MntMeatProducts
1697979   +          +    -0.70001086687566 * S_MntWines  +    -0.13954000532733 *
1697980   +        S_NumDistPurchases  +     0.13318250375153 * S_RFMstat
1697981   +          +      0.4272420646455 * S_RMntFrq  +     0.41719267652064 *
1697982   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.52455774235062 * S_AcceptedCmpTotal + 0.8466329583809 * S_Frq +
-0.24140635088555 * S_Income + 1.10423984303161 * S_Mnt + -0.01619058875438 * S_MntGoldProds +
-0.55263908764573 * S_MntMeatProducts + -0.70001086687566 * S_MntWines + -0.13954000532733 *
S_NumDistPurchases + 0.13318250375153 * S_RFMstat + 0.4272420646455 * S_RMntFrq +
0.41719267652064 * S_Recency ;
1697983   +   H12  =    -0.04686202753184 * S_AcceptedCmpTotal  +     1.54159677165215 *
1697984   +        S_Frq  +      1.5876209259654 * S_Income  +      0.5309695784835 *
1697985   +        S_Mnt  +    -0.52971373734216 * S_MntGoldProds
1697986   +          +     0.06735454992171 * S_MntMeatProducts
1697987   +          +    -0.65753196206072 * S_MntWines  +    -0.43284750594408 *
1697988   +        S_NumDistPurchases  +    -0.15176413476147 * S_RFMstat
1697989   +          +    -0.45476834326399 * S_RMntFrq  +     0.41776804290571 *
1697990   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.04686202753184 * S_AcceptedCmpTotal + 1.54159677165215 * S_Frq
+ 1.5876209259654 * S_Income + 0.5309695784835 * S_Mnt + -0.52971373734216 * S_MntGoldProds +
0.06735454992171 * S_MntMeatProducts + -0.65753196206072 * S_MntWines + -0.43284750594408 *
S_NumDistPurchases + -0.15176413476147 * S_RFMstat + -0.45476834326399 * S_RMntFrq +
0.41776804290571 * S_Recency ;
1697991   +   H13  =    -0.31352262917412 * S_AcceptedCmpTotal  +     1.63883520018095 *
1697992   +        S_Frq  +     0.02249756771349 * S_Income  +     0.21682603962115 *
1697993   +        S_Mnt  +     0.15589923965689 * S_MntGoldProds
1697994   +          +    -3.43308711980096 * S_MntMeatProducts
1697995   +          +    -0.25180710956094 * S_MntWines  +    -1.36606037284233 *
1697996   +        S_NumDistPurchases  +    -0.42313397988951 * S_RFMstat
1697997   +          +     0.07406816799464 * S_RMntFrq  +     0.32607822998847 *
1697998   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.31352262917412 * S_AcceptedCmpTotal + 1.63883520018095 * S_Frq
+ 0.02249756771349 * S_Income + 0.21682603962115 * S_Mnt + 0.15589923965689 * S_MntGoldProds +
-3.43308711980096 * S_MntMeatProducts + -0.25180710956094 * S_MntWines + -1.36606037284233 *
S_NumDistPurchases + -0.42313397988951 * S_RFMstat + 0.07406816799464 * S_RMntFrq +
0.32607822998847 * S_Recency ;
1697999   +   H14  =     0.40033548790491 * S_AcceptedCmpTotal  +    -0.40354500664934 *
1698000   +        S_Frq  +      0.3774879421468 * S_Income  +    -0.16410506362553 *
1698001   +        S_Mnt  +     0.02885736564162 * S_MntGoldProds
1698002   +          +     0.71381843077774 * S_MntMeatProducts
1698003   +          +    -0.26487063623892 * S_MntWines  +     1.18188766928145 *
1698004   +        S_NumDistPurchases  +      0.1157647927608 * S_RFMstat
1698005   +          +    -0.05680377377798 * S_RMntFrq  +    -0.89452100436419 *
1698006   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.40033548790491 * S_AcceptedCmpTotal + -0.40354500664934 * S_Frq
+ 0.3774879421468 * S_Income + -0.16410506362553 * S_Mnt + 0.02885736564162 * S_MntGoldProds +
0.71381843077774 * S_MntMeatProducts + -0.26487063623892 * S_MntWines + 1.18188766928145 *
S_NumDistPurchases + 0.1157647927608 * S_RFMstat + -0.05680377377798 * S_RMntFrq +
-0.89452100436419 * S_Recency ;
1698007   +   H11  = H11  +    -0.53031970918814 * G_Marital_Status0
1698008   +          +    -0.23001488541689 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.53031970918814 * G_Marital_Status0 + -0.23001488541689 *
G_Marital_Status1 ;
1698009   +   H12  = H12  +     0.29542224963064 * G_Marital_Status0
1698010   +          +    -0.13806446525096 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.29542224963064 * G_Marital_Status0 + -0.13806446525096 *
G_Marital_Status1 ;
1698011   +   H13  = H13  +    -0.03108243750652 * G_Marital_Status0
1698012   +          +     0.08210849129934 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.03108243750652 * G_Marital_Status0 + 0.08210849129934 *
G_Marital_Status1 ;
1698013   +   H14  = H14  +     0.42709681519893 * G_Marital_Status0
1698014   +          +     0.09450701323627 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42709681519893 * G_Marital_Status0 + 0.09450701323627 *
G_Marital_Status1 ;
1698015   +   H11  =    -0.80237558754999 + H11 ;
The SAS System
 
MPRINT(EM_DIAGRAM):   H11 = -0.80237558754999 + H11 ;
1698016   +   H12  =     0.47909013828426 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.47909013828426 + H12 ;
1698017   +   H13  =    -1.98531714916096 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.98531714916096 + H13 ;
1698018   +   H14  =    -3.14128712464503 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -3.14128712464503 + H14 ;
1698019   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1698020   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1698021   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1698022   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1698023   +END;
MPRINT(EM_DIAGRAM):   END;
1698024   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698025   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1698026   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1698027   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1698028   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1698029   +END;
MPRINT(EM_DIAGRAM):   END;
1698030   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698031   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1698032   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698033   +
1698034   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1698035   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1698036   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698037   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1698038   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1698039   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698040   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1698041   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698042   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698043   +end;
MPRINT(EM_DIAGRAM):   end;
1698044   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698045   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1698046   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1698047   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1698048   +   end;
MPRINT(EM_DIAGRAM):   end;
1698049   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1698050   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1698051   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1698052   +   end;
MPRINT(EM_DIAGRAM):   end;
1698053   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698054   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698055   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698056   +   end;
MPRINT(EM_DIAGRAM):   end;
1698057   +end;
MPRINT(EM_DIAGRAM):   end;
1698058   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698059   +   P_DepVar1  =    -2.49130347768925 * H11  +    -2.38718075390418 * H12
1698060   +          +    -5.92002796763835 * H13  +     4.95923742700541 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49130347768925 * H11 + -2.38718075390418 * H12 +
-5.92002796763835 * H13 + 4.95923742700541 * H14 ;
1698061   +   P_DepVar1  =    -2.59807662162616 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.59807662162616 + P_DepVar1 ;
1698062   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1698063   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1698064   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1698065   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1698066   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1698067   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1698068   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1698069   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1698070   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1698071   +END;
MPRINT(EM_DIAGRAM):   END;
1698072   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698073   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1698074   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1698075   +END;
MPRINT(EM_DIAGRAM):   END;
1698076   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1698077   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1698078   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1698079   +END;
MPRINT(EM_DIAGRAM):   END;
1698080   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1698081   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1698082   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1698083   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1698084   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1698085   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1698086   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1698087   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698088   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1698089   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698090   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1698091   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1698092   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1698093   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1698094   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1698095   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1698096   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1698097   +END;
MPRINT(EM_DIAGRAM):   END;
1698098   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698099   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1698100   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698101   +drop
1698102   +H11
1698103   +H12
1698104   +H13
1698105   +H14
1698106   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1698107   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1698108   +* Renaming variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural26;
1698109   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698110   +* Renaming Posterior variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural26;
1698111   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698112   +drop Neural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar1;
1698113   +Neural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar1 = P_DepVar1;
1698114   +drop Neural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar0;
1698115   +Neural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar0 = P_DepVar0;
1698116   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698117   +* Renaming _WARN_ variable for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural26;
1698118   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698119   +length Neural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural26_WARN_ $4;
1698120   +drop Neural26_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural26_WARN_;
1698121   +Neural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural26_WARN_ = _WARN_;
1698122   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698123   +* Ensmbl4: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 8 of 10;
1698124   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698125   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698126   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1698127   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1698128   +* NODE: Neural25;
MPRINT(EM_DIAGRAM):   * NODE: Neural25;
1698129   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698130   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698131   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1698132   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698133   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1698134   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1698135   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1698136   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1698137   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1698138   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1698139   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1698140   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1698141   +LENGTH _WARN_ $4
1698142   +      F_DepVar  $ 12
1698143   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1698144   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1698145   +
1698146   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1698147   +
1698148   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1698149   +
1698150   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1698151   +
1698152   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1698153   +
1698154   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1698155   +
1698156   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1698157   +
1698158   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1698159   +
1698160   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1698161   +
1698162   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1698163   +
1698164   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1698165   +
1698166   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1698167   +
1698168   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1698169   +
1698170   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1698171   +
1698172   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1698173   +
1698174   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1698175   +
1698176   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1698177   +
1698178   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698179   +
1698180   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1698181   +
1698182   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1698183   +
1698184   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1698185   +
1698186   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1698187   +
1698188   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1698189   +
1698190   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1698191   +
1698192   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1698193   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1698194   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1698195   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1698196   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1698197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698199   +end;
MPRINT(EM_DIAGRAM):   end;
1698200   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698202   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1698203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698204   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1698205   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1698206   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1698207   +   end;
MPRINT(EM_DIAGRAM):   end;
1698208   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1698209   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1698210   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1698211   +   end;
MPRINT(EM_DIAGRAM):   end;
1698212   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698213   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1698214   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1698215   +   end;
MPRINT(EM_DIAGRAM):   end;
1698216   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698217   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1698218   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1698219   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698220   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698221   +   end;
MPRINT(EM_DIAGRAM):   end;
1698222   +end;
MPRINT(EM_DIAGRAM):   end;
1698223   +
1698224   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698225   +*** Checking missing input Interval
1698226   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1698227   +
1698228   +IF NMISS(
1698229   +   AcceptedCmpTotal ,
1698230   +   Frq ,
1698231   +   Income ,
1698232   +   Mnt ,
1698233   +   MntGoldProds ,
1698234   +   MntMeatProducts ,
1698235   +   MntWines ,
1698236   +   NumDistPurchases ,
1698237   +   RFMstat ,
1698238   +   RMntFrq ,
1698239   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1698240   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1698241   +
1698242   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698243   +END;
MPRINT(EM_DIAGRAM):   END;
1698244   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698245   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1698246   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698247   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698248   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698249   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698250   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698251   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698252   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698253   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698254   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1698255   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698256   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698257   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698258   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698259   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698260   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698261   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698262   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698263   +END;
MPRINT(EM_DIAGRAM):   END;
1698264   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698265   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1698266   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698267   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698268   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1698269   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698270   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1698271   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698272   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1698273   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698274   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1698275   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698276   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1698277   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1698278   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698279   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698280   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1698281   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698282   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1698283   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698284   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698285   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1698286   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698287   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1698288   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698289   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1698290   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698291   +END;
MPRINT(EM_DIAGRAM):   END;
1698292   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698293   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1698294   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698296   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1698297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698298   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698299   +   H11  =     0.20833273713311 * S_AcceptedCmpTotal  +    -1.28879417764689 *
1698300   +        S_Frq  +    -0.14086556075478 * S_Income  +    -2.23301771255995 *
1698301   +        S_Mnt  +     0.04592092677357 * S_MntGoldProds
1698302   +          +     1.62567194377193 * S_MntMeatProducts
1698303   +          +    -0.49127366492531 * S_MntWines  +     1.91685226043524 *
1698304   +        S_NumDistPurchases  +    -0.04138556513564 * S_RFMstat
1698305   +          +    -0.13653085001127 * S_RMntFrq  +    -0.23945986763214 *
1698306   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.20833273713311 * S_AcceptedCmpTotal + -1.28879417764689 * S_Frq
+ -0.14086556075478 * S_Income + -2.23301771255995 * S_Mnt + 0.04592092677357 * S_MntGoldProds
+ 1.62567194377193 * S_MntMeatProducts + -0.49127366492531 * S_MntWines + 1.91685226043524 *
S_NumDistPurchases + -0.04138556513564 * S_RFMstat + -0.13653085001127 * S_RMntFrq +
-0.23945986763214 * S_Recency ;
1698307   +   H12  =    -0.34458302979772 * S_AcceptedCmpTotal  +     0.83835958311689 *
1698308   +        S_Frq  +     0.58985038025342 * S_Income  +    -0.01368105632672 *
1698309   +        S_Mnt  +      0.3019310576853 * S_MntGoldProds
1698310   +          +     0.07606634413103 * S_MntMeatProducts
1698311   +          +    -0.13247646610361 * S_MntWines  +    -0.50915989225259 *
1698312   +        S_NumDistPurchases  +    -0.04564926690665 * S_RFMstat
1698313   +          +     0.55193961730225 * S_RMntFrq  +     0.39404724414688 *
1698314   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.34458302979772 * S_AcceptedCmpTotal + 0.83835958311689 * S_Frq
+ 0.58985038025342 * S_Income + -0.01368105632672 * S_Mnt + 0.3019310576853 * S_MntGoldProds +
0.07606634413103 * S_MntMeatProducts + -0.13247646610361 * S_MntWines + -0.50915989225259 *
S_NumDistPurchases + -0.04564926690665 * S_RFMstat + 0.55193961730225 * S_RMntFrq +
0.39404724414688 * S_Recency ;
1698315   +   H13  =    -0.26674190510231 * S_AcceptedCmpTotal  +    -0.06490296283402 *
1698316   +        S_Frq  +    -0.00949495425001 * S_Income  +     0.37442854620852 *
1698317   +        S_Mnt  +     -0.1257892331131 * S_MntGoldProds
1698318   +          +    -0.28812884998766 * S_MntMeatProducts
1698319   +          +    -0.20316845095305 * S_MntWines  +    -0.03921402518774 *
1698320   +        S_NumDistPurchases  +    -0.03320245186228 * S_RFMstat
1698321   +          +    -0.30369395822298 * S_RMntFrq  +     0.46294177326732 *
1698322   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26674190510231 * S_AcceptedCmpTotal + -0.06490296283402 * S_Frq
+ -0.00949495425001 * S_Income + 0.37442854620852 * S_Mnt + -0.1257892331131 * S_MntGoldProds
+ -0.28812884998766 * S_MntMeatProducts + -0.20316845095305 * S_MntWines + -0.03921402518774 *
S_NumDistPurchases + -0.03320245186228 * S_RFMstat + -0.30369395822298 * S_RMntFrq +
0.46294177326732 * S_Recency ;
1698323   +   H11  = H11  +    -0.10367293898875 * G_Marital_Status0
1698324   +          +     0.15277764144522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10367293898875 * G_Marital_Status0 + 0.15277764144522 *
G_Marital_Status1 ;
1698325   +   H12  = H12  +     -0.7297577327843 * G_Marital_Status0
1698326   +          +    -1.01396607857406 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.7297577327843 * G_Marital_Status0 + -1.01396607857406 *
G_Marital_Status1 ;
1698327   +   H13  = H13  +     -0.1454175222715 * G_Marital_Status0
1698328   +          +     0.15056066026671 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1454175222715 * G_Marital_Status0 + 0.15056066026671 *
G_Marital_Status1 ;
1698329   +   H11  =    -1.28493655880358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.28493655880358 + H11 ;
1698330   +   H12  =     -2.3952804585862 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.3952804585862 + H12 ;
1698331   +   H13  =     0.99289226061194 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.99289226061194 + H13 ;
1698332   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1698333   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1698334   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1698335   +END;
MPRINT(EM_DIAGRAM):   END;
1698336   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698337   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1698338   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1698339   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1698340   +END;
MPRINT(EM_DIAGRAM):   END;
1698341   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698342   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1698343   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698344   +
1698345   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1698346   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1698347   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698348   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1698349   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1698350   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698351   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1698352   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698353   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698354   +end;
MPRINT(EM_DIAGRAM):   end;
1698355   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698356   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1698357   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1698358   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1698359   +   end;
MPRINT(EM_DIAGRAM):   end;
1698360   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1698361   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1698362   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1698363   +   end;
MPRINT(EM_DIAGRAM):   end;
1698364   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698365   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698366   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698367   +   end;
MPRINT(EM_DIAGRAM):   end;
1698368   +end;
MPRINT(EM_DIAGRAM):   end;
1698369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698370   +   P_DepVar1  =      3.9868350141384 * H11  +    -2.54575725573216 * H12
1698371   +          +    -5.97596011661307 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.9868350141384 * H11 + -2.54575725573216 * H12 +
-5.97596011661307 * H13 ;
1698372   +   P_DepVar1  =     0.85313461945475 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85313461945475 + P_DepVar1 ;
1698373   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1698374   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1698375   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1698376   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1698377   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1698378   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1698379   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1698380   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1698381   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1698382   +END;
MPRINT(EM_DIAGRAM):   END;
1698383   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698384   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1698385   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1698386   +END;
MPRINT(EM_DIAGRAM):   END;
1698387   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1698388   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1698389   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1698390   +END;
MPRINT(EM_DIAGRAM):   END;
1698391   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1698392   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1698393   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1698394   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1698395   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1698396   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1698397   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1698398   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698399   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1698400   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698401   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1698402   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1698403   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1698404   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1698405   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1698406   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1698407   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1698408   +END;
MPRINT(EM_DIAGRAM):   END;
1698409   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698410   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1698411   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698412   +drop
1698413   +H11
1698414   +H12
1698415   +H13
1698416   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1698417   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1698418   +* Renaming variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural25;
1698419   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698420   +* Renaming Posterior variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural25;
1698421   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698422   +drop Neural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar1;
1698423   +Neural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar1 = P_DepVar1;
1698424   +drop Neural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar0;
1698425   +Neural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar0 = P_DepVar0;
1698426   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698427   +* Renaming _WARN_ variable for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural25;
1698428   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698429   +length Neural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural25_WARN_ $4;
1698430   +drop Neural25_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural25_WARN_;
1698431   +Neural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural25_WARN_ = _WARN_;
1698432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698433   +* Ensmbl4: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 9 of 10;
1698434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698435   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698436   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1698437   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1698438   +* NODE: Neural24;
MPRINT(EM_DIAGRAM):   * NODE: Neural24;
1698439   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698440   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698441   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1698442   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698443   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1698444   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1698445   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1698446   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1698447   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1698448   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1698449   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1698450   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1698451   +LENGTH _WARN_ $4
1698452   +      F_DepVar  $ 12
1698453   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1698454   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1698455   +
1698456   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1698457   +
1698458   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1698459   +
1698460   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1698461   +
1698462   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1698463   +
1698464   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1698465   +
1698466   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1698467   +
1698468   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1698469   +
1698470   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1698471   +
1698472   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1698473   +
1698474   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1698475   +
1698476   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1698477   +
1698478   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1698479   +
1698480   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1698481   +
1698482   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1698483   +
1698484   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1698485   +
1698486   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698487   +
1698488   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1698489   +
1698490   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1698491   +
1698492   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1698493   +
1698494   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1698495   +
1698496   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1698497   +
1698498   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1698499   +
1698500   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1698501   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1698502   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1698503   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1698504   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1698505   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698506   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698507   +end;
MPRINT(EM_DIAGRAM):   end;
1698508   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698509   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698510   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1698511   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698512   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1698513   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1698514   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1698515   +   end;
MPRINT(EM_DIAGRAM):   end;
1698516   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1698517   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1698518   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1698519   +   end;
MPRINT(EM_DIAGRAM):   end;
1698520   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698521   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1698522   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1698523   +   end;
MPRINT(EM_DIAGRAM):   end;
1698524   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698525   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1698526   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1698527   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698528   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698529   +   end;
MPRINT(EM_DIAGRAM):   end;
1698530   +end;
MPRINT(EM_DIAGRAM):   end;
1698531   +
1698532   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698533   +*** Checking missing input Interval
1698534   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1698535   +
1698536   +IF NMISS(
1698537   +   AcceptedCmpTotal ,
1698538   +   Frq ,
1698539   +   Income ,
1698540   +   Mnt ,
1698541   +   MntGoldProds ,
1698542   +   MntMeatProducts ,
1698543   +   MntWines ,
1698544   +   NumDistPurchases ,
1698545   +   RFMstat ,
1698546   +   RMntFrq ,
1698547   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1698548   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1698549   +
1698550   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698551   +END;
MPRINT(EM_DIAGRAM):   END;
1698552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698553   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1698554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698556   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698557   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698558   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698559   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698560   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698561   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698562   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1698563   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698564   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698565   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698566   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698567   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698568   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698569   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698570   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698571   +END;
MPRINT(EM_DIAGRAM):   END;
1698572   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698573   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1698574   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698575   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698576   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1698577   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698578   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1698579   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698580   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1698581   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698582   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1698583   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698584   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1698585   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1698586   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698587   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698588   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1698589   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698590   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1698591   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698592   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698593   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1698594   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698595   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1698596   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698597   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1698598   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698599   +END;
MPRINT(EM_DIAGRAM):   END;
1698600   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698601   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1698602   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698604   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1698605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698606   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698607   +   H11  =       0.064809950631 * S_AcceptedCmpTotal  +    -0.11974361887376 *
1698608   +        S_Frq  +    -0.05034272281408 * S_Income  +    -1.03632740142884 *
1698609   +        S_Mnt  +      0.0570619696315 * S_MntGoldProds
1698610   +          +     0.44757705806877 * S_MntMeatProducts
1698611   +          +     0.15555176595882 * S_MntWines  +     0.29237363949433 *
1698612   +        S_NumDistPurchases  +     0.01513588595143 * S_RFMstat
1698613   +          +     0.15267139118817 * S_RMntFrq  +    -0.08178536319013 *
1698614   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.064809950631 * S_AcceptedCmpTotal + -0.11974361887376 * S_Frq +
-0.05034272281408 * S_Income + -1.03632740142884 * S_Mnt + 0.0570619696315 * S_MntGoldProds +
0.44757705806877 * S_MntMeatProducts + 0.15555176595882 * S_MntWines + 0.29237363949433 *
S_NumDistPurchases + 0.01513588595143 * S_RFMstat + 0.15267139118817 * S_RMntFrq +
-0.08178536319013 * S_Recency ;
1698615   +   H12  =     0.03056152920519 * S_AcceptedCmpTotal  +     0.21158429585179 *
1698616   +        S_Frq  +     0.08852997598435 * S_Income  +       1.474747876869 *
1698617   +        S_Mnt  +    -0.05504304373804 * S_MntGoldProds
1698618   +          +    -0.61224564453989 * S_MntMeatProducts
1698619   +          +    -0.16570792731241 * S_MntWines  +     -0.3556210800725 *
1698620   +        S_NumDistPurchases  +    -0.00493407341141 * S_RFMstat
1698621   +          +    -0.08975799900748 * S_RMntFrq  +    -0.08286554067447 *
1698622   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.03056152920519 * S_AcceptedCmpTotal + 0.21158429585179 * S_Frq +
0.08852997598435 * S_Income + 1.474747876869 * S_Mnt + -0.05504304373804 * S_MntGoldProds +
-0.61224564453989 * S_MntMeatProducts + -0.16570792731241 * S_MntWines + -0.3556210800725 *
S_NumDistPurchases + -0.00493407341141 * S_RFMstat + -0.08975799900748 * S_RMntFrq +
-0.08286554067447 * S_Recency ;
1698623   +   H11  = H11  +     -0.0268872893862 * G_Marital_Status0
1698624   +          +     0.01287493608622 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.0268872893862 * G_Marital_Status0 + 0.01287493608622 *
G_Marital_Status1 ;
1698625   +   H12  = H12  +     0.19972982419153 * G_Marital_Status0
1698626   +          +     0.00851919203627 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.19972982419153 * G_Marital_Status0 + 0.00851919203627 *
G_Marital_Status1 ;
1698627   +   H11  =       -0.05804704369 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.05804704369 + H11 ;
1698628   +   H12  =    -0.91773456634133 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91773456634133 + H12 ;
1698629   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1698630   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1698631   +END;
MPRINT(EM_DIAGRAM):   END;
1698632   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698633   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1698634   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1698635   +END;
MPRINT(EM_DIAGRAM):   END;
1698636   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698637   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1698638   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698639   +
1698640   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1698641   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1698642   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698643   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1698644   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1698645   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698646   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1698647   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698648   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698649   +end;
MPRINT(EM_DIAGRAM):   end;
1698650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698651   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1698652   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1698653   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1698654   +   end;
MPRINT(EM_DIAGRAM):   end;
1698655   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1698656   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1698657   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1698658   +   end;
MPRINT(EM_DIAGRAM):   end;
1698659   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698660   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698661   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698662   +   end;
MPRINT(EM_DIAGRAM):   end;
1698663   +end;
MPRINT(EM_DIAGRAM):   end;
1698664   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698665   +   P_DepVar1  =     24.2171221004351 * H11  +     14.0502177408306 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 24.2171221004351 * H11 + 14.0502177408306 * H12 ;
1698666   +   P_DepVar1  =     5.57321151420878 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.57321151420878 + P_DepVar1 ;
1698667   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1698668   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1698669   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1698670   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1698671   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1698672   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1698673   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1698674   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1698675   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1698676   +END;
MPRINT(EM_DIAGRAM):   END;
1698677   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698678   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1698679   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1698680   +END;
MPRINT(EM_DIAGRAM):   END;
1698681   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1698682   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1698683   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1698684   +END;
MPRINT(EM_DIAGRAM):   END;
1698685   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1698686   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1698687   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1698688   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1698689   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1698690   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1698691   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1698692   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698693   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1698694   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698695   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1698696   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1698697   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1698698   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1698699   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1698700   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1698701   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1698702   +END;
MPRINT(EM_DIAGRAM):   END;
1698703   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698704   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1698705   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698706   +drop
1698707   +H11
1698708   +H12
1698709   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1698710   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1698711   +* Renaming variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural24;
1698712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698713   +* Renaming Posterior variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural24;
1698714   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698715   +drop Neural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar1;
1698716   +Neural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar1 = P_DepVar1;
1698717   +drop Neural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar0;
1698718   +Neural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar0 = P_DepVar0;
1698719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698720   +* Renaming _WARN_ variable for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural24;
1698721   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698722   +length Neural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural24_WARN_ $4;
1698723   +drop Neural24_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural24_WARN_;
1698724   +Neural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural24_WARN_ = _WARN_;
1698725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698726   +* Ensmbl4: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 10 of 10;
1698727   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698729   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1698730   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1698731   +* NODE: Neural29;
MPRINT(EM_DIAGRAM):   * NODE: Neural29;
1698732   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698733   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698734   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1698735   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1698736   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1698737   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1698738   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1698739   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1698740   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1698741   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1698742   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1698743   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1698744   +LENGTH _WARN_ $4
1698745   +      F_DepVar  $ 12
1698746   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1698747   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1698748   +
1698749   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1698750   +
1698751   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1698752   +
1698753   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1698754   +
1698755   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1698756   +
1698757   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1698758   +
1698759   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1698760   +
1698761   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1698762   +
1698763   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1698764   +
1698765   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1698766   +
1698767   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1698768   +
1698769   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1698770   +
1698771   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1698772   +
1698773   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1698774   +
1698775   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1698776   +
1698777   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698778   +
1698779   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1698780   +
1698781   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1698782   +
1698783   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1698784   +
1698785   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1698786   +
1698787   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1698788   +
1698789   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1698790   +
1698791   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1698792   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1698793   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1698794   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1698795   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1698796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1698797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698798   +end;
MPRINT(EM_DIAGRAM):   end;
1698799   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698800   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1698801   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1698802   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698803   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1698804   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1698805   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1698806   +   end;
MPRINT(EM_DIAGRAM):   end;
1698807   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1698808   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1698809   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1698810   +   end;
MPRINT(EM_DIAGRAM):   end;
1698811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1698812   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1698813   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1698814   +   end;
MPRINT(EM_DIAGRAM):   end;
1698815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698816   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1698817   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1698818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1698819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698820   +   end;
MPRINT(EM_DIAGRAM):   end;
1698821   +end;
MPRINT(EM_DIAGRAM):   end;
1698822   +
1698823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698824   +*** Checking missing input Interval
1698825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1698826   +
1698827   +IF NMISS(
1698828   +   AcceptedCmpTotal ,
1698829   +   Frq ,
1698830   +   Income ,
1698831   +   Mnt ,
1698832   +   MntGoldProds ,
1698833   +   MntMeatProducts ,
1698834   +   MntWines ,
1698835   +   NumDistPurchases ,
1698836   +   RFMstat ,
1698837   +   RMntFrq ,
1698838   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1698839   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1698840   +
1698841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1698842   +END;
MPRINT(EM_DIAGRAM):   END;
1698843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698844   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1698845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698846   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698847   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698848   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698849   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698850   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698851   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698852   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698853   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1698854   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698855   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698856   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698857   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698858   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698859   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698860   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698861   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698862   +END;
MPRINT(EM_DIAGRAM):   END;
1698863   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698864   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1698865   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1698866   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1698867   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1698868   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1698869   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1698870   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1698871   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1698872   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1698873   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1698874   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1698875   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1698876   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1698877   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1698878   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1698879   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1698880   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1698881   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1698882   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1698883   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1698884   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1698885   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1698886   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1698887   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1698888   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1698889   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1698890   +END;
MPRINT(EM_DIAGRAM):   END;
1698891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698892   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1698893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698895   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1698896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698898   +   H11  =     0.07956052778938 * S_AcceptedCmpTotal  +    -0.08976709439294 *
1698899   +        S_Frq  +    -0.03136979020873 * S_Income  +    -0.22580432887576 *
1698900   +        S_Mnt  +     0.02561890499238 * S_MntGoldProds
1698901   +          +     0.13232754556656 * S_MntMeatProducts
1698902   +          +     0.06392654003348 * S_MntWines  +      0.1248896909569 *
1698903   +        S_NumDistPurchases  +     0.01403367352534 * S_RFMstat
1698904   +          +     0.04307139255267 * S_RMntFrq  +     -0.0953931758746 *
1698905   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.07956052778938 * S_AcceptedCmpTotal + -0.08976709439294 * S_Frq
+ -0.03136979020873 * S_Income + -0.22580432887576 * S_Mnt + 0.02561890499238 * S_MntGoldProds
+ 0.13232754556656 * S_MntMeatProducts + 0.06392654003348 * S_MntWines + 0.1248896909569 *
S_NumDistPurchases + 0.01403367352534 * S_RFMstat + 0.04307139255267 * S_RMntFrq +
-0.0953931758746 * S_Recency ;
1698906   +   H11  = H11  +     0.03232715649764 * G_Marital_Status0
1698907   +          +     0.00903998969594 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03232715649764 * G_Marital_Status0 + 0.00903998969594 *
G_Marital_Status1 ;
1698908   +   H11  =    -0.20824058516839 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20824058516839 + H11 ;
1698909   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1698910   +END;
MPRINT(EM_DIAGRAM):   END;
1698911   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698912   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1698913   +END;
MPRINT(EM_DIAGRAM):   END;
1698914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698915   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1698916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698917   +
1698918   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1698919   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1698920   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1698921   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1698922   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1698923   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1698924   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1698925   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698926   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698927   +end;
MPRINT(EM_DIAGRAM):   end;
1698928   +else do;
MPRINT(EM_DIAGRAM):   else do;
1698929   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1698930   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1698931   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1698932   +   end;
MPRINT(EM_DIAGRAM):   end;
1698933   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1698934   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1698935   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1698936   +   end;
MPRINT(EM_DIAGRAM):   end;
1698937   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1698938   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1698939   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1698940   +   end;
MPRINT(EM_DIAGRAM):   end;
1698941   +end;
MPRINT(EM_DIAGRAM):   end;
1698942   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1698943   +   P_DepVar1  =     19.4855317610714 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 19.4855317610714 * H11 ;
1698944   +   P_DepVar1  =     0.94239569093187 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94239569093187 + P_DepVar1 ;
1698945   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1698946   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1698947   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1698948   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1698949   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1698950   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1698951   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1698952   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1698953   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1698954   +END;
MPRINT(EM_DIAGRAM):   END;
1698955   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1698956   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1698957   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1698958   +END;
MPRINT(EM_DIAGRAM):   END;
1698959   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1698960   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1698961   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1698962   +END;
MPRINT(EM_DIAGRAM):   END;
1698963   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1698964   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1698965   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1698966   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1698967   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1698968   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1698969   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1698970   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698971   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1698972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1698973   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1698974   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1698975   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1698976   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1698977   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1698978   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1698979   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1698980   +END;
MPRINT(EM_DIAGRAM):   END;
1698981   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698982   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1698983   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1698984   +drop
1698985   +H11
1698986   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1698987   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1698988   +* Renaming variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural29;
1698989   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698990   +* Renaming Posterior variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural29;
1698991   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698992   +drop Neural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar1;
1698993   +Neural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar1 = P_DepVar1;
1698994   +drop Neural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar0;
1698995   +Neural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar0 = P_DepVar0;
1698996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698997   +* Renaming _WARN_ variable for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural29;
1698998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1698999   +length Neural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural29_WARN_ $4;
1699000   +drop Neural29_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural29_WARN_;
1699001   +Neural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural29_WARN_ = _WARN_;
1699002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699003   +* Ensmbl4: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Average Posteriors of 10 models;
1699004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699005   +P_DepVar1 = (
1699006   +Reg8_P_DepVar1 +
1699007   +Reg4_P_DepVar1 +
1699008   +Tree4_P_DepVar1 +
1699009   +Neural8_P_DepVar1 +
1699010   +Neural28_P_DepVar1 +
1699011   +Neural27_P_DepVar1 +
1699012   +Neural26_P_DepVar1 +
1699013   +Neural25_P_DepVar1 +
1699014   +Neural24_P_DepVar1 +
1699015   +Neural29_P_DepVar1
1699016   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg8_P_DepVar1 + Reg4_P_DepVar1 + Tree4_P_DepVar1 +
Neural8_P_DepVar1 + Neural28_P_DepVar1 + Neural27_P_DepVar1 + Neural26_P_DepVar1 +
Neural25_P_DepVar1 + Neural24_P_DepVar1 + Neural29_P_DepVar1 )/10;
1699017   +P_DepVar0 = (
1699018   +Reg8_P_DepVar0 +
1699019   +Reg4_P_DepVar0 +
1699020   +Tree4_P_DepVar0 +
1699021   +Neural8_P_DepVar0 +
1699022   +Neural28_P_DepVar0 +
1699023   +Neural27_P_DepVar0 +
1699024   +Neural26_P_DepVar0 +
1699025   +Neural25_P_DepVar0 +
1699026   +Neural24_P_DepVar0 +
1699027   +Neural29_P_DepVar0
1699028   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg8_P_DepVar0 + Reg4_P_DepVar0 + Tree4_P_DepVar0 +
Neural8_P_DepVar0 + Neural28_P_DepVar0 + Neural27_P_DepVar0 + Neural26_P_DepVar0 +
Neural25_P_DepVar0 + Neural24_P_DepVar0 + Neural29_P_DepVar0 )/10;
1699029   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699030   +* Ensmbl4: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Classification Vars;
1699031   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699032   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1699033   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1699034   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1699035   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1699036   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1699037   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1699038   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1699039   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1699040   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1699041   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1699042   +end;
MPRINT(EM_DIAGRAM):   end;
1699043   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1699044   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1699045   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1699046   +end;
MPRINT(EM_DIAGRAM):   end;
1699047   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699049   +* Ensmbl4: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Producing Unformatted variable;
1699050   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699051   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1699052   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1699053   +else
1699054   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1699055   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699056   +* Ensmbl4: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing _WARN_ Variable;
1699057   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699058   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1699059   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1699060   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1699061   +if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1699062   +if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1699063   +if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1699064   +if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1699065   +if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1699066   +if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1699067   +if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1699068   +if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1699069   +if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1699070   +if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1699071   +if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1699072   +if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1699073   +if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1699074   +if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1699075   +if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1699076   +if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1699077   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1699077  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1699078   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1699078  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1699079   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1699079  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1699080   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1699080  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1699081   +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1699081  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1699082   +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1699082  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1699083   +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1699083  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1699084   +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1699084  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1699085   +if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1699085  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1699086   +if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1699086  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1699087   +if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1699087  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1699088   +if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1699088  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1699089   +if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1699089  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1699090   +if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1699090  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1699091   +if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1699091  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1699092   +if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1699092  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1699093   +if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1699093  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1699094   +if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1699094  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1699095   +if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1699095  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1699096   +if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1699096  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1699097   +if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1699097  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1699098   +if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1699098  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1699099   +if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1699099  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1699100   +if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1699100  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1699101   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699102   +* Ensmbl4: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Residual Vars;
1699103   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699104   +if
1699105   +F_DepVar NE '1'
1699106   +AND F_DepVar NE '0'
1699107   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1699108   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1699109   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1699110   +end;
MPRINT(EM_DIAGRAM):   end;
1699111   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699112   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1699113   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1699114   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1699115   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1699116   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1699117   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1699118   +END;
MPRINT(EM_DIAGRAM):   END;
1699119   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1699120    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL4_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG8_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.14 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1699121    quit;
1699122    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1699123    filename emflow
1699123  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring REG8_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699124    *------------------------------------------------------------*;
1699125    * Ensmbl4: Scoring REG8_VALIDATE data;
1699126    *------------------------------------------------------------*;
1699127    data EMWS8.Ensmbl4_VALIDATE
1699128    / view=EMWS8.Ensmbl4_VALIDATE
1699129    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_VALIDATE / view=EMWS8.Ensmbl4_VALIDATE ;
1699130    set EMWS8.Reg8_VALIDATE
1699131    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Reg8_VALIDATE ;
1699132    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMFLOWSCORE.sas.
1699133   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699134   +* Ensmbl4: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Combine model for DepVar;
1699135   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699136   +* Ensmbl4: Scoring Code of model 1 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 1 of 10;
1699137   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699138   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699139   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1699140   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1699141   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1699142   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699143   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699144   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1699145   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1699146   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1699147   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699148   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699149   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1699150   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1699151   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1699152   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699154   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1699155   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1699156   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1699157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699158   +
1699159   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1699160   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1699160  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1699161   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1699162   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1699163   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1699164   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1699165   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1699166   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699167   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1699168   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1699169   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1699170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699171   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699172   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1699173   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699174   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1699175   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1699176   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1699177   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699178   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1699179   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1699180   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1699181   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699182   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699183   +* TOOL: Variable selection Class;
MPRINT(EM_DIAGRAM):   * TOOL: Variable selection Class;
1699184   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1699185   +* NODE: Varsel;
MPRINT(EM_DIAGRAM):   * NODE: Varsel;
1699186   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699187   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1699188   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1699189   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1699190   +
1699191   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1699192   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1699193   +
1699194   +
1699195   +/*----G_Marital_Status begin----*/
1699196   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   length _NORM8 $ 8;
1699197   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1699198   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1699199   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1699200   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1699201   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1699202   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1699203   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1699204   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1699205   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1699206   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1699207   +end;
MPRINT(EM_DIAGRAM):   end;
1699208   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status= "Grouped Levels for Marital_Status";
1699209   +/*----G_Marital_Status end----*/
1699210   +
1699211   +
1699212   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1699213   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1699214   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
1699215   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699216   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1699217   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1699218   +* NODE: Reg8;
MPRINT(EM_DIAGRAM):   * NODE: Reg8;
1699219   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699220   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699221   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1699222   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699223   +
1699224   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1699225   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1699226   +
1699227   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1699228   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1699229   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1699230   +array REG8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG8DRF [2] $12 _temporary_ ('1' '0' );
1699231   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1699232   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1699233   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1699234   +ARRAY REG8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG8DRU[2] _TEMPORARY_ (1 0);
1699235   +
1699236   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1699237   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1699238   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1699239   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1699240   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1699241   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1699242   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1699243   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1699244   +end;
MPRINT(EM_DIAGRAM):   end;
1699245   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699246   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1699247   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1699248   +   end;
MPRINT(EM_DIAGRAM):   end;
1699249   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1699250   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1699251   +   end;
MPRINT(EM_DIAGRAM):   end;
1699252   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1699253   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1699254   +   end;
MPRINT(EM_DIAGRAM):   end;
1699255   +end;
MPRINT(EM_DIAGRAM):   end;
1699256   +
1699257   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1699258   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1699259   +
1699260   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1699261   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1699262   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699263   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699264   +end;
MPRINT(EM_DIAGRAM):   end;
1699265   +
1699266   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1699267   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1699268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699270   +end;
MPRINT(EM_DIAGRAM):   end;
1699271   +
1699272   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1699273   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1699274   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699275   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699276   +end;
MPRINT(EM_DIAGRAM):   end;
1699277   +
1699278   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1699279   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1699280   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699281   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699282   +end;
MPRINT(EM_DIAGRAM):   end;
1699283   +
1699284   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1699285   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1699286   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699287   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699288   +end;
MPRINT(EM_DIAGRAM):   end;
1699289   +
1699290   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1699291   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1699292   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699293   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699294   +end;
MPRINT(EM_DIAGRAM):   end;
1699295   +
1699296   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1699297   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1699298   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699299   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699300   +end;
MPRINT(EM_DIAGRAM):   end;
1699301   +
1699302   +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
1699303   +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
1699304   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699305   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699306   +end;
MPRINT(EM_DIAGRAM):   end;
1699307   +
1699308   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1699309   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1699310   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699311   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699312   +end;
MPRINT(EM_DIAGRAM):   end;
1699313   +
1699314   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1699315   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1699316   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699317   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699318   +end;
MPRINT(EM_DIAGRAM):   end;
1699319   +
1699320   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1699321   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1699322   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699323   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699324   +end;
MPRINT(EM_DIAGRAM):   end;
1699325   +
1699326   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1699327   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1699328   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1699329   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1699330   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1699331   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699332   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699333   +end;
MPRINT(EM_DIAGRAM):   end;
1699334   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699335   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1699336   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1699337   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1699338   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1699339   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1699340   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1699341   +   end;
MPRINT(EM_DIAGRAM):   end;
1699342   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1699343   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1699344   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1699345   +   end;
MPRINT(EM_DIAGRAM):   end;
1699346   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1699347   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1699348   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1699349   +   end;
MPRINT(EM_DIAGRAM):   end;
1699350   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1699351   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1699352   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1699353   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1699354   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699355   +   end;
MPRINT(EM_DIAGRAM):   end;
1699356   +end;
MPRINT(EM_DIAGRAM):   end;
1699357   +
1699358   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1699359   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1699360   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1699361   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1699362   +   goto REG8DR1;
MPRINT(EM_DIAGRAM):   goto REG8DR1;
1699363   +end;
MPRINT(EM_DIAGRAM):   end;
1699364   +
1699365   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1699366   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1699367   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1699368   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1699369   +
1699370   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1699371   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1699372   +_LP0 = _LP0 + (    1.25564379942555 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.25564379942555 * _TEMP);
1699373   +
1699374   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1699375   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1699376   +_LP0 = _LP0 + (   -0.13843763252919 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13843763252919 * _TEMP);
1699377   +
1699378   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1699379   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1699380   +_LP0 = _LP0 + (     0.3450416036947) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3450416036947) * _TEMP * _1_0;
1699381   +_LP0 = _LP0 + (    0.07017894213738) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07017894213738) * _TEMP * _1_1;
1699382   +
1699383   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1699384   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1699385   +_LP0 = _LP0 + (   -0.00001593150299 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001593150299 * _TEMP);
1699386   +
1699387   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1699388   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1699389   +_LP0 = _LP0 + (   -0.00413312986127 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00413312986127 * _TEMP);
1699390   +
1699391   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1699392   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1699393   +_LP0 = _LP0 + (    0.00530471713016 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00530471713016 * _TEMP);
1699394   +
1699395   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1699396   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1699397   +_LP0 = _LP0 + (    0.00672044183978 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00672044183978 * _TEMP);
1699398   +
1699399   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1699400   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1699401   +_LP0 = _LP0 + (    0.00218768007222 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00218768007222 * _TEMP);
1699402   +
1699403   +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
1699404   +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
1699405   +_LP0 = _LP0 + (    0.29153437702669 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29153437702669 * _TEMP);
1699406   +
1699407   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1699408   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1699409   +_LP0 = _LP0 + (    0.00010476102078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00010476102078 * _TEMP);
1699410   +
1699411   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1699412   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1699413   +_LP0 = _LP0 + (    0.01569818995068 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01569818995068 * _TEMP);
1699414   +
1699415   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1699416   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1699417   +_LP0 = _LP0 + (   -0.03379881900362 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03379881900362 * _TEMP);
1699418   +
1699419   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1699420   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1699421   +_P0 = probnorm((    0.03244157586194) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( 0.03244157586194) + _LP0);
1699422   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1699423   +
1699424   +REG8DR1:
1699425   +
1699426   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG8DR1: *** Residuals;
1699427   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1699428   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1699429   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1699430   +end;
MPRINT(EM_DIAGRAM):   end;
1699431   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699432   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1699433   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1699434   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1699435   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1699436   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1699437   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1699438   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1699439   +   end;
MPRINT(EM_DIAGRAM):   end;
1699440   +end;
MPRINT(EM_DIAGRAM):   end;
1699441   +
1699442   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1699443   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1699444   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1699445   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1699446   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1699447   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1699448   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1699449   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1699450   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1699451   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1699452   +end;
MPRINT(EM_DIAGRAM):   end;
1699453   +I_DepVar = REG8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG8DRF[_IY];
1699454   +U_DepVar = REG8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG8DRU[_IY];
1699455   +
1699456   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699457   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1699458   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699459   +* Renaming variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg8;
1699460   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699461   +* Renaming Posterior variables for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg8;
1699462   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699463   +drop Reg8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar1;
1699464   +Reg8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar1 = P_DepVar1;
1699465   +drop Reg8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg8_P_DepVar0;
1699466   +Reg8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg8_P_DepVar0 = P_DepVar0;
1699467   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699468   +* Renaming _WARN_ variable for Reg8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg8;
1699469   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699470   +length Reg8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg8_WARN_ $4;
1699471   +drop Reg8_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg8_WARN_;
1699472   +Reg8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg8_WARN_ = _WARN_;
1699473   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699474   +* Ensmbl4: Scoring Code of model 2 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 2 of 10;
1699475   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699476   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699477   +* TOOL: Regression;
MPRINT(EM_DIAGRAM):   * TOOL: Regression;
1699478   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1699479   +* NODE: Reg4;
MPRINT(EM_DIAGRAM):   * NODE: Reg4;
1699480   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699481   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699482   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1699483   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699484   +
1699485   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1699486   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1699487   +
1699488   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1699489   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1699490   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1699491   +array REG4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG4DRF [2] $12 _temporary_ ('1' '0' );
1699492   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1699493   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1699494   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1699495   +ARRAY REG4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG4DRU[2] _TEMPORARY_ (1 0);
1699496   +
1699497   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1699498   +drop _Y ;
MPRINT(EM_DIAGRAM):   drop _Y ;
1699499   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1699500   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1699501   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1699502   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1699503   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1699504   +   _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1699505   +end;
MPRINT(EM_DIAGRAM):   end;
1699506   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699507   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1699508   +      _Y = 1;
MPRINT(EM_DIAGRAM):   _Y = 1;
1699509   +   end;
MPRINT(EM_DIAGRAM):   end;
1699510   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1699511   +      _Y = 0;
MPRINT(EM_DIAGRAM):   _Y = 0;
1699512   +   end;
MPRINT(EM_DIAGRAM):   end;
1699513   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1699514   +      _Y = .;
MPRINT(EM_DIAGRAM):   _Y = .;
1699515   +   end;
MPRINT(EM_DIAGRAM):   end;
1699516   +end;
MPRINT(EM_DIAGRAM):   end;
1699517   +
1699518   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1699519   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1699520   +
1699521   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1699522   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1699523   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699524   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699525   +end;
MPRINT(EM_DIAGRAM):   end;
1699526   +
1699527   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1699528   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1699529   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699530   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699531   +end;
MPRINT(EM_DIAGRAM):   end;
1699532   +
1699533   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1699534   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1699535   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699536   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699537   +end;
MPRINT(EM_DIAGRAM):   end;
1699538   +
1699539   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1699540   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1699541   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699542   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699543   +end;
MPRINT(EM_DIAGRAM):   end;
1699544   +
1699545   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1699546   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1699547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699549   +end;
MPRINT(EM_DIAGRAM):   end;
1699550   +
1699551   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1699552   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1699553   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699554   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699555   +end;
MPRINT(EM_DIAGRAM):   end;
1699556   +
1699557   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1699558   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1699559   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699560   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699561   +end;
MPRINT(EM_DIAGRAM):   end;
1699562   +
1699563   +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
1699564   +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
1699565   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699566   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699567   +end;
MPRINT(EM_DIAGRAM):   end;
1699568   +
1699569   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1699570   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1699571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699573   +end;
MPRINT(EM_DIAGRAM):   end;
1699574   +
1699575   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1699576   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1699577   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699578   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699579   +end;
MPRINT(EM_DIAGRAM):   end;
1699580   +
1699581   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1699582   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1699583   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699584   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699585   +end;
MPRINT(EM_DIAGRAM):   end;
1699586   +
1699587   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1699588   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1699589   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1699590   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1699591   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1699592   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1699593   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699594   +end;
MPRINT(EM_DIAGRAM):   end;
1699595   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699596   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1699597   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1699598   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1699599   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1699600   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1699601   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1699602   +   end;
MPRINT(EM_DIAGRAM):   end;
1699603   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1699604   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1699605   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1699606   +   end;
MPRINT(EM_DIAGRAM):   end;
1699607   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1699608   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1699609   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1699610   +   end;
MPRINT(EM_DIAGRAM):   end;
1699611   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1699612   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1699613   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1699614   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1699615   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1699616   +   end;
MPRINT(EM_DIAGRAM):   end;
1699617   +end;
MPRINT(EM_DIAGRAM):   end;
1699618   +
1699619   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1699620   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1699621   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1699622   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1699623   +   goto REG4DR1;
MPRINT(EM_DIAGRAM):   goto REG4DR1;
1699624   +end;
MPRINT(EM_DIAGRAM):   end;
1699625   +
1699626   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1699627   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1699628   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1699629   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1699630   +
1699631   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1699632   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1699633   +_LP0 = _LP0 + (     2.3101146636742 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.3101146636742 * _TEMP);
1699634   +
1699635   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1699636   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1699637   +_LP0 = _LP0 + (   -0.24397863929446 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.24397863929446 * _TEMP);
1699638   +
1699639   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1699640   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1699641   +_LP0 = _LP0 + (    0.62662142005613) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62662142005613) * _TEMP * _1_0;
1699642   +_LP0 = _LP0 + (    0.16948281370783) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16948281370783) * _TEMP * _1_1;
1699643   +
1699644   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1699645   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1699646   +_LP0 = _LP0 + (   -0.00002912500869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00002912500869 * _TEMP);
1699647   +
1699648   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1699649   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1699650   +_LP0 = _LP0 + (   -0.00725366255775 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00725366255775 * _TEMP);
1699651   +
1699652   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1699653   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1699654   +_LP0 = _LP0 + (    0.00966782899986 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00966782899986 * _TEMP);
1699655   +
1699656   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1699657   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1699658   +_LP0 = _LP0 + (    0.01188232167165 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01188232167165 * _TEMP);
1699659   +
1699660   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1699661   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1699662   +_LP0 = _LP0 + (      0.003639907135 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.003639907135 * _TEMP);
1699663   +
1699664   +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
1699665   +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
1699666   +_LP0 = _LP0 + (    0.52674791091038 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.52674791091038 * _TEMP);
1699667   +
1699668   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1699669   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1699670   +_LP0 = _LP0 + (      0.000175187797 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.000175187797 * _TEMP);
1699671   +
1699672   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1699673   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1699674   +_LP0 = _LP0 + (    0.02790898517022 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02790898517022 * _TEMP);
1699675   +
1699676   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1699677   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1699678   +_LP0 = _LP0 + (   -0.06390893610641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06390893610641 * _TEMP);
1699679   +
1699680   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1699681   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1699682   +_TEMP =     0.12264575618785 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.12264575618785 + _LP0;
1699683   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1699684   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1699685   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1699686   +end;
MPRINT(EM_DIAGRAM):   end;
1699687   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1699688   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1699689   +
1699690   +REG4DR1:
1699691   +
1699692   +*** Residuals;
MPRINT(EM_DIAGRAM):   REG4DR1: *** Residuals;
1699693   +if (_Y = .) then do;
MPRINT(EM_DIAGRAM):   if (_Y = .) then do;
1699694   +   R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1699695   +   R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1699696   +end;
MPRINT(EM_DIAGRAM):   end;
1699697   +else do;
MPRINT(EM_DIAGRAM):   else do;
1699698   +    label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1699699   +    label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1699700   +   R_DepVar1 = - _P0;
MPRINT(EM_DIAGRAM):   R_DepVar1 = - _P0;
1699701   +   R_DepVar0 = - _P1;
MPRINT(EM_DIAGRAM):   R_DepVar0 = - _P1;
1699702   +   select( _Y );
MPRINT(EM_DIAGRAM):   select( _Y );
1699703   +      when (0)  R_DepVar1 = R_DepVar1 + 1;
MPRINT(EM_DIAGRAM):   when (0) R_DepVar1 = R_DepVar1 + 1;
1699704   +      when (1)  R_DepVar0 = R_DepVar0 + 1;
MPRINT(EM_DIAGRAM):   when (1) R_DepVar0 = R_DepVar0 + 1;
1699705   +   end;
MPRINT(EM_DIAGRAM):   end;
1699706   +end;
MPRINT(EM_DIAGRAM):   end;
1699707   +
1699708   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   *** Posterior Probabilities and Predicted Level;
1699709   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1699710   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1699711   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1699712   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1699713   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1699714   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1699715   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1699716   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1699717   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1699718   +end;
MPRINT(EM_DIAGRAM):   end;
1699719   +I_DepVar = REG4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG4DRF[_IY];
1699720   +U_DepVar = REG4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG4DRU[_IY];
1699721   +
1699722   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699723   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1699724   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1699725   +* Renaming variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Reg4;
1699726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699727   +* Renaming Posterior variables for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Reg4;
1699728   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699729   +drop Reg4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar1;
1699730   +Reg4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar1 = P_DepVar1;
1699731   +drop Reg4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Reg4_P_DepVar0;
1699732   +Reg4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Reg4_P_DepVar0 = P_DepVar0;
1699733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699734   +* Renaming _WARN_ variable for Reg4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Reg4;
1699735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699736   +length Reg4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Reg4_WARN_ $4;
1699737   +drop Reg4_WARN_;
MPRINT(EM_DIAGRAM):   drop Reg4_WARN_;
1699738   +Reg4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Reg4_WARN_ = _WARN_;
1699739   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699740   +* Ensmbl4: Scoring Code of model 3 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 3 of 10;
1699741   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699742   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699743   +* TOOL: Decision Tree;
MPRINT(EM_DIAGRAM):   * TOOL: Decision Tree;
1699744   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1699745   +* NODE: Tree4;
MPRINT(EM_DIAGRAM):   * NODE: Tree4;
1699746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699747   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1699748   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1699749   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1699750   +
1699751   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1699752   +LENGTH F_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH F_DepVar $ 12;
1699753   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1699754   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1699755   +
1699756   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1699757   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1699758   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1699759   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1699760   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1699761   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1699762   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1699763   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1699764   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1699765   +LABEL R_DepVar0  = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar0 = 'Residual: DepVar=0' ;
1699766   +LABEL R_DepVar1  = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL R_DepVar1 = 'Residual: DepVar=1' ;
1699767   +LABEL F_DepVar  = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL F_DepVar = 'From: DepVar' ;
1699768   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1699769   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1699770   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1699771   +
1699772   +
1699773   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1699774   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1699775   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1699776   +
1699777   +
1699778   +_ARBFMT_12 = PUT( DepVar , BEST.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( DepVar , BEST.);
1699779   + %DMNORMCP( _ARBFMT_12, F_DepVar );
MPRINT(DMNORMCP):   F_DepVar=dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1699780   +
1699781   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   ****** ASSIGN OBSERVATION TO NODE ******;
1699782   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1699783   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1699784   +  IF  NOT MISSING(Recency ) AND
1699785   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1699786   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1699787   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1699788   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1699789   +      _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1699790   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1699791   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1699792   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1699793   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1699794   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1699795   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1699796   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699797   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699798   +      END;
MPRINT(EM_DIAGRAM):   END;
1699799   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699800   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1699801   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1699802   +      IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1699803   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1699804   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1699805   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1699806   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1699807   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1699808   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1699809   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1699810   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1699811   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699812   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699813   +        END;
MPRINT(EM_DIAGRAM):   END;
1699814   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699815   +        IF  NOT MISSING(MntWines ) AND
1699816   +          MntWines  <                  169 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 169 THEN DO;
1699817   +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
1699818   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1699819   +          P_DepVar0  =     0.24137931034482;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.24137931034482;
1699820   +          P_DepVar1  =     0.75862068965517;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75862068965517;
1699821   +          Q_DepVar0  =     0.24137931034482;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.24137931034482;
1699822   +          Q_DepVar1  =     0.75862068965517;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75862068965517;
1699823   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1699824   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1699825   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699826   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699827   +          END;
MPRINT(EM_DIAGRAM):   END;
1699828   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699829   +          IF  NOT MISSING(RFMstat ) AND
1699830   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1699831   +            _NODE_  =                   55;
MPRINT(EM_DIAGRAM):   _NODE_ = 55;
1699832   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1699833   +            P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
1699834   +            P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
1699835   +            Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
1699836   +            Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
1699837   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1699838   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1699839   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699840   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699841   +            END;
MPRINT(EM_DIAGRAM):   END;
1699842   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699843   +            _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
1699844   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1699845   +            P_DepVar0  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84615384615384;
1699846   +            P_DepVar1  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15384615384615;
1699847   +            Q_DepVar0  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84615384615384;
1699848   +            Q_DepVar1  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15384615384615;
1699849   +            V_DepVar0  =     0.67857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.67857142857142;
1699850   +            V_DepVar1  =     0.32142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.32142857142857;
1699851   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1699852   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699853   +            END;
MPRINT(EM_DIAGRAM):   END;
1699854   +          END;
MPRINT(EM_DIAGRAM):   END;
1699855   +        END;
MPRINT(EM_DIAGRAM):   END;
1699856   +      END;
MPRINT(EM_DIAGRAM):   END;
1699857   +    END;
MPRINT(EM_DIAGRAM):   END;
1699858   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699859   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1699860   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1699861   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1699862   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1699863   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1699864   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1699865   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1699866   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1699867   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1699868   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1699869   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699870   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699871   +      END;
MPRINT(EM_DIAGRAM):   END;
1699872   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699873   +      IF  NOT MISSING(MntMeatProducts ) AND
1699874   +                         598 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 598 <= MntMeatProducts THEN DO;
1699875   +        _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1699876   +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1699877   +        IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1699878   +          _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
1699879   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1699880   +          P_DepVar0  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15384615384615;
1699881   +          P_DepVar1  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84615384615384;
1699882   +          Q_DepVar0  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15384615384615;
1699883   +          Q_DepVar1  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84615384615384;
1699884   +          V_DepVar0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4;
1699885   +          V_DepVar1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.6;
1699886   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699887   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699888   +          END;
MPRINT(EM_DIAGRAM):   END;
1699889   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699890   +          _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
1699891   +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1699892   +          P_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.76;
1699893   +          P_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.24;
1699894   +          Q_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.76;
1699895   +          Q_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.24;
1699896   +          V_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.83333333333333;
1699897   +          V_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.16666666666666;
1699898   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1699899   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699900   +          END;
MPRINT(EM_DIAGRAM):   END;
1699901   +        END;
MPRINT(EM_DIAGRAM):   END;
1699902   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699903   +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
1699904   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1699905   +        P_DepVar0  =     0.86831275720164;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86831275720164;
1699906   +        P_DepVar1  =     0.13168724279835;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13168724279835;
1699907   +        Q_DepVar0  =     0.86831275720164;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.86831275720164;
1699908   +        Q_DepVar1  =     0.13168724279835;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.13168724279835;
1699909   +        V_DepVar0  =     0.85576923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.85576923076923;
1699910   +        V_DepVar1  =     0.14423076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.14423076923076;
1699911   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1699912   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699913   +        END;
MPRINT(EM_DIAGRAM):   END;
1699914   +      END;
MPRINT(EM_DIAGRAM):   END;
1699915   +    END;
MPRINT(EM_DIAGRAM):   END;
1699916   +  END;
MPRINT(EM_DIAGRAM):   END;
1699917   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699918   +  IF  NOT MISSING(Recency ) AND
1699919   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1699920   +    IF  NOT MISSING(MntMeatProducts ) AND
1699921   +                       431 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431 <= MntMeatProducts THEN DO;
1699922   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1699923   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1699924   +      IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1699925   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
1699926   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1699927   +        P_DepVar0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.65853658536585;
1699928   +        P_DepVar1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.34146341463414;
1699929   +        Q_DepVar0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.65853658536585;
1699930   +        Q_DepVar1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.34146341463414;
1699931   +        V_DepVar0  =               0.6875;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6875;
1699932   +        V_DepVar1  =               0.3125;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3125;
1699933   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1699934   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699935   +        END;
MPRINT(EM_DIAGRAM):   END;
1699936   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699937   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1699938   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1699939   +        P_DepVar0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05555555555555;
1699940   +        P_DepVar1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94444444444444;
1699941   +        Q_DepVar0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05555555555555;
1699942   +        Q_DepVar1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94444444444444;
1699943   +        V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1699944   +        V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1699945   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1699946   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1699947   +        END;
MPRINT(EM_DIAGRAM):   END;
1699948   +      END;
MPRINT(EM_DIAGRAM):   END;
1699949   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699950   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1699951   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1699952   +      P_DepVar0  =     0.84257602862254;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84257602862254;
1699953   +      P_DepVar1  =     0.15742397137745;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15742397137745;
1699954   +      Q_DepVar0  =     0.84257602862254;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84257602862254;
1699955   +      Q_DepVar1  =     0.15742397137745;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15742397137745;
1699956   +      V_DepVar0  =               0.8125;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8125;
1699957   +      V_DepVar1  =               0.1875;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.1875;
1699958   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1699959   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699960   +      END;
MPRINT(EM_DIAGRAM):   END;
1699961   +    END;
MPRINT(EM_DIAGRAM):   END;
1699962   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699963   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1699964   +    _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1699965   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1699966   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1699967   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1699968   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1699969   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1699970   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1699971   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1699972   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1699973   +    END;
MPRINT(EM_DIAGRAM):   END;
1699974   +  END;
MPRINT(EM_DIAGRAM):   END;
1699975   +
1699976   +*****  RESIDUALS R_ *************;
MPRINT(EM_DIAGRAM):   ***** RESIDUALS R_ *************;
1699977   +IF  F_DepVar  NE '0'
1699978   +AND F_DepVar  NE '1'  THEN DO;
MPRINT(EM_DIAGRAM):   IF F_DepVar NE '0' AND F_DepVar NE '1' THEN DO;
1699979   +        R_DepVar0  = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1699980   +        R_DepVar1  = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1699981   + END;
MPRINT(EM_DIAGRAM):   END;
1699982   + ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1699983   +       R_DepVar0  =  -P_DepVar0 ;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0 ;
1699984   +       R_DepVar1  =  -P_DepVar1 ;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1 ;
1699985   +       SELECT( F_DepVar  );
MPRINT(EM_DIAGRAM):   SELECT( F_DepVar );
1699986   +          WHEN( '0'  ) R_DepVar0  = R_DepVar0  +1;
MPRINT(EM_DIAGRAM):   WHEN( '0' ) R_DepVar0 = R_DepVar0 +1;
1699987   +          WHEN( '1'  ) R_DepVar1  = R_DepVar1  +1;
MPRINT(EM_DIAGRAM):   WHEN( '1' ) R_DepVar1 = R_DepVar1 +1;
1699988   +       END;
MPRINT(EM_DIAGRAM):   END;
1699989   + END;
MPRINT(EM_DIAGRAM):   END;
1699990   +
1699991   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1699992   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1699993   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1699994   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
1699995   +* Renaming variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming variables for Tree4;
1699996   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699997   +* Renaming Posterior variables for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Tree4;
1699998   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1699999   +drop Tree4_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar1;
1700000   +Tree4_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar1 = P_DepVar1;
1700001   +drop Tree4_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Tree4_P_DepVar0;
1700002   +Tree4_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Tree4_P_DepVar0 = P_DepVar0;
1700003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700004   +* Renaming _WARN_ variable for Tree4;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Tree4;
1700005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700006   +length Tree4_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Tree4_WARN_ $4;
1700007   +drop Tree4_WARN_;
MPRINT(EM_DIAGRAM):   drop Tree4_WARN_;
1700008   +Tree4_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Tree4_WARN_ = _WARN_;
1700009   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700010   +* Ensmbl4: Scoring Code of model 4 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 4 of 10;
1700011   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700013   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1700014   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1700015   +* NODE: Neural8;
MPRINT(EM_DIAGRAM):   * NODE: Neural8;
1700016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700017   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700018   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1700019   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700020   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1700021   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1700022   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1700023   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1700024   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1700025   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1700026   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1700027   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1700028   +LENGTH _WARN_ $4
1700029   +      F_DepVar  $ 12
1700030   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1700031   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1700032   +
1700033   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1700034   +
1700035   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1700036   +
1700037   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1700038   +
1700039   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1700040   +
1700041   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1700042   +
1700043   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1700044   +
1700045   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1700046   +
1700047   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1700048   +
1700049   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1700050   +
1700051   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1700052   +
1700053   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1700054   +
1700055   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1700056   +
1700057   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1700058   +
1700059   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1700060   +
1700061   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1700062   +
1700063   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1700064   +
1700065   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1700066   +
1700067   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1700068   +
1700069   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1700070   +
1700071   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1700072   +
1700073   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1700074   +
1700075   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1700076   +
1700077   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1700078   +
1700079   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1700080   +
1700081   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1700082   +
1700083   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1700084   +
1700085   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1700086   +
1700087   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1700088   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1700089   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1700090   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1700091   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1700092   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700093   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700094   +end;
MPRINT(EM_DIAGRAM):   end;
1700095   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700096   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700097   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1700098   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700099   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1700100   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1700101   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1700102   +   end;
MPRINT(EM_DIAGRAM):   end;
1700103   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1700104   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1700105   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1700106   +   end;
MPRINT(EM_DIAGRAM):   end;
1700107   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700108   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1700109   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1700110   +   end;
MPRINT(EM_DIAGRAM):   end;
1700111   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700112   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1700113   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1700114   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700115   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700116   +   end;
MPRINT(EM_DIAGRAM):   end;
1700117   +end;
MPRINT(EM_DIAGRAM):   end;
1700118   +
1700119   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700120   +*** Checking missing input Interval
1700121   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1700122   +
1700123   +IF NMISS(
1700124   +   AcceptedCmpTotal ,
1700125   +   Frq ,
1700126   +   Income ,
1700127   +   Mnt ,
1700128   +   MntGoldProds ,
1700129   +   MntMeatProducts ,
1700130   +   MntWines ,
1700131   +   NumDistPurchases ,
1700132   +   RFMstat ,
1700133   +   RMntFrq ,
1700134   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1700135   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1700136   +
1700137   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700138   +END;
MPRINT(EM_DIAGRAM):   END;
1700139   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700140   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1700141   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700142   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700143   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700144   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700145   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700146   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700147   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700148   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700149   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1700150   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700151   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700152   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700153   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700154   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700155   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700156   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700157   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700158   +END;
MPRINT(EM_DIAGRAM):   END;
1700159   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700160   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1700161   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700162   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700163   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1700164   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700165   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1700166   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700167   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1700168   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700169   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1700170   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700171   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1700172   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1700173   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700174   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700175   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1700176   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700177   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1700178   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700179   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700180   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1700181   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700182   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1700183   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700184   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1700185   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700186   +END;
MPRINT(EM_DIAGRAM):   END;
1700187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700188   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1700189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700190   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700191   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1700192   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700193   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700194   +   H11  =     0.33294813803267 * S_AcceptedCmpTotal  +    -1.24039573879629 *
1700195   +        S_Frq  +    -0.05312453396461 * S_Income  +    -1.10582794272994 *
1700196   +        S_Mnt  +    -0.07760643003938 * S_MntGoldProds
1700197   +          +     1.40615546889198 * S_MntMeatProducts
1700198   +          +    -0.07607000653866 * S_MntWines  +      1.3974050378538 *
1700199   +        S_NumDistPurchases  +     0.21523028866532 * S_RFMstat
1700200   +          +    -0.90250971189164 * S_RMntFrq  +    -0.29921926423225 *
1700201   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.33294813803267 * S_AcceptedCmpTotal + -1.24039573879629 * S_Frq
+ -0.05312453396461 * S_Income + -1.10582794272994 * S_Mnt + -0.07760643003938 *
S_MntGoldProds + 1.40615546889198 * S_MntMeatProducts + -0.07607000653866 * S_MntWines +
1.3974050378538 * S_NumDistPurchases + 0.21523028866532 * S_RFMstat + -0.90250971189164 *
S_RMntFrq + -0.29921926423225 * S_Recency ;
1700202   +   H12  =    -0.12895365437344 * S_AcceptedCmpTotal  +     -1.3313949600547 *
1700203   +        S_Frq  +    -1.37899106632441 * S_Income  +    -0.58761109294666 *
1700204   +        S_Mnt  +     0.35202206207132 * S_MntGoldProds
1700205   +          +     0.09184646817235 * S_MntMeatProducts
1700206   +          +     0.13335664554613 * S_MntWines  +     0.61353674232736 *
1700207   +        S_NumDistPurchases  +     0.35066529273924 * S_RFMstat
1700208   +          +     0.65664535290196 * S_RMntFrq  +    -0.18186117718946 *
1700209   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12895365437344 * S_AcceptedCmpTotal + -1.3313949600547 * S_Frq
+ -1.37899106632441 * S_Income + -0.58761109294666 * S_Mnt + 0.35202206207132 * S_MntGoldProds
+ 0.09184646817235 * S_MntMeatProducts + 0.13335664554613 * S_MntWines + 0.61353674232736 *
S_NumDistPurchases + 0.35066529273924 * S_RFMstat + 0.65664535290196 * S_RMntFrq +
-0.18186117718946 * S_Recency ;
1700210   +   H13  =     0.37357969261544 * S_AcceptedCmpTotal  +     0.39633284030412 *
1700211   +        S_Frq  +     0.64644973118257 * S_Income  +    -0.00934866805665 *
1700212   +        S_Mnt  +     0.34942371005238 * S_MntGoldProds
1700213   +          +     0.39891627134773 * S_MntMeatProducts
1700214   +          +    -0.03684678353498 * S_MntWines  +     1.02433172338367 *
1700215   +        S_NumDistPurchases  +     0.20910974889856 * S_RFMstat
1700216   +          +     0.07904474603466 * S_RMntFrq  +    -0.30357080495082 *
1700217   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.37357969261544 * S_AcceptedCmpTotal + 0.39633284030412 * S_Frq +
0.64644973118257 * S_Income + -0.00934866805665 * S_Mnt + 0.34942371005238 * S_MntGoldProds +
0.39891627134773 * S_MntMeatProducts + -0.03684678353498 * S_MntWines + 1.02433172338367 *
S_NumDistPurchases + 0.20910974889856 * S_RFMstat + 0.07904474603466 * S_RMntFrq +
-0.30357080495082 * S_Recency ;
1700218   +   H14  =     0.13554328647808 * S_AcceptedCmpTotal  +    -0.07048372524888 *
1700219   +        S_Frq  +     0.04610079419509 * S_Income  +     0.10924113857251 *
1700220   +        S_Mnt  +     0.12915488369242 * S_MntGoldProds
1700221   +          +     0.18610321199349 * S_MntMeatProducts
1700222   +          +     0.70556343816133 * S_MntWines  +     0.25728143320607 *
1700223   +        S_NumDistPurchases  +     0.15972524961567 * S_RFMstat
1700224   +          +     0.01276365258392 * S_RMntFrq  +    -0.66413982659745 *
1700225   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.13554328647808 * S_AcceptedCmpTotal + -0.07048372524888 * S_Frq
+ 0.04610079419509 * S_Income + 0.10924113857251 * S_Mnt + 0.12915488369242 * S_MntGoldProds +
0.18610321199349 * S_MntMeatProducts + 0.70556343816133 * S_MntWines + 0.25728143320607 *
S_NumDistPurchases + 0.15972524961567 * S_RFMstat + 0.01276365258392 * S_RMntFrq +
-0.66413982659745 * S_Recency ;
1700226   +   H15  =     -1.1420503402904 * S_AcceptedCmpTotal  +     0.71380555863062 *
1700227   +        S_Frq  +    -0.24803616582173 * S_Income  +     0.13154058420998 *
1700228   +        S_Mnt  +    -0.42749671288369 * S_MntGoldProds
1700229   +          +     -1.3154288229161 * S_MntMeatProducts
1700230   +          +      -0.255711705654 * S_MntWines  +     0.11914899881729 *
1700231   +        S_NumDistPurchases  +    -0.05982295822576 * S_RFMstat
1700232   +          +    -0.69679195615668 * S_RMntFrq  +    -0.21391830972623 *
1700233   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -1.1420503402904 * S_AcceptedCmpTotal + 0.71380555863062 * S_Frq +
-0.24803616582173 * S_Income + 0.13154058420998 * S_Mnt + -0.42749671288369 * S_MntGoldProds +
-1.3154288229161 * S_MntMeatProducts + -0.255711705654 * S_MntWines + 0.11914899881729 *
S_NumDistPurchases + -0.05982295822576 * S_RFMstat + -0.69679195615668 * S_RMntFrq +
-0.21391830972623 * S_Recency ;
1700234   +   H16  =     0.00981250946025 * S_AcceptedCmpTotal  +     0.04123504196179 *
1700235   +        S_Frq  +     0.12222635666431 * S_Income  +     0.29796072335771 *
1700236   +        S_Mnt  +     0.22410489312536 * S_MntGoldProds
1700237   +          +    -1.05184346257138 * S_MntMeatProducts
1700238   +          +     0.19959913357382 * S_MntWines  +    -0.69776033144787 *
1700239   +        S_NumDistPurchases  +    -0.40844675601616 * S_RFMstat
1700240   +          +    -0.86567751620087 * S_RMntFrq  +       0.363703677148 *
1700241   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.00981250946025 * S_AcceptedCmpTotal + 0.04123504196179 * S_Frq +
0.12222635666431 * S_Income + 0.29796072335771 * S_Mnt + 0.22410489312536 * S_MntGoldProds +
-1.05184346257138 * S_MntMeatProducts + 0.19959913357382 * S_MntWines + -0.69776033144787 *
S_NumDistPurchases + -0.40844675601616 * S_RFMstat + -0.86567751620087 * S_RMntFrq +
0.363703677148 * S_Recency ;
1700242   +   H17  =     0.94478838355387 * S_AcceptedCmpTotal  +    -0.70060201854486 *
1700243   +        S_Frq  +     -0.1828959052644 * S_Income  +    -0.69020858610444 *
1700244   +        S_Mnt  +    -0.10810625538739 * S_MntGoldProds
1700245   +          +     0.08623383006102 * S_MntMeatProducts
1700246   +          +    -0.10662594781542 * S_MntWines  +     0.49956982718189 *
1700247   +        S_NumDistPurchases  +    -0.52485639325545 * S_RFMstat
1700248   +          +    -0.21634639560711 * S_RMntFrq  +    -1.54075315391445 *
1700249   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = 0.94478838355387 * S_AcceptedCmpTotal + -0.70060201854486 * S_Frq
+ -0.1828959052644 * S_Income + -0.69020858610444 * S_Mnt + -0.10810625538739 * S_MntGoldProds
+ 0.08623383006102 * S_MntMeatProducts + -0.10662594781542 * S_MntWines + 0.49956982718189 *
S_NumDistPurchases + -0.52485639325545 * S_RFMstat + -0.21634639560711 * S_RMntFrq +
-1.54075315391445 * S_Recency ;
1700250   +   H11  = H11  +     0.16164655653565 * G_Marital_Status0
1700251   +          +     0.08705670063172 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16164655653565 * G_Marital_Status0 + 0.08705670063172 *
G_Marital_Status1 ;
1700252   +   H12  = H12  +     0.00173619463191 * G_Marital_Status0
1700253   +          +    -0.01602297769528 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00173619463191 * G_Marital_Status0 + -0.01602297769528 *
G_Marital_Status1 ;
1700254   +   H13  = H13  +    -0.20647507845797 * G_Marital_Status0
1700255   +          +    -0.14268881423356 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.20647507845797 * G_Marital_Status0 + -0.14268881423356 *
G_Marital_Status1 ;
1700256   +   H14  = H14  +     0.66515401547718 * G_Marital_Status0
1700257   +          +     0.13894686879381 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.66515401547718 * G_Marital_Status0 + 0.13894686879381 *
G_Marital_Status1 ;
1700258   +   H15  = H15  +    -0.10602970955306 * G_Marital_Status0
1700259   +          +     0.12966863964317 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.10602970955306 * G_Marital_Status0 + 0.12966863964317 *
G_Marital_Status1 ;
1700260   +   H16  = H16  +     0.25775977539205 * G_Marital_Status0
1700261   +          +     0.20902791963936 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.25775977539205 * G_Marital_Status0 + 0.20902791963936 *
G_Marital_Status1 ;
1700262   +   H17  = H17  +     0.54268893569335 * G_Marital_Status0
1700263   +          +     0.63641124967593 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.54268893569335 * G_Marital_Status0 + 0.63641124967593 *
G_Marital_Status1 ;
1700264   +   H11  =    -0.89307077259606 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.89307077259606 + H11 ;
1700265   +   H12  =    -0.52976269769549 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.52976269769549 + H12 ;
1700266   +   H13  =     1.93938724237609 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.93938724237609 + H13 ;
1700267   +   H14  =    -2.08624954900209 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.08624954900209 + H14 ;
1700268   +   H15  =     1.21926205411217 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.21926205411217 + H15 ;
1700269   +   H16  =    -0.82614580546756 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.82614580546756 + H16 ;
1700270   +   H17  =     0.88553151374376 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.88553151374376 + H17 ;
1700271   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1700272   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1700273   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1700274   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1700275   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1700276   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1700277   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1700278   +END;
MPRINT(EM_DIAGRAM):   END;
1700279   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700280   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1700281   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1700282   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1700283   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1700284   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1700285   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1700286   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1700287   +END;
MPRINT(EM_DIAGRAM):   END;
1700288   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700289   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1700290   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700291   +
1700292   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1700293   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1700294   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1700295   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1700296   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1700297   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700298   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1700299   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1700300   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1700301   +end;
MPRINT(EM_DIAGRAM):   end;
1700302   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700303   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1700304   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1700305   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1700306   +   end;
MPRINT(EM_DIAGRAM):   end;
1700307   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1700308   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1700309   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1700310   +   end;
MPRINT(EM_DIAGRAM):   end;
1700311   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700312   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1700313   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1700314   +   end;
MPRINT(EM_DIAGRAM):   end;
1700315   +end;
MPRINT(EM_DIAGRAM):   end;
1700316   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700317   +   P_DepVar1  =     2.95606472513759 * H11  +     1.89470964296724 * H12
1700318   +          +     1.54768089051578 * H13  +     1.66736822539449 * H14
1700319   +          +    -1.78269941197359 * H15  +    -1.37291423165719 * H16
1700320   +          +      2.0599951000352 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.95606472513759 * H11 + 1.89470964296724 * H12 +
1.54768089051578 * H13 + 1.66736822539449 * H14 + -1.78269941197359 * H15 + -1.37291423165719
* H16 + 2.0599951000352 * H17 ;
1700321   +   P_DepVar1  =    -1.26664447892937 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.26664447892937 + P_DepVar1 ;
1700322   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1700323   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1700324   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1700325   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1700326   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1700327   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1700328   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1700329   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1700330   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1700331   +END;
MPRINT(EM_DIAGRAM):   END;
1700332   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700333   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1700334   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1700335   +END;
MPRINT(EM_DIAGRAM):   END;
1700336   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1700337   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1700338   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1700339   +END;
MPRINT(EM_DIAGRAM):   END;
1700340   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1700341   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1700342   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1700343   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1700344   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1700345   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1700346   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1700347   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700348   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1700349   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700350   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1700351   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1700352   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1700353   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1700354   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1700355   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1700356   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1700357   +END;
MPRINT(EM_DIAGRAM):   END;
1700358   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1700359   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1700360   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1700361   +drop
1700362   +H11
1700363   +H12
1700364   +H13
1700365   +H14
1700366   +H15
1700367   +H16
1700368   +H17
1700369   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1700370   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1700371   +* Renaming variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural8;
1700372   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700373   +* Renaming Posterior variables for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural8;
1700374   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700375   +drop Neural8_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar1;
1700376   +Neural8_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar1 = P_DepVar1;
1700377   +drop Neural8_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural8_P_DepVar0;
1700378   +Neural8_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural8_P_DepVar0 = P_DepVar0;
1700379   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700380   +* Renaming _WARN_ variable for Neural8;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural8;
1700381   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700382   +length Neural8_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural8_WARN_ $4;
1700383   +drop Neural8_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural8_WARN_;
1700384   +Neural8_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural8_WARN_ = _WARN_;
1700385   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700386   +* Ensmbl4: Scoring Code of model 5 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 5 of 10;
1700387   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700388   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700389   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1700390   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1700391   +* NODE: Neural28;
MPRINT(EM_DIAGRAM):   * NODE: Neural28;
1700392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700393   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700394   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1700395   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700396   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1700397   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1700398   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1700399   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1700400   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1700401   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1700402   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1700403   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1700404   +LENGTH _WARN_ $4
1700405   +      F_DepVar  $ 12
1700406   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1700407   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1700408   +
1700409   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1700410   +
1700411   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1700412   +
1700413   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1700414   +
1700415   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1700416   +
1700417   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1700418   +
1700419   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1700420   +
1700421   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1700422   +
1700423   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1700424   +
1700425   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1700426   +
1700427   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1700428   +
1700429   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1700430   +
1700431   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1700432   +
1700433   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1700434   +
1700435   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1700436   +
1700437   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1700438   +
1700439   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1700440   +
1700441   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1700442   +
1700443   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1700444   +
1700445   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1700446   +
1700447   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1700448   +
1700449   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1700450   +
1700451   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1700452   +
1700453   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1700454   +
1700455   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1700456   +
1700457   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1700458   +
1700459   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1700460   +
1700461   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1700462   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1700463   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1700464   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1700465   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1700466   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700467   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700468   +end;
MPRINT(EM_DIAGRAM):   end;
1700469   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700470   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700471   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1700472   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700473   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1700474   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1700475   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1700476   +   end;
MPRINT(EM_DIAGRAM):   end;
1700477   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1700478   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1700479   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1700480   +   end;
MPRINT(EM_DIAGRAM):   end;
1700481   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700482   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1700483   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1700484   +   end;
MPRINT(EM_DIAGRAM):   end;
1700485   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700486   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1700487   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1700488   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700489   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700490   +   end;
MPRINT(EM_DIAGRAM):   end;
1700491   +end;
MPRINT(EM_DIAGRAM):   end;
1700492   +
1700493   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700494   +*** Checking missing input Interval
1700495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1700496   +
1700497   +IF NMISS(
1700498   +   AcceptedCmpTotal ,
1700499   +   Frq ,
1700500   +   Income ,
1700501   +   Mnt ,
1700502   +   MntGoldProds ,
1700503   +   MntMeatProducts ,
1700504   +   MntWines ,
1700505   +   NumDistPurchases ,
1700506   +   RFMstat ,
1700507   +   RMntFrq ,
1700508   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1700509   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1700510   +
1700511   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700512   +END;
MPRINT(EM_DIAGRAM):   END;
1700513   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700514   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1700515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700516   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700517   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700518   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700519   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700520   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700521   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700522   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700523   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1700524   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700525   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700526   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700527   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700528   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700529   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700530   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700531   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700532   +END;
MPRINT(EM_DIAGRAM):   END;
1700533   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700534   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1700535   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700536   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700537   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1700538   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700539   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1700540   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700541   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1700542   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700543   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1700544   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700545   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1700546   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1700547   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700548   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700549   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1700550   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700551   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1700552   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700553   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700554   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1700555   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700556   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1700557   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700558   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1700559   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700560   +END;
MPRINT(EM_DIAGRAM):   END;
1700561   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700562   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1700563   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700564   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700565   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1700566   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700567   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700568   +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
1700569   +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
1700570   +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
1700571   +          +    -0.05910355740416 * S_MntMeatProducts
1700572   +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
1700573   +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
1700574   +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
1700575   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 *
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq +
-1.02114645988925 * S_Recency ;
1700576   +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
1700577   +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
1700578   +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
1700579   +          +     0.09400377526937 * S_MntMeatProducts
1700580   +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
1700581   +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
1700582   +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
1700583   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 *
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq +
0.39055670382948 * S_Recency ;
1700584   +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
1700585   +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
1700586   +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
1700587   +          +    -1.62740823190029 * S_MntMeatProducts
1700588   +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
1700589   +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
1700590   +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
1700591   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds +
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 *
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq +
0.17699292292485 * S_Recency ;
1700592   +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
1700593   +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
1700594   +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
1700595   +          +      0.3965117290354 * S_MntMeatProducts
1700596   +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
1700597   +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
1700598   +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
1700599   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 *
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq +
-0.4091862538023 * S_Recency ;
1700600   +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
1700601   +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
1700602   +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
1700603   +          +     1.44231431118379 * S_MntMeatProducts
1700604   +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
1700605   +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
1700606   +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
1700607   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 *
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq +
-0.38411527089703 * S_Recency ;
1700608   +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
1700609   +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
1700610   +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
1700611   +          +    -0.44244305964257 * S_MntMeatProducts
1700612   +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
1700613   +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
1700614   +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
1700615   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 *
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines +
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 *
S_RMntFrq + -0.65176917675454 * S_Recency ;
1700616   +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
1700617   +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 *
G_Marital_Status1 ;
1700618   +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
1700619   +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 *
G_Marital_Status1 ;
1700620   +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
1700621   +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 *
G_Marital_Status1 ;
1700622   +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
1700623   +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 *
G_Marital_Status1 ;
1700624   +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
1700625   +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 *
G_Marital_Status1 ;
1700626   +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
1700627   +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 *
G_Marital_Status1 ;
1700628   +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
1700629   +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
1700630   +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
1700631   +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
1700632   +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
1700633   +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
1700634   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1700635   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1700636   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1700637   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1700638   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1700639   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1700640   +END;
MPRINT(EM_DIAGRAM):   END;
1700641   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700642   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1700643   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1700644   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1700645   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1700646   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1700647   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1700648   +END;
MPRINT(EM_DIAGRAM):   END;
1700649   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700650   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1700651   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700652   +
1700653   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1700654   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1700655   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1700656   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1700657   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1700658   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700659   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1700660   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1700661   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1700662   +end;
MPRINT(EM_DIAGRAM):   end;
1700663   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700664   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1700665   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1700666   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1700667   +   end;
MPRINT(EM_DIAGRAM):   end;
1700668   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1700669   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1700670   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1700671   +   end;
MPRINT(EM_DIAGRAM):   end;
1700672   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700673   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1700674   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1700675   +   end;
MPRINT(EM_DIAGRAM):   end;
1700676   +end;
MPRINT(EM_DIAGRAM):   end;
1700677   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700678   +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
1700679   +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
1700680   +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 +
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361
* H16 ;
1700681   +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
1700682   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1700683   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1700684   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1700685   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1700686   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1700687   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1700688   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1700689   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1700690   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1700691   +END;
MPRINT(EM_DIAGRAM):   END;
1700692   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700693   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1700694   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1700695   +END;
MPRINT(EM_DIAGRAM):   END;
1700696   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1700697   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1700698   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1700699   +END;
MPRINT(EM_DIAGRAM):   END;
1700700   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1700701   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1700702   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1700703   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1700704   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1700705   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1700706   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1700707   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700708   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1700709   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700710   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1700711   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1700712   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1700713   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1700714   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1700715   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1700716   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1700717   +END;
MPRINT(EM_DIAGRAM):   END;
1700718   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1700719   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1700720   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1700721   +drop
1700722   +H11
1700723   +H12
1700724   +H13
1700725   +H14
1700726   +H15
1700727   +H16
1700728   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1700729   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1700730   +* Renaming variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural28;
1700731   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700732   +* Renaming Posterior variables for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural28;
1700733   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700734   +drop Neural28_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar1;
1700735   +Neural28_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar1 = P_DepVar1;
1700736   +drop Neural28_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural28_P_DepVar0;
1700737   +Neural28_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural28_P_DepVar0 = P_DepVar0;
1700738   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700739   +* Renaming _WARN_ variable for Neural28;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural28;
1700740   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700741   +length Neural28_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural28_WARN_ $4;
1700742   +drop Neural28_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural28_WARN_;
1700743   +Neural28_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural28_WARN_ = _WARN_;
1700744   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700745   +* Ensmbl4: Scoring Code of model 6 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 6 of 10;
1700746   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700747   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700748   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1700749   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1700750   +* NODE: Neural27;
MPRINT(EM_DIAGRAM):   * NODE: Neural27;
1700751   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1700752   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700753   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1700754   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1700755   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1700756   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1700757   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1700758   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1700759   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1700760   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1700761   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1700762   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1700763   +LENGTH _WARN_ $4
1700764   +      F_DepVar  $ 12
1700765   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1700766   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1700767   +
1700768   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1700769   +
1700770   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1700771   +
1700772   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1700773   +
1700774   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1700775   +
1700776   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1700777   +
1700778   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1700779   +
1700780   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1700781   +
1700782   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1700783   +
1700784   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1700785   +
1700786   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1700787   +
1700788   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1700789   +
1700790   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1700791   +
1700792   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1700793   +
1700794   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1700795   +
1700796   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1700797   +
1700798   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1700799   +
1700800   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1700801   +
1700802   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1700803   +
1700804   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1700805   +
1700806   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1700807   +
1700808   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1700809   +
1700810   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1700811   +
1700812   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1700813   +
1700814   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1700815   +
1700816   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1700817   +
1700818   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1700819   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1700820   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1700821   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1700822   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1700823   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1700824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700825   +end;
MPRINT(EM_DIAGRAM):   end;
1700826   +else do;
MPRINT(EM_DIAGRAM):   else do;
1700827   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1700828   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1700829   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1700830   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1700831   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1700832   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1700833   +   end;
MPRINT(EM_DIAGRAM):   end;
1700834   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1700835   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1700836   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1700837   +   end;
MPRINT(EM_DIAGRAM):   end;
1700838   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1700839   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1700840   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1700841   +   end;
MPRINT(EM_DIAGRAM):   end;
1700842   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1700843   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1700844   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1700845   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1700846   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700847   +   end;
MPRINT(EM_DIAGRAM):   end;
1700848   +end;
MPRINT(EM_DIAGRAM):   end;
1700849   +
1700850   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700851   +*** Checking missing input Interval
1700852   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1700853   +
1700854   +IF NMISS(
1700855   +   AcceptedCmpTotal ,
1700856   +   Frq ,
1700857   +   Income ,
1700858   +   Mnt ,
1700859   +   MntGoldProds ,
1700860   +   MntMeatProducts ,
1700861   +   MntWines ,
1700862   +   NumDistPurchases ,
1700863   +   RFMstat ,
1700864   +   RMntFrq ,
1700865   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1700866   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1700867   +
1700868   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1700869   +END;
MPRINT(EM_DIAGRAM):   END;
1700870   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700871   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1700872   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700873   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700874   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700875   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700876   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700877   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700878   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700879   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700880   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1700881   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700882   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700883   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700884   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700885   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700886   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700887   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700888   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700889   +END;
MPRINT(EM_DIAGRAM):   END;
1700890   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700891   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1700892   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1700893   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1700894   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1700895   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1700896   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1700897   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1700898   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1700899   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1700900   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1700901   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1700902   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1700903   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1700904   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1700905   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1700906   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1700907   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1700908   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1700909   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1700910   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1700911   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1700912   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1700913   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1700914   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1700915   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1700916   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1700917   +END;
MPRINT(EM_DIAGRAM):   END;
1700918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700919   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1700920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700922   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1700923   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700924   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1700925   +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
1700926   +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
1700927   +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
1700928   +          +      0.5764056033267 * S_MntMeatProducts
1700929   +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
1700930   +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
1700931   +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
1700932   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 *
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq +
-0.66847972845367 * S_Recency ;
1700933   +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
1700934   +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
1700935   +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
1700936   +          +      0.5452732097143 * S_MntMeatProducts
1700937   +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
1700938   +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
1700939   +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
1700940   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 *
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq +
-0.36679237964697 * S_Recency ;
1700941   +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
1700942   +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
1700943   +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
1700944   +          +     -0.9040019705776 * S_MntMeatProducts
1700945   +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
1700946   +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
1700947   +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
1700948   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 *
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq +
0.36876094021551 * S_Recency ;
1700949   +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
1700950   +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
1700951   +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
1700952   +          +     1.04227983605332 * S_MntMeatProducts
1700953   +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
1700954   +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
1700955   +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
1700956   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 *
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines +
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 *
S_RMntFrq + -0.00929531662146 * S_Recency ;
1700957   +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
1700958   +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
1700959   +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
1700960   +          +     0.23454153115636 * S_MntMeatProducts
1700961   +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
1700962   +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
1700963   +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
1700964   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq +
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds +
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 *
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq +
0.62117853933635 * S_Recency ;
1700965   +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
1700966   +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 *
G_Marital_Status1 ;
1700967   +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
1700968   +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 *
G_Marital_Status1 ;
1700969   +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
1700970   +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 *
G_Marital_Status1 ;
1700971   +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
1700972   +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 *
G_Marital_Status1 ;
1700973   +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
1700974   +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 *
G_Marital_Status1 ;
1700975   +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
1700976   +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
1700977   +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
1700978   +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
1700979   +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
1700980   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1700981   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1700982   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1700983   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1700984   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1700985   +END;
MPRINT(EM_DIAGRAM):   END;
1700986   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1700987   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1700988   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1700989   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1700990   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1700991   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1700992   +END;
MPRINT(EM_DIAGRAM):   END;
1700993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700994   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1700995   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1700996   +
1700997   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1700998   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1700999   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701000   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1701001   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1701002   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701003   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1701004   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701005   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701006   +end;
MPRINT(EM_DIAGRAM):   end;
1701007   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701008   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1701009   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1701010   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1701011   +   end;
MPRINT(EM_DIAGRAM):   end;
1701012   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1701013   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1701014   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1701015   +   end;
MPRINT(EM_DIAGRAM):   end;
1701016   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701017   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701018   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701019   +   end;
MPRINT(EM_DIAGRAM):   end;
1701020   +end;
MPRINT(EM_DIAGRAM):   end;
1701021   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701022   +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
1701023   +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
1701024   +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 +
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
1701025   +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
1701026   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1701027   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1701028   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701029   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1701030   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1701031   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1701032   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1701033   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1701034   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1701035   +END;
MPRINT(EM_DIAGRAM):   END;
1701036   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701037   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1701038   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1701039   +END;
MPRINT(EM_DIAGRAM):   END;
1701040   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1701041   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1701042   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1701043   +END;
MPRINT(EM_DIAGRAM):   END;
1701044   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1701045   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1701046   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1701047   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1701048   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1701049   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1701050   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1701051   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701052   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1701053   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701054   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1701055   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1701056   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1701057   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1701058   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1701059   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1701060   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1701061   +END;
MPRINT(EM_DIAGRAM):   END;
1701062   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701063   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1701064   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701065   +drop
1701066   +H11
1701067   +H12
1701068   +H13
1701069   +H14
1701070   +H15
1701071   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1701072   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1701073   +* Renaming variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural27;
1701074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701075   +* Renaming Posterior variables for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural27;
1701076   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701077   +drop Neural27_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar1;
1701078   +Neural27_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar1 = P_DepVar1;
1701079   +drop Neural27_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural27_P_DepVar0;
1701080   +Neural27_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural27_P_DepVar0 = P_DepVar0;
1701081   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701082   +* Renaming _WARN_ variable for Neural27;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural27;
1701083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701084   +length Neural27_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural27_WARN_ $4;
1701085   +drop Neural27_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural27_WARN_;
1701086   +Neural27_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural27_WARN_ = _WARN_;
1701087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701088   +* Ensmbl4: Scoring Code of model 7 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 7 of 10;
1701089   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701090   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701091   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1701092   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1701093   +* NODE: Neural26;
MPRINT(EM_DIAGRAM):   * NODE: Neural26;
1701094   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701095   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1701096   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1701097   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1701098   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1701099   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1701100   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1701101   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1701102   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1701103   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1701104   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1701105   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1701106   +LENGTH _WARN_ $4
1701107   +      F_DepVar  $ 12
1701108   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1701109   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1701110   +
1701111   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1701112   +
1701113   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1701114   +
1701115   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1701116   +
1701117   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1701118   +
1701119   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1701120   +
1701121   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1701122   +
1701123   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1701124   +
1701125   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1701126   +
1701127   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1701128   +
1701129   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1701130   +
1701131   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1701132   +
1701133   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1701134   +
1701135   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1701136   +
1701137   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1701138   +
1701139   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1701140   +
1701141   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1701142   +
1701143   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1701144   +
1701145   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701146   +
1701147   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1701148   +
1701149   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1701150   +
1701151   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1701152   +
1701153   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1701154   +
1701155   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1701156   +
1701157   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1701158   +
1701159   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1701160   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1701161   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1701162   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1701163   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1701164   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701165   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701166   +end;
MPRINT(EM_DIAGRAM):   end;
1701167   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701168   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701169   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1701170   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701171   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1701172   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1701173   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1701174   +   end;
MPRINT(EM_DIAGRAM):   end;
1701175   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1701176   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1701177   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1701178   +   end;
MPRINT(EM_DIAGRAM):   end;
1701179   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701180   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1701181   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1701182   +   end;
MPRINT(EM_DIAGRAM):   end;
1701183   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701184   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1701185   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1701186   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701187   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701188   +   end;
MPRINT(EM_DIAGRAM):   end;
1701189   +end;
MPRINT(EM_DIAGRAM):   end;
1701190   +
1701191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701192   +*** Checking missing input Interval
1701193   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1701194   +
1701195   +IF NMISS(
1701196   +   AcceptedCmpTotal ,
1701197   +   Frq ,
1701198   +   Income ,
1701199   +   Mnt ,
1701200   +   MntGoldProds ,
1701201   +   MntMeatProducts ,
1701202   +   MntWines ,
1701203   +   NumDistPurchases ,
1701204   +   RFMstat ,
1701205   +   RMntFrq ,
1701206   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1701207   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1701208   +
1701209   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701210   +END;
MPRINT(EM_DIAGRAM):   END;
1701211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701212   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1701213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701214   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701215   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701216   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701217   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701218   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701219   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701220   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701221   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1701222   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701223   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701224   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701225   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701226   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701227   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701228   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701229   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701230   +END;
MPRINT(EM_DIAGRAM):   END;
1701231   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701232   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1701233   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701234   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701235   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1701236   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701237   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1701238   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701239   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1701240   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701241   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1701242   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701243   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1701244   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1701245   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701246   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701247   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1701248   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701249   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1701250   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701251   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701252   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1701253   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701254   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1701255   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701256   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1701257   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701258   +END;
MPRINT(EM_DIAGRAM):   END;
1701259   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701260   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1701261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701263   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1701264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701265   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701266   +   H11  =    -0.52455774235062 * S_AcceptedCmpTotal  +      0.8466329583809 *
1701267   +        S_Frq  +    -0.24140635088555 * S_Income  +     1.10423984303161 *
1701268   +        S_Mnt  +    -0.01619058875438 * S_MntGoldProds
1701269   +          +    -0.55263908764573 * S_MntMeatProducts
1701270   +          +    -0.70001086687566 * S_MntWines  +    -0.13954000532733 *
1701271   +        S_NumDistPurchases  +     0.13318250375153 * S_RFMstat
1701272   +          +      0.4272420646455 * S_RMntFrq  +     0.41719267652064 *
1701273   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.52455774235062 * S_AcceptedCmpTotal + 0.8466329583809 * S_Frq +
-0.24140635088555 * S_Income + 1.10423984303161 * S_Mnt + -0.01619058875438 * S_MntGoldProds +
-0.55263908764573 * S_MntMeatProducts + -0.70001086687566 * S_MntWines + -0.13954000532733 *
S_NumDistPurchases + 0.13318250375153 * S_RFMstat + 0.4272420646455 * S_RMntFrq +
0.41719267652064 * S_Recency ;
1701274   +   H12  =    -0.04686202753184 * S_AcceptedCmpTotal  +     1.54159677165215 *
1701275   +        S_Frq  +      1.5876209259654 * S_Income  +      0.5309695784835 *
1701276   +        S_Mnt  +    -0.52971373734216 * S_MntGoldProds
1701277   +          +     0.06735454992171 * S_MntMeatProducts
1701278   +          +    -0.65753196206072 * S_MntWines  +    -0.43284750594408 *
1701279   +        S_NumDistPurchases  +    -0.15176413476147 * S_RFMstat
1701280   +          +    -0.45476834326399 * S_RMntFrq  +     0.41776804290571 *
1701281   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.04686202753184 * S_AcceptedCmpTotal + 1.54159677165215 * S_Frq
+ 1.5876209259654 * S_Income + 0.5309695784835 * S_Mnt + -0.52971373734216 * S_MntGoldProds +
0.06735454992171 * S_MntMeatProducts + -0.65753196206072 * S_MntWines + -0.43284750594408 *
S_NumDistPurchases + -0.15176413476147 * S_RFMstat + -0.45476834326399 * S_RMntFrq +
0.41776804290571 * S_Recency ;
1701282   +   H13  =    -0.31352262917412 * S_AcceptedCmpTotal  +     1.63883520018095 *
1701283   +        S_Frq  +     0.02249756771349 * S_Income  +     0.21682603962115 *
1701284   +        S_Mnt  +     0.15589923965689 * S_MntGoldProds
1701285   +          +    -3.43308711980096 * S_MntMeatProducts
1701286   +          +    -0.25180710956094 * S_MntWines  +    -1.36606037284233 *
1701287   +        S_NumDistPurchases  +    -0.42313397988951 * S_RFMstat
1701288   +          +     0.07406816799464 * S_RMntFrq  +     0.32607822998847 *
1701289   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.31352262917412 * S_AcceptedCmpTotal + 1.63883520018095 * S_Frq
+ 0.02249756771349 * S_Income + 0.21682603962115 * S_Mnt + 0.15589923965689 * S_MntGoldProds +
-3.43308711980096 * S_MntMeatProducts + -0.25180710956094 * S_MntWines + -1.36606037284233 *
S_NumDistPurchases + -0.42313397988951 * S_RFMstat + 0.07406816799464 * S_RMntFrq +
0.32607822998847 * S_Recency ;
1701290   +   H14  =     0.40033548790491 * S_AcceptedCmpTotal  +    -0.40354500664934 *
1701291   +        S_Frq  +      0.3774879421468 * S_Income  +    -0.16410506362553 *
1701292   +        S_Mnt  +     0.02885736564162 * S_MntGoldProds
1701293   +          +     0.71381843077774 * S_MntMeatProducts
1701294   +          +    -0.26487063623892 * S_MntWines  +     1.18188766928145 *
1701295   +        S_NumDistPurchases  +      0.1157647927608 * S_RFMstat
1701296   +          +    -0.05680377377798 * S_RMntFrq  +    -0.89452100436419 *
1701297   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.40033548790491 * S_AcceptedCmpTotal + -0.40354500664934 * S_Frq
+ 0.3774879421468 * S_Income + -0.16410506362553 * S_Mnt + 0.02885736564162 * S_MntGoldProds +
0.71381843077774 * S_MntMeatProducts + -0.26487063623892 * S_MntWines + 1.18188766928145 *
S_NumDistPurchases + 0.1157647927608 * S_RFMstat + -0.05680377377798 * S_RMntFrq +
-0.89452100436419 * S_Recency ;
1701298   +   H11  = H11  +    -0.53031970918814 * G_Marital_Status0
1701299   +          +    -0.23001488541689 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.53031970918814 * G_Marital_Status0 + -0.23001488541689 *
G_Marital_Status1 ;
1701300   +   H12  = H12  +     0.29542224963064 * G_Marital_Status0
1701301   +          +    -0.13806446525096 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.29542224963064 * G_Marital_Status0 + -0.13806446525096 *
G_Marital_Status1 ;
1701302   +   H13  = H13  +    -0.03108243750652 * G_Marital_Status0
1701303   +          +     0.08210849129934 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.03108243750652 * G_Marital_Status0 + 0.08210849129934 *
G_Marital_Status1 ;
1701304   +   H14  = H14  +     0.42709681519893 * G_Marital_Status0
1701305   +          +     0.09450701323627 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42709681519893 * G_Marital_Status0 + 0.09450701323627 *
G_Marital_Status1 ;
1701306   +   H11  =    -0.80237558754999 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.80237558754999 + H11 ;
1701307   +   H12  =     0.47909013828426 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.47909013828426 + H12 ;
1701308   +   H13  =    -1.98531714916096 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.98531714916096 + H13 ;
1701309   +   H14  =    -3.14128712464503 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -3.14128712464503 + H14 ;
1701310   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1701311   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1701312   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1701313   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1701314   +END;
MPRINT(EM_DIAGRAM):   END;
1701315   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701316   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1701317   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1701318   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1701319   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1701320   +END;
MPRINT(EM_DIAGRAM):   END;
1701321   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701322   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1701323   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701324   +
1701325   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1701326   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1701327   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701328   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1701329   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1701330   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701331   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1701332   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701333   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701334   +end;
MPRINT(EM_DIAGRAM):   end;
1701335   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701336   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1701337   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1701338   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1701339   +   end;
MPRINT(EM_DIAGRAM):   end;
1701340   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1701341   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1701342   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1701343   +   end;
MPRINT(EM_DIAGRAM):   end;
1701344   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701345   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701346   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701347   +   end;
MPRINT(EM_DIAGRAM):   end;
1701348   +end;
MPRINT(EM_DIAGRAM):   end;
1701349   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701350   +   P_DepVar1  =    -2.49130347768925 * H11  +    -2.38718075390418 * H12
1701351   +          +    -5.92002796763835 * H13  +     4.95923742700541 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49130347768925 * H11 + -2.38718075390418 * H12 +
-5.92002796763835 * H13 + 4.95923742700541 * H14 ;
1701352   +   P_DepVar1  =    -2.59807662162616 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.59807662162616 + P_DepVar1 ;
1701353   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1701354   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1701355   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701356   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1701357   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1701358   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1701359   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1701360   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1701361   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1701362   +END;
MPRINT(EM_DIAGRAM):   END;
1701363   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701364   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1701365   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1701366   +END;
MPRINT(EM_DIAGRAM):   END;
1701367   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1701368   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1701369   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1701370   +END;
MPRINT(EM_DIAGRAM):   END;
1701371   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1701372   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1701373   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1701374   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1701375   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1701376   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1701377   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1701378   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701379   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1701380   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701381   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1701382   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1701383   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1701384   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1701385   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1701386   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1701387   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1701388   +END;
MPRINT(EM_DIAGRAM):   END;
1701389   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701390   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1701391   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701392   +drop
1701393   +H11
1701394   +H12
1701395   +H13
1701396   +H14
1701397   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1701398   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1701399   +* Renaming variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural26;
1701400   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701401   +* Renaming Posterior variables for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural26;
1701402   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701403   +drop Neural26_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar1;
1701404   +Neural26_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar1 = P_DepVar1;
1701405   +drop Neural26_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural26_P_DepVar0;
1701406   +Neural26_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural26_P_DepVar0 = P_DepVar0;
1701407   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701408   +* Renaming _WARN_ variable for Neural26;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural26;
1701409   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701410   +length Neural26_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural26_WARN_ $4;
1701411   +drop Neural26_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural26_WARN_;
1701412   +Neural26_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural26_WARN_ = _WARN_;
1701413   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701414   +* Ensmbl4: Scoring Code of model 8 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 8 of 10;
1701415   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701417   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1701418   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1701419   +* NODE: Neural25;
MPRINT(EM_DIAGRAM):   * NODE: Neural25;
1701420   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701421   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1701422   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1701423   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1701424   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1701425   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1701426   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1701427   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1701428   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1701429   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1701430   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1701431   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1701432   +LENGTH _WARN_ $4
1701433   +      F_DepVar  $ 12
1701434   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1701435   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1701436   +
1701437   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1701438   +
1701439   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1701440   +
1701441   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1701442   +
1701443   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1701444   +
1701445   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1701446   +
1701447   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1701448   +
1701449   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1701450   +
1701451   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1701452   +
1701453   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1701454   +
1701455   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1701456   +
1701457   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1701458   +
1701459   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1701460   +
1701461   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1701462   +
1701463   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1701464   +
1701465   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1701466   +
1701467   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1701468   +
1701469   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701470   +
1701471   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1701472   +
1701473   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1701474   +
1701475   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1701476   +
1701477   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1701478   +
1701479   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1701480   +
1701481   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1701482   +
1701483   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1701484   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1701485   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1701486   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1701487   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1701488   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701489   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701490   +end;
MPRINT(EM_DIAGRAM):   end;
1701491   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701492   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701493   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1701494   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701495   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1701496   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1701497   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1701498   +   end;
MPRINT(EM_DIAGRAM):   end;
1701499   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1701500   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1701501   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1701502   +   end;
MPRINT(EM_DIAGRAM):   end;
1701503   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701504   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1701505   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1701506   +   end;
MPRINT(EM_DIAGRAM):   end;
1701507   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701508   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1701509   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1701510   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701511   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701512   +   end;
MPRINT(EM_DIAGRAM):   end;
1701513   +end;
MPRINT(EM_DIAGRAM):   end;
1701514   +
1701515   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701516   +*** Checking missing input Interval
1701517   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1701518   +
1701519   +IF NMISS(
1701520   +   AcceptedCmpTotal ,
1701521   +   Frq ,
1701522   +   Income ,
1701523   +   Mnt ,
1701524   +   MntGoldProds ,
1701525   +   MntMeatProducts ,
1701526   +   MntWines ,
1701527   +   NumDistPurchases ,
1701528   +   RFMstat ,
1701529   +   RMntFrq ,
1701530   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1701531   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1701532   +
1701533   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701534   +END;
MPRINT(EM_DIAGRAM):   END;
1701535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701536   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1701537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701538   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701539   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701540   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701541   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701542   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701543   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701544   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701545   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1701546   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701547   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701548   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701549   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701550   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701551   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701552   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701553   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701554   +END;
MPRINT(EM_DIAGRAM):   END;
1701555   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701556   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1701557   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701558   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701559   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1701560   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701561   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1701562   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701563   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1701564   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701565   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1701566   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701567   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1701568   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1701569   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701570   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701571   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1701572   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701573   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1701574   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701575   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701576   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1701577   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701578   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1701579   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701580   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1701581   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701582   +END;
MPRINT(EM_DIAGRAM):   END;
1701583   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701584   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1701585   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701586   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701587   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1701588   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701589   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701590   +   H11  =     0.20833273713311 * S_AcceptedCmpTotal  +    -1.28879417764689 *
1701591   +        S_Frq  +    -0.14086556075478 * S_Income  +    -2.23301771255995 *
1701592   +        S_Mnt  +     0.04592092677357 * S_MntGoldProds
1701593   +          +     1.62567194377193 * S_MntMeatProducts
1701594   +          +    -0.49127366492531 * S_MntWines  +     1.91685226043524 *
1701595   +        S_NumDistPurchases  +    -0.04138556513564 * S_RFMstat
1701596   +          +    -0.13653085001127 * S_RMntFrq  +    -0.23945986763214 *
1701597   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.20833273713311 * S_AcceptedCmpTotal + -1.28879417764689 * S_Frq
+ -0.14086556075478 * S_Income + -2.23301771255995 * S_Mnt + 0.04592092677357 * S_MntGoldProds
+ 1.62567194377193 * S_MntMeatProducts + -0.49127366492531 * S_MntWines + 1.91685226043524 *
S_NumDistPurchases + -0.04138556513564 * S_RFMstat + -0.13653085001127 * S_RMntFrq +
-0.23945986763214 * S_Recency ;
1701598   +   H12  =    -0.34458302979772 * S_AcceptedCmpTotal  +     0.83835958311689 *
1701599   +        S_Frq  +     0.58985038025342 * S_Income  +    -0.01368105632672 *
1701600   +        S_Mnt  +      0.3019310576853 * S_MntGoldProds
1701601   +          +     0.07606634413103 * S_MntMeatProducts
1701602   +          +    -0.13247646610361 * S_MntWines  +    -0.50915989225259 *
1701603   +        S_NumDistPurchases  +    -0.04564926690665 * S_RFMstat
1701604   +          +     0.55193961730225 * S_RMntFrq  +     0.39404724414688 *
1701605   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.34458302979772 * S_AcceptedCmpTotal + 0.83835958311689 * S_Frq
+ 0.58985038025342 * S_Income + -0.01368105632672 * S_Mnt + 0.3019310576853 * S_MntGoldProds +
0.07606634413103 * S_MntMeatProducts + -0.13247646610361 * S_MntWines + -0.50915989225259 *
S_NumDistPurchases + -0.04564926690665 * S_RFMstat + 0.55193961730225 * S_RMntFrq +
0.39404724414688 * S_Recency ;
1701606   +   H13  =    -0.26674190510231 * S_AcceptedCmpTotal  +    -0.06490296283402 *
1701607   +        S_Frq  +    -0.00949495425001 * S_Income  +     0.37442854620852 *
1701608   +        S_Mnt  +     -0.1257892331131 * S_MntGoldProds
1701609   +          +    -0.28812884998766 * S_MntMeatProducts
1701610   +          +    -0.20316845095305 * S_MntWines  +    -0.03921402518774 *
1701611   +        S_NumDistPurchases  +    -0.03320245186228 * S_RFMstat
1701612   +          +    -0.30369395822298 * S_RMntFrq  +     0.46294177326732 *
1701613   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26674190510231 * S_AcceptedCmpTotal + -0.06490296283402 * S_Frq
+ -0.00949495425001 * S_Income + 0.37442854620852 * S_Mnt + -0.1257892331131 * S_MntGoldProds
+ -0.28812884998766 * S_MntMeatProducts + -0.20316845095305 * S_MntWines + -0.03921402518774 *
S_NumDistPurchases + -0.03320245186228 * S_RFMstat + -0.30369395822298 * S_RMntFrq +
0.46294177326732 * S_Recency ;
1701614   +   H11  = H11  +    -0.10367293898875 * G_Marital_Status0
1701615   +          +     0.15277764144522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10367293898875 * G_Marital_Status0 + 0.15277764144522 *
G_Marital_Status1 ;
1701616   +   H12  = H12  +     -0.7297577327843 * G_Marital_Status0
1701617   +          +    -1.01396607857406 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.7297577327843 * G_Marital_Status0 + -1.01396607857406 *
G_Marital_Status1 ;
1701618   +   H13  = H13  +     -0.1454175222715 * G_Marital_Status0
1701619   +          +     0.15056066026671 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1454175222715 * G_Marital_Status0 + 0.15056066026671 *
G_Marital_Status1 ;
1701620   +   H11  =    -1.28493655880358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.28493655880358 + H11 ;
1701621   +   H12  =     -2.3952804585862 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.3952804585862 + H12 ;
1701622   +   H13  =     0.99289226061194 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.99289226061194 + H13 ;
1701623   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1701624   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1701625   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1701626   +END;
MPRINT(EM_DIAGRAM):   END;
1701627   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701628   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1701629   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1701630   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1701631   +END;
MPRINT(EM_DIAGRAM):   END;
1701632   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701633   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1701634   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701635   +
1701636   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1701637   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1701638   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701639   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1701640   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1701641   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701642   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1701643   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701644   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701645   +end;
MPRINT(EM_DIAGRAM):   end;
1701646   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701647   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1701648   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1701649   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1701650   +   end;
MPRINT(EM_DIAGRAM):   end;
1701651   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1701652   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1701653   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1701654   +   end;
MPRINT(EM_DIAGRAM):   end;
1701655   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701656   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701657   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701658   +   end;
MPRINT(EM_DIAGRAM):   end;
1701659   +end;
MPRINT(EM_DIAGRAM):   end;
1701660   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701661   +   P_DepVar1  =      3.9868350141384 * H11  +    -2.54575725573216 * H12
1701662   +          +    -5.97596011661307 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.9868350141384 * H11 + -2.54575725573216 * H12 +
-5.97596011661307 * H13 ;
1701663   +   P_DepVar1  =     0.85313461945475 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85313461945475 + P_DepVar1 ;
1701664   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1701665   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1701666   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701667   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1701668   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1701669   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1701670   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1701671   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1701672   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1701673   +END;
MPRINT(EM_DIAGRAM):   END;
1701674   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701675   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1701676   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1701677   +END;
MPRINT(EM_DIAGRAM):   END;
1701678   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1701679   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1701680   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1701681   +END;
MPRINT(EM_DIAGRAM):   END;
1701682   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1701683   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1701684   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1701685   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1701686   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1701687   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1701688   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1701689   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701690   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1701691   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701692   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1701693   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1701694   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1701695   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1701696   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1701697   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1701698   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1701699   +END;
MPRINT(EM_DIAGRAM):   END;
1701700   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701701   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1701702   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701703   +drop
1701704   +H11
1701705   +H12
1701706   +H13
1701707   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1701708   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1701709   +* Renaming variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural25;
1701710   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701711   +* Renaming Posterior variables for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural25;
1701712   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701713   +drop Neural25_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar1;
1701714   +Neural25_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar1 = P_DepVar1;
1701715   +drop Neural25_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural25_P_DepVar0;
1701716   +Neural25_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural25_P_DepVar0 = P_DepVar0;
1701717   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701718   +* Renaming _WARN_ variable for Neural25;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural25;
1701719   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701720   +length Neural25_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural25_WARN_ $4;
1701721   +drop Neural25_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural25_WARN_;
1701722   +Neural25_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural25_WARN_ = _WARN_;
1701723   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701724   +* Ensmbl4: Scoring Code of model 9 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 9 of 10;
1701725   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701726   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701727   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1701728   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1701729   +* NODE: Neural24;
MPRINT(EM_DIAGRAM):   * NODE: Neural24;
1701730   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1701731   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1701732   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1701733   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1701734   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1701735   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1701736   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1701737   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1701738   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1701739   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1701740   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1701741   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1701742   +LENGTH _WARN_ $4
1701743   +      F_DepVar  $ 12
1701744   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1701745   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1701746   +
1701747   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1701748   +
1701749   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1701750   +
1701751   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1701752   +
1701753   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1701754   +
1701755   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1701756   +
1701757   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1701758   +
1701759   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1701760   +
1701761   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1701762   +
1701763   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1701764   +
1701765   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1701766   +
1701767   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1701768   +
1701769   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1701770   +
1701771   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1701772   +
1701773   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1701774   +
1701775   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1701776   +
1701777   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701778   +
1701779   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1701780   +
1701781   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1701782   +
1701783   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1701784   +
1701785   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1701786   +
1701787   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1701788   +
1701789   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1701790   +
1701791   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1701792   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1701793   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1701794   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1701795   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1701796   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1701797   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701798   +end;
MPRINT(EM_DIAGRAM):   end;
1701799   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701800   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1701801   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1701802   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701803   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1701804   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1701805   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1701806   +   end;
MPRINT(EM_DIAGRAM):   end;
1701807   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1701808   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1701809   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1701810   +   end;
MPRINT(EM_DIAGRAM):   end;
1701811   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1701812   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1701813   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1701814   +   end;
MPRINT(EM_DIAGRAM):   end;
1701815   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701816   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1701817   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1701818   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1701819   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701820   +   end;
MPRINT(EM_DIAGRAM):   end;
1701821   +end;
MPRINT(EM_DIAGRAM):   end;
1701822   +
1701823   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701824   +*** Checking missing input Interval
1701825   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1701826   +
1701827   +IF NMISS(
1701828   +   AcceptedCmpTotal ,
1701829   +   Frq ,
1701830   +   Income ,
1701831   +   Mnt ,
1701832   +   MntGoldProds ,
1701833   +   MntMeatProducts ,
1701834   +   MntWines ,
1701835   +   NumDistPurchases ,
1701836   +   RFMstat ,
1701837   +   RMntFrq ,
1701838   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1701839   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1701840   +
1701841   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1701842   +END;
MPRINT(EM_DIAGRAM):   END;
1701843   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701844   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1701845   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701846   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701847   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701848   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701849   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701850   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701851   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701852   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701853   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1701854   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701855   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701856   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701857   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701858   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701859   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701860   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701861   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701862   +END;
MPRINT(EM_DIAGRAM):   END;
1701863   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701864   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1701865   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1701866   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1701867   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1701868   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1701869   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1701870   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1701871   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1701872   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1701873   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1701874   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1701875   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1701876   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1701877   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1701878   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1701879   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1701880   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1701881   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1701882   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1701883   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1701884   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1701885   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1701886   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1701887   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1701888   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1701889   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1701890   +END;
MPRINT(EM_DIAGRAM):   END;
1701891   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701892   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1701893   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701894   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701895   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1701896   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701897   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701898   +   H11  =       0.064809950631 * S_AcceptedCmpTotal  +    -0.11974361887376 *
1701899   +        S_Frq  +    -0.05034272281408 * S_Income  +    -1.03632740142884 *
1701900   +        S_Mnt  +      0.0570619696315 * S_MntGoldProds
1701901   +          +     0.44757705806877 * S_MntMeatProducts
1701902   +          +     0.15555176595882 * S_MntWines  +     0.29237363949433 *
1701903   +        S_NumDistPurchases  +     0.01513588595143 * S_RFMstat
1701904   +          +     0.15267139118817 * S_RMntFrq  +    -0.08178536319013 *
1701905   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.064809950631 * S_AcceptedCmpTotal + -0.11974361887376 * S_Frq +
-0.05034272281408 * S_Income + -1.03632740142884 * S_Mnt + 0.0570619696315 * S_MntGoldProds +
0.44757705806877 * S_MntMeatProducts + 0.15555176595882 * S_MntWines + 0.29237363949433 *
S_NumDistPurchases + 0.01513588595143 * S_RFMstat + 0.15267139118817 * S_RMntFrq +
-0.08178536319013 * S_Recency ;
1701906   +   H12  =     0.03056152920519 * S_AcceptedCmpTotal  +     0.21158429585179 *
1701907   +        S_Frq  +     0.08852997598435 * S_Income  +       1.474747876869 *
1701908   +        S_Mnt  +    -0.05504304373804 * S_MntGoldProds
1701909   +          +    -0.61224564453989 * S_MntMeatProducts
1701910   +          +    -0.16570792731241 * S_MntWines  +     -0.3556210800725 *
1701911   +        S_NumDistPurchases  +    -0.00493407341141 * S_RFMstat
1701912   +          +    -0.08975799900748 * S_RMntFrq  +    -0.08286554067447 *
1701913   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.03056152920519 * S_AcceptedCmpTotal + 0.21158429585179 * S_Frq +
0.08852997598435 * S_Income + 1.474747876869 * S_Mnt + -0.05504304373804 * S_MntGoldProds +
-0.61224564453989 * S_MntMeatProducts + -0.16570792731241 * S_MntWines + -0.3556210800725 *
S_NumDistPurchases + -0.00493407341141 * S_RFMstat + -0.08975799900748 * S_RMntFrq +
-0.08286554067447 * S_Recency ;
1701914   +   H11  = H11  +     -0.0268872893862 * G_Marital_Status0
1701915   +          +     0.01287493608622 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.0268872893862 * G_Marital_Status0 + 0.01287493608622 *
G_Marital_Status1 ;
1701916   +   H12  = H12  +     0.19972982419153 * G_Marital_Status0
1701917   +          +     0.00851919203627 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.19972982419153 * G_Marital_Status0 + 0.00851919203627 *
G_Marital_Status1 ;
1701918   +   H11  =       -0.05804704369 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.05804704369 + H11 ;
1701919   +   H12  =    -0.91773456634133 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91773456634133 + H12 ;
1701920   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1701921   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1701922   +END;
MPRINT(EM_DIAGRAM):   END;
1701923   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701924   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1701925   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1701926   +END;
MPRINT(EM_DIAGRAM):   END;
1701927   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701928   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1701929   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701930   +
1701931   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1701932   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1701933   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1701934   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1701935   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1701936   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1701937   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1701938   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701939   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701940   +end;
MPRINT(EM_DIAGRAM):   end;
1701941   +else do;
MPRINT(EM_DIAGRAM):   else do;
1701942   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1701943   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1701944   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1701945   +   end;
MPRINT(EM_DIAGRAM):   end;
1701946   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1701947   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1701948   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1701949   +   end;
MPRINT(EM_DIAGRAM):   end;
1701950   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1701951   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1701952   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1701953   +   end;
MPRINT(EM_DIAGRAM):   end;
1701954   +end;
MPRINT(EM_DIAGRAM):   end;
1701955   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1701956   +   P_DepVar1  =     24.2171221004351 * H11  +     14.0502177408306 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 24.2171221004351 * H11 + 14.0502177408306 * H12 ;
1701957   +   P_DepVar1  =     5.57321151420878 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.57321151420878 + P_DepVar1 ;
1701958   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1701959   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1701960   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1701961   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1701962   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1701963   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1701964   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1701965   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1701966   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1701967   +END;
MPRINT(EM_DIAGRAM):   END;
1701968   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1701969   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1701970   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1701971   +END;
MPRINT(EM_DIAGRAM):   END;
1701972   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1701973   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1701974   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1701975   +END;
MPRINT(EM_DIAGRAM):   END;
1701976   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1701977   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1701978   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1701979   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1701980   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1701981   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1701982   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1701983   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701984   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1701985   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1701986   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1701987   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1701988   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1701989   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1701990   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1701991   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1701992   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1701993   +END;
MPRINT(EM_DIAGRAM):   END;
1701994   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701995   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1701996   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1701997   +drop
1701998   +H11
1701999   +H12
1702000   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1702001   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1702002   +* Renaming variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural24;
1702003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702004   +* Renaming Posterior variables for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural24;
1702005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702006   +drop Neural24_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar1;
1702007   +Neural24_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar1 = P_DepVar1;
1702008   +drop Neural24_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural24_P_DepVar0;
1702009   +Neural24_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural24_P_DepVar0 = P_DepVar0;
1702010   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702011   +* Renaming _WARN_ variable for Neural24;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural24;
1702012   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702013   +length Neural24_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural24_WARN_ $4;
1702014   +drop Neural24_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural24_WARN_;
1702015   +Neural24_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural24_WARN_ = _WARN_;
1702016   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702017   +* Ensmbl4: Scoring Code of model 10 of 10;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Scoring Code of model 10 of 10;
1702018   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702019   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702020   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1702021   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1702022   +* NODE: Neural29;
MPRINT(EM_DIAGRAM):   * NODE: Neural29;
1702023   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702024   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1702025   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1702026   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1702027   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1702028   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1702029   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1702030   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1702031   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1702032   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1702033   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1702034   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1702035   +LENGTH _WARN_ $4
1702036   +      F_DepVar  $ 12
1702037   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1702038   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1702039   +
1702040   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1702041   +
1702042   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1702043   +
1702044   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1702045   +
1702046   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1702047   +
1702048   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1702049   +
1702050   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1702051   +
1702052   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1702053   +
1702054   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1702055   +
1702056   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1702057   +
1702058   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1702059   +
1702060   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1702061   +
1702062   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1702063   +
1702064   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1702065   +
1702066   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1702067   +
1702068   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1702069   +
1702070   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1702071   +
1702072   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1702073   +
1702074   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1702075   +
1702076   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1702077   +
1702078   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1702079   +
1702080   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1702081   +
1702082   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1702083   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1702084   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1702085   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1702086   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1702087   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702088   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702089   +end;
MPRINT(EM_DIAGRAM):   end;
1702090   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702091   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702092   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1702093   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702094   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1702095   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1702096   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1702097   +   end;
MPRINT(EM_DIAGRAM):   end;
1702098   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1702099   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1702100   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1702101   +   end;
MPRINT(EM_DIAGRAM):   end;
1702102   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702103   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1702104   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1702105   +   end;
MPRINT(EM_DIAGRAM):   end;
1702106   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702107   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1702108   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1702109   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702110   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702111   +   end;
MPRINT(EM_DIAGRAM):   end;
1702112   +end;
MPRINT(EM_DIAGRAM):   end;
1702113   +
1702114   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702115   +*** Checking missing input Interval
1702116   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1702117   +
1702118   +IF NMISS(
1702119   +   AcceptedCmpTotal ,
1702120   +   Frq ,
1702121   +   Income ,
1702122   +   Mnt ,
1702123   +   MntGoldProds ,
1702124   +   MntMeatProducts ,
1702125   +   MntWines ,
1702126   +   NumDistPurchases ,
1702127   +   RFMstat ,
1702128   +   RMntFrq ,
1702129   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1702130   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1702131   +
1702132   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702133   +END;
MPRINT(EM_DIAGRAM):   END;
1702134   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702135   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1702136   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702137   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1702138   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1702139   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1702140   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1702141   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1702142   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1702143   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1702144   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1702145   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1702146   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1702147   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1702148   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1702149   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1702150   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1702151   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1702152   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1702153   +END;
MPRINT(EM_DIAGRAM):   END;
1702154   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1702155   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1702156   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1702157   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1702158   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1702159   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1702160   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1702161   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1702162   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1702163   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1702164   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1702165   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1702166   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1702167   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1702168   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1702169   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1702170   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1702171   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1702172   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1702173   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1702174   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1702175   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1702176   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1702177   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1702178   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1702179   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1702180   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1702181   +END;
MPRINT(EM_DIAGRAM):   END;
1702182   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702183   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1702184   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702185   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702186   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1702187   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702188   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1702189   +   H11  =     0.07956052778938 * S_AcceptedCmpTotal  +    -0.08976709439294 *
1702190   +        S_Frq  +    -0.03136979020873 * S_Income  +    -0.22580432887576 *
1702191   +        S_Mnt  +     0.02561890499238 * S_MntGoldProds
1702192   +          +     0.13232754556656 * S_MntMeatProducts
1702193   +          +     0.06392654003348 * S_MntWines  +      0.1248896909569 *
1702194   +        S_NumDistPurchases  +     0.01403367352534 * S_RFMstat
1702195   +          +     0.04307139255267 * S_RMntFrq  +     -0.0953931758746 *
1702196   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.07956052778938 * S_AcceptedCmpTotal + -0.08976709439294 * S_Frq
+ -0.03136979020873 * S_Income + -0.22580432887576 * S_Mnt + 0.02561890499238 * S_MntGoldProds
+ 0.13232754556656 * S_MntMeatProducts + 0.06392654003348 * S_MntWines + 0.1248896909569 *
S_NumDistPurchases + 0.01403367352534 * S_RFMstat + 0.04307139255267 * S_RMntFrq +
-0.0953931758746 * S_Recency ;
1702197   +   H11  = H11  +     0.03232715649764 * G_Marital_Status0
1702198   +          +     0.00903998969594 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03232715649764 * G_Marital_Status0 + 0.00903998969594 *
G_Marital_Status1 ;
1702199   +   H11  =    -0.20824058516839 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20824058516839 + H11 ;
1702200   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1702201   +END;
MPRINT(EM_DIAGRAM):   END;
1702202   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1702203   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1702204   +END;
MPRINT(EM_DIAGRAM):   END;
1702205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702206   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1702207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702208   +
1702209   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1702210   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1702211   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1702212   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1702213   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1702214   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702215   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1702216   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1702217   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1702218   +end;
MPRINT(EM_DIAGRAM):   end;
1702219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702220   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1702221   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1702222   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1702223   +   end;
MPRINT(EM_DIAGRAM):   end;
1702224   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1702225   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1702226   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1702227   +   end;
MPRINT(EM_DIAGRAM):   end;
1702228   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702229   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1702230   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1702231   +   end;
MPRINT(EM_DIAGRAM):   end;
1702232   +end;
MPRINT(EM_DIAGRAM):   end;
1702233   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1702234   +   P_DepVar1  =     19.4855317610714 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 19.4855317610714 * H11 ;
1702235   +   P_DepVar1  =     0.94239569093187 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94239569093187 + P_DepVar1 ;
1702236   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1702237   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1702238   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1702239   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1702240   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1702241   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1702242   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1702243   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1702244   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1702245   +END;
MPRINT(EM_DIAGRAM):   END;
1702246   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1702247   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1702248   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1702249   +END;
MPRINT(EM_DIAGRAM):   END;
1702250   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1702251   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1702252   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1702253   +END;
MPRINT(EM_DIAGRAM):   END;
1702254   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1702255   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1702256   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1702257   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1702258   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1702259   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1702260   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1702261   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702262   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1702263   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1702264   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1702265   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1702266   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1702267   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1702268   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1702269   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1702270   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1702271   +END;
MPRINT(EM_DIAGRAM):   END;
1702272   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1702273   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1702274   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1702275   +drop
1702276   +H11
1702277   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1702278   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1702279   +* Renaming variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural29;
1702280   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702281   +* Renaming Posterior variables for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural29;
1702282   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702283   +drop Neural29_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar1;
1702284   +Neural29_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar1 = P_DepVar1;
1702285   +drop Neural29_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural29_P_DepVar0;
1702286   +Neural29_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural29_P_DepVar0 = P_DepVar0;
1702287   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702288   +* Renaming _WARN_ variable for Neural29;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural29;
1702289   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702290   +length Neural29_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural29_WARN_ $4;
1702291   +drop Neural29_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural29_WARN_;
1702292   +Neural29_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural29_WARN_ = _WARN_;
1702293   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702294   +* Ensmbl4: Average Posteriors of 10 models;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Average Posteriors of 10 models;
1702295   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702296   +P_DepVar1 = (
1702297   +Reg8_P_DepVar1 +
1702298   +Reg4_P_DepVar1 +
1702299   +Tree4_P_DepVar1 +
1702300   +Neural8_P_DepVar1 +
1702301   +Neural28_P_DepVar1 +
1702302   +Neural27_P_DepVar1 +
1702303   +Neural26_P_DepVar1 +
1702304   +Neural25_P_DepVar1 +
1702305   +Neural24_P_DepVar1 +
1702306   +Neural29_P_DepVar1
1702307   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Reg8_P_DepVar1 + Reg4_P_DepVar1 + Tree4_P_DepVar1 +
Neural8_P_DepVar1 + Neural28_P_DepVar1 + Neural27_P_DepVar1 + Neural26_P_DepVar1 +
Neural25_P_DepVar1 + Neural24_P_DepVar1 + Neural29_P_DepVar1 )/10;
1702308   +P_DepVar0 = (
1702309   +Reg8_P_DepVar0 +
1702310   +Reg4_P_DepVar0 +
1702311   +Tree4_P_DepVar0 +
1702312   +Neural8_P_DepVar0 +
1702313   +Neural28_P_DepVar0 +
1702314   +Neural27_P_DepVar0 +
1702315   +Neural26_P_DepVar0 +
1702316   +Neural25_P_DepVar0 +
1702317   +Neural24_P_DepVar0 +
1702318   +Neural29_P_DepVar0
1702319   +)/10;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Reg8_P_DepVar0 + Reg4_P_DepVar0 + Tree4_P_DepVar0 +
Neural8_P_DepVar0 + Neural28_P_DepVar0 + Neural27_P_DepVar0 + Neural26_P_DepVar0 +
Neural25_P_DepVar0 + Neural24_P_DepVar0 + Neural29_P_DepVar0 )/10;
1702320   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702321   +* Ensmbl4: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Classification Vars;
1702322   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702323   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set.
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the
         length of a character variable.
1702324   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1702325   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1702326   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1702327   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1702328   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1702329   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1702330   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1702331   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1702332   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1702333   +end;
MPRINT(EM_DIAGRAM):   end;
1702334   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1702335   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1702336   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1702337   +end;
MPRINT(EM_DIAGRAM):   end;
1702338   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702339   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702340   +* Ensmbl4: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Producing Unformatted variable;
1702341   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702342   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1702343   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1702344   +else
1702345   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1702346   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702347   +* Ensmbl4: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing _WARN_ Variable;
1702348   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702349   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1702350   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1702351   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1702352   +if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1702353   +if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1702354   +if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1702355   +if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1702356   +if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1,
1) ='M';
1702357   +if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2,
1) ='U';
1702358   +if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3,
1) ='P';
1702359   +if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(REG4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4,
1) ='C';
1702360   +if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1702361   +if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1702362   +if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1702363   +if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(TREE4_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1702364   +if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_,
1, 1) ='M';
1702365   +if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_,
2, 1) ='U';
1702366   +if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_,
3, 1) ='P';
1702367   +if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C';
MPRINT(EM_DIAGRAM):   if index(NEURAL8_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_,
4, 1) ='C';
1702368   +if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1702368  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1702369   +if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1702369  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1702370   +if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1702370  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1702371   +if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1702371  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL28_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1702372   +if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1702372  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1702373   +if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1702373  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1702374   +if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1702374  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1702375   +if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1702375  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL27_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1702376   +if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1702376  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1702377   +if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1702377  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1702378   +if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1702378  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1702379   +if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1702379  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL26_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1702380   +if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1702380  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1702381   +if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1702381  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1702382   +if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1702382  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1702383   +if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1702383  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL25_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1702384   +if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1702384  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1702385   +if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1702385  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1702386   +if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1702386  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1702387   +if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1702387  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL24_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1702388   +if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1702388  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'M') and ^index(_WARN_, 'M') then
substr(_WARN_, 1, 1) ='M';
1702389   +if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1702389  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'U') and ^index(_WARN_, 'U') then
substr(_WARN_, 2, 1) ='U';
1702390   +if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1702390  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'P') and ^index(_WARN_, 'P') then
substr(_WARN_, 3, 1) ='P';
1702391   +if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1702391  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL29_WARN_, 'C') and ^index(_WARN_, 'C') then
substr(_WARN_, 4, 1) ='C';
1702392   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702393   +* Ensmbl4: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing Residual Vars;
1702394   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702395   +if
1702396   +F_DepVar NE '1'
1702397   +AND F_DepVar NE '0'
1702398   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1702399   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1702400   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1702401   +end;
MPRINT(EM_DIAGRAM):   end;
1702402   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702403   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1702404   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1702405   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1702406   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1702407   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1702408   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1702409   +END;
MPRINT(EM_DIAGRAM):   END;
1702410   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702411    run;
 
NOTE: DATA STEP view saved on file EMWS8.ENSMBL4_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.REG8_VALIDATE.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702412    quit;
1702413    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl4_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error"
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_=
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train:
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl4_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error"
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_=
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid:
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl4_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1702473    filename _pref
1702473  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg8\EMPUBLISHSCORE.sas";
1702474    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702475    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg8\EMPUBLISHSCORE.sas.
1702476   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1702477   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1702478   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1702479   +
1702480   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1702481   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1702482   +
1702483   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1702484   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1702485   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1702486   +array REG8DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG8DRF [2] $12 _temporary_ ('1' '0' );
1702487   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1702488   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1702489   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1702490   +ARRAY REG8DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG8DRU[2] _TEMPORARY_ (1 0);
1702491   +
1702492   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1702493   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1702494   +
1702495   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1702496   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1702497   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702498   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702499   +end;
MPRINT(EM_DIAGRAM):   end;
1702500   +
1702501   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1702502   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1702503   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702504   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702505   +end;
MPRINT(EM_DIAGRAM):   end;
1702506   +
1702507   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1702508   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1702509   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702510   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702511   +end;
MPRINT(EM_DIAGRAM):   end;
1702512   +
1702513   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1702514   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1702515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702517   +end;
MPRINT(EM_DIAGRAM):   end;
1702518   +
1702519   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1702520   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1702521   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702522   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702523   +end;
MPRINT(EM_DIAGRAM):   end;
1702524   +
1702525   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1702526   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1702527   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702528   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702529   +end;
MPRINT(EM_DIAGRAM):   end;
1702530   +
1702531   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1702532   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1702533   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702534   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702535   +end;
MPRINT(EM_DIAGRAM):   end;
1702536   +
1702537   +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
1702538   +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
1702539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702541   +end;
MPRINT(EM_DIAGRAM):   end;
1702542   +
1702543   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1702544   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1702545   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702546   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702547   +end;
MPRINT(EM_DIAGRAM):   end;
1702548   +
1702549   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1702550   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1702551   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702552   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702553   +end;
MPRINT(EM_DIAGRAM):   end;
1702554   +
1702555   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1702556   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1702557   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702558   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702559   +end;
MPRINT(EM_DIAGRAM):   end;
1702560   +
1702561   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1702562   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1702563   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1702564   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1702565   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1702566   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1702567   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702568   +end;
MPRINT(EM_DIAGRAM):   end;
1702569   +else do;
MPRINT(EM_DIAGRAM):   else do;
1702570   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1702571   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1702572   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702573   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1702574   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1702575   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1702576   +   end;
MPRINT(EM_DIAGRAM):   end;
1702577   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1702578   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1702579   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1702580   +   end;
MPRINT(EM_DIAGRAM):   end;
1702581   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1702582   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1702583   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1702584   +   end;
MPRINT(EM_DIAGRAM):   end;
1702585   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1702586   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1702587   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1702588   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1702589   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1702590   +   end;
MPRINT(EM_DIAGRAM):   end;
1702591   +end;
MPRINT(EM_DIAGRAM):   end;
1702592   +
1702593   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1702594   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1702595   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1702596   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1702597   +   goto REG8DR1;
MPRINT(EM_DIAGRAM):   goto REG8DR1;
1702598   +end;
MPRINT(EM_DIAGRAM):   end;
1702599   +
1702600   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1702601   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1702602   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1702603   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1702604   +
1702605   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1702606   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1702607   +_LP0 = _LP0 + (    1.25564379942555 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 1.25564379942555 * _TEMP);
1702608   +
1702609   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1702610   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1702611   +_LP0 = _LP0 + (   -0.13843763252919 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.13843763252919 * _TEMP);
1702612   +
1702613   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1702614   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1702615   +_LP0 = _LP0 + (     0.3450416036947) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.3450416036947) * _TEMP * _1_0;
1702616   +_LP0 = _LP0 + (    0.07017894213738) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.07017894213738) * _TEMP * _1_1;
1702617   +
1702618   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1702619   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1702620   +_LP0 = _LP0 + (   -0.00001593150299 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00001593150299 * _TEMP);
1702621   +
1702622   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1702623   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1702624   +_LP0 = _LP0 + (   -0.00413312986127 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00413312986127 * _TEMP);
1702625   +
1702626   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1702627   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1702628   +_LP0 = _LP0 + (    0.00530471713016 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00530471713016 * _TEMP);
1702629   +
1702630   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1702631   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1702632   +_LP0 = _LP0 + (    0.00672044183978 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00672044183978 * _TEMP);
1702633   +
1702634   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1702635   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1702636   +_LP0 = _LP0 + (    0.00218768007222 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00218768007222 * _TEMP);
1702637   +
1702638   +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
1702639   +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
1702640   +_LP0 = _LP0 + (    0.29153437702669 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.29153437702669 * _TEMP);
1702641   +
1702642   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1702643   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1702644   +_LP0 = _LP0 + (    0.00010476102078 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00010476102078 * _TEMP);
1702645   +
1702646   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1702647   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1702648   +_LP0 = _LP0 + (    0.01569818995068 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01569818995068 * _TEMP);
1702649   +
1702650   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1702651   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1702652   +_LP0 = _LP0 + (   -0.03379881900362 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.03379881900362 * _TEMP);
1702653   +
1702654   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1702655   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1702656   +_P0 = probnorm((    0.03244157586194) + _LP0);
MPRINT(EM_DIAGRAM):   _P0 = probnorm(( 0.03244157586194) + _LP0);
1702657   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1702658   +
1702659   +REG8DR1:
1702660   +
1702661   +
1702662   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG8DR1: *** Posterior Probabilities and Predicted Level;
1702663   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1702664   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1702665   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1702666   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1702667   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1702668   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1702669   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1702670   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1702671   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1702672   +end;
MPRINT(EM_DIAGRAM):   end;
1702673   +I_DepVar = REG8DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG8DRF[_IY];
1702674   +U_DepVar = REG8DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG8DRU[_IY];
1702675   +
1702676   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1702677   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1702678   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702679    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702680    quit;
1702681    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1702682    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1702683    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1702684    retain ID 2 Node "Reg8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg8";
1702685    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1702686    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 249 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 249 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702687    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1702688    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702689    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 249 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 249 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702690    proc sort data=EMWS8.Reg8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg8_variableset out=_temp2(keep=NAME CREATOR);
1702691    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702692    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.REG8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702693    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702694    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1702695    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1702696    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702697    proc contents data=EMWS8.Reg8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg8_train out=_meta(keep=NAME) noprint;
1702698    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1702699    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1702700    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702701    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702702    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702703    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702704    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702705    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702706    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702707    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702707  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 158 rows and 5 columns.
 
1702708    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702709    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1702710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 158 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 158 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702711    filename _pref
1702711  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1702712    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702713    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1702714   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1702715   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1702716   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1702717   +
1702718   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1702719   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1702720   +
1702721   +
1702722   +/*----G_Marital_Status begin----*/
1702723   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1702724   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1702725   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1702726   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1702727   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1702728   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1702729   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1702730   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1702731   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1702732   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1702733   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1702734   +end;
MPRINT(EM_DIAGRAM):   end;
1702735   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1702736   +/*----G_Marital_Status end----*/
1702737   +
1702738   +
1702739   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1702740   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1702741   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702742    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702743    quit;
1702744    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1702745    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1702746    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1702747    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1702748    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1702749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702750    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1702751    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702752    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702753    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1702754    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702755    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702756    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702757    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1702758    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1702759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702760    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1702761    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1702762    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1702763    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702764    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702765    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702766    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702768    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702769    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702770    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702770  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1702771    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702772    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1702773    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 161 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702774    filename _pref
1702774  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1702775    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702776    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1702777   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702778   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1702779   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1702780   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1702781   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1702782   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702783    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702784    quit;
1702785    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1702786    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1702787    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1702788    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1702789    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1702790    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702791    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1702792    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702794    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1702795    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702797    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702798    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1702799    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1702800    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702801    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1702802    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1702803    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1702804    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702806    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702807    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702808    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702809    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702810    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702811    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702811  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1702812    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702813    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1702814    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 165 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702815    filename _pref
1702815  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1702816    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702817    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1702818   +
1702819   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1702820   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1702820  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1702821   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1702822   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1702823   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1702824   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1702825   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702826    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702827    quit;
1702828    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1702829    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1702830    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1702831    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1702832    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1702833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702834    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1702835    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702836    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702837    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1702838    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702839    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702840    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702841    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1702842    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1702843    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702844    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1702845    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702846    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1702847    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702849    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702850    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702851    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702852    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702853    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702854    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702854  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1702855    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702856    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1702857    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 204 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702858    filename _pref
1702858  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1702859    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1702860    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1702861   +
1702862   +
1702863   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1702864   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1702865   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1702866   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1702867   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1702868   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702869   +
1702870   +
1702871   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1702872   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1702873   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1702874   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1702875   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1702876   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702877   +
1702878   +
1702879   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1702880   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1702881   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1702882   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1702883   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1702884   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702885   +
1702886   +
1702887   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1702888   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1702889   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1702890   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1702891   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1702892   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702893   +
1702894   +
1702895   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1702896   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1702897   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1702898   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1702899   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1702900   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702901   +
1702902   +
1702903   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1702904   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1702905   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1702906   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1702907   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1702908   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702909   +
1702910   +
1702911   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1702912   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1702913   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1702914   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1702915   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1702916   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702917   +
1702918   +
1702919   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1702920   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1702921   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1702922   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1702923   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1702924   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1702925   +if
1702926   +_FILTERNORM1 not in ( '.')
1702927   + and
1702928   +_FILTERNORM2 not in ( '.')
1702929   + and
1702930   +_FILTERNORM3 not in ( '.')
1702931   + and
1702932   +_FILTERNORM4 not in ( '.')
1702933   + and
1702934   +_FILTERNORM5 not in ( '.')
1702935   + and
1702936   +_FILTERNORM6 not in ( '.')
1702937   + and
1702938   +_FILTERNORM7 not in ( ' ')
1702939   + and
1702940   +_FILTERNORM8 not in ( ' ')
1702941   +and
1702942   +( Dt_Customer ne .)
1702943   +and ( Income ne . and (Income<=107000))
1702944   +and ( Kidhome ne .)
1702945   +and ( MntFishProducts ne .)
1702946   +and ( MntFruits ne .)
1702947   +and ( MntGoldProds ne .)
1702948   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1702949   +and ( MntSweetProducts ne .)
1702950   +and ( MntWines ne .)
1702951   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1702952   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1702953   +and ( NumStorePurchases ne .)
1702954   +and ( NumWebPurchases ne .)
1702955   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1702956   +and ( Recency ne .)
1702957   +and ( Teenhome ne .)
1702958   +and ( Year_Birth ne .)
1702959   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1702960   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1702961   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1702962   +end;
MPRINT(EM_DIAGRAM):   end;
1702963   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1702964   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1702965    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1702966    quit;
1702967    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1702968    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1702969    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1702970    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1702971    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1702972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702973    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1702974    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702975    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702976    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1702977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702978    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702979    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702980    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1702981    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1702982    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702983    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1702984    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1702985    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1702986    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702987    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702988    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1702989    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1702990    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1702991    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702992    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1702993    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1702993  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1702994    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1702995    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1702996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 270 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1702997    %macro varDept(fcmpdata=,id=);
1702998    %global nobs&id scoreFlag&id;
1702999    %let scoreFlag&id = 0;
1703000    %if &id=1 or ^&fcmpStart %then %do;
1703001    proc sort data=&fcmpdata out=_temp&id nodupkey;
1703002    by NAME;
1703003    where id=&id and LHS in( %let j=1;
1703004    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1703005    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1703006    "&var" %let j = %eval(&j+1);
1703007    %end;
1703008    );
1703009    run;
1703010    %let dsid = %sysfunc(open(_temp&id));
1703011    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703012    %let dsid = %sysfunc(close(&dsid));
1703013    %if &&nobs&id %then %do;
1703014    %let scoreFlag&id = 1;
1703015    %let fcmpStart = 1;
1703016    %end;
1703017    %else %let fcmpStart = 0;
1703018    %end;
1703019    %else %do;
1703020    proc sort data=&fcmpdata out=_tempid;
1703021    where id=&id;
1703022    by LHS;
1703023    run;
1703024    %let dsid = %sysfunc(open(_tempid));
1703025    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703026    %let dsid = %sysfunc(close(&dsid));
1703027    %if ^&&nobs&id %then %do;
1703028    proc datasets lib=work nolist;
1703029    delete _tempid;
1703030    run;
1703031    quit;
1703032    %end;
1703033    %else %do;
1703034    data _tempAll;
1703035    set %let j=%eval(&id-1);
1703036    %do x=1 %to &j;
1703037    %if &&nobs&x %then %do;
1703038    _temp&x %end;
1703039    %end;
1703040    ;
1703041    run;
1703042    proc sql;
1703043    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1703043  ! work._tempid p2 where p.name=p2.lhs;
1703044    quit;
1703045    data _temp&id;
1703046    set _temp&id;
1703047    where LHS ne '' and NAME ne '' and Node ne '';
1703048    run;
1703049    proc datasets lib=work nolist;
1703050    delete _tempAll;
1703051    run;
1703052    %let dsid = %sysfunc(open(_temp&id));
1703053    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703054    %let dsid = %sysfunc(close(&dsid));
1703055    %if ^&&nobs&id %then %do;
1703056    proc datasets lib=work nolist;
1703057    delete _temp&id;
1703058    run;
1703059    quit;
1703060    %end;
1703061    %else %do;
1703062    %let scoreFlag&id = 1;
1703063    data _temp&id;
1703064    set _temp&id;
1703065    where LHS ne NAME and node ne '';
1703066    run;
1703067    %let dsid = %sysfunc(open(_temp&id));
1703068    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703069    %let dsid = %sysfunc(close(&dsid));
1703070    %if ^&&nobs&id %then %do;
1703071    proc datasets lib=work nolist;
1703072    delete _temp&id;
1703073    run;
1703074    quit;
1703075    %end;
1703076    %else %do;
1703077    proc sort data=_temp&id nodupkey;
1703078    by LHS NAME;
1703079    run;
1703080    %end;
1703081    %end;
1703082    %end;
1703083    %end;
1703084    %mend varDept;
1703085    %macro optCode(outdata=fcmpdata);
1703086    %global fcmpStart;
1703087    %let fcmpStart = 0;
1703088    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1703089    %let NumNodes=9;
1703090    %do k=1 %to &NumNodes;
1703091    %vardept(fcmpdata=&outdata, id=&k);
1703092    %end;
1703093    %mend optCode;
1703094    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 36 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
The SAS System
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1703095    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703096    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703097    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703099    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703100    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703101    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703103    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703104    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1703104  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1703105    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703106    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1703107    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1703108    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703109    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703110    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1703111    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703112    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703113    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703114    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1703115    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703116    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703117    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703118    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1703118  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1703119    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703120    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1703121    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1703122    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703123    filename _pref
1703123  ! "C:\\predictive-models-project\Workspaces\EMWS8\Reg4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Reg4\EMPUBLISHSCORE.sas";
1703124    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703125    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Reg4\EMPUBLISHSCORE.sas.
1703126   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1703127   +*** begin scoring code for regression;
MPRINT(EM_DIAGRAM):   *** begin scoring code for regression;
1703128   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1703129   +
1703130   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1703131   +label _WARN_ = 'Warnings' ;
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings' ;
1703132   +
1703133   +length I_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length I_DepVar $ 12;
1703134   +label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1703135   +*** Target Values;
MPRINT(EM_DIAGRAM):   *** Target Values;
1703136   +array REG4DRF [2] $12 _temporary_ ('1' '0' );
MPRINT(EM_DIAGRAM):   array REG4DRF [2] $12 _temporary_ ('1' '0' );
1703137   +label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1703138   +format U_DepVar BEST.;
MPRINT(EM_DIAGRAM):   format U_DepVar BEST.;
1703139   +*** Unnormalized target values;
MPRINT(EM_DIAGRAM):   *** Unnormalized target values;
1703140   +ARRAY REG4DRU[2]  _TEMPORARY_ (1 0);
MPRINT(EM_DIAGRAM):   ARRAY REG4DRU[2] _TEMPORARY_ (1 0);
1703141   +
1703142   +drop _DM_BAD;
MPRINT(EM_DIAGRAM):   drop _DM_BAD;
1703143   +_DM_BAD=0;
MPRINT(EM_DIAGRAM):   _DM_BAD=0;
1703144   +
1703145   +*** Check AcceptedCmpTotal for missing values ;
MPRINT(EM_DIAGRAM):   *** Check AcceptedCmpTotal for missing values ;
1703146   +if missing( AcceptedCmpTotal ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmpTotal ) then do;
1703147   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703148   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703149   +end;
MPRINT(EM_DIAGRAM):   end;
1703150   +
1703151   +*** Check Frq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Frq for missing values ;
1703152   +if missing( Frq ) then do;
MPRINT(EM_DIAGRAM):   if missing( Frq ) then do;
1703153   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703154   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703155   +end;
MPRINT(EM_DIAGRAM):   end;
1703156   +
1703157   +*** Check Income for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Income for missing values ;
1703158   +if missing( Income ) then do;
MPRINT(EM_DIAGRAM):   if missing( Income ) then do;
1703159   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703160   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703161   +end;
MPRINT(EM_DIAGRAM):   end;
1703162   +
1703163   +*** Check Mnt for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Mnt for missing values ;
1703164   +if missing( Mnt ) then do;
MPRINT(EM_DIAGRAM):   if missing( Mnt ) then do;
1703165   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703166   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703167   +end;
MPRINT(EM_DIAGRAM):   end;
1703168   +
1703169   +*** Check MntGoldProds for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntGoldProds for missing values ;
1703170   +if missing( MntGoldProds ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntGoldProds ) then do;
1703171   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703172   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703173   +end;
MPRINT(EM_DIAGRAM):   end;
1703174   +
1703175   +*** Check MntMeatProducts for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntMeatProducts for missing values ;
1703176   +if missing( MntMeatProducts ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntMeatProducts ) then do;
1703177   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703178   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703179   +end;
MPRINT(EM_DIAGRAM):   end;
1703180   +
1703181   +*** Check MntWines for missing values ;
MPRINT(EM_DIAGRAM):   *** Check MntWines for missing values ;
1703182   +if missing( MntWines ) then do;
MPRINT(EM_DIAGRAM):   if missing( MntWines ) then do;
1703183   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703184   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703185   +end;
MPRINT(EM_DIAGRAM):   end;
1703186   +
1703187   +*** Check NumDistPurchases for missing values ;
MPRINT(EM_DIAGRAM):   *** Check NumDistPurchases for missing values ;
1703188   +if missing( NumDistPurchases ) then do;
MPRINT(EM_DIAGRAM):   if missing( NumDistPurchases ) then do;
1703189   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703190   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703191   +end;
MPRINT(EM_DIAGRAM):   end;
1703192   +
1703193   +*** Check RFMstat for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RFMstat for missing values ;
1703194   +if missing( RFMstat ) then do;
MPRINT(EM_DIAGRAM):   if missing( RFMstat ) then do;
1703195   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703196   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703197   +end;
MPRINT(EM_DIAGRAM):   end;
1703198   +
1703199   +*** Check RMntFrq for missing values ;
MPRINT(EM_DIAGRAM):   *** Check RMntFrq for missing values ;
1703200   +if missing( RMntFrq ) then do;
MPRINT(EM_DIAGRAM):   if missing( RMntFrq ) then do;
1703201   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703202   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703203   +end;
MPRINT(EM_DIAGRAM):   end;
1703204   +
1703205   +*** Check Recency for missing values ;
MPRINT(EM_DIAGRAM):   *** Check Recency for missing values ;
1703206   +if missing( Recency ) then do;
MPRINT(EM_DIAGRAM):   if missing( Recency ) then do;
1703207   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703208   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703209   +end;
MPRINT(EM_DIAGRAM):   end;
1703210   +
1703211   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1703212   +drop _1_0 _1_1 ;
MPRINT(EM_DIAGRAM):   drop _1_0 _1_1 ;
1703213   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1703214   +   _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1703215   +   _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1703216   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1703217   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703218   +end;
MPRINT(EM_DIAGRAM):   end;
1703219   +else do;
MPRINT(EM_DIAGRAM):   else do;
1703220   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1703221   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1703222   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1703223   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1703224   +      _1_0 = -1;
MPRINT(EM_DIAGRAM):   _1_0 = -1;
1703225   +      _1_1 = -1;
MPRINT(EM_DIAGRAM):   _1_1 = -1;
1703226   +   end;
MPRINT(EM_DIAGRAM):   end;
1703227   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1703228   +      _1_0 = 1;
MPRINT(EM_DIAGRAM):   _1_0 = 1;
1703229   +      _1_1 = 0;
MPRINT(EM_DIAGRAM):   _1_1 = 0;
1703230   +   end;
MPRINT(EM_DIAGRAM):   end;
1703231   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1703232   +      _1_0 = 0;
MPRINT(EM_DIAGRAM):   _1_0 = 0;
1703233   +      _1_1 = 1;
MPRINT(EM_DIAGRAM):   _1_1 = 1;
1703234   +   end;
MPRINT(EM_DIAGRAM):   end;
1703235   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1703236   +      _1_0 = .;
MPRINT(EM_DIAGRAM):   _1_0 = .;
1703237   +      _1_1 = .;
MPRINT(EM_DIAGRAM):   _1_1 = .;
1703238   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1703239   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1703240   +   end;
MPRINT(EM_DIAGRAM):   end;
1703241   +end;
MPRINT(EM_DIAGRAM):   end;
1703242   +
1703243   +*** If missing inputs, use averages;
MPRINT(EM_DIAGRAM):   *** If missing inputs, use averages;
1703244   +if _DM_BAD > 0 then do;
MPRINT(EM_DIAGRAM):   if _DM_BAD > 0 then do;
1703245   +   _P0 = 0.151221567;
MPRINT(EM_DIAGRAM):   _P0 = 0.151221567;
1703246   +   _P1 = 0.848778433;
MPRINT(EM_DIAGRAM):   _P1 = 0.848778433;
1703247   +   goto REG4DR1;
MPRINT(EM_DIAGRAM):   goto REG4DR1;
1703248   +end;
MPRINT(EM_DIAGRAM):   end;
1703249   +
1703250   +*** Compute Linear Predictor;
MPRINT(EM_DIAGRAM):   *** Compute Linear Predictor;
1703251   +drop _TEMP;
MPRINT(EM_DIAGRAM):   drop _TEMP;
1703252   +drop _LP0;
MPRINT(EM_DIAGRAM):   drop _LP0;
1703253   +_LP0 = 0;
MPRINT(EM_DIAGRAM):   _LP0 = 0;
1703254   +
1703255   +***  Effect: AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   *** Effect: AcceptedCmpTotal ;
1703256   +_TEMP = AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   _TEMP = AcceptedCmpTotal ;
1703257   +_LP0 = _LP0 + (     2.3101146636742 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 2.3101146636742 * _TEMP);
1703258   +
1703259   +***  Effect: Frq ;
MPRINT(EM_DIAGRAM):   *** Effect: Frq ;
1703260   +_TEMP = Frq ;
MPRINT(EM_DIAGRAM):   _TEMP = Frq ;
1703261   +_LP0 = _LP0 + (   -0.24397863929446 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.24397863929446 * _TEMP);
1703262   +
1703263   +***  Effect: G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Effect: G_Marital_Status ;
1703264   +_TEMP = 1;
MPRINT(EM_DIAGRAM):   _TEMP = 1;
1703265   +_LP0 = _LP0 + (    0.62662142005613) * _TEMP * _1_0;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.62662142005613) * _TEMP * _1_0;
1703266   +_LP0 = _LP0 + (    0.16948281370783) * _TEMP * _1_1;
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.16948281370783) * _TEMP * _1_1;
1703267   +
1703268   +***  Effect: Income ;
MPRINT(EM_DIAGRAM):   *** Effect: Income ;
1703269   +_TEMP = Income ;
MPRINT(EM_DIAGRAM):   _TEMP = Income ;
1703270   +_LP0 = _LP0 + (   -0.00002912500869 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00002912500869 * _TEMP);
1703271   +
1703272   +***  Effect: Mnt ;
MPRINT(EM_DIAGRAM):   *** Effect: Mnt ;
1703273   +_TEMP = Mnt ;
MPRINT(EM_DIAGRAM):   _TEMP = Mnt ;
1703274   +_LP0 = _LP0 + (   -0.00725366255775 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.00725366255775 * _TEMP);
1703275   +
1703276   +***  Effect: MntGoldProds ;
MPRINT(EM_DIAGRAM):   *** Effect: MntGoldProds ;
1703277   +_TEMP = MntGoldProds ;
MPRINT(EM_DIAGRAM):   _TEMP = MntGoldProds ;
1703278   +_LP0 = _LP0 + (    0.00966782899986 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.00966782899986 * _TEMP);
1703279   +
1703280   +***  Effect: MntMeatProducts ;
MPRINT(EM_DIAGRAM):   *** Effect: MntMeatProducts ;
1703281   +_TEMP = MntMeatProducts ;
MPRINT(EM_DIAGRAM):   _TEMP = MntMeatProducts ;
1703282   +_LP0 = _LP0 + (    0.01188232167165 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.01188232167165 * _TEMP);
1703283   +
1703284   +***  Effect: MntWines ;
MPRINT(EM_DIAGRAM):   *** Effect: MntWines ;
1703285   +_TEMP = MntWines ;
MPRINT(EM_DIAGRAM):   _TEMP = MntWines ;
1703286   +_LP0 = _LP0 + (      0.003639907135 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.003639907135 * _TEMP);
1703287   +
1703288   +***  Effect: NumDistPurchases ;
MPRINT(EM_DIAGRAM):   *** Effect: NumDistPurchases ;
1703289   +_TEMP = NumDistPurchases ;
MPRINT(EM_DIAGRAM):   _TEMP = NumDistPurchases ;
1703290   +_LP0 = _LP0 + (    0.52674791091038 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.52674791091038 * _TEMP);
1703291   +
1703292   +***  Effect: RFMstat ;
MPRINT(EM_DIAGRAM):   *** Effect: RFMstat ;
1703293   +_TEMP = RFMstat ;
MPRINT(EM_DIAGRAM):   _TEMP = RFMstat ;
1703294   +_LP0 = _LP0 + (      0.000175187797 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.000175187797 * _TEMP);
1703295   +
1703296   +***  Effect: RMntFrq ;
MPRINT(EM_DIAGRAM):   *** Effect: RMntFrq ;
1703297   +_TEMP = RMntFrq ;
MPRINT(EM_DIAGRAM):   _TEMP = RMntFrq ;
1703298   +_LP0 = _LP0 + (    0.02790898517022 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( 0.02790898517022 * _TEMP);
1703299   +
1703300   +***  Effect: Recency ;
MPRINT(EM_DIAGRAM):   *** Effect: Recency ;
1703301   +_TEMP = Recency ;
MPRINT(EM_DIAGRAM):   _TEMP = Recency ;
1703302   +_LP0 = _LP0 + (   -0.06390893610641 * _TEMP);
MPRINT(EM_DIAGRAM):   _LP0 = _LP0 + ( -0.06390893610641 * _TEMP);
1703303   +
1703304   +*** Naive Posterior Probabilities;
MPRINT(EM_DIAGRAM):   *** Naive Posterior Probabilities;
1703305   +drop _MAXP _IY _P0 _P1;
MPRINT(EM_DIAGRAM):   drop _MAXP _IY _P0 _P1;
1703306   +_TEMP =     0.12264575618785 + _LP0;
MPRINT(EM_DIAGRAM):   _TEMP = 0.12264575618785 + _LP0;
1703307   +if (_TEMP < 0) then do;
MPRINT(EM_DIAGRAM):   if (_TEMP < 0) then do;
1703308   +   _TEMP = exp(_TEMP);
MPRINT(EM_DIAGRAM):   _TEMP = exp(_TEMP);
1703309   +   _P0 = _TEMP / (1 + _TEMP);
MPRINT(EM_DIAGRAM):   _P0 = _TEMP / (1 + _TEMP);
1703310   +end;
MPRINT(EM_DIAGRAM):   end;
1703311   +else _P0 = 1 / (1 + exp(-_TEMP));
MPRINT(EM_DIAGRAM):   else _P0 = 1 / (1 + exp(-_TEMP));
1703312   +_P1 = 1.0 - _P0;
MPRINT(EM_DIAGRAM):   _P1 = 1.0 - _P0;
1703313   +
1703314   +REG4DR1:
1703315   +
1703316   +
1703317   +*** Posterior Probabilities and Predicted Level;
MPRINT(EM_DIAGRAM):   REG4DR1: *** Posterior Probabilities and Predicted Level;
1703318   +label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1703319   +label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1703320   +P_DepVar1 = _P0;
MPRINT(EM_DIAGRAM):   P_DepVar1 = _P0;
1703321   +_MAXP = _P0;
MPRINT(EM_DIAGRAM):   _MAXP = _P0;
1703322   +_IY = 1;
MPRINT(EM_DIAGRAM):   _IY = 1;
1703323   +P_DepVar0 = _P1;
MPRINT(EM_DIAGRAM):   P_DepVar0 = _P1;
1703324   +if (_P1 >  _MAXP + 1E-8) then do;
MPRINT(EM_DIAGRAM):   if (_P1 > _MAXP + 1E-8) then do;
1703325   +   _MAXP = _P1;
MPRINT(EM_DIAGRAM):   _MAXP = _P1;
1703326   +   _IY = 2;
MPRINT(EM_DIAGRAM):   _IY = 2;
1703327   +end;
MPRINT(EM_DIAGRAM):   end;
1703328   +I_DepVar = REG4DRF[_IY];
MPRINT(EM_DIAGRAM):   I_DepVar = REG4DRF[_IY];
1703329   +U_DepVar = REG4DRU[_IY];
MPRINT(EM_DIAGRAM):   U_DepVar = REG4DRU[_IY];
1703330   +
1703331   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
1703332   +***** end scoring code for regression;
MPRINT(EM_DIAGRAM):   ***** end scoring code for regression;
1703333   +*************************************;
MPRINT(EM_DIAGRAM):   *************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703334    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703335    quit;
1703336    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703337    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703338    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703339    retain ID 2 Node "Reg4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Reg4";
1703340    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703341    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 286 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 286 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703342    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703343    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703344    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 286 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 286 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703345    proc sort data=EMWS8.Reg4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg4_variableset out=_temp2(keep=NAME CREATOR);
1703346    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.REG4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703348    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703349    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703350    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703351    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703352    proc contents data=EMWS8.Reg4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg4_train out=_meta(keep=NAME) noprint;
1703353    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1703354    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703355    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703356    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703357    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703358    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703359    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703360    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703361    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703362    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703362  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 171 rows and 5 columns.
 
1703363    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703364    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1703365    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 171 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 171 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703366    filename _pref
1703366  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1703367    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703368    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1703369   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1703370   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1703371   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1703372   +
1703373   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1703374   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1703375   +
1703376   +
1703377   +/*----G_Marital_Status begin----*/
1703378   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1703379   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1703380   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1703381   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1703382   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1703383   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1703384   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1703385   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1703386   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1703387   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1703388   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1703389   +end;
MPRINT(EM_DIAGRAM):   end;
1703390   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1703391   +/*----G_Marital_Status end----*/
1703392   +
1703393   +
1703394   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1703395   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1703396   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703397    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703398    quit;
1703399    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703400    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703401    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703402    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1703403    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703404    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703405    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703406    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703408    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1703409    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703411    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703412    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703413    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703414    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703415    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1703416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1703417    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703418    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703419    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703420    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703421    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703422    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703423    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703424    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703425    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703425  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1703426    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703427    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1703428    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 174 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703429    filename _pref
1703429  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1703430    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703431    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1703432   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1703433   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1703434   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1703435   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1703436   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1703437   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703438    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703439    quit;
1703440    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703441    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703442    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703443    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1703444    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703445    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.03 seconds
 
 
1703446    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703447    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703448    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703449    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1703450    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703452    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703453    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703454    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703455    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703456    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1703457    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1703458    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703459    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703460    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703461    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703462    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703463    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703464    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703465    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703466    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703466  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1703467    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703468    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1703469    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 178 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703470    filename _pref
1703470  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1703471    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703472    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1703473   +
1703474   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1703475   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1703475  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1703476   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1703477   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1703478   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1703479   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1703480   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703481    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703482    quit;
1703483    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703484    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703485    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703486    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1703487    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703488    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703489    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703490    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703491    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703492    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1703493    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703495    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703496    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703497    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703498    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703499    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1703500    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703501    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703502    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703503    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703504    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703505    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703506    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703507    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703508    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703509    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703509  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1703510    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703511    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1703512    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 217 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703513    filename _pref
1703513  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1703514    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703515    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1703516   +
1703517   +
1703518   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1703519   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1703520   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1703521   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1703522   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1703523   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703524   +
1703525   +
1703526   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1703527   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1703528   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1703529   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1703530   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1703531   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703532   +
1703533   +
1703534   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1703535   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1703536   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1703537   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1703538   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1703539   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703540   +
1703541   +
1703542   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1703543   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1703544   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1703545   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1703546   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1703547   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703548   +
1703549   +
1703550   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1703551   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1703552   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1703553   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1703554   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1703555   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703556   +
1703557   +
1703558   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1703559   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1703560   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1703561   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1703562   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1703563   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703564   +
1703565   +
1703566   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1703567   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1703568   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1703569   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1703570   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1703571   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703572   +
1703573   +
1703574   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1703575   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1703576   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1703577   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1703578   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1703579   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1703580   +if
1703581   +_FILTERNORM1 not in ( '.')
1703582   + and
1703583   +_FILTERNORM2 not in ( '.')
1703584   + and
1703585   +_FILTERNORM3 not in ( '.')
1703586   + and
1703587   +_FILTERNORM4 not in ( '.')
1703588   + and
1703589   +_FILTERNORM5 not in ( '.')
1703590   + and
1703591   +_FILTERNORM6 not in ( '.')
1703592   + and
1703593   +_FILTERNORM7 not in ( ' ')
1703594   + and
1703595   +_FILTERNORM8 not in ( ' ')
1703596   +and
1703597   +( Dt_Customer ne .)
1703598   +and ( Income ne . and (Income<=107000))
1703599   +and ( Kidhome ne .)
1703600   +and ( MntFishProducts ne .)
1703601   +and ( MntFruits ne .)
1703602   +and ( MntGoldProds ne .)
1703603   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1703604   +and ( MntSweetProducts ne .)
1703605   +and ( MntWines ne .)
1703606   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1703607   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1703608   +and ( NumStorePurchases ne .)
1703609   +and ( NumWebPurchases ne .)
1703610   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1703611   +and ( Recency ne .)
1703612   +and ( Teenhome ne .)
1703613   +and ( Year_Birth ne .)
1703614   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1703615   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1703616   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1703617   +end;
MPRINT(EM_DIAGRAM):   end;
1703618   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1703619   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1703620    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1703621    quit;
1703622    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1703623    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1703624    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1703625    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1703626    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1703627    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703628    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1703629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703630    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703631    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1703632    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703634    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703635    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1703636    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1703637    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703638    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1703639    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1703640    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1703641    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703642    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703643    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1703644    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1703645    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1703646    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703647    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703648    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1703648  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1703649    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703650    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1703651    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 283 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703652    %macro varDept(fcmpdata=,id=);
1703653    %global nobs&id scoreFlag&id;
1703654    %let scoreFlag&id = 0;
1703655    %if &id=1 or ^&fcmpStart %then %do;
1703656    proc sort data=&fcmpdata out=_temp&id nodupkey;
1703657    by NAME;
1703658    where id=&id and LHS in( %let j=1;
1703659    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1703660    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1703661    "&var" %let j = %eval(&j+1);
1703662    %end;
1703663    );
1703664    run;
1703665    %let dsid = %sysfunc(open(_temp&id));
1703666    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703667    %let dsid = %sysfunc(close(&dsid));
1703668    %if &&nobs&id %then %do;
1703669    %let scoreFlag&id = 1;
1703670    %let fcmpStart = 1;
1703671    %end;
1703672    %else %let fcmpStart = 0;
1703673    %end;
1703674    %else %do;
1703675    proc sort data=&fcmpdata out=_tempid;
1703676    where id=&id;
1703677    by LHS;
1703678    run;
1703679    %let dsid = %sysfunc(open(_tempid));
1703680    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703681    %let dsid = %sysfunc(close(&dsid));
1703682    %if ^&&nobs&id %then %do;
1703683    proc datasets lib=work nolist;
1703684    delete _tempid;
1703685    run;
1703686    quit;
1703687    %end;
1703688    %else %do;
1703689    data _tempAll;
1703690    set %let j=%eval(&id-1);
1703691    %do x=1 %to &j;
1703692    %if &&nobs&x %then %do;
1703693    _temp&x %end;
1703694    %end;
1703695    ;
1703696    run;
1703697    proc sql;
1703698    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1703698  ! work._tempid p2 where p.name=p2.lhs;
1703699    quit;
1703700    data _temp&id;
1703701    set _temp&id;
1703702    where LHS ne '' and NAME ne '' and Node ne '';
1703703    run;
1703704    proc datasets lib=work nolist;
1703705    delete _tempAll;
1703706    run;
1703707    %let dsid = %sysfunc(open(_temp&id));
1703708    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703709    %let dsid = %sysfunc(close(&dsid));
1703710    %if ^&&nobs&id %then %do;
1703711    proc datasets lib=work nolist;
1703712    delete _temp&id;
1703713    run;
1703714    quit;
1703715    %end;
1703716    %else %do;
1703717    %let scoreFlag&id = 1;
1703718    data _temp&id;
1703719    set _temp&id;
1703720    where LHS ne NAME and node ne '';
1703721    run;
1703722    %let dsid = %sysfunc(open(_temp&id));
1703723    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1703724    %let dsid = %sysfunc(close(&dsid));
1703725    %if ^&&nobs&id %then %do;
1703726    proc datasets lib=work nolist;
1703727    delete _temp&id;
1703728    run;
1703729    quit;
1703730    %end;
1703731    %else %do;
1703732    proc sort data=_temp&id nodupkey;
1703733    by LHS NAME;
1703734    run;
1703735    %end;
1703736    %end;
1703737    %end;
1703738    %end;
1703739    %mend varDept;
1703740    %macro optCode(outdata=fcmpdata);
1703741    %global fcmpStart;
1703742    %let fcmpStart = 0;
1703743    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1703744    %let NumNodes=9;
1703745    %do k=1 %to &NumNodes;
1703746    %vardept(fcmpdata=&outdata, id=&k);
1703747    %end;
1703748    %mend optCode;
1703749    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 48 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 36 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 12 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 12 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 13 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 12 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 52 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1703750    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703751    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703752    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703754    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703755    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1703756    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703757    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703758    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703759    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1703759  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1703760    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1703761    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1703762    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1703763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703764    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1703765    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1703766    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1703767    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703768    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1703769    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1703770    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1703771    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703772    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1703773    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1703773  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1703774    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1703775    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1703776    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1703777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1703778    filename _pref
1703778  ! "C:\\predictive-models-project\Workspaces\EMWS8\Tree4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Tree4\EMPUBLISHSCORE.sas";
1703779    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1703780    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Tree4\EMPUBLISHSCORE.sas.
1703781   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1703782   +******             DECISION TREE SCORING CODE             ******;
MPRINT(EM_DIAGRAM):   ****** DECISION TREE SCORING CODE ******;
1703783   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1703784   +
1703785   +******         LENGTHS OF NEW CHARACTER VARIABLES         ******;
MPRINT(EM_DIAGRAM):   ****** LENGTHS OF NEW CHARACTER VARIABLES ******;
1703786   +LENGTH I_DepVar  $   12;
MPRINT(EM_DIAGRAM):   LENGTH I_DepVar $ 12;
1703787   +LENGTH _WARN_  $    4;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $ 4;
1703788   +
1703789   +******              LABELS FOR NEW VARIABLES              ******;
MPRINT(EM_DIAGRAM):   ****** LABELS FOR NEW VARIABLES ******;
1703790   +LABEL _NODE_  = 'Node' ;
MPRINT(EM_DIAGRAM):   LABEL _NODE_ = 'Node' ;
1703791   +LABEL _LEAF_  = 'Leaf' ;
MPRINT(EM_DIAGRAM):   LABEL _LEAF_ = 'Leaf' ;
1703792   +LABEL P_DepVar0  = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar0 = 'Predicted: DepVar=0' ;
1703793   +LABEL P_DepVar1  = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL P_DepVar1 = 'Predicted: DepVar=1' ;
1703794   +LABEL Q_DepVar0  = 'Unadjusted P: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar0 = 'Unadjusted P: DepVar=0' ;
1703795   +LABEL Q_DepVar1  = 'Unadjusted P: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL Q_DepVar1 = 'Unadjusted P: DepVar=1' ;
1703796   +LABEL V_DepVar0  = 'Validated: DepVar=0' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar0 = 'Validated: DepVar=0' ;
1703797   +LABEL V_DepVar1  = 'Validated: DepVar=1' ;
MPRINT(EM_DIAGRAM):   LABEL V_DepVar1 = 'Validated: DepVar=1' ;
1703798   +LABEL I_DepVar  = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL I_DepVar = 'Into: DepVar' ;
1703799   +LABEL U_DepVar  = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   LABEL U_DepVar = 'Unnormalized Into: DepVar' ;
1703800   +LABEL _WARN_  = 'Warnings' ;
MPRINT(EM_DIAGRAM):   LABEL _WARN_ = 'Warnings' ;
1703801   +
1703802   +
1703803   +******      TEMPORARY VARIABLES FOR FORMATTED VALUES      ******;
MPRINT(EM_DIAGRAM):   ****** TEMPORARY VARIABLES FOR FORMATTED VALUES ******;
1703804   +LENGTH _ARBFMT_12 $     12; DROP _ARBFMT_12;
MPRINT(EM_DIAGRAM):   LENGTH _ARBFMT_12 $ 12;
MPRINT(EM_DIAGRAM):   DROP _ARBFMT_12;
1703805   +_ARBFMT_12 = ' '; /* Initialize to avoid warning. */
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = ' ';
1703806   +
1703807   +
1703808   +******             ASSIGN OBSERVATION TO NODE             ******;
MPRINT(EM_DIAGRAM):   /* Initialize to avoid warning. */ ****** ASSIGN OBSERVATION TO NODE
******;
1703809   +IF  NOT MISSING(AcceptedCmpTotal ) AND
1703810   +                   0.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 0.5 <= AcceptedCmpTotal THEN DO;
1703811   +  IF  NOT MISSING(Recency ) AND
1703812   +    Recency  <                 38.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 38.5 THEN DO;
1703813   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1703814   +                       1.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 1.5 <= AcceptedCmpTotal THEN DO;
1703815   +      _NODE_  =                   13;
MPRINT(EM_DIAGRAM):   _NODE_ = 13;
1703816   +      _LEAF_  =                    9;
MPRINT(EM_DIAGRAM):   _LEAF_ = 9;
1703817   +      P_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05263157894736;
1703818   +      P_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94736842105263;
1703819   +      Q_DepVar0  =     0.05263157894736;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05263157894736;
1703820   +      Q_DepVar1  =     0.94736842105263;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94736842105263;
1703821   +      V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1703822   +      V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1703823   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703824   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703825   +      END;
MPRINT(EM_DIAGRAM):   END;
1703826   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703827   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1703828   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1703829   +      IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1703830   +        _NODE_  =                   22;
MPRINT(EM_DIAGRAM):   _NODE_ = 22;
1703831   +        _LEAF_  =                    5;
MPRINT(EM_DIAGRAM):   _LEAF_ = 5;
1703832   +        P_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.2258064516129;
1703833   +        P_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.77419354838709;
1703834   +        Q_DepVar0  =      0.2258064516129;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.2258064516129;
1703835   +        Q_DepVar1  =     0.77419354838709;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.77419354838709;
1703836   +        V_DepVar0  =     0.41935483870967;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.41935483870967;
1703837   +        V_DepVar1  =     0.58064516129032;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.58064516129032;
1703838   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703839   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703840   +        END;
MPRINT(EM_DIAGRAM):   END;
1703841   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703842   +        IF  NOT MISSING(MntWines ) AND
1703843   +          MntWines  <                  169 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntWines ) AND MntWines < 169 THEN DO;
1703844   +          _NODE_  =                   42;
MPRINT(EM_DIAGRAM):   _NODE_ = 42;
1703845   +          _LEAF_  =                    6;
MPRINT(EM_DIAGRAM):   _LEAF_ = 6;
1703846   +          P_DepVar0  =     0.24137931034482;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.24137931034482;
1703847   +          P_DepVar1  =     0.75862068965517;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75862068965517;
1703848   +          Q_DepVar0  =     0.24137931034482;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.24137931034482;
1703849   +          Q_DepVar1  =     0.75862068965517;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75862068965517;
1703850   +          V_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.25;
1703851   +          V_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.75;
1703852   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703853   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703854   +          END;
MPRINT(EM_DIAGRAM):   END;
1703855   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703856   +          IF  NOT MISSING(RFMstat ) AND
1703857   +                2448.04945054945 <= RFMstat  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(RFMstat ) AND 2448.04945054945 <= RFMstat THEN DO;
1703858   +            _NODE_  =                   55;
MPRINT(EM_DIAGRAM):   _NODE_ = 55;
1703859   +            _LEAF_  =                    8;
MPRINT(EM_DIAGRAM):   _LEAF_ = 8;
1703860   +            P_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.25;
1703861   +            P_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.75;
1703862   +            Q_DepVar0  =                 0.25;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.25;
1703863   +            Q_DepVar1  =                 0.75;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.75;
1703864   +            V_DepVar0  =     0.42857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.42857142857142;
1703865   +            V_DepVar1  =     0.57142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.57142857142857;
1703866   +            I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703867   +            U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703868   +            END;
MPRINT(EM_DIAGRAM):   END;
1703869   +          ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703870   +            _NODE_  =                   54;
MPRINT(EM_DIAGRAM):   _NODE_ = 54;
1703871   +            _LEAF_  =                    7;
MPRINT(EM_DIAGRAM):   _LEAF_ = 7;
1703872   +            P_DepVar0  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84615384615384;
1703873   +            P_DepVar1  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15384615384615;
1703874   +            Q_DepVar0  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84615384615384;
1703875   +            Q_DepVar1  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15384615384615;
1703876   +            V_DepVar0  =     0.67857142857142;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.67857142857142;
1703877   +            V_DepVar1  =     0.32142857142857;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.32142857142857;
1703878   +            I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1703879   +            U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1703880   +            END;
MPRINT(EM_DIAGRAM):   END;
1703881   +          END;
MPRINT(EM_DIAGRAM):   END;
1703882   +        END;
MPRINT(EM_DIAGRAM):   END;
1703883   +      END;
MPRINT(EM_DIAGRAM):   END;
1703884   +    END;
MPRINT(EM_DIAGRAM):   END;
1703885   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703886   +    IF  NOT MISSING(AcceptedCmpTotal ) AND
1703887   +                       2.5 <= AcceptedCmpTotal  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(AcceptedCmpTotal ) AND 2.5 <= AcceptedCmpTotal THEN DO;
1703888   +      _NODE_  =                   15;
MPRINT(EM_DIAGRAM):   _NODE_ = 15;
1703889   +      _LEAF_  =                   13;
MPRINT(EM_DIAGRAM):   _LEAF_ = 13;
1703890   +      P_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.3103448275862;
1703891   +      P_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.68965517241379;
1703892   +      Q_DepVar0  =      0.3103448275862;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.3103448275862;
1703893   +      Q_DepVar1  =     0.68965517241379;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.68965517241379;
1703894   +      V_DepVar0  =     0.33333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.33333333333333;
1703895   +      V_DepVar1  =     0.66666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.66666666666666;
1703896   +      I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703897   +      U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703898   +      END;
MPRINT(EM_DIAGRAM):   END;
1703899   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703900   +      IF  NOT MISSING(MntMeatProducts ) AND
1703901   +                         598 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 598 <= MntMeatProducts THEN DO;
1703902   +        _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1703903   +         %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1703904   +        IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('0' ,'1' ) THEN DO;
1703905   +          _NODE_  =                   47;
MPRINT(EM_DIAGRAM):   _NODE_ = 47;
1703906   +          _LEAF_  =                   12;
MPRINT(EM_DIAGRAM):   _LEAF_ = 12;
1703907   +          P_DepVar0  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.15384615384615;
1703908   +          P_DepVar1  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.84615384615384;
1703909   +          Q_DepVar0  =     0.15384615384615;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.15384615384615;
1703910   +          Q_DepVar1  =     0.84615384615384;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.84615384615384;
1703911   +          V_DepVar0  =                  0.4;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.4;
1703912   +          V_DepVar1  =                  0.6;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.6;
1703913   +          I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703914   +          U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703915   +          END;
MPRINT(EM_DIAGRAM):   END;
1703916   +        ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703917   +          _NODE_  =                   46;
MPRINT(EM_DIAGRAM):   _NODE_ = 46;
1703918   +          _LEAF_  =                   11;
MPRINT(EM_DIAGRAM):   _LEAF_ = 11;
1703919   +          P_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.76;
1703920   +          P_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.24;
1703921   +          Q_DepVar0  =                 0.76;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.76;
1703922   +          Q_DepVar1  =                 0.24;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.24;
1703923   +          V_DepVar0  =     0.83333333333333;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.83333333333333;
1703924   +          V_DepVar1  =     0.16666666666666;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.16666666666666;
1703925   +          I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1703926   +          U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1703927   +          END;
MPRINT(EM_DIAGRAM):   END;
1703928   +        END;
MPRINT(EM_DIAGRAM):   END;
1703929   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703930   +        _NODE_  =                   26;
MPRINT(EM_DIAGRAM):   _NODE_ = 26;
1703931   +        _LEAF_  =                   10;
MPRINT(EM_DIAGRAM):   _LEAF_ = 10;
1703932   +        P_DepVar0  =     0.86831275720164;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.86831275720164;
1703933   +        P_DepVar1  =     0.13168724279835;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.13168724279835;
1703934   +        Q_DepVar0  =     0.86831275720164;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.86831275720164;
1703935   +        Q_DepVar1  =     0.13168724279835;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.13168724279835;
1703936   +        V_DepVar0  =     0.85576923076923;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.85576923076923;
1703937   +        V_DepVar1  =     0.14423076923076;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.14423076923076;
1703938   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1703939   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1703940   +        END;
MPRINT(EM_DIAGRAM):   END;
1703941   +      END;
MPRINT(EM_DIAGRAM):   END;
1703942   +    END;
MPRINT(EM_DIAGRAM):   END;
1703943   +  END;
MPRINT(EM_DIAGRAM):   END;
1703944   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703945   +  IF  NOT MISSING(Recency ) AND
1703946   +    Recency  <                 32.5 THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(Recency ) AND Recency < 32.5 THEN DO;
1703947   +    IF  NOT MISSING(MntMeatProducts ) AND
1703948   +                       431 <= MntMeatProducts  THEN DO;
MPRINT(EM_DIAGRAM):   IF NOT MISSING(MntMeatProducts ) AND 431 <= MntMeatProducts THEN DO;
1703949   +      _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
MPRINT(EM_DIAGRAM):   _ARBFMT_12 = PUT( G_Marital_Status , BEST12.);
1703950   +       %DMNORMIP( _ARBFMT_12);
MPRINT(DMNORMIP):   call dmnorm(_ARBFMT_12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):  ;
1703951   +      IF _ARBFMT_12 IN ('2' ) THEN DO;
MPRINT(EM_DIAGRAM):   IF _ARBFMT_12 IN ('2' ) THEN DO;
1703952   +        _NODE_  =                   19;
MPRINT(EM_DIAGRAM):   _NODE_ = 19;
1703953   +        _LEAF_  =                    3;
MPRINT(EM_DIAGRAM):   _LEAF_ = 3;
1703954   +        P_DepVar0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.65853658536585;
1703955   +        P_DepVar1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.34146341463414;
1703956   +        Q_DepVar0  =     0.65853658536585;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.65853658536585;
1703957   +        Q_DepVar1  =     0.34146341463414;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.34146341463414;
1703958   +        V_DepVar0  =               0.6875;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.6875;
1703959   +        V_DepVar1  =               0.3125;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.3125;
1703960   +        I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1703961   +        U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1703962   +        END;
MPRINT(EM_DIAGRAM):   END;
1703963   +      ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703964   +        _NODE_  =                   18;
MPRINT(EM_DIAGRAM):   _NODE_ = 18;
1703965   +        _LEAF_  =                    2;
MPRINT(EM_DIAGRAM):   _LEAF_ = 2;
1703966   +        P_DepVar0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.05555555555555;
1703967   +        P_DepVar1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94444444444444;
1703968   +        Q_DepVar0  =     0.05555555555555;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.05555555555555;
1703969   +        Q_DepVar1  =     0.94444444444444;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.94444444444444;
1703970   +        V_DepVar0  =                    0;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0;
1703971   +        V_DepVar1  =                    1;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 1;
1703972   +        I_DepVar  = '1' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '1' ;
1703973   +        U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1703974   +        END;
MPRINT(EM_DIAGRAM):   END;
1703975   +      END;
MPRINT(EM_DIAGRAM):   END;
1703976   +    ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703977   +      _NODE_  =                    8;
MPRINT(EM_DIAGRAM):   _NODE_ = 8;
1703978   +      _LEAF_  =                    1;
MPRINT(EM_DIAGRAM):   _LEAF_ = 1;
1703979   +      P_DepVar0  =     0.84257602862254;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84257602862254;
1703980   +      P_DepVar1  =     0.15742397137745;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15742397137745;
1703981   +      Q_DepVar0  =     0.84257602862254;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.84257602862254;
1703982   +      Q_DepVar1  =     0.15742397137745;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.15742397137745;
1703983   +      V_DepVar0  =               0.8125;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.8125;
1703984   +      V_DepVar1  =               0.1875;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.1875;
1703985   +      I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1703986   +      U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1703987   +      END;
MPRINT(EM_DIAGRAM):   END;
1703988   +    END;
MPRINT(EM_DIAGRAM):   END;
1703989   +  ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1703990   +    _NODE_  =                    5;
MPRINT(EM_DIAGRAM):   _NODE_ = 5;
1703991   +    _LEAF_  =                    4;
MPRINT(EM_DIAGRAM):   _LEAF_ = 4;
1703992   +    P_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.98042414355628;
1703993   +    P_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.01957585644371;
1703994   +    Q_DepVar0  =     0.98042414355628;
MPRINT(EM_DIAGRAM):   Q_DepVar0 = 0.98042414355628;
1703995   +    Q_DepVar1  =     0.01957585644371;
MPRINT(EM_DIAGRAM):   Q_DepVar1 = 0.01957585644371;
1703996   +    V_DepVar0  =     0.98795180722891;
MPRINT(EM_DIAGRAM):   V_DepVar0 = 0.98795180722891;
1703997   +    V_DepVar1  =     0.01204819277108;
MPRINT(EM_DIAGRAM):   V_DepVar1 = 0.01204819277108;
1703998   +    I_DepVar  = '0' ;
MPRINT(EM_DIAGRAM):   I_DepVar = '0' ;
1703999   +    U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1704000   +    END;
MPRINT(EM_DIAGRAM):   END;
1704001   +  END;
MPRINT(EM_DIAGRAM):   END;
1704002   +
1704003   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1704004   +******          END OF DECISION TREE SCORING CODE         ******;
MPRINT(EM_DIAGRAM):   ****** END OF DECISION TREE SCORING CODE ******;
1704005   +****************************************************************;
MPRINT(EM_DIAGRAM):   ****************************************************************;
1704006   +drop _LEAF_;
MPRINT(EM_DIAGRAM):   drop _LEAF_;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704007    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704008    quit;
1704009    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704010    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704011    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704012    retain ID 2 Node "Tree4";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Tree4";
1704013    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 74 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704015    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704016    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 74 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 74 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704018    proc sort data=EMWS8.Tree4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Tree4_variableset out=_temp2(keep=NAME CREATOR);
1704019    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704020    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.TREE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704021    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704022    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704023    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704024    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704025    proc contents data=EMWS8.Tree4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Tree4_train out=_meta(keep=NAME) noprint;
1704026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1704027    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704028    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704029    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 59 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704030    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704031    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704032    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704033    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 59 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 59 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704034    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704035    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704035  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 64 rows and 5 columns.
 
1704036    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704037    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704038    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 64 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 64 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704039    filename _pref
1704039  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1704040    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704041    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1704042   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1704043   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1704044   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1704045   +
1704046   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1704047   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1704048   +
1704049   +
1704050   +/*----G_Marital_Status begin----*/
1704051   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1704052   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1704053   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1704054   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1704055   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1704056   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1704057   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1704058   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1704059   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1704060   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1704061   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1704062   +end;
MPRINT(EM_DIAGRAM):   end;
1704063   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1704064   +/*----G_Marital_Status end----*/
1704065   +
1704066   +
1704067   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1704068   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1704069   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704070    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704071    quit;
1704072    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704073    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704074    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704075    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1704076    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704077    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704078    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704079    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704081    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1704082    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704083    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704084    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704085    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704086    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704087    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704088    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1704089    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1704090    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704091    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704092    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704093    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704094    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704096    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704097    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704098    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704098  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1704099    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704100    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 67 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704102    filename _pref
1704102  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1704103    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704104    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1704105   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1704106   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1704107   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1704108   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1704109   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1704110   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704111    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704112    quit;
1704113    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704114    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704115    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704116    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1704117    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704118    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704119    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704120    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704121    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704122    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1704123    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704124    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704125    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704126    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704127    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704128    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704129    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1704130    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1704131    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704132    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.15 seconds
      cpu time            0.00 seconds
 
 
1704134    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704135    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704136    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704137    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704138    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704139    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704139  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1704140    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704141    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704142    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 71 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704143    filename _pref
1704143  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1704144    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704145    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1704146   +
1704147   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1704148   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1704148  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1704149   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1704150   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1704151   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1704152   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1704153   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704154    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704155    quit;
1704156    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704157    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704158    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704159    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1704160    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704161    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704162    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704163    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704164    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704165    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1704166    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704167    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704168    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704169    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704170    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704171    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704172    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1704173    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704174    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704175    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704176    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704177    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704178    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704179    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704180    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704181    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704182    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704182  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1704183    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704184    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704185    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 110 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704186    filename _pref
1704186  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1704187    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704188    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1704189   +
1704190   +
1704191   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1704192   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1704193   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1704194   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1704195   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1704196   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704197   +
1704198   +
1704199   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1704200   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1704201   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1704202   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1704203   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1704204   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704205   +
1704206   +
1704207   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1704208   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1704209   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1704210   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1704211   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1704212   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704213   +
1704214   +
1704215   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1704216   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1704217   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1704218   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1704219   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1704220   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704221   +
1704222   +
1704223   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1704224   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1704225   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1704226   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1704227   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1704228   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704229   +
1704230   +
1704231   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1704232   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1704233   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1704234   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1704235   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1704236   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704237   +
1704238   +
1704239   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1704240   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1704241   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1704242   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1704243   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1704244   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704245   +
1704246   +
1704247   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1704248   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1704249   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1704250   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1704251   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1704252   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704253   +if
1704254   +_FILTERNORM1 not in ( '.')
1704255   + and
1704256   +_FILTERNORM2 not in ( '.')
1704257   + and
1704258   +_FILTERNORM3 not in ( '.')
1704259   + and
1704260   +_FILTERNORM4 not in ( '.')
1704261   + and
1704262   +_FILTERNORM5 not in ( '.')
1704263   + and
1704264   +_FILTERNORM6 not in ( '.')
1704265   + and
1704266   +_FILTERNORM7 not in ( ' ')
1704267   + and
1704268   +_FILTERNORM8 not in ( ' ')
1704269   +and
1704270   +( Dt_Customer ne .)
1704271   +and ( Income ne . and (Income<=107000))
1704272   +and ( Kidhome ne .)
1704273   +and ( MntFishProducts ne .)
1704274   +and ( MntFruits ne .)
1704275   +and ( MntGoldProds ne .)
1704276   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1704277   +and ( MntSweetProducts ne .)
1704278   +and ( MntWines ne .)
1704279   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1704280   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1704281   +and ( NumStorePurchases ne .)
1704282   +and ( NumWebPurchases ne .)
1704283   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1704284   +and ( Recency ne .)
1704285   +and ( Teenhome ne .)
1704286   +and ( Year_Birth ne .)
1704287   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1704288   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1704289   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1704290   +end;
MPRINT(EM_DIAGRAM):   end;
1704291   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1704292   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704293    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704294    quit;
1704295    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704296    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704297    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704298    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1704299    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704300    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704301    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704302    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704303    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704304    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1704305    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704306    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704307    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704308    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704309    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704310    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704311    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1704312    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1704313    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704314    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704315    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704316    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704317    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704318    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704319    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704320    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704321    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704321  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1704322    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704323    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704324    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 176 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704325    %macro varDept(fcmpdata=,id=);
1704326    %global nobs&id scoreFlag&id;
1704327    %let scoreFlag&id = 0;
1704328    %if &id=1 or ^&fcmpStart %then %do;
1704329    proc sort data=&fcmpdata out=_temp&id nodupkey;
1704330    by NAME;
1704331    where id=&id and LHS in( %let j=1;
1704332    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1704333    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1704334    "&var" %let j = %eval(&j+1);
1704335    %end;
1704336    );
1704337    run;
1704338    %let dsid = %sysfunc(open(_temp&id));
1704339    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1704340    %let dsid = %sysfunc(close(&dsid));
1704341    %if &&nobs&id %then %do;
1704342    %let scoreFlag&id = 1;
1704343    %let fcmpStart = 1;
1704344    %end;
1704345    %else %let fcmpStart = 0;
1704346    %end;
1704347    %else %do;
1704348    proc sort data=&fcmpdata out=_tempid;
1704349    where id=&id;
1704350    by LHS;
1704351    run;
1704352    %let dsid = %sysfunc(open(_tempid));
1704353    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1704354    %let dsid = %sysfunc(close(&dsid));
1704355    %if ^&&nobs&id %then %do;
1704356    proc datasets lib=work nolist;
1704357    delete _tempid;
1704358    run;
1704359    quit;
1704360    %end;
1704361    %else %do;
1704362    data _tempAll;
1704363    set %let j=%eval(&id-1);
1704364    %do x=1 %to &j;
1704365    %if &&nobs&x %then %do;
1704366    _temp&x %end;
1704367    %end;
1704368    ;
1704369    run;
1704370    proc sql;
1704371    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1704371  ! work._tempid p2 where p.name=p2.lhs;
1704372    quit;
1704373    data _temp&id;
1704374    set _temp&id;
1704375    where LHS ne '' and NAME ne '' and Node ne '';
1704376    run;
1704377    proc datasets lib=work nolist;
1704378    delete _tempAll;
1704379    run;
1704380    %let dsid = %sysfunc(open(_temp&id));
1704381    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1704382    %let dsid = %sysfunc(close(&dsid));
1704383    %if ^&&nobs&id %then %do;
1704384    proc datasets lib=work nolist;
1704385    delete _temp&id;
1704386    run;
1704387    quit;
1704388    %end;
1704389    %else %do;
1704390    %let scoreFlag&id = 1;
1704391    data _temp&id;
1704392    set _temp&id;
1704393    where LHS ne NAME and node ne '';
1704394    run;
1704395    %let dsid = %sysfunc(open(_temp&id));
1704396    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1704397    %let dsid = %sysfunc(close(&dsid));
1704398    %if ^&&nobs&id %then %do;
1704399    proc datasets lib=work nolist;
1704400    delete _temp&id;
1704401    run;
1704402    quit;
1704403    %end;
1704404    %else %do;
1704405    proc sort data=_temp&id nodupkey;
1704406    by LHS NAME;
1704407    run;
1704408    %end;
1704409    %end;
1704410    %end;
1704411    %end;
1704412    %mend varDept;
1704413    %macro optCode(outdata=fcmpdata);
1704414    %global fcmpStart;
1704415    %let fcmpStart = 0;
1704416    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1704417    %let NumNodes=9;
1704418    %do k=1 %to &NumNodes;
1704419    %vardept(fcmpdata=&outdata, id=&k);
1704420    %end;
1704421    %mend optCode;
1704422    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 18 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 12 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 6 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 6 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 7 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 17 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 6 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 17 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 24 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.06 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1704423    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1704424    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1704425    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1704426    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704427    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1704428    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1704429    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1704430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704431    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704432    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1704432  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1704433    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704434    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1704435    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1704436    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704437    filename _pref
1704437  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas";
1704438    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704439    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural8\EMPUBLISHSCORE.sas.
1704440   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1704441   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1704442   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1704443   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1704444   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1704445   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1704446   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1704447   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1704448   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1704449   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1704450   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1704451   +LENGTH _WARN_ $4
1704452   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1704453   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1704454   +
1704455   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1704456   +
1704457   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1704458   +
1704459   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1704460   +
1704461   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1704462   +
1704463   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1704464   +
1704465   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1704466   +
1704467   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1704468   +
1704469   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1704470   +
1704471   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1704472   +
1704473   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1704474   +
1704475   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1704476   +
1704477   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1704478   +
1704479   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1704480   +
1704481   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1704482   +
1704483   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1704484   +
1704485   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1704486   +
1704487   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1704488   +
1704489   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1704490   +
1704491   +      label H17 = 'Hidden: H1=7' ;
MPRINT(EM_DIAGRAM):   label H17 = 'Hidden: H1=7' ;
1704492   +
1704493   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1704494   +
1704495   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1704496   +
1704497   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1704498   +
1704499   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1704500   +
1704501   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1704502   +
1704503   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1704504   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1704505   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1704506   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1704507   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1704508   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1704509   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1704510   +end;
MPRINT(EM_DIAGRAM):   end;
1704511   +else do;
MPRINT(EM_DIAGRAM):   else do;
1704512   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1704513   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1704514   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1704515   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1704516   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1704517   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1704518   +   end;
MPRINT(EM_DIAGRAM):   end;
1704519   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1704520   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1704521   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1704522   +   end;
MPRINT(EM_DIAGRAM):   end;
1704523   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1704524   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1704525   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1704526   +   end;
MPRINT(EM_DIAGRAM):   end;
1704527   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1704528   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1704529   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1704530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1704531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1704532   +   end;
MPRINT(EM_DIAGRAM):   end;
1704533   +end;
MPRINT(EM_DIAGRAM):   end;
1704534   +
1704535   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704536   +*** Checking missing input Interval
1704537   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1704538   +
1704539   +IF NMISS(
1704540   +   AcceptedCmpTotal ,
1704541   +   Frq ,
1704542   +   Income ,
1704543   +   Mnt ,
1704544   +   MntGoldProds ,
1704545   +   MntMeatProducts ,
1704546   +   MntWines ,
1704547   +   NumDistPurchases ,
1704548   +   RFMstat ,
1704549   +   RMntFrq ,
1704550   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1704551   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1704552   +
1704553   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1704554   +END;
MPRINT(EM_DIAGRAM):   END;
1704555   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704556   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1704557   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704558   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1704559   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1704560   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1704561   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1704562   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1704563   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1704564   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1704565   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1704566   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1704567   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1704568   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1704569   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1704570   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1704571   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1704572   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1704573   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1704574   +END;
MPRINT(EM_DIAGRAM):   END;
1704575   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1704576   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1704577   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1704578   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1704579   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1704580   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1704581   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1704582   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1704583   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1704584   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1704585   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1704586   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1704587   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1704588   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1704589   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1704590   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1704591   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1704592   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1704593   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1704594   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1704595   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1704596   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1704597   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1704598   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1704599   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1704600   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1704601   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1704602   +END;
MPRINT(EM_DIAGRAM):   END;
1704603   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704604   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1704605   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704606   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704607   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1704608   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704609   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1704610   +   H11  =     0.33294813803267 * S_AcceptedCmpTotal  +    -1.24039573879629 *
1704611   +        S_Frq  +    -0.05312453396461 * S_Income  +    -1.10582794272994 *
1704612   +        S_Mnt  +    -0.07760643003938 * S_MntGoldProds
1704613   +          +     1.40615546889198 * S_MntMeatProducts
1704614   +          +    -0.07607000653866 * S_MntWines  +      1.3974050378538 *
1704615   +        S_NumDistPurchases  +     0.21523028866532 * S_RFMstat
1704616   +          +    -0.90250971189164 * S_RMntFrq  +    -0.29921926423225 *
1704617   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.33294813803267 * S_AcceptedCmpTotal + -1.24039573879629 * S_Frq
+ -0.05312453396461 * S_Income + -1.10582794272994 * S_Mnt + -0.07760643003938 *
S_MntGoldProds + 1.40615546889198 * S_MntMeatProducts + -0.07607000653866 * S_MntWines +
1.3974050378538 * S_NumDistPurchases + 0.21523028866532 * S_RFMstat + -0.90250971189164 *
S_RMntFrq + -0.29921926423225 * S_Recency ;
1704618   +   H12  =    -0.12895365437344 * S_AcceptedCmpTotal  +     -1.3313949600547 *
1704619   +        S_Frq  +    -1.37899106632441 * S_Income  +    -0.58761109294666 *
1704620   +        S_Mnt  +     0.35202206207132 * S_MntGoldProds
1704621   +          +     0.09184646817235 * S_MntMeatProducts
1704622   +          +     0.13335664554613 * S_MntWines  +     0.61353674232736 *
1704623   +        S_NumDistPurchases  +     0.35066529273924 * S_RFMstat
1704624   +          +     0.65664535290196 * S_RMntFrq  +    -0.18186117718946 *
1704625   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.12895365437344 * S_AcceptedCmpTotal + -1.3313949600547 * S_Frq
+ -1.37899106632441 * S_Income + -0.58761109294666 * S_Mnt + 0.35202206207132 * S_MntGoldProds
+ 0.09184646817235 * S_MntMeatProducts + 0.13335664554613 * S_MntWines + 0.61353674232736 *
S_NumDistPurchases + 0.35066529273924 * S_RFMstat + 0.65664535290196 * S_RMntFrq +
-0.18186117718946 * S_Recency ;
1704626   +   H13  =     0.37357969261544 * S_AcceptedCmpTotal  +     0.39633284030412 *
1704627   +        S_Frq  +     0.64644973118257 * S_Income  +    -0.00934866805665 *
1704628   +        S_Mnt  +     0.34942371005238 * S_MntGoldProds
1704629   +          +     0.39891627134773 * S_MntMeatProducts
1704630   +          +    -0.03684678353498 * S_MntWines  +     1.02433172338367 *
1704631   +        S_NumDistPurchases  +     0.20910974889856 * S_RFMstat
1704632   +          +     0.07904474603466 * S_RMntFrq  +    -0.30357080495082 *
1704633   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = 0.37357969261544 * S_AcceptedCmpTotal + 0.39633284030412 * S_Frq +
0.64644973118257 * S_Income + -0.00934866805665 * S_Mnt + 0.34942371005238 * S_MntGoldProds +
0.39891627134773 * S_MntMeatProducts + -0.03684678353498 * S_MntWines + 1.02433172338367 *
S_NumDistPurchases + 0.20910974889856 * S_RFMstat + 0.07904474603466 * S_RMntFrq +
-0.30357080495082 * S_Recency ;
1704634   +   H14  =     0.13554328647808 * S_AcceptedCmpTotal  +    -0.07048372524888 *
1704635   +        S_Frq  +     0.04610079419509 * S_Income  +     0.10924113857251 *
1704636   +        S_Mnt  +     0.12915488369242 * S_MntGoldProds
1704637   +          +     0.18610321199349 * S_MntMeatProducts
1704638   +          +     0.70556343816133 * S_MntWines  +     0.25728143320607 *
1704639   +        S_NumDistPurchases  +     0.15972524961567 * S_RFMstat
1704640   +          +     0.01276365258392 * S_RMntFrq  +    -0.66413982659745 *
1704641   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.13554328647808 * S_AcceptedCmpTotal + -0.07048372524888 * S_Frq
+ 0.04610079419509 * S_Income + 0.10924113857251 * S_Mnt + 0.12915488369242 * S_MntGoldProds +
0.18610321199349 * S_MntMeatProducts + 0.70556343816133 * S_MntWines + 0.25728143320607 *
S_NumDistPurchases + 0.15972524961567 * S_RFMstat + 0.01276365258392 * S_RMntFrq +
-0.66413982659745 * S_Recency ;
1704642   +   H15  =     -1.1420503402904 * S_AcceptedCmpTotal  +     0.71380555863062 *
1704643   +        S_Frq  +    -0.24803616582173 * S_Income  +     0.13154058420998 *
1704644   +        S_Mnt  +    -0.42749671288369 * S_MntGoldProds
1704645   +          +     -1.3154288229161 * S_MntMeatProducts
1704646   +          +      -0.255711705654 * S_MntWines  +     0.11914899881729 *
1704647   +        S_NumDistPurchases  +    -0.05982295822576 * S_RFMstat
1704648   +          +    -0.69679195615668 * S_RMntFrq  +    -0.21391830972623 *
1704649   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -1.1420503402904 * S_AcceptedCmpTotal + 0.71380555863062 * S_Frq +
-0.24803616582173 * S_Income + 0.13154058420998 * S_Mnt + -0.42749671288369 * S_MntGoldProds +
-1.3154288229161 * S_MntMeatProducts + -0.255711705654 * S_MntWines + 0.11914899881729 *
S_NumDistPurchases + -0.05982295822576 * S_RFMstat + -0.69679195615668 * S_RMntFrq +
-0.21391830972623 * S_Recency ;
1704650   +   H16  =     0.00981250946025 * S_AcceptedCmpTotal  +     0.04123504196179 *
1704651   +        S_Frq  +     0.12222635666431 * S_Income  +     0.29796072335771 *
1704652   +        S_Mnt  +     0.22410489312536 * S_MntGoldProds
1704653   +          +    -1.05184346257138 * S_MntMeatProducts
1704654   +          +     0.19959913357382 * S_MntWines  +    -0.69776033144787 *
1704655   +        S_NumDistPurchases  +    -0.40844675601616 * S_RFMstat
1704656   +          +    -0.86567751620087 * S_RMntFrq  +       0.363703677148 *
1704657   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = 0.00981250946025 * S_AcceptedCmpTotal + 0.04123504196179 * S_Frq +
0.12222635666431 * S_Income + 0.29796072335771 * S_Mnt + 0.22410489312536 * S_MntGoldProds +
-1.05184346257138 * S_MntMeatProducts + 0.19959913357382 * S_MntWines + -0.69776033144787 *
S_NumDistPurchases + -0.40844675601616 * S_RFMstat + -0.86567751620087 * S_RMntFrq +
0.363703677148 * S_Recency ;
1704658   +   H17  =     0.94478838355387 * S_AcceptedCmpTotal  +    -0.70060201854486 *
1704659   +        S_Frq  +     -0.1828959052644 * S_Income  +    -0.69020858610444 *
1704660   +        S_Mnt  +    -0.10810625538739 * S_MntGoldProds
1704661   +          +     0.08623383006102 * S_MntMeatProducts
1704662   +          +    -0.10662594781542 * S_MntWines  +     0.49956982718189 *
1704663   +        S_NumDistPurchases  +    -0.52485639325545 * S_RFMstat
1704664   +          +    -0.21634639560711 * S_RMntFrq  +    -1.54075315391445 *
1704665   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H17 = 0.94478838355387 * S_AcceptedCmpTotal + -0.70060201854486 * S_Frq
+ -0.1828959052644 * S_Income + -0.69020858610444 * S_Mnt + -0.10810625538739 * S_MntGoldProds
+ 0.08623383006102 * S_MntMeatProducts + -0.10662594781542 * S_MntWines + 0.49956982718189 *
S_NumDistPurchases + -0.52485639325545 * S_RFMstat + -0.21634639560711 * S_RMntFrq +
-1.54075315391445 * S_Recency ;
1704666   +   H11  = H11  +     0.16164655653565 * G_Marital_Status0
1704667   +          +     0.08705670063172 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.16164655653565 * G_Marital_Status0 + 0.08705670063172 *
G_Marital_Status1 ;
1704668   +   H12  = H12  +     0.00173619463191 * G_Marital_Status0
1704669   +          +    -0.01602297769528 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.00173619463191 * G_Marital_Status0 + -0.01602297769528 *
G_Marital_Status1 ;
1704670   +   H13  = H13  +    -0.20647507845797 * G_Marital_Status0
1704671   +          +    -0.14268881423356 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.20647507845797 * G_Marital_Status0 + -0.14268881423356 *
G_Marital_Status1 ;
1704672   +   H14  = H14  +     0.66515401547718 * G_Marital_Status0
1704673   +          +     0.13894686879381 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.66515401547718 * G_Marital_Status0 + 0.13894686879381 *
G_Marital_Status1 ;
1704674   +   H15  = H15  +    -0.10602970955306 * G_Marital_Status0
1704675   +          +     0.12966863964317 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.10602970955306 * G_Marital_Status0 + 0.12966863964317 *
G_Marital_Status1 ;
1704676   +   H16  = H16  +     0.25775977539205 * G_Marital_Status0
1704677   +          +     0.20902791963936 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.25775977539205 * G_Marital_Status0 + 0.20902791963936 *
G_Marital_Status1 ;
1704678   +   H17  = H17  +     0.54268893569335 * G_Marital_Status0
1704679   +          +     0.63641124967593 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H17 = H17 + 0.54268893569335 * G_Marital_Status0 + 0.63641124967593 *
G_Marital_Status1 ;
1704680   +   H11  =    -0.89307077259606 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.89307077259606 + H11 ;
1704681   +   H12  =    -0.52976269769549 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.52976269769549 + H12 ;
1704682   +   H13  =     1.93938724237609 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 1.93938724237609 + H13 ;
1704683   +   H14  =    -2.08624954900209 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.08624954900209 + H14 ;
1704684   +   H15  =     1.21926205411217 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 1.21926205411217 + H15 ;
1704685   +   H16  =    -0.82614580546756 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -0.82614580546756 + H16 ;
1704686   +   H17  =     0.88553151374376 + H17 ;
MPRINT(EM_DIAGRAM):   H17 = 0.88553151374376 + H17 ;
1704687   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1704688   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1704689   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1704690   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1704691   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1704692   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1704693   +   H17  = TANH(H17 );
MPRINT(EM_DIAGRAM):   H17 = TANH(H17 );
1704694   +END;
MPRINT(EM_DIAGRAM):   END;
1704695   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1704696   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1704697   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1704698   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1704699   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1704700   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1704701   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1704702   +   H17  = .;
MPRINT(EM_DIAGRAM):   H17 = .;
1704703   +END;
MPRINT(EM_DIAGRAM):   END;
1704704   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704705   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1704706   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704707   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1704708   +   P_DepVar1  =     2.95606472513759 * H11  +     1.89470964296724 * H12
1704709   +          +     1.54768089051578 * H13  +     1.66736822539449 * H14
1704710   +          +    -1.78269941197359 * H15  +    -1.37291423165719 * H16
1704711   +          +      2.0599951000352 * H17 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 2.95606472513759 * H11 + 1.89470964296724 * H12 +
1.54768089051578 * H13 + 1.66736822539449 * H14 + -1.78269941197359 * H15 + -1.37291423165719
* H16 + 2.0599951000352 * H17 ;
1704712   +   P_DepVar1  =    -1.26664447892937 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.26664447892937 + P_DepVar1 ;
1704713   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1704714   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1704715   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1704716   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1704717   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1704718   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1704719   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1704720   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1704721   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1704722   +END;
MPRINT(EM_DIAGRAM):   END;
1704723   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1704724   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1704725   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1704726   +END;
MPRINT(EM_DIAGRAM):   END;
1704727   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1704728   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1704729   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1704730   +END;
MPRINT(EM_DIAGRAM):   END;
1704731   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704732   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1704733   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1704734   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1704735   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1704736   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1704737   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1704738   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1704739   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1704740   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1704741   +END;
MPRINT(EM_DIAGRAM):   END;
1704742   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1704743   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1704744   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1704745   +drop
1704746   +H11
1704747   +H12
1704748   +H13
1704749   +H14
1704750   +H15
1704751   +H16
1704752   +H17
1704753   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 H17 ;
1704754   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704755    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704756    quit;
1704757    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704758    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704759    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704760    retain ID 2 Node "Neural8";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural8";
1704761    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1073 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1073 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704763    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704764    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1073 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1073 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704766    proc sort data=EMWS8.Neural8_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural8_variableset out=_temp2(keep=NAME CREATOR);
1704767    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL8_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704769    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704770    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704771    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704773    proc contents data=EMWS8.Neural8_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural8_train out=_meta(keep=NAME) noprint;
1704774    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1704775    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704776    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704777    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704778    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704779    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704780    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704781    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704782    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704783    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704783  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 467 rows and 5 columns.
 
1704784    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704785    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704786    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 467 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 467 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704787    filename _pref
1704787  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1704788    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704789    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1704790   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1704791   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1704792   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1704793   +
1704794   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1704795   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1704796   +
1704797   +
1704798   +/*----G_Marital_Status begin----*/
1704799   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1704800   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1704801   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1704802   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1704803   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1704804   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1704805   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1704806   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1704807   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1704808   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1704809   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1704810   +end;
MPRINT(EM_DIAGRAM):   end;
1704811   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1704812   +/*----G_Marital_Status end----*/
1704813   +
1704814   +
1704815   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1704816   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1704817   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704818    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704819    quit;
1704820    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704821    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704822    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704823    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1704824    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704826    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704827    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704828    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704829    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1704830    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704831    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704832    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704833    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704834    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704835    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704836    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1704837    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1704838    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704839    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704840    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704841    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704842    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704843    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704844    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704845    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704846    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704846  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1704847    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704848    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704849    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 470 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704850    filename _pref
1704850  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1704851    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704852    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1704853   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1704854   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1704855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1704856   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1704857   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1704858   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704859    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704860    quit;
1704861    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704862    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704863    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704864    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1704865    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704866    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704867    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704868    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704869    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704870    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1704871    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704872    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704873    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704874    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704875    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704876    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704877    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1704878    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1704879    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704880    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704881    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704882    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704883    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704884    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704885    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704886    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704887    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704887  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1704888    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704889    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704890    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 474 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704891    filename _pref
1704891  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1704892    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704893    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1704894   +
1704895   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1704896   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1704896  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1704897   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1704898   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1704899   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1704900   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1704901   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1704902    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1704903    quit;
1704904    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1704905    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1704906    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1704907    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1704908    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1704909    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1704910    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1704911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704912    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704913    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1704914    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704915    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704916    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704917    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1704918    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1704919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704920    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1704921    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704922    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1704923    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704924    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704925    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1704926    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1704927    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1704928    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704929    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1704930    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1704930  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1704931    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704932    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1704933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 513 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1704934    filename _pref
1704934  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1704935    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1704936    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1704937   +
1704938   +
1704939   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1704940   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1704941   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1704942   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1704943   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1704944   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704945   +
1704946   +
1704947   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1704948   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1704949   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1704950   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1704951   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1704952   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704953   +
1704954   +
1704955   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1704956   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1704957   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1704958   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1704959   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1704960   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704961   +
1704962   +
1704963   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1704964   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1704965   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1704966   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1704967   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1704968   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704969   +
1704970   +
1704971   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1704972   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1704973   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1704974   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1704975   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1704976   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704977   +
1704978   +
1704979   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1704980   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1704981   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1704982   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1704983   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1704984   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704985   +
1704986   +
1704987   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1704988   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1704989   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1704990   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1704991   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1704992   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1704993   +
1704994   +
1704995   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1704996   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1704997   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1704998   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1704999   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1705000   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705001   +if
1705002   +_FILTERNORM1 not in ( '.')
1705003   + and
1705004   +_FILTERNORM2 not in ( '.')
1705005   + and
1705006   +_FILTERNORM3 not in ( '.')
1705007   + and
1705008   +_FILTERNORM4 not in ( '.')
1705009   + and
1705010   +_FILTERNORM5 not in ( '.')
1705011   + and
1705012   +_FILTERNORM6 not in ( '.')
1705013   + and
1705014   +_FILTERNORM7 not in ( ' ')
1705015   + and
1705016   +_FILTERNORM8 not in ( ' ')
1705017   +and
1705018   +( Dt_Customer ne .)
1705019   +and ( Income ne . and (Income<=107000))
1705020   +and ( Kidhome ne .)
1705021   +and ( MntFishProducts ne .)
1705022   +and ( MntFruits ne .)
1705023   +and ( MntGoldProds ne .)
1705024   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1705025   +and ( MntSweetProducts ne .)
1705026   +and ( MntWines ne .)
1705027   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1705028   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1705029   +and ( NumStorePurchases ne .)
1705030   +and ( NumWebPurchases ne .)
1705031   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1705032   +and ( Recency ne .)
1705033   +and ( Teenhome ne .)
1705034   +and ( Year_Birth ne .)
1705035   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1705036   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1705037   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1705038   +end;
MPRINT(EM_DIAGRAM):   end;
1705039   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1705040   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1705041    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1705042    quit;
1705043    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1705044    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1705045    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1705046    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1705047    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1705048    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705049    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1705050    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705051    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705052    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1705053    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705054    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705055    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705056    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1705057    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1705058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705059    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1705060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1705061    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1705062    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705063    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705064    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705065    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1705066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705067    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705068    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705069    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1705069  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1705070    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705071    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1705072    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 579 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705073    %macro varDept(fcmpdata=,id=);
1705074    %global nobs&id scoreFlag&id;
1705075    %let scoreFlag&id = 0;
1705076    %if &id=1 or ^&fcmpStart %then %do;
1705077    proc sort data=&fcmpdata out=_temp&id nodupkey;
1705078    by NAME;
1705079    where id=&id and LHS in( %let j=1;
1705080    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1705081    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1705082    "&var" %let j = %eval(&j+1);
1705083    %end;
1705084    );
1705085    run;
1705086    %let dsid = %sysfunc(open(_temp&id));
1705087    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705088    %let dsid = %sysfunc(close(&dsid));
1705089    %if &&nobs&id %then %do;
1705090    %let scoreFlag&id = 1;
1705091    %let fcmpStart = 1;
1705092    %end;
1705093    %else %let fcmpStart = 0;
1705094    %end;
1705095    %else %do;
1705096    proc sort data=&fcmpdata out=_tempid;
1705097    where id=&id;
1705098    by LHS;
1705099    run;
1705100    %let dsid = %sysfunc(open(_tempid));
1705101    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705102    %let dsid = %sysfunc(close(&dsid));
1705103    %if ^&&nobs&id %then %do;
1705104    proc datasets lib=work nolist;
1705105    delete _tempid;
1705106    run;
1705107    quit;
1705108    %end;
1705109    %else %do;
1705110    data _tempAll;
1705111    set %let j=%eval(&id-1);
1705112    %do x=1 %to &j;
1705113    %if &&nobs&x %then %do;
1705114    _temp&x %end;
1705115    %end;
1705116    ;
1705117    run;
1705118    proc sql;
1705119    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1705119  ! work._tempid p2 where p.name=p2.lhs;
1705120    quit;
1705121    data _temp&id;
1705122    set _temp&id;
1705123    where LHS ne '' and NAME ne '' and Node ne '';
1705124    run;
1705125    proc datasets lib=work nolist;
1705126    delete _tempAll;
1705127    run;
1705128    %let dsid = %sysfunc(open(_temp&id));
1705129    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705130    %let dsid = %sysfunc(close(&dsid));
1705131    %if ^&&nobs&id %then %do;
1705132    proc datasets lib=work nolist;
1705133    delete _temp&id;
1705134    run;
1705135    quit;
1705136    %end;
1705137    %else %do;
1705138    %let scoreFlag&id = 1;
1705139    data _temp&id;
1705140    set _temp&id;
1705141    where LHS ne NAME and node ne '';
1705142    run;
1705143    %let dsid = %sysfunc(open(_temp&id));
1705144    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705145    %let dsid = %sysfunc(close(&dsid));
1705146    %if ^&&nobs&id %then %do;
1705147    proc datasets lib=work nolist;
1705148    delete _temp&id;
1705149    run;
1705150    quit;
1705151    %end;
1705152    %else %do;
1705153    proc sort data=_temp&id nodupkey;
1705154    by LHS NAME;
1705155    run;
1705156    %end;
1705157    %end;
1705158    %end;
1705159    %end;
1705160    %mend varDept;
1705161    %macro optCode(outdata=fcmpdata);
1705162    %global fcmpStart;
1705163    %let fcmpStart = 0;
1705164    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1705165    %let NumNodes=9;
1705166    %do k=1 %to &NumNodes;
1705167    %vardept(fcmpdata=&outdata, id=&k);
1705168    %end;
1705169    %mend optCode;
1705170    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1705171    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1705172    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1705173    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1705174    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705175    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1705176    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1705177    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1705178    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705179    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705180    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1705180  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1705181    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1705182    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1705183    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1705184    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705185    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1705186    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1705187    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1705188    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705189    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1705190    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1705191    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1705192    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705193    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705194    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1705194  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1705195    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705196    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1705197    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1705198    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705199    filename _pref
1705199  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas";
1705200    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1705201    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural28\EMPUBLISHSCORE.sas.
1705202   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1705203   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1705204   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1705205   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1705206   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1705207   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1705208   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1705209   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1705210   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1705211   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1705212   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1705213   +LENGTH _WARN_ $4
1705214   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1705215   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1705216   +
1705217   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1705218   +
1705219   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1705220   +
1705221   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1705222   +
1705223   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1705224   +
1705225   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1705226   +
1705227   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1705228   +
1705229   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1705230   +
1705231   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1705232   +
1705233   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1705234   +
1705235   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1705236   +
1705237   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1705238   +
1705239   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1705240   +
1705241   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1705242   +
1705243   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1705244   +
1705245   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1705246   +
1705247   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1705248   +
1705249   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1705250   +
1705251   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1705252   +
1705253   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1705254   +
1705255   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1705256   +
1705257   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1705258   +
1705259   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1705260   +
1705261   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1705262   +
1705263   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1705264   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1705265   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1705266   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1705267   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1705268   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1705269   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1705270   +end;
MPRINT(EM_DIAGRAM):   end;
1705271   +else do;
MPRINT(EM_DIAGRAM):   else do;
1705272   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1705273   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1705274   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1705275   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1705276   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1705277   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1705278   +   end;
MPRINT(EM_DIAGRAM):   end;
1705279   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1705280   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1705281   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1705282   +   end;
MPRINT(EM_DIAGRAM):   end;
1705283   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1705284   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1705285   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1705286   +   end;
MPRINT(EM_DIAGRAM):   end;
1705287   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1705288   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1705289   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1705290   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1705291   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1705292   +   end;
MPRINT(EM_DIAGRAM):   end;
1705293   +end;
MPRINT(EM_DIAGRAM):   end;
1705294   +
1705295   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705296   +*** Checking missing input Interval
1705297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1705298   +
1705299   +IF NMISS(
1705300   +   AcceptedCmpTotal ,
1705301   +   Frq ,
1705302   +   Income ,
1705303   +   Mnt ,
1705304   +   MntGoldProds ,
1705305   +   MntMeatProducts ,
1705306   +   MntWines ,
1705307   +   NumDistPurchases ,
1705308   +   RFMstat ,
1705309   +   RMntFrq ,
1705310   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1705311   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1705312   +
1705313   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1705314   +END;
MPRINT(EM_DIAGRAM):   END;
1705315   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705316   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1705317   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705318   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1705319   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1705320   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1705321   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1705322   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1705323   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1705324   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1705325   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1705326   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1705327   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1705328   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1705329   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1705330   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1705331   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1705332   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1705333   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1705334   +END;
MPRINT(EM_DIAGRAM):   END;
1705335   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1705336   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1705337   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1705338   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1705339   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1705340   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1705341   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1705342   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1705343   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1705344   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1705345   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1705346   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1705347   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1705348   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1705349   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1705350   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1705351   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1705352   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1705353   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1705354   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1705355   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1705356   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1705357   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1705358   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1705359   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1705360   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1705361   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1705362   +END;
MPRINT(EM_DIAGRAM):   END;
1705363   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705364   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1705365   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705366   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705367   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1705368   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705369   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1705370   +   H11  =     0.40839920245437 * S_AcceptedCmpTotal  +    -0.80301052154323 *
1705371   +        S_Frq  +     0.19839975683497 * S_Income  +    -0.71099382445924 *
1705372   +        S_Mnt  +    -0.15644638799226 * S_MntGoldProds
1705373   +          +    -0.05910355740416 * S_MntMeatProducts
1705374   +          +     0.23095157103241 * S_MntWines  +     0.67840217585411 *
1705375   +        S_NumDistPurchases  +     0.12536920827324 * S_RFMstat
1705376   +          +    -0.27246125863137 * S_RMntFrq  +    -1.02114645988925 *
1705377   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.40839920245437 * S_AcceptedCmpTotal + -0.80301052154323 * S_Frq
+ 0.19839975683497 * S_Income + -0.71099382445924 * S_Mnt + -0.15644638799226 * S_MntGoldProds
+ -0.05910355740416 * S_MntMeatProducts + 0.23095157103241 * S_MntWines + 0.67840217585411 *
S_NumDistPurchases + 0.12536920827324 * S_RFMstat + -0.27246125863137 * S_RMntFrq +
-1.02114645988925 * S_Recency ;
1705378   +   H12  =    -0.09503041118006 * S_AcceptedCmpTotal  +     0.74672296647411 *
1705379   +        S_Frq  +     1.82688988564051 * S_Income  +    -0.06831964209279 *
1705380   +        S_Mnt  +    -0.13330887266177 * S_MntGoldProds
1705381   +          +     0.09400377526937 * S_MntMeatProducts
1705382   +          +    -0.53358910675611 * S_MntWines  +     0.13886503925085 *
1705383   +        S_NumDistPurchases  +     0.02243224025219 * S_RFMstat
1705384   +          +    -0.03110171961938 * S_RMntFrq  +     0.39055670382948 *
1705385   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.09503041118006 * S_AcceptedCmpTotal + 0.74672296647411 * S_Frq
+ 1.82688988564051 * S_Income + -0.06831964209279 * S_Mnt + -0.13330887266177 * S_MntGoldProds
+ 0.09400377526937 * S_MntMeatProducts + -0.53358910675611 * S_MntWines + 0.13886503925085 *
S_NumDistPurchases + 0.02243224025219 * S_RFMstat + -0.03110171961938 * S_RMntFrq +
0.39055670382948 * S_Recency ;
1705386   +   H13  =    -0.07144509122078 * S_AcceptedCmpTotal  +     0.65325962599673 *
1705387   +        S_Frq  +     0.03169199805286 * S_Income  +     0.53573115818994 *
1705388   +        S_Mnt  +     0.13372718478424 * S_MntGoldProds
1705389   +          +    -1.62740823190029 * S_MntMeatProducts
1705390   +          +     0.15642273844597 * S_MntWines  +    -0.78908066213044 *
1705391   +        S_NumDistPurchases  +     -0.4365555360753 * S_RFMstat
1705392   +          +    -0.63552932650743 * S_RMntFrq  +     0.17699292292485 *
1705393   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.07144509122078 * S_AcceptedCmpTotal + 0.65325962599673 * S_Frq
+ 0.03169199805286 * S_Income + 0.53573115818994 * S_Mnt + 0.13372718478424 * S_MntGoldProds +
-1.62740823190029 * S_MntMeatProducts + 0.15642273844597 * S_MntWines + -0.78908066213044 *
S_NumDistPurchases + -0.4365555360753 * S_RFMstat + -0.63552932650743 * S_RMntFrq +
0.17699292292485 * S_Recency ;
1705394   +   H14  =     0.03098188354318 * S_AcceptedCmpTotal  +    -0.04737735825642 *
1705395   +        S_Frq  +     0.30967861276694 * S_Income  +    -0.03786683388502 *
1705396   +        S_Mnt  +     0.25532115520236 * S_MntGoldProds
1705397   +          +      0.3965117290354 * S_MntMeatProducts
1705398   +          +     0.36188945634536 * S_MntWines  +    -0.24664355133344 *
1705399   +        S_NumDistPurchases  +     0.15627885374544 * S_RFMstat
1705400   +          +    -0.10763737759383 * S_RMntFrq  +     -0.4091862538023 *
1705401   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.03098188354318 * S_AcceptedCmpTotal + -0.04737735825642 * S_Frq
+ 0.30967861276694 * S_Income + -0.03786683388502 * S_Mnt + 0.25532115520236 * S_MntGoldProds
+ 0.3965117290354 * S_MntMeatProducts + 0.36188945634536 * S_MntWines + -0.24664355133344 *
S_NumDistPurchases + 0.15627885374544 * S_RFMstat + -0.10763737759383 * S_RMntFrq +
-0.4091862538023 * S_Recency ;
1705402   +   H15  =     0.27467896926965 * S_AcceptedCmpTotal  +    -1.33897347254907 *
1705403   +        S_Frq  +    -0.08574739739253 * S_Income  +    -0.68536026344277 *
1705404   +        S_Mnt  +     0.08729572232071 * S_MntGoldProds
1705405   +          +     1.44231431118379 * S_MntMeatProducts
1705406   +          +    -0.09322237385561 * S_MntWines  +      1.5568901785563 *
1705407   +        S_NumDistPurchases  +     0.06237505409693 * S_RFMstat
1705408   +          +    -1.04636887800306 * S_RMntFrq  +    -0.38411527089703 *
1705409   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = 0.27467896926965 * S_AcceptedCmpTotal + -1.33897347254907 * S_Frq
+ -0.08574739739253 * S_Income + -0.68536026344277 * S_Mnt + 0.08729572232071 * S_MntGoldProds
+ 1.44231431118379 * S_MntMeatProducts + -0.09322237385561 * S_MntWines + 1.5568901785563 *
S_NumDistPurchases + 0.06237505409693 * S_RFMstat + -1.04636887800306 * S_RMntFrq +
-0.38411527089703 * S_Recency ;
1705410   +   H16  =    -0.89143353938241 * S_AcceptedCmpTotal  +     0.45211708970504 *
1705411   +        S_Frq  +    -0.44897699945178 * S_Income  +    -0.32314426452158 *
1705412   +        S_Mnt  +    -0.32329530597419 * S_MntGoldProds
1705413   +          +    -0.44244305964257 * S_MntMeatProducts
1705414   +          +    -0.04171589876809 * S_MntWines  +     0.42122451368745 *
1705415   +        S_NumDistPurchases  +    -0.15802898075961 * S_RFMstat
1705416   +          +    -0.40329155853226 * S_RMntFrq  +    -0.65176917675454 *
1705417   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H16 = -0.89143353938241 * S_AcceptedCmpTotal + 0.45211708970504 * S_Frq
+ -0.44897699945178 * S_Income + -0.32314426452158 * S_Mnt + -0.32329530597419 *
S_MntGoldProds + -0.44244305964257 * S_MntMeatProducts + -0.04171589876809 * S_MntWines +
0.42122451368745 * S_NumDistPurchases + -0.15802898075961 * S_RFMstat + -0.40329155853226 *
S_RMntFrq + -0.65176917675454 * S_Recency ;
1705418   +   H11  = H11  +     0.01448447530274 * G_Marital_Status0
1705419   +          +     0.42194179998625 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.01448447530274 * G_Marital_Status0 + 0.42194179998625 *
G_Marital_Status1 ;
1705420   +   H12  = H12  +     0.12689198218881 * G_Marital_Status0
1705421   +          +     0.13222809503301 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.12689198218881 * G_Marital_Status0 + 0.13222809503301 *
G_Marital_Status1 ;
1705422   +   H13  = H13  +     0.02279524261833 * G_Marital_Status0
1705423   +          +     0.22562672580832 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.02279524261833 * G_Marital_Status0 + 0.22562672580832 *
G_Marital_Status1 ;
1705424   +   H14  = H14  +     1.11856448462308 * G_Marital_Status0
1705425   +          +     0.27730078918446 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 1.11856448462308 * G_Marital_Status0 + 0.27730078918446 *
G_Marital_Status1 ;
1705426   +   H15  = H15  +    -0.04694745686684 * G_Marital_Status0
1705427   +          +     0.25879365732348 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.04694745686684 * G_Marital_Status0 + 0.25879365732348 *
G_Marital_Status1 ;
1705428   +   H16  = H16  +    -0.22835702249634 * G_Marital_Status0
1705429   +          +     0.18090765090711 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + -0.22835702249634 * G_Marital_Status0 + 0.18090765090711 *
G_Marital_Status1 ;
1705430   +   H11  =     1.23863858658783 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = 1.23863858658783 + H11 ;
1705431   +   H12  =    -0.12218156586843 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.12218156586843 + H12 ;
1705432   +   H13  =    -1.28170837349164 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.28170837349164 + H13 ;
1705433   +   H14  =    -2.07579206307318 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -2.07579206307318 + H14 ;
1705434   +   H15  =    -0.99934113480463 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -0.99934113480463 + H15 ;
1705435   +   H16  =     1.30250382782737 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = 1.30250382782737 + H16 ;
1705436   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1705437   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1705438   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1705439   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1705440   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1705441   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1705442   +END;
MPRINT(EM_DIAGRAM):   END;
1705443   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1705444   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1705445   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1705446   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1705447   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1705448   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1705449   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1705450   +END;
MPRINT(EM_DIAGRAM):   END;
1705451   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705452   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1705453   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705454   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1705455   +   P_DepVar1  =     3.62046962800706 * H11  +      -1.860875673098 * H12
1705456   +          +    -3.65105027155196 * H13  +     2.14381074770309 * H14
1705457   +          +     3.35729012959095 * H15  +    -2.46245459087361 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.62046962800706 * H11 + -1.860875673098 * H12 +
-3.65105027155196 * H13 + 2.14381074770309 * H14 + 3.35729012959095 * H15 + -2.46245459087361
* H16 ;
1705458   +   P_DepVar1  =    -2.50510283018473 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.50510283018473 + P_DepVar1 ;
1705459   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1705460   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1705461   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1705462   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1705463   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1705464   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1705465   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1705466   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1705467   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1705468   +END;
MPRINT(EM_DIAGRAM):   END;
1705469   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1705470   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1705471   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1705472   +END;
MPRINT(EM_DIAGRAM):   END;
1705473   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1705474   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1705475   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1705476   +END;
MPRINT(EM_DIAGRAM):   END;
1705477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705478   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1705479   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1705480   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1705481   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1705482   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1705483   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1705484   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1705485   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1705486   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1705487   +END;
MPRINT(EM_DIAGRAM):   END;
1705488   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1705489   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1705490   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1705491   +drop
1705492   +H11
1705493   +H12
1705494   +H13
1705495   +H14
1705496   +H15
1705497   +H16
1705498   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1705499   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1705500    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1705501    quit;
1705502    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1705503    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1705504    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1705505    retain ID 2 Node "Neural28";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural28";
1705506    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1705507    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 995 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705508    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1705509    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705510    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 995 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 995 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705511    proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural28_variableset out=_temp2(keep=NAME CREATOR);
1705512    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705513    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL28_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705514    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705515    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1705516    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1705517    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705518    proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural28_train out=_meta(keep=NAME) noprint;
1705519    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1705520    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1705521    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705523    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705524    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1705525    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705526    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705527    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705528    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1705528  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 443 rows and 5 columns.
 
1705529    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705530    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1705531    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 443 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 443 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705532    filename _pref
1705532  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1705533    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1705534    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1705535   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1705536   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1705537   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1705538   +
1705539   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1705540   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1705541   +
1705542   +
1705543   +/*----G_Marital_Status begin----*/
1705544   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1705545   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1705546   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1705547   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1705548   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1705549   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1705550   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1705551   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1705552   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1705553   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1705554   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1705555   +end;
MPRINT(EM_DIAGRAM):   end;
1705556   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1705557   +/*----G_Marital_Status end----*/
1705558   +
1705559   +
1705560   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1705561   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1705562   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1705563    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1705564    quit;
1705565    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1705566    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1705567    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1705568    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1705569    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1705570    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705571    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1705572    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705573    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705574    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1705575    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705576    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705577    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705578    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1705579    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1705580    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705581    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1705582    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1705583    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1705584    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705585    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705586    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705587    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1705588    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705589    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705590    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705591    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1705591  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1705592    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705593    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1705594    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 446 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705595    filename _pref
1705595  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1705596    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1705597    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1705598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1705599   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1705600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1705601   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1705602   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1705603   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1705604    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1705605    quit;
1705606    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1705607    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1705608    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1705609    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1705610    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1705611    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705612    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1705613    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705614    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705615    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1705616    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705617    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705618    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705619    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1705620    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1705621    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705622    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1705623    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1705624    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1705625    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705626    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705627    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705628    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1705629    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705630    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705631    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705632    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1705632  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1705633    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705634    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1705635    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 450 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705636    filename _pref
1705636  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1705637    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1705638    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1705639   +
1705640   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1705641   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1705641  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1705642   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1705643   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1705644   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1705645   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1705646   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1705647    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1705648    quit;
1705649    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1705650    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1705651    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1705652    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1705653    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1705654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705655    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1705656    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705657    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705658    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1705659    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705660    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705661    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705662    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1705663    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1705664    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705665    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1705666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705667    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1705668    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705669    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705670    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705671    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1705672    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705673    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705674    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705675    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1705675  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1705676    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1705677    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1705678    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 489 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705679    filename _pref
1705679  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1705680    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1705681    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1705682   +
1705683   +
1705684   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1705685   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1705686   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1705687   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1705688   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1705689   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705690   +
1705691   +
1705692   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1705693   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1705694   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1705695   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1705696   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1705697   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705698   +
1705699   +
1705700   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1705701   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1705702   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1705703   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1705704   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1705705   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705706   +
1705707   +
1705708   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1705709   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1705710   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1705711   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1705712   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1705713   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705714   +
1705715   +
1705716   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1705717   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1705718   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1705719   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1705720   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1705721   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705722   +
1705723   +
1705724   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1705725   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1705726   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1705727   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1705728   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1705729   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705730   +
1705731   +
1705732   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1705733   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1705734   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1705735   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1705736   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1705737   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705738   +
1705739   +
1705740   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1705741   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1705742   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1705743   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1705744   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1705745   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1705746   +if
1705747   +_FILTERNORM1 not in ( '.')
1705748   + and
1705749   +_FILTERNORM2 not in ( '.')
1705750   + and
1705751   +_FILTERNORM3 not in ( '.')
1705752   + and
1705753   +_FILTERNORM4 not in ( '.')
1705754   + and
1705755   +_FILTERNORM5 not in ( '.')
1705756   + and
1705757   +_FILTERNORM6 not in ( '.')
1705758   + and
1705759   +_FILTERNORM7 not in ( ' ')
1705760   + and
1705761   +_FILTERNORM8 not in ( ' ')
1705762   +and
1705763   +( Dt_Customer ne .)
1705764   +and ( Income ne . and (Income<=107000))
1705765   +and ( Kidhome ne .)
1705766   +and ( MntFishProducts ne .)
1705767   +and ( MntFruits ne .)
1705768   +and ( MntGoldProds ne .)
1705769   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1705770   +and ( MntSweetProducts ne .)
1705771   +and ( MntWines ne .)
1705772   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1705773   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1705774   +and ( NumStorePurchases ne .)
1705775   +and ( NumWebPurchases ne .)
1705776   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1705777   +and ( Recency ne .)
1705778   +and ( Teenhome ne .)
1705779   +and ( Year_Birth ne .)
1705780   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1705781   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1705782   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1705783   +end;
MPRINT(EM_DIAGRAM):   end;
1705784   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1705785   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1705786    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1705787    quit;
1705788    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1705789    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1705790    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1705791    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1705792    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1705793    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705794    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1705795    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705796    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705797    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1705798    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705799    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705800    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705801    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1705802    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1705803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705804    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1705805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1705806    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1705807    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705809    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1705810    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1705811    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1705812    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705813    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705814    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1705814  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1705815    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705816    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1705817    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 555 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705818    %macro varDept(fcmpdata=,id=);
1705819    %global nobs&id scoreFlag&id;
1705820    %let scoreFlag&id = 0;
1705821    %if &id=1 or ^&fcmpStart %then %do;
1705822    proc sort data=&fcmpdata out=_temp&id nodupkey;
1705823    by NAME;
1705824    where id=&id and LHS in( %let j=1;
1705825    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1705826    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1705827    "&var" %let j = %eval(&j+1);
1705828    %end;
1705829    );
1705830    run;
1705831    %let dsid = %sysfunc(open(_temp&id));
1705832    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705833    %let dsid = %sysfunc(close(&dsid));
1705834    %if &&nobs&id %then %do;
1705835    %let scoreFlag&id = 1;
1705836    %let fcmpStart = 1;
1705837    %end;
1705838    %else %let fcmpStart = 0;
1705839    %end;
1705840    %else %do;
1705841    proc sort data=&fcmpdata out=_tempid;
1705842    where id=&id;
1705843    by LHS;
1705844    run;
1705845    %let dsid = %sysfunc(open(_tempid));
1705846    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705847    %let dsid = %sysfunc(close(&dsid));
1705848    %if ^&&nobs&id %then %do;
1705849    proc datasets lib=work nolist;
1705850    delete _tempid;
1705851    run;
1705852    quit;
1705853    %end;
1705854    %else %do;
1705855    data _tempAll;
1705856    set %let j=%eval(&id-1);
1705857    %do x=1 %to &j;
1705858    %if &&nobs&x %then %do;
1705859    _temp&x %end;
1705860    %end;
1705861    ;
1705862    run;
1705863    proc sql;
1705864    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1705864  ! work._tempid p2 where p.name=p2.lhs;
1705865    quit;
1705866    data _temp&id;
1705867    set _temp&id;
1705868    where LHS ne '' and NAME ne '' and Node ne '';
1705869    run;
1705870    proc datasets lib=work nolist;
1705871    delete _tempAll;
1705872    run;
1705873    %let dsid = %sysfunc(open(_temp&id));
1705874    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705875    %let dsid = %sysfunc(close(&dsid));
1705876    %if ^&&nobs&id %then %do;
1705877    proc datasets lib=work nolist;
1705878    delete _temp&id;
1705879    run;
1705880    quit;
1705881    %end;
1705882    %else %do;
1705883    %let scoreFlag&id = 1;
1705884    data _temp&id;
1705885    set _temp&id;
1705886    where LHS ne NAME and node ne '';
1705887    run;
1705888    %let dsid = %sysfunc(open(_temp&id));
1705889    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1705890    %let dsid = %sysfunc(close(&dsid));
1705891    %if ^&&nobs&id %then %do;
1705892    proc datasets lib=work nolist;
1705893    delete _temp&id;
1705894    run;
1705895    quit;
1705896    %end;
1705897    %else %do;
1705898    proc sort data=_temp&id nodupkey;
1705899    by LHS NAME;
1705900    run;
1705901    %end;
1705902    %end;
1705903    %end;
1705904    %end;
1705905    %mend varDept;
1705906    %macro optCode(outdata=fcmpdata);
1705907    %global fcmpStart;
1705908    %let fcmpStart = 0;
1705909    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1705910    %let NumNodes=9;
1705911    %do k=1 %to &NumNodes;
1705912    %vardept(fcmpdata=&outdata, id=&k);
1705913    %end;
1705914    %mend optCode;
1705915    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1705916    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1705917    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1705918    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1705919    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705920    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1705921    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1705922    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1705923    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705924    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705925    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1705925  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1705926    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705927    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1705928    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1705929    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705930    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1705931    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1705932    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1705933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705934    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1705935    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1705936    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1705937    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705938    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1705939    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1705939  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1705940    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705941    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1705942    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1705943    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1705944    filename _pref
1705944  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas";
1705945    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1705946    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural27\EMPUBLISHSCORE.sas.
1705947   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1705948   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1705949   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1705950   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1705951   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1705952   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1705953   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1705954   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1705955   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1705956   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1705957   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1705958   +LENGTH _WARN_ $4
1705959   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1705960   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1705961   +
1705962   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1705963   +
1705964   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1705965   +
1705966   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1705967   +
1705968   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1705969   +
1705970   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1705971   +
1705972   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1705973   +
1705974   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1705975   +
1705976   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1705977   +
1705978   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1705979   +
1705980   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1705981   +
1705982   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1705983   +
1705984   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1705985   +
1705986   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1705987   +
1705988   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1705989   +
1705990   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1705991   +
1705992   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1705993   +
1705994   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1705995   +
1705996   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1705997   +
1705998   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1705999   +
1706000   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1706001   +
1706002   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1706003   +
1706004   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1706005   +
1706006   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1706007   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1706008   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1706009   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1706010   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1706011   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1706012   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1706013   +end;
MPRINT(EM_DIAGRAM):   end;
1706014   +else do;
MPRINT(EM_DIAGRAM):   else do;
1706015   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1706016   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1706017   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1706018   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1706019   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1706020   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1706021   +   end;
MPRINT(EM_DIAGRAM):   end;
1706022   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1706023   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1706024   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1706025   +   end;
MPRINT(EM_DIAGRAM):   end;
1706026   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1706027   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1706028   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1706029   +   end;
MPRINT(EM_DIAGRAM):   end;
1706030   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1706031   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1706032   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1706033   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1706034   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1706035   +   end;
MPRINT(EM_DIAGRAM):   end;
1706036   +end;
MPRINT(EM_DIAGRAM):   end;
1706037   +
1706038   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706039   +*** Checking missing input Interval
1706040   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1706041   +
1706042   +IF NMISS(
1706043   +   AcceptedCmpTotal ,
1706044   +   Frq ,
1706045   +   Income ,
1706046   +   Mnt ,
1706047   +   MntGoldProds ,
1706048   +   MntMeatProducts ,
1706049   +   MntWines ,
1706050   +   NumDistPurchases ,
1706051   +   RFMstat ,
1706052   +   RMntFrq ,
1706053   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1706054   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1706055   +
1706056   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1706057   +END;
MPRINT(EM_DIAGRAM):   END;
1706058   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706059   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1706060   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706061   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1706062   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1706063   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1706064   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1706065   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1706066   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1706067   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1706068   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1706069   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1706070   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1706071   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1706072   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1706073   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1706074   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1706075   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1706076   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1706077   +END;
MPRINT(EM_DIAGRAM):   END;
1706078   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1706079   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1706080   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1706081   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1706082   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1706083   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1706084   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1706085   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1706086   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1706087   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1706088   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1706089   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1706090   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1706091   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1706092   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1706093   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1706094   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1706095   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1706096   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1706097   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1706098   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1706099   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1706100   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1706101   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1706102   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1706103   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1706104   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1706105   +END;
MPRINT(EM_DIAGRAM):   END;
1706106   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706107   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1706108   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706109   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706110   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1706111   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706112   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1706113   +   H11  =     0.36818999915967 * S_AcceptedCmpTotal  +    -0.32408492568683 *
1706114   +        S_Frq  +     0.26618853780944 * S_Income  +    -0.36642923239435 *
1706115   +        S_Mnt  +     0.02869918805213 * S_MntGoldProds
1706116   +          +      0.5764056033267 * S_MntMeatProducts
1706117   +          +     0.28944243382913 * S_MntWines  +     0.66256470379204 *
1706118   +        S_NumDistPurchases  +      0.0485500069575 * S_RFMstat
1706119   +          +    -0.04002436035106 * S_RMntFrq  +    -0.66847972845367 *
1706120   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.36818999915967 * S_AcceptedCmpTotal + -0.32408492568683 * S_Frq
+ 0.26618853780944 * S_Income + -0.36642923239435 * S_Mnt + 0.02869918805213 * S_MntGoldProds
+ 0.5764056033267 * S_MntMeatProducts + 0.28944243382913 * S_MntWines + 0.66256470379204 *
S_NumDistPurchases + 0.0485500069575 * S_RFMstat + -0.04002436035106 * S_RMntFrq +
-0.66847972845367 * S_Recency ;
1706121   +   H12  =    -0.46002100133008 * S_AcceptedCmpTotal  +    -1.04911103577658 *
1706122   +        S_Frq  +    -1.60588169295391 * S_Income  +    -0.21451414022927 *
1706123   +        S_Mnt  +     1.04050718623814 * S_MntGoldProds
1706124   +          +      0.5452732097143 * S_MntMeatProducts
1706125   +          +      0.7768479094041 * S_MntWines  +    -0.96869093556162 *
1706126   +        S_NumDistPurchases  +     0.05788162730485 * S_RFMstat
1706127   +          +     -0.2163092854208 * S_RMntFrq  +    -0.36679237964697 *
1706128   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.46002100133008 * S_AcceptedCmpTotal + -1.04911103577658 * S_Frq
+ -1.60588169295391 * S_Income + -0.21451414022927 * S_Mnt + 1.04050718623814 * S_MntGoldProds
+ 0.5452732097143 * S_MntMeatProducts + 0.7768479094041 * S_MntWines + -0.96869093556162 *
S_NumDistPurchases + 0.05788162730485 * S_RFMstat + -0.2163092854208 * S_RMntFrq +
-0.36679237964697 * S_Recency ;
1706129   +   H13  =    -0.33764095452191 * S_AcceptedCmpTotal  +     0.62587436768629 *
1706130   +        S_Frq  +    -0.15737192909006 * S_Income  +     1.29242787259286 *
1706131   +        S_Mnt  +    -0.03945943496089 * S_MntGoldProds
1706132   +          +     -0.9040019705776 * S_MntMeatProducts
1706133   +          +     -0.5821231276136 * S_MntWines  +    -0.65592315374651 *
1706134   +        S_NumDistPurchases  +      0.0374377458843 * S_RFMstat
1706135   +          +    -0.49593973491818 * S_RMntFrq  +     0.36876094021551 *
1706136   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.33764095452191 * S_AcceptedCmpTotal + 0.62587436768629 * S_Frq
+ -0.15737192909006 * S_Income + 1.29242787259286 * S_Mnt + -0.03945943496089 * S_MntGoldProds
+ -0.9040019705776 * S_MntMeatProducts + -0.5821231276136 * S_MntWines + -0.65592315374651 *
S_NumDistPurchases + 0.0374377458843 * S_RFMstat + -0.49593973491818 * S_RMntFrq +
0.36876094021551 * S_Recency ;
1706137   +   H14  =     0.05718944662905 * S_AcceptedCmpTotal  +    -0.39281685140452 *
1706138   +        S_Frq  +    -0.82737815057286 * S_Income  +    -1.16866060861567 *
1706139   +        S_Mnt  +    -0.11326307526581 * S_MntGoldProds
1706140   +          +     1.04227983605332 * S_MntMeatProducts
1706141   +          +    -1.00642343793892 * S_MntWines  +     1.38852750995076 *
1706142   +        S_NumDistPurchases  +     0.00836697541419 * S_RFMstat
1706143   +          +    -0.09717761983291 * S_RMntFrq  +    -0.00929531662146 *
1706144   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.05718944662905 * S_AcceptedCmpTotal + -0.39281685140452 * S_Frq
+ -0.82737815057286 * S_Income + -1.16866060861567 * S_Mnt + -0.11326307526581 *
S_MntGoldProds + 1.04227983605332 * S_MntMeatProducts + -1.00642343793892 * S_MntWines +
1.38852750995076 * S_NumDistPurchases + 0.00836697541419 * S_RFMstat + -0.09717761983291 *
S_RMntFrq + -0.00929531662146 * S_Recency ;
1706145   +   H15  =    -0.96184318583957 * S_AcceptedCmpTotal  +      0.4451990898536 *
1706146   +        S_Frq  +    -0.21928305337089 * S_Income  +     0.79452164100328 *
1706147   +        S_Mnt  +     0.06206219037073 * S_MntGoldProds
1706148   +          +     0.23454153115636 * S_MntMeatProducts
1706149   +          +     0.19107624776056 * S_MntWines  +     0.07324250201974 *
1706150   +        S_NumDistPurchases  +    -0.36889587124555 * S_RFMstat
1706151   +          +     0.11664291027363 * S_RMntFrq  +     0.62117853933635 *
1706152   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H15 = -0.96184318583957 * S_AcceptedCmpTotal + 0.4451990898536 * S_Frq +
-0.21928305337089 * S_Income + 0.79452164100328 * S_Mnt + 0.06206219037073 * S_MntGoldProds +
0.23454153115636 * S_MntMeatProducts + 0.19107624776056 * S_MntWines + 0.07324250201974 *
S_NumDistPurchases + -0.36889587124555 * S_RFMstat + 0.11664291027363 * S_RMntFrq +
0.62117853933635 * S_Recency ;
1706153   +   H11  = H11  +     0.40650029940003 * G_Marital_Status0
1706154   +          +    -0.03689005168758 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40650029940003 * G_Marital_Status0 + -0.03689005168758 *
G_Marital_Status1 ;
1706155   +   H12  = H12  +     0.68056692028925 * G_Marital_Status0
1706156   +          +     0.12445131361373 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.68056692028925 * G_Marital_Status0 + 0.12445131361373 *
G_Marital_Status1 ;
1706157   +   H13  = H13  +    -0.10388173588834 * G_Marital_Status0
1706158   +          +     0.14567687521953 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.10388173588834 * G_Marital_Status0 + 0.14567687521953 *
G_Marital_Status1 ;
1706159   +   H14  = H14  +    -0.32184280270007 * G_Marital_Status0
1706160   +          +     0.48017665139683 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.32184280270007 * G_Marital_Status0 + 0.48017665139683 *
G_Marital_Status1 ;
1706161   +   H15  = H15  +    -0.55279472089433 * G_Marital_Status0
1706162   +          +    -0.61571213294128 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.55279472089433 * G_Marital_Status0 + -0.61571213294128 *
G_Marital_Status1 ;
1706163   +   H11  =    -2.29158741731878 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -2.29158741731878 + H11 ;
1706164   +   H12  =     0.77169669702403 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.77169669702403 + H12 ;
1706165   +   H13  =    -0.33884334850071 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.33884334850071 + H13 ;
1706166   +   H14  =    -0.68456652615091 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -0.68456652615091 + H14 ;
1706167   +   H15  =    -2.08269941889355 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.08269941889355 + H15 ;
1706168   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1706169   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1706170   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1706171   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1706172   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1706173   +END;
MPRINT(EM_DIAGRAM):   END;
1706174   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1706175   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1706176   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1706177   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1706178   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1706179   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1706180   +END;
MPRINT(EM_DIAGRAM):   END;
1706181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706182   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1706183   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706184   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1706185   +   P_DepVar1  =      3.8750512140027 * H11  +     1.39816182952025 * H12
1706186   +          +    -5.40860917226626 * H13  +      2.0293529122836 * H14
1706187   +          +    -1.46910412369056 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.8750512140027 * H11 + 1.39816182952025 * H12 +
-5.40860917226626 * H13 + 2.0293529122836 * H14 + -1.46910412369056 * H15 ;
1706188   +   P_DepVar1  =    -2.09975800032061 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.09975800032061 + P_DepVar1 ;
1706189   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1706190   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1706191   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1706192   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1706193   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1706194   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1706195   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1706196   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1706197   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1706198   +END;
MPRINT(EM_DIAGRAM):   END;
1706199   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1706200   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1706201   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1706202   +END;
MPRINT(EM_DIAGRAM):   END;
1706203   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1706204   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1706205   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1706206   +END;
MPRINT(EM_DIAGRAM):   END;
1706207   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706208   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1706209   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706210   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1706211   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1706212   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1706213   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1706214   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1706215   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1706216   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1706217   +END;
MPRINT(EM_DIAGRAM):   END;
1706218   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1706219   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1706220   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1706221   +drop
1706222   +H11
1706223   +H12
1706224   +H13
1706225   +H14
1706226   +H15
1706227   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1706228   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1706229    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1706230    quit;
1706231    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1706232    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1706233    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1706234    retain ID 2 Node "Neural27";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural27";
1706235    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1706236    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706237    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1706238    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706239    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 917 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 917 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706240    proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural27_variableset out=_temp2(keep=NAME CREATOR);
1706241    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706242    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL27_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706243    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706244    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1706245    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1706246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706247    proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural27_train out=_meta(keep=NAME) noprint;
1706248    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1706249    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1706250    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706251    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706252    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706253    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1706254    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706255    run;
The SAS System
 
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706256    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706257    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1706257  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 419 rows and 5 columns.
 
1706258    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706259    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1706260    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 419 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 419 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706261    filename _pref
1706261  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1706262    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1706263    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1706264   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1706265   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1706266   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1706267   +
1706268   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1706269   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1706270   +
1706271   +
1706272   +/*----G_Marital_Status begin----*/
1706273   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1706274   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1706275   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1706276   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1706277   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1706278   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1706279   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1706280   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1706281   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1706282   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1706283   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1706284   +end;
MPRINT(EM_DIAGRAM):   end;
1706285   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1706286   +/*----G_Marital_Status end----*/
1706287   +
1706288   +
1706289   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1706290   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1706291   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1706292    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1706293    quit;
1706294    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1706295    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1706296    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1706297    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1706298    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1706299    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706300    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1706301    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706302    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706303    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1706304    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706305    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706306    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706307    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1706308    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1706309    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706310    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1706311    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1706312    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1706313    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706314    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706315    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706316    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1706317    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706318    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706319    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706320    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1706320  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1706321    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706322    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1706323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 422 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706324    filename _pref
1706324  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1706325    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1706326    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1706327   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1706328   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1706329   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1706330   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1706331   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1706332   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1706333    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1706334    quit;
1706335    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1706336    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1706337    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1706338    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1706339    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1706340    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706341    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1706342    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706343    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706344    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1706345    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706346    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706347    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706348    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1706349    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1706350    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706351    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1706352    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1706353    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1706354    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706355    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706356    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706357    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1706358    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706359    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706360    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706361    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1706361  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1706362    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706363    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1706364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 426 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706365    filename _pref
1706365  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1706366    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1706367    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1706368   +
1706369   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1706370   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1706370  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1706371   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1706372   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1706373   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1706374   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1706375   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1706376    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1706377    quit;
1706378    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1706379    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1706380    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1706381    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1706382    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1706383    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706384    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1706385    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706387    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1706388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706390    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706391    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1706392    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1706393    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706394    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1706395    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706396    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1706397    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706399    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706400    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1706401    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706402    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706403    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706404    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1706404  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1706405    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706406    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1706407    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 465 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706408    filename _pref
1706408  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1706409    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1706410    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1706411   +
1706412   +
1706413   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1706414   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1706415   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1706416   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1706417   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1706418   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706419   +
1706420   +
1706421   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1706422   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1706423   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1706424   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1706425   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1706426   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706427   +
1706428   +
1706429   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1706430   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1706431   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1706432   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1706433   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1706434   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706435   +
1706436   +
1706437   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1706438   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1706439   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1706440   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1706441   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1706442   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706443   +
1706444   +
1706445   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1706446   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1706447   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1706448   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1706449   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1706450   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706451   +
1706452   +
1706453   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1706454   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1706455   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1706456   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1706457   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1706458   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706459   +
1706460   +
1706461   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1706462   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1706463   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1706464   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1706465   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1706466   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706467   +
1706468   +
1706469   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1706470   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1706471   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1706472   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1706473   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1706474   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1706475   +if
1706476   +_FILTERNORM1 not in ( '.')
1706477   + and
1706478   +_FILTERNORM2 not in ( '.')
1706479   + and
1706480   +_FILTERNORM3 not in ( '.')
1706481   + and
1706482   +_FILTERNORM4 not in ( '.')
1706483   + and
1706484   +_FILTERNORM5 not in ( '.')
1706485   + and
1706486   +_FILTERNORM6 not in ( '.')
1706487   + and
1706488   +_FILTERNORM7 not in ( ' ')
1706489   + and
1706490   +_FILTERNORM8 not in ( ' ')
1706491   +and
1706492   +( Dt_Customer ne .)
1706493   +and ( Income ne . and (Income<=107000))
1706494   +and ( Kidhome ne .)
1706495   +and ( MntFishProducts ne .)
1706496   +and ( MntFruits ne .)
1706497   +and ( MntGoldProds ne .)
1706498   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1706499   +and ( MntSweetProducts ne .)
1706500   +and ( MntWines ne .)
1706501   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1706502   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1706503   +and ( NumStorePurchases ne .)
1706504   +and ( NumWebPurchases ne .)
1706505   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1706506   +and ( Recency ne .)
1706507   +and ( Teenhome ne .)
1706508   +and ( Year_Birth ne .)
1706509   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1706510   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1706511   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1706512   +end;
MPRINT(EM_DIAGRAM):   end;
1706513   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1706514   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1706515    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1706516    quit;
1706517    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1706518    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1706519    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1706520    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1706521    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1706522    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706523    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1706524    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706525    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706526    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1706527    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706528    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706529    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706530    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1706531    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1706532    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706533    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1706534    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1706535    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1706536    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706537    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706538    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706539    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1706540    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706541    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706542    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706543    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1706543  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1706544    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706545    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1706546    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 531 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706547    %macro varDept(fcmpdata=,id=);
1706548    %global nobs&id scoreFlag&id;
1706549    %let scoreFlag&id = 0;
1706550    %if &id=1 or ^&fcmpStart %then %do;
1706551    proc sort data=&fcmpdata out=_temp&id nodupkey;
1706552    by NAME;
1706553    where id=&id and LHS in( %let j=1;
1706554    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1706555    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1706556    "&var" %let j = %eval(&j+1);
1706557    %end;
1706558    );
1706559    run;
1706560    %let dsid = %sysfunc(open(_temp&id));
1706561    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1706562    %let dsid = %sysfunc(close(&dsid));
1706563    %if &&nobs&id %then %do;
1706564    %let scoreFlag&id = 1;
1706565    %let fcmpStart = 1;
1706566    %end;
1706567    %else %let fcmpStart = 0;
1706568    %end;
1706569    %else %do;
1706570    proc sort data=&fcmpdata out=_tempid;
1706571    where id=&id;
1706572    by LHS;
1706573    run;
1706574    %let dsid = %sysfunc(open(_tempid));
1706575    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1706576    %let dsid = %sysfunc(close(&dsid));
1706577    %if ^&&nobs&id %then %do;
1706578    proc datasets lib=work nolist;
1706579    delete _tempid;
1706580    run;
1706581    quit;
1706582    %end;
1706583    %else %do;
1706584    data _tempAll;
1706585    set %let j=%eval(&id-1);
1706586    %do x=1 %to &j;
1706587    %if &&nobs&x %then %do;
1706588    _temp&x %end;
1706589    %end;
1706590    ;
1706591    run;
1706592    proc sql;
1706593    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1706593  ! work._tempid p2 where p.name=p2.lhs;
1706594    quit;
1706595    data _temp&id;
1706596    set _temp&id;
1706597    where LHS ne '' and NAME ne '' and Node ne '';
1706598    run;
1706599    proc datasets lib=work nolist;
1706600    delete _tempAll;
1706601    run;
1706602    %let dsid = %sysfunc(open(_temp&id));
1706603    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1706604    %let dsid = %sysfunc(close(&dsid));
1706605    %if ^&&nobs&id %then %do;
1706606    proc datasets lib=work nolist;
1706607    delete _temp&id;
1706608    run;
1706609    quit;
1706610    %end;
1706611    %else %do;
1706612    %let scoreFlag&id = 1;
1706613    data _temp&id;
1706614    set _temp&id;
1706615    where LHS ne NAME and node ne '';
1706616    run;
1706617    %let dsid = %sysfunc(open(_temp&id));
1706618    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1706619    %let dsid = %sysfunc(close(&dsid));
1706620    %if ^&&nobs&id %then %do;
1706621    proc datasets lib=work nolist;
1706622    delete _temp&id;
1706623    run;
1706624    quit;
1706625    %end;
1706626    %else %do;
1706627    proc sort data=_temp&id nodupkey;
1706628    by LHS NAME;
1706629    run;
1706630    %end;
1706631    %end;
1706632    %end;
1706633    %end;
1706634    %mend varDept;
1706635    %macro optCode(outdata=fcmpdata);
1706636    %global fcmpStart;
1706637    %let fcmpStart = 0;
1706638    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1706639    %let NumNodes=9;
1706640    %do k=1 %to &NumNodes;
1706641    %vardept(fcmpdata=&outdata, id=&k);
1706642    %end;
1706643    %mend optCode;
1706644    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1706645    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1706646    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1706647    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1706648    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706649    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1706650    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1706651    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1706652    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706653    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706654    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1706654  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1706655    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706656    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1706657    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1706658    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706659    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1706660    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1706661    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1706662    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706663    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1706664    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1706665    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1706666    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706667    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706668    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1706668  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1706669    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706670    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1706671    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1706672    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706673    filename _pref
1706673  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas";
1706674    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1706675    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural26\EMPUBLISHSCORE.sas.
1706676   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1706677   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1706678   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1706679   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1706680   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1706681   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1706682   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1706683   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1706684   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1706685   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1706686   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1706687   +LENGTH _WARN_ $4
1706688   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1706689   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1706690   +
1706691   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1706692   +
1706693   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1706694   +
1706695   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1706696   +
1706697   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1706698   +
1706699   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1706700   +
1706701   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1706702   +
1706703   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1706704   +
1706705   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1706706   +
1706707   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1706708   +
1706709   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1706710   +
1706711   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1706712   +
1706713   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1706714   +
1706715   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1706716   +
1706717   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1706718   +
1706719   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1706720   +
1706721   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1706722   +
1706723   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1706724   +
1706725   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1706726   +
1706727   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1706728   +
1706729   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1706730   +
1706731   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1706732   +
1706733   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1706734   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1706735   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1706736   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1706737   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1706738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1706739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1706740   +end;
MPRINT(EM_DIAGRAM):   end;
1706741   +else do;
MPRINT(EM_DIAGRAM):   else do;
1706742   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1706743   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1706744   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1706745   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1706746   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1706747   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1706748   +   end;
MPRINT(EM_DIAGRAM):   end;
1706749   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1706750   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1706751   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1706752   +   end;
MPRINT(EM_DIAGRAM):   end;
1706753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1706754   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1706755   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1706756   +   end;
MPRINT(EM_DIAGRAM):   end;
1706757   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1706758   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1706759   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1706760   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1706761   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1706762   +   end;
MPRINT(EM_DIAGRAM):   end;
1706763   +end;
MPRINT(EM_DIAGRAM):   end;
1706764   +
1706765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706766   +*** Checking missing input Interval
1706767   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1706768   +
1706769   +IF NMISS(
1706770   +   AcceptedCmpTotal ,
1706771   +   Frq ,
1706772   +   Income ,
1706773   +   Mnt ,
1706774   +   MntGoldProds ,
1706775   +   MntMeatProducts ,
1706776   +   MntWines ,
1706777   +   NumDistPurchases ,
1706778   +   RFMstat ,
1706779   +   RMntFrq ,
1706780   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1706781   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1706782   +
1706783   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1706784   +END;
MPRINT(EM_DIAGRAM):   END;
1706785   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706786   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1706787   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706788   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1706789   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1706790   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1706791   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1706792   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1706793   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1706794   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1706795   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1706796   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1706797   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1706798   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1706799   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1706800   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1706801   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1706802   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1706803   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1706804   +END;
MPRINT(EM_DIAGRAM):   END;
1706805   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1706806   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1706807   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1706808   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1706809   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1706810   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1706811   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1706812   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1706813   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1706814   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1706815   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1706816   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1706817   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1706818   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1706819   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1706820   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1706821   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1706822   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1706823   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1706824   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1706825   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1706826   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1706827   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1706828   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1706829   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1706830   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1706831   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1706832   +END;
MPRINT(EM_DIAGRAM):   END;
1706833   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706834   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1706835   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706836   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706837   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1706838   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706839   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1706840   +   H11  =    -0.52455774235062 * S_AcceptedCmpTotal  +      0.8466329583809 *
1706841   +        S_Frq  +    -0.24140635088555 * S_Income  +     1.10423984303161 *
1706842   +        S_Mnt  +    -0.01619058875438 * S_MntGoldProds
1706843   +          +    -0.55263908764573 * S_MntMeatProducts
1706844   +          +    -0.70001086687566 * S_MntWines  +    -0.13954000532733 *
1706845   +        S_NumDistPurchases  +     0.13318250375153 * S_RFMstat
1706846   +          +      0.4272420646455 * S_RMntFrq  +     0.41719267652064 *
1706847   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = -0.52455774235062 * S_AcceptedCmpTotal + 0.8466329583809 * S_Frq +
-0.24140635088555 * S_Income + 1.10423984303161 * S_Mnt + -0.01619058875438 * S_MntGoldProds +
-0.55263908764573 * S_MntMeatProducts + -0.70001086687566 * S_MntWines + -0.13954000532733 *
S_NumDistPurchases + 0.13318250375153 * S_RFMstat + 0.4272420646455 * S_RMntFrq +
0.41719267652064 * S_Recency ;
1706848   +   H12  =    -0.04686202753184 * S_AcceptedCmpTotal  +     1.54159677165215 *
1706849   +        S_Frq  +      1.5876209259654 * S_Income  +      0.5309695784835 *
1706850   +        S_Mnt  +    -0.52971373734216 * S_MntGoldProds
1706851   +          +     0.06735454992171 * S_MntMeatProducts
1706852   +          +    -0.65753196206072 * S_MntWines  +    -0.43284750594408 *
1706853   +        S_NumDistPurchases  +    -0.15176413476147 * S_RFMstat
1706854   +          +    -0.45476834326399 * S_RMntFrq  +     0.41776804290571 *
1706855   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.04686202753184 * S_AcceptedCmpTotal + 1.54159677165215 * S_Frq
+ 1.5876209259654 * S_Income + 0.5309695784835 * S_Mnt + -0.52971373734216 * S_MntGoldProds +
0.06735454992171 * S_MntMeatProducts + -0.65753196206072 * S_MntWines + -0.43284750594408 *
S_NumDistPurchases + -0.15176413476147 * S_RFMstat + -0.45476834326399 * S_RMntFrq +
0.41776804290571 * S_Recency ;
1706856   +   H13  =    -0.31352262917412 * S_AcceptedCmpTotal  +     1.63883520018095 *
1706857   +        S_Frq  +     0.02249756771349 * S_Income  +     0.21682603962115 *
1706858   +        S_Mnt  +     0.15589923965689 * S_MntGoldProds
1706859   +          +    -3.43308711980096 * S_MntMeatProducts
1706860   +          +    -0.25180710956094 * S_MntWines  +    -1.36606037284233 *
1706861   +        S_NumDistPurchases  +    -0.42313397988951 * S_RFMstat
1706862   +          +     0.07406816799464 * S_RMntFrq  +     0.32607822998847 *
1706863   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.31352262917412 * S_AcceptedCmpTotal + 1.63883520018095 * S_Frq
+ 0.02249756771349 * S_Income + 0.21682603962115 * S_Mnt + 0.15589923965689 * S_MntGoldProds +
-3.43308711980096 * S_MntMeatProducts + -0.25180710956094 * S_MntWines + -1.36606037284233 *
S_NumDistPurchases + -0.42313397988951 * S_RFMstat + 0.07406816799464 * S_RMntFrq +
0.32607822998847 * S_Recency ;
1706864   +   H14  =     0.40033548790491 * S_AcceptedCmpTotal  +    -0.40354500664934 *
1706865   +        S_Frq  +      0.3774879421468 * S_Income  +    -0.16410506362553 *
1706866   +        S_Mnt  +     0.02885736564162 * S_MntGoldProds
1706867   +          +     0.71381843077774 * S_MntMeatProducts
1706868   +          +    -0.26487063623892 * S_MntWines  +     1.18188766928145 *
1706869   +        S_NumDistPurchases  +      0.1157647927608 * S_RFMstat
1706870   +          +    -0.05680377377798 * S_RMntFrq  +    -0.89452100436419 *
1706871   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H14 = 0.40033548790491 * S_AcceptedCmpTotal + -0.40354500664934 * S_Frq
+ 0.3774879421468 * S_Income + -0.16410506362553 * S_Mnt + 0.02885736564162 * S_MntGoldProds +
0.71381843077774 * S_MntMeatProducts + -0.26487063623892 * S_MntWines + 1.18188766928145 *
S_NumDistPurchases + 0.1157647927608 * S_RFMstat + -0.05680377377798 * S_RMntFrq +
-0.89452100436419 * S_Recency ;
1706872   +   H11  = H11  +    -0.53031970918814 * G_Marital_Status0
1706873   +          +    -0.23001488541689 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.53031970918814 * G_Marital_Status0 + -0.23001488541689 *
G_Marital_Status1 ;
1706874   +   H12  = H12  +     0.29542224963064 * G_Marital_Status0
1706875   +          +    -0.13806446525096 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.29542224963064 * G_Marital_Status0 + -0.13806446525096 *
G_Marital_Status1 ;
1706876   +   H13  = H13  +    -0.03108243750652 * G_Marital_Status0
1706877   +          +     0.08210849129934 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.03108243750652 * G_Marital_Status0 + 0.08210849129934 *
G_Marital_Status1 ;
1706878   +   H14  = H14  +     0.42709681519893 * G_Marital_Status0
1706879   +          +     0.09450701323627 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.42709681519893 * G_Marital_Status0 + 0.09450701323627 *
G_Marital_Status1 ;
1706880   +   H11  =    -0.80237558754999 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.80237558754999 + H11 ;
1706881   +   H12  =     0.47909013828426 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.47909013828426 + H12 ;
1706882   +   H13  =    -1.98531714916096 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.98531714916096 + H13 ;
1706883   +   H14  =    -3.14128712464503 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -3.14128712464503 + H14 ;
1706884   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1706885   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1706886   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1706887   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1706888   +END;
MPRINT(EM_DIAGRAM):   END;
1706889   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1706890   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1706891   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1706892   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1706893   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1706894   +END;
MPRINT(EM_DIAGRAM):   END;
1706895   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706896   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1706897   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706898   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1706899   +   P_DepVar1  =    -2.49130347768925 * H11  +    -2.38718075390418 * H12
1706900   +          +    -5.92002796763835 * H13  +     4.95923742700541 * H14 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.49130347768925 * H11 + -2.38718075390418 * H12 +
-5.92002796763835 * H13 + 4.95923742700541 * H14 ;
1706901   +   P_DepVar1  =    -2.59807662162616 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -2.59807662162616 + P_DepVar1 ;
1706902   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1706903   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1706904   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1706905   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1706906   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1706907   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1706908   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1706909   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1706910   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1706911   +END;
MPRINT(EM_DIAGRAM):   END;
1706912   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1706913   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1706914   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1706915   +END;
MPRINT(EM_DIAGRAM):   END;
1706916   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1706917   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1706918   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1706919   +END;
MPRINT(EM_DIAGRAM):   END;
1706920   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706921   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1706922   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1706923   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1706924   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1706925   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1706926   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1706927   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1706928   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1706929   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1706930   +END;
MPRINT(EM_DIAGRAM):   END;
1706931   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1706932   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1706933   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1706934   +drop
1706935   +H11
1706936   +H12
1706937   +H13
1706938   +H14
1706939   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 ;
1706940   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1706941    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1706942    quit;
1706943    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1706944    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1706945    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1706946    retain ID 2 Node "Neural26";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural26";
1706947    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1706948    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 839 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 839 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706949    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1706950    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706951    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 839 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 839 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706952    proc sort data=EMWS8.Neural26_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural26_variableset out=_temp2(keep=NAME CREATOR);
1706953    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL26_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706955    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706956    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1706957    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1706958    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706959    proc contents data=EMWS8.Neural26_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural26_train out=_meta(keep=NAME) noprint;
1706960    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.04 seconds
 
 
1706961    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1706962    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706963    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706964    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1706965    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1706966    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1706967    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1706968    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1706969    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1706969  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 395 rows and 5 columns.
 
1706970    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706971    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1706972    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 395 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 395 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1706973    filename _pref
1706973  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1706974    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1706975    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1706976   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1706977   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1706978   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1706979   +
1706980   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1706981   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1706982   +
1706983   +
1706984   +/*----G_Marital_Status begin----*/
1706985   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1706986   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1706987   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1706988   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1706989   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1706990   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1706991   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1706992   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1706993   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1706994   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1706995   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1706996   +end;
MPRINT(EM_DIAGRAM):   end;
1706997   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1706998   +/*----G_Marital_Status end----*/
1706999   +
1707000   +
1707001   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1707002   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1707003   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707004    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707005    quit;
1707006    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707007    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707008    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707009    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1707010    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707011    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707012    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707013    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707014    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707015    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1707016    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707017    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707018    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707019    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707020    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707021    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707022    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1707023    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1707024    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707025    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707026    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707027    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707028    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707029    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707030    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707031    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707032    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707032  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1707033    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707034    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707035    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 398 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707036    filename _pref
1707036  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1707037    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707038    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1707039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1707040   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1707041   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1707042   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1707043   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1707044   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707045    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707046    quit;
1707047    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707048    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707049    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707050    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1707051    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707053    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707056    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1707057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707058    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707059    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707060    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707061    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707062    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707063    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1707064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1707065    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707066    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707067    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707068    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707069    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707070    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707071    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707072    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707073    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707073  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1707074    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707075    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707076    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 402 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707077    filename _pref
1707077  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1707078    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707079    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1707080   +
1707081   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1707082   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1707082  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1707083   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1707084   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1707085   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1707086   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1707087   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707088    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707089    quit;
1707090    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707091    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707092    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707093    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1707094    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707095    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707096    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707097    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707098    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707099    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1707100    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707101    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707102    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707103    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707104    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707106    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1707107    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707108    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707109    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707110    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707111    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707112    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707113    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707114    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707115    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707116    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707116  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1707117    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707118    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707119    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 441 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707120    filename _pref
1707120  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1707121    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707122    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1707123   +
1707124   +
1707125   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1707126   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1707127   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1707128   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1707129   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1707130   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707131   +
1707132   +
1707133   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1707134   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1707135   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1707136   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1707137   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1707138   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707139   +
1707140   +
1707141   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1707142   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1707143   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1707144   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1707145   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1707146   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707147   +
1707148   +
1707149   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1707150   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1707151   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1707152   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1707153   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1707154   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707155   +
1707156   +
1707157   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1707158   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1707159   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1707160   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1707161   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1707162   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707163   +
1707164   +
1707165   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1707166   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1707167   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1707168   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1707169   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1707170   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707171   +
1707172   +
1707173   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1707174   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1707175   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1707176   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1707177   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1707178   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707179   +
1707180   +
1707181   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1707182   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1707183   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1707184   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1707185   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1707186   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707187   +if
1707188   +_FILTERNORM1 not in ( '.')
1707189   + and
1707190   +_FILTERNORM2 not in ( '.')
1707191   + and
1707192   +_FILTERNORM3 not in ( '.')
1707193   + and
1707194   +_FILTERNORM4 not in ( '.')
1707195   + and
1707196   +_FILTERNORM5 not in ( '.')
1707197   + and
1707198   +_FILTERNORM6 not in ( '.')
1707199   + and
1707200   +_FILTERNORM7 not in ( ' ')
1707201   + and
1707202   +_FILTERNORM8 not in ( ' ')
1707203   +and
1707204   +( Dt_Customer ne .)
1707205   +and ( Income ne . and (Income<=107000))
1707206   +and ( Kidhome ne .)
1707207   +and ( MntFishProducts ne .)
1707208   +and ( MntFruits ne .)
1707209   +and ( MntGoldProds ne .)
1707210   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1707211   +and ( MntSweetProducts ne .)
1707212   +and ( MntWines ne .)
1707213   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1707214   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1707215   +and ( NumStorePurchases ne .)
1707216   +and ( NumWebPurchases ne .)
1707217   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1707218   +and ( Recency ne .)
1707219   +and ( Teenhome ne .)
1707220   +and ( Year_Birth ne .)
1707221   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1707222   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1707223   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1707224   +end;
MPRINT(EM_DIAGRAM):   end;
1707225   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1707226   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707227    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707228    quit;
1707229    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707230    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707231    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707232    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1707233    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707234    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707235    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707236    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707237    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707238    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1707239    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707240    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707241    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707242    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707243    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707244    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707245    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1707246    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1707247    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707248    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707249    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707250    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707251    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707252    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707253    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707254    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707255    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707255  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1707256    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707257    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707258    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 507 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707259    %macro varDept(fcmpdata=,id=);
1707260    %global nobs&id scoreFlag&id;
1707261    %let scoreFlag&id = 0;
1707262    %if &id=1 or ^&fcmpStart %then %do;
1707263    proc sort data=&fcmpdata out=_temp&id nodupkey;
1707264    by NAME;
1707265    where id=&id and LHS in( %let j=1;
1707266    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1707267    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1707268    "&var" %let j = %eval(&j+1);
1707269    %end;
1707270    );
1707271    run;
1707272    %let dsid = %sysfunc(open(_temp&id));
1707273    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1707274    %let dsid = %sysfunc(close(&dsid));
1707275    %if &&nobs&id %then %do;
1707276    %let scoreFlag&id = 1;
1707277    %let fcmpStart = 1;
1707278    %end;
1707279    %else %let fcmpStart = 0;
1707280    %end;
1707281    %else %do;
1707282    proc sort data=&fcmpdata out=_tempid;
1707283    where id=&id;
1707284    by LHS;
1707285    run;
1707286    %let dsid = %sysfunc(open(_tempid));
1707287    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1707288    %let dsid = %sysfunc(close(&dsid));
1707289    %if ^&&nobs&id %then %do;
1707290    proc datasets lib=work nolist;
1707291    delete _tempid;
1707292    run;
1707293    quit;
1707294    %end;
1707295    %else %do;
1707296    data _tempAll;
1707297    set %let j=%eval(&id-1);
1707298    %do x=1 %to &j;
1707299    %if &&nobs&x %then %do;
1707300    _temp&x %end;
1707301    %end;
1707302    ;
1707303    run;
1707304    proc sql;
1707305    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1707305  ! work._tempid p2 where p.name=p2.lhs;
1707306    quit;
1707307    data _temp&id;
1707308    set _temp&id;
1707309    where LHS ne '' and NAME ne '' and Node ne '';
1707310    run;
1707311    proc datasets lib=work nolist;
1707312    delete _tempAll;
1707313    run;
1707314    %let dsid = %sysfunc(open(_temp&id));
1707315    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1707316    %let dsid = %sysfunc(close(&dsid));
1707317    %if ^&&nobs&id %then %do;
1707318    proc datasets lib=work nolist;
1707319    delete _temp&id;
1707320    run;
1707321    quit;
1707322    %end;
1707323    %else %do;
1707324    %let scoreFlag&id = 1;
1707325    data _temp&id;
1707326    set _temp&id;
1707327    where LHS ne NAME and node ne '';
1707328    run;
1707329    %let dsid = %sysfunc(open(_temp&id));
1707330    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1707331    %let dsid = %sysfunc(close(&dsid));
1707332    %if ^&&nobs&id %then %do;
1707333    proc datasets lib=work nolist;
1707334    delete _temp&id;
1707335    run;
1707336    quit;
1707337    %end;
1707338    %else %do;
1707339    proc sort data=_temp&id nodupkey;
1707340    by LHS NAME;
1707341    run;
1707342    %end;
1707343    %end;
1707344    %end;
1707345    %end;
1707346    %mend varDept;
1707347    %macro optCode(outdata=fcmpdata);
1707348    %global fcmpStart;
1707349    %let fcmpStart = 0;
1707350    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1707351    %let NumNodes=9;
1707352    %do k=1 %to &NumNodes;
1707353    %vardept(fcmpdata=&outdata, id=&k);
1707354    %end;
1707355    %mend optCode;
1707356    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1707357    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1707358    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1707359    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1707360    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707361    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1707362    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1707363    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1707364    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707365    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707366    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1707366  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1707367    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1707368    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1707369    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1707370    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707371    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1707372    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1707373    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1707374    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707375    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1707376    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1707377    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1707378    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707379    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707380    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1707380  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1707381    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.17 seconds
      cpu time            0.00 seconds
 
 
1707382    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1707383    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1707384    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707385    filename _pref
1707385  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural25\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural25\EMPUBLISHSCORE.sas";
1707386    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707387    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural25\EMPUBLISHSCORE.sas.
1707388   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1707389   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1707390   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1707391   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1707392   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1707393   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1707394   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1707395   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1707396   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1707397   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1707398   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1707399   +LENGTH _WARN_ $4
1707400   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1707401   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1707402   +
1707403   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1707404   +
1707405   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1707406   +
1707407   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1707408   +
1707409   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1707410   +
1707411   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1707412   +
1707413   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1707414   +
1707415   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1707416   +
1707417   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1707418   +
1707419   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1707420   +
1707421   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1707422   +
1707423   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1707424   +
1707425   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1707426   +
1707427   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1707428   +
1707429   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1707430   +
1707431   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1707432   +
1707433   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1707434   +
1707435   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1707436   +
1707437   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1707438   +
1707439   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1707440   +
1707441   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1707442   +
1707443   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1707444   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1707445   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1707446   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1707447   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1707448   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1707449   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1707450   +end;
MPRINT(EM_DIAGRAM):   end;
1707451   +else do;
MPRINT(EM_DIAGRAM):   else do;
1707452   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1707453   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1707454   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1707455   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1707456   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1707457   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1707458   +   end;
MPRINT(EM_DIAGRAM):   end;
1707459   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1707460   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1707461   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1707462   +   end;
MPRINT(EM_DIAGRAM):   end;
1707463   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1707464   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1707465   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1707466   +   end;
MPRINT(EM_DIAGRAM):   end;
1707467   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1707468   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1707469   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1707470   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1707471   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1707472   +   end;
MPRINT(EM_DIAGRAM):   end;
1707473   +end;
MPRINT(EM_DIAGRAM):   end;
1707474   +
1707475   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707476   +*** Checking missing input Interval
1707477   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1707478   +
1707479   +IF NMISS(
1707480   +   AcceptedCmpTotal ,
1707481   +   Frq ,
1707482   +   Income ,
1707483   +   Mnt ,
1707484   +   MntGoldProds ,
1707485   +   MntMeatProducts ,
1707486   +   MntWines ,
1707487   +   NumDistPurchases ,
1707488   +   RFMstat ,
1707489   +   RMntFrq ,
1707490   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1707491   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1707492   +
1707493   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1707494   +END;
MPRINT(EM_DIAGRAM):   END;
1707495   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707496   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1707497   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707498   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1707499   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1707500   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1707501   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1707502   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1707503   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1707504   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1707505   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1707506   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1707507   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1707508   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1707509   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1707510   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1707511   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1707512   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1707513   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1707514   +END;
MPRINT(EM_DIAGRAM):   END;
1707515   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1707516   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1707517   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1707518   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1707519   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1707520   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1707521   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1707522   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1707523   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1707524   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1707525   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1707526   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1707527   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1707528   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1707529   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1707530   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1707531   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1707532   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1707533   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1707534   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1707535   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1707536   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1707537   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1707538   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1707539   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1707540   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1707541   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1707542   +END;
MPRINT(EM_DIAGRAM):   END;
1707543   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707544   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1707545   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707547   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1707548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707549   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1707550   +   H11  =     0.20833273713311 * S_AcceptedCmpTotal  +    -1.28879417764689 *
1707551   +        S_Frq  +    -0.14086556075478 * S_Income  +    -2.23301771255995 *
1707552   +        S_Mnt  +     0.04592092677357 * S_MntGoldProds
1707553   +          +     1.62567194377193 * S_MntMeatProducts
1707554   +          +    -0.49127366492531 * S_MntWines  +     1.91685226043524 *
1707555   +        S_NumDistPurchases  +    -0.04138556513564 * S_RFMstat
1707556   +          +    -0.13653085001127 * S_RMntFrq  +    -0.23945986763214 *
1707557   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.20833273713311 * S_AcceptedCmpTotal + -1.28879417764689 * S_Frq
+ -0.14086556075478 * S_Income + -2.23301771255995 * S_Mnt + 0.04592092677357 * S_MntGoldProds
+ 1.62567194377193 * S_MntMeatProducts + -0.49127366492531 * S_MntWines + 1.91685226043524 *
S_NumDistPurchases + -0.04138556513564 * S_RFMstat + -0.13653085001127 * S_RMntFrq +
-0.23945986763214 * S_Recency ;
1707558   +   H12  =    -0.34458302979772 * S_AcceptedCmpTotal  +     0.83835958311689 *
1707559   +        S_Frq  +     0.58985038025342 * S_Income  +    -0.01368105632672 *
1707560   +        S_Mnt  +      0.3019310576853 * S_MntGoldProds
1707561   +          +     0.07606634413103 * S_MntMeatProducts
1707562   +          +    -0.13247646610361 * S_MntWines  +    -0.50915989225259 *
1707563   +        S_NumDistPurchases  +    -0.04564926690665 * S_RFMstat
1707564   +          +     0.55193961730225 * S_RMntFrq  +     0.39404724414688 *
1707565   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = -0.34458302979772 * S_AcceptedCmpTotal + 0.83835958311689 * S_Frq
+ 0.58985038025342 * S_Income + -0.01368105632672 * S_Mnt + 0.3019310576853 * S_MntGoldProds +
0.07606634413103 * S_MntMeatProducts + -0.13247646610361 * S_MntWines + -0.50915989225259 *
S_NumDistPurchases + -0.04564926690665 * S_RFMstat + 0.55193961730225 * S_RMntFrq +
0.39404724414688 * S_Recency ;
1707566   +   H13  =    -0.26674190510231 * S_AcceptedCmpTotal  +    -0.06490296283402 *
1707567   +        S_Frq  +    -0.00949495425001 * S_Income  +     0.37442854620852 *
1707568   +        S_Mnt  +     -0.1257892331131 * S_MntGoldProds
1707569   +          +    -0.28812884998766 * S_MntMeatProducts
1707570   +          +    -0.20316845095305 * S_MntWines  +    -0.03921402518774 *
1707571   +        S_NumDistPurchases  +    -0.03320245186228 * S_RFMstat
1707572   +          +    -0.30369395822298 * S_RMntFrq  +     0.46294177326732 *
1707573   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H13 = -0.26674190510231 * S_AcceptedCmpTotal + -0.06490296283402 * S_Frq
+ -0.00949495425001 * S_Income + 0.37442854620852 * S_Mnt + -0.1257892331131 * S_MntGoldProds
+ -0.28812884998766 * S_MntMeatProducts + -0.20316845095305 * S_MntWines + -0.03921402518774 *
S_NumDistPurchases + -0.03320245186228 * S_RFMstat + -0.30369395822298 * S_RMntFrq +
0.46294177326732 * S_Recency ;
1707574   +   H11  = H11  +    -0.10367293898875 * G_Marital_Status0
1707575   +          +     0.15277764144522 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.10367293898875 * G_Marital_Status0 + 0.15277764144522 *
G_Marital_Status1 ;
1707576   +   H12  = H12  +     -0.7297577327843 * G_Marital_Status0
1707577   +          +    -1.01396607857406 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.7297577327843 * G_Marital_Status0 + -1.01396607857406 *
G_Marital_Status1 ;
1707578   +   H13  = H13  +     -0.1454175222715 * G_Marital_Status0
1707579   +          +     0.15056066026671 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1454175222715 * G_Marital_Status0 + 0.15056066026671 *
G_Marital_Status1 ;
1707580   +   H11  =    -1.28493655880358 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.28493655880358 + H11 ;
1707581   +   H12  =     -2.3952804585862 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -2.3952804585862 + H12 ;
1707582   +   H13  =     0.99289226061194 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.99289226061194 + H13 ;
1707583   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1707584   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1707585   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1707586   +END;
MPRINT(EM_DIAGRAM):   END;
1707587   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1707588   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1707589   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1707590   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1707591   +END;
MPRINT(EM_DIAGRAM):   END;
1707592   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707593   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1707594   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707595   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1707596   +   P_DepVar1  =      3.9868350141384 * H11  +    -2.54575725573216 * H12
1707597   +          +    -5.97596011661307 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 3.9868350141384 * H11 + -2.54575725573216 * H12 +
-5.97596011661307 * H13 ;
1707598   +   P_DepVar1  =     0.85313461945475 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.85313461945475 + P_DepVar1 ;
1707599   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1707600   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1707601   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1707602   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1707603   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1707604   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1707605   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1707606   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1707607   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1707608   +END;
MPRINT(EM_DIAGRAM):   END;
1707609   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1707610   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1707611   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1707612   +END;
MPRINT(EM_DIAGRAM):   END;
1707613   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1707614   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1707615   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1707616   +END;
MPRINT(EM_DIAGRAM):   END;
1707617   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707618   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1707619   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1707620   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1707621   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1707622   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1707623   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1707624   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1707625   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1707626   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1707627   +END;
MPRINT(EM_DIAGRAM):   END;
1707628   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1707629   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1707630   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1707631   +drop
1707632   +H11
1707633   +H12
1707634   +H13
1707635   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1707636   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707637    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707638    quit;
1707639    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707640    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707641    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707642    retain ID 2 Node "Neural25";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural25";
1707643    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707644    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 761 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 761 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707645    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707646    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707647    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 761 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 761 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707648    proc sort data=EMWS8.Neural25_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural25_variableset out=_temp2(keep=NAME CREATOR);
1707649    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707650    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL25_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707651    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707652    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707653    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707654    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707655    proc contents data=EMWS8.Neural25_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural25_train out=_meta(keep=NAME) noprint;
1707656    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1707657    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707658    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707659    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707660    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707661    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707662    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707663    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707664    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707665    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707665  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 371 rows and 5 columns.
 
1707666    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707667    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707668    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 371 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 371 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707669    filename _pref
1707669  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1707670    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707671    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1707672   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1707673   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1707674   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1707675   +
1707676   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1707677   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1707678   +
1707679   +
1707680   +/*----G_Marital_Status begin----*/
1707681   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1707682   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1707683   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1707684   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1707685   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1707686   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1707687   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1707688   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1707689   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1707690   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1707691   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1707692   +end;
MPRINT(EM_DIAGRAM):   end;
1707693   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1707694   +/*----G_Marital_Status end----*/
1707695   +
1707696   +
1707697   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1707698   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1707699   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707700    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707701    quit;
1707702    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707703    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707704    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707705    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1707706    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707707    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707708    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707709    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707710    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707711    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1707712    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707713    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707714    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707715    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707716    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707717    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707718    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1707719    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1707720    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707721    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707722    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707723    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707724    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707725    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707726    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707727    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707728    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707728  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1707729    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707730    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707731    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 374 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707732    filename _pref
1707732  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1707733    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707734    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1707735   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1707736   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1707737   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1707738   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1707739   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1707740   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707741    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707742    quit;
1707743    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707744    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707745    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707746    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1707747    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707749    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707750    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707751    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707752    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1707753    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707754    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707755    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707756    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707757    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707758    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707759    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1707760    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1707761    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707762    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707763    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707764    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707765    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707766    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707767    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707768    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707769    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707769  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1707770    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707771    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 378 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707773    filename _pref
1707773  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1707774    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707775    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1707776   +
1707777   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1707778   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1707778  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1707779   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1707780   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1707781   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1707782   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1707783   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707784    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707785    quit;
1707786    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707787    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707788    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707789    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1707790    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707791    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707792    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707793    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707794    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707795    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1707796    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707797    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707798    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707799    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707800    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707801    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707802    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1707803    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707804    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707805    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707806    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707807    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707808    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707809    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707810    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707811    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707812    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707812  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1707813    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707814    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707815    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 417 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707816    filename _pref
1707816  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1707817    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1707818    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1707819   +
1707820   +
1707821   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1707822   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1707823   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1707824   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1707825   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1707826   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707827   +
1707828   +
1707829   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1707830   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1707831   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1707832   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1707833   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1707834   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707835   +
1707836   +
1707837   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1707838   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1707839   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1707840   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1707841   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1707842   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707843   +
1707844   +
1707845   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1707846   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1707847   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1707848   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1707849   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1707850   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707851   +
1707852   +
1707853   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1707854   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1707855   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1707856   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1707857   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1707858   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707859   +
1707860   +
1707861   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1707862   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1707863   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1707864   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1707865   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1707866   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707867   +
1707868   +
1707869   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1707870   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1707871   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1707872   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1707873   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1707874   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707875   +
1707876   +
1707877   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1707878   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1707879   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1707880   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1707881   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1707882   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1707883   +if
1707884   +_FILTERNORM1 not in ( '.')
1707885   + and
1707886   +_FILTERNORM2 not in ( '.')
1707887   + and
1707888   +_FILTERNORM3 not in ( '.')
1707889   + and
1707890   +_FILTERNORM4 not in ( '.')
1707891   + and
1707892   +_FILTERNORM5 not in ( '.')
1707893   + and
1707894   +_FILTERNORM6 not in ( '.')
1707895   + and
1707896   +_FILTERNORM7 not in ( ' ')
1707897   + and
1707898   +_FILTERNORM8 not in ( ' ')
1707899   +and
1707900   +( Dt_Customer ne .)
1707901   +and ( Income ne . and (Income<=107000))
1707902   +and ( Kidhome ne .)
1707903   +and ( MntFishProducts ne .)
1707904   +and ( MntFruits ne .)
1707905   +and ( MntGoldProds ne .)
1707906   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1707907   +and ( MntSweetProducts ne .)
1707908   +and ( MntWines ne .)
1707909   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1707910   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1707911   +and ( NumStorePurchases ne .)
1707912   +and ( NumWebPurchases ne .)
1707913   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1707914   +and ( Recency ne .)
1707915   +and ( Teenhome ne .)
1707916   +and ( Year_Birth ne .)
1707917   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1707918   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1707919   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1707920   +end;
MPRINT(EM_DIAGRAM):   end;
1707921   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1707922   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1707923    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1707924    quit;
1707925    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1707926    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1707927    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1707928    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1707929    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1707930    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707931    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1707932    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707933    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707934    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1707935    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707936    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707937    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707938    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1707939    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1707940    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707941    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1707942    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1707943    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1707944    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707945    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707946    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1707947    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1707948    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1707949    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707950    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1707951    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1707951  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1707952    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1707953    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1707954    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 483 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1707955    %macro varDept(fcmpdata=,id=);
1707956    %global nobs&id scoreFlag&id;
1707957    %let scoreFlag&id = 0;
1707958    %if &id=1 or ^&fcmpStart %then %do;
1707959    proc sort data=&fcmpdata out=_temp&id nodupkey;
1707960    by NAME;
1707961    where id=&id and LHS in( %let j=1;
1707962    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1707963    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1707964    "&var" %let j = %eval(&j+1);
1707965    %end;
1707966    );
1707967    run;
1707968    %let dsid = %sysfunc(open(_temp&id));
1707969    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1707970    %let dsid = %sysfunc(close(&dsid));
1707971    %if &&nobs&id %then %do;
1707972    %let scoreFlag&id = 1;
1707973    %let fcmpStart = 1;
1707974    %end;
1707975    %else %let fcmpStart = 0;
1707976    %end;
1707977    %else %do;
1707978    proc sort data=&fcmpdata out=_tempid;
1707979    where id=&id;
1707980    by LHS;
1707981    run;
1707982    %let dsid = %sysfunc(open(_tempid));
1707983    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1707984    %let dsid = %sysfunc(close(&dsid));
1707985    %if ^&&nobs&id %then %do;
1707986    proc datasets lib=work nolist;
1707987    delete _tempid;
1707988    run;
1707989    quit;
1707990    %end;
1707991    %else %do;
1707992    data _tempAll;
1707993    set %let j=%eval(&id-1);
1707994    %do x=1 %to &j;
1707995    %if &&nobs&x %then %do;
1707996    _temp&x %end;
1707997    %end;
1707998    ;
1707999    run;
1708000    proc sql;
1708001    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1708001  ! work._tempid p2 where p.name=p2.lhs;
1708002    quit;
1708003    data _temp&id;
1708004    set _temp&id;
1708005    where LHS ne '' and NAME ne '' and Node ne '';
1708006    run;
1708007    proc datasets lib=work nolist;
1708008    delete _tempAll;
1708009    run;
1708010    %let dsid = %sysfunc(open(_temp&id));
1708011    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1708012    %let dsid = %sysfunc(close(&dsid));
1708013    %if ^&&nobs&id %then %do;
1708014    proc datasets lib=work nolist;
1708015    delete _temp&id;
1708016    run;
1708017    quit;
1708018    %end;
1708019    %else %do;
1708020    %let scoreFlag&id = 1;
1708021    data _temp&id;
1708022    set _temp&id;
1708023    where LHS ne NAME and node ne '';
1708024    run;
1708025    %let dsid = %sysfunc(open(_temp&id));
1708026    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1708027    %let dsid = %sysfunc(close(&dsid));
1708028    %if ^&&nobs&id %then %do;
1708029    proc datasets lib=work nolist;
1708030    delete _temp&id;
1708031    run;
1708032    quit;
1708033    %end;
1708034    %else %do;
1708035    proc sort data=_temp&id nodupkey;
1708036    by LHS NAME;
1708037    run;
1708038    %end;
1708039    %end;
1708040    %end;
1708041    %end;
1708042    %mend varDept;
1708043    %macro optCode(outdata=fcmpdata);
1708044    %global fcmpStart;
1708045    %let fcmpStart = 0;
1708046    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1708047    %let NumNodes=9;
1708048    %do k=1 %to &NumNodes;
1708049    %vardept(fcmpdata=&outdata, id=&k);
1708050    %end;
1708051    %mend optCode;
1708052    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1708053    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1708054    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1708055    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1708056    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708057    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1708058    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1708059    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1708060    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708061    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708062    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1708062  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1708063    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1708064    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1708065    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1708066    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708067    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1708068    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1708069    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1708070    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708071    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1708072    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1708073    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1708074    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708075    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708076    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1708076  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1708077    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708078    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1708079    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1708080    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708081    filename _pref
1708081  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural24\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural24\EMPUBLISHSCORE.sas";
1708082    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1708083    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural24\EMPUBLISHSCORE.sas.
1708084   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1708085   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1708086   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1708087   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1708088   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1708089   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1708090   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1708091   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1708092   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1708093   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1708094   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1708095   +LENGTH _WARN_ $4
1708096   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1708097   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1708098   +
1708099   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1708100   +
1708101   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1708102   +
1708103   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1708104   +
1708105   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1708106   +
1708107   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1708108   +
1708109   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1708110   +
1708111   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1708112   +
1708113   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1708114   +
1708115   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1708116   +
1708117   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1708118   +
1708119   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1708120   +
1708121   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1708122   +
1708123   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1708124   +
1708125   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1708126   +
1708127   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1708128   +
1708129   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1708130   +
1708131   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1708132   +
1708133   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1708134   +
1708135   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1708136   +
1708137   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1708138   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1708139   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1708140   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1708141   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1708142   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1708143   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1708144   +end;
MPRINT(EM_DIAGRAM):   end;
1708145   +else do;
MPRINT(EM_DIAGRAM):   else do;
1708146   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1708147   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1708148   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1708149   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1708150   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1708151   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1708152   +   end;
MPRINT(EM_DIAGRAM):   end;
1708153   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1708154   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1708155   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1708156   +   end;
MPRINT(EM_DIAGRAM):   end;
1708157   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1708158   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1708159   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1708160   +   end;
MPRINT(EM_DIAGRAM):   end;
1708161   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1708162   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1708163   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1708164   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1708165   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1708166   +   end;
MPRINT(EM_DIAGRAM):   end;
1708167   +end;
MPRINT(EM_DIAGRAM):   end;
1708168   +
1708169   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708170   +*** Checking missing input Interval
1708171   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1708172   +
1708173   +IF NMISS(
1708174   +   AcceptedCmpTotal ,
1708175   +   Frq ,
1708176   +   Income ,
1708177   +   Mnt ,
1708178   +   MntGoldProds ,
1708179   +   MntMeatProducts ,
1708180   +   MntWines ,
1708181   +   NumDistPurchases ,
1708182   +   RFMstat ,
1708183   +   RMntFrq ,
1708184   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1708185   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1708186   +
1708187   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1708188   +END;
MPRINT(EM_DIAGRAM):   END;
1708189   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708190   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1708191   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708192   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1708193   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1708194   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1708195   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1708196   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1708197   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1708198   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1708199   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1708200   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1708201   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1708202   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1708203   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1708204   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1708205   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1708206   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1708207   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1708208   +END;
MPRINT(EM_DIAGRAM):   END;
1708209   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1708210   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1708211   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1708212   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1708213   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1708214   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1708215   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1708216   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1708217   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1708218   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1708219   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1708220   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1708221   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1708222   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1708223   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1708224   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1708225   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1708226   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1708227   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1708228   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1708229   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1708230   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1708231   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1708232   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1708233   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1708234   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1708235   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1708236   +END;
MPRINT(EM_DIAGRAM):   END;
1708237   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708238   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1708239   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708241   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1708242   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708243   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1708244   +   H11  =       0.064809950631 * S_AcceptedCmpTotal  +    -0.11974361887376 *
1708245   +        S_Frq  +    -0.05034272281408 * S_Income  +    -1.03632740142884 *
1708246   +        S_Mnt  +      0.0570619696315 * S_MntGoldProds
1708247   +          +     0.44757705806877 * S_MntMeatProducts
1708248   +          +     0.15555176595882 * S_MntWines  +     0.29237363949433 *
1708249   +        S_NumDistPurchases  +     0.01513588595143 * S_RFMstat
1708250   +          +     0.15267139118817 * S_RMntFrq  +    -0.08178536319013 *
1708251   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.064809950631 * S_AcceptedCmpTotal + -0.11974361887376 * S_Frq +
-0.05034272281408 * S_Income + -1.03632740142884 * S_Mnt + 0.0570619696315 * S_MntGoldProds +
0.44757705806877 * S_MntMeatProducts + 0.15555176595882 * S_MntWines + 0.29237363949433 *
S_NumDistPurchases + 0.01513588595143 * S_RFMstat + 0.15267139118817 * S_RMntFrq +
-0.08178536319013 * S_Recency ;
1708252   +   H12  =     0.03056152920519 * S_AcceptedCmpTotal  +     0.21158429585179 *
1708253   +        S_Frq  +     0.08852997598435 * S_Income  +       1.474747876869 *
1708254   +        S_Mnt  +    -0.05504304373804 * S_MntGoldProds
1708255   +          +    -0.61224564453989 * S_MntMeatProducts
1708256   +          +    -0.16570792731241 * S_MntWines  +     -0.3556210800725 *
1708257   +        S_NumDistPurchases  +    -0.00493407341141 * S_RFMstat
1708258   +          +    -0.08975799900748 * S_RMntFrq  +    -0.08286554067447 *
1708259   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H12 = 0.03056152920519 * S_AcceptedCmpTotal + 0.21158429585179 * S_Frq +
0.08852997598435 * S_Income + 1.474747876869 * S_Mnt + -0.05504304373804 * S_MntGoldProds +
-0.61224564453989 * S_MntMeatProducts + -0.16570792731241 * S_MntWines + -0.3556210800725 *
S_NumDistPurchases + -0.00493407341141 * S_RFMstat + -0.08975799900748 * S_RMntFrq +
-0.08286554067447 * S_Recency ;
1708260   +   H11  = H11  +     -0.0268872893862 * G_Marital_Status0
1708261   +          +     0.01287493608622 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.0268872893862 * G_Marital_Status0 + 0.01287493608622 *
G_Marital_Status1 ;
1708262   +   H12  = H12  +     0.19972982419153 * G_Marital_Status0
1708263   +          +     0.00851919203627 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.19972982419153 * G_Marital_Status0 + 0.00851919203627 *
G_Marital_Status1 ;
1708264   +   H11  =       -0.05804704369 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.05804704369 + H11 ;
1708265   +   H12  =    -0.91773456634133 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = -0.91773456634133 + H12 ;
1708266   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1708267   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1708268   +END;
MPRINT(EM_DIAGRAM):   END;
1708269   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1708270   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1708271   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1708272   +END;
MPRINT(EM_DIAGRAM):   END;
1708273   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708274   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1708275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708276   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1708277   +   P_DepVar1  =     24.2171221004351 * H11  +     14.0502177408306 * H12 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 24.2171221004351 * H11 + 14.0502177408306 * H12 ;
1708278   +   P_DepVar1  =     5.57321151420878 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 5.57321151420878 + P_DepVar1 ;
1708279   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1708280   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1708281   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1708282   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1708283   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1708284   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1708285   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1708286   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1708287   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1708288   +END;
MPRINT(EM_DIAGRAM):   END;
1708289   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1708290   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1708291   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1708292   +END;
MPRINT(EM_DIAGRAM):   END;
1708293   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1708294   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1708295   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1708296   +END;
MPRINT(EM_DIAGRAM):   END;
1708297   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708298   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1708299   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708300   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1708301   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1708302   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1708303   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1708304   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1708305   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1708306   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1708307   +END;
MPRINT(EM_DIAGRAM):   END;
1708308   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1708309   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1708310   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1708311   +drop
1708312   +H11
1708313   +H12
1708314   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 ;
1708315   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1708316    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1708317    quit;
1708318    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1708319    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1708320    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1708321    retain ID 2 Node "Neural24";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural24";
1708322    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1708323    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 683 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 683 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708324    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1708325    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708326    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 683 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 683 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708327    proc sort data=EMWS8.Neural24_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural24_variableset out=_temp2(keep=NAME CREATOR);
1708328    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708329    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL24_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708330    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708331    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1708332    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1708333    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708334    proc contents data=EMWS8.Neural24_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural24_train out=_meta(keep=NAME) noprint;
1708335    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1708336    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1708337    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708338    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708339    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708340    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1708341    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708342    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708343    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708344    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1708344  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 347 rows and 5 columns.
 
1708345    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708346    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1708347    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 347 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 347 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708348    filename _pref
1708348  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1708349    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1708350    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1708351   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1708352   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1708353   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1708354   +
1708355   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1708356   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1708357   +
1708358   +
1708359   +/*----G_Marital_Status begin----*/
1708360   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1708361   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1708362   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1708363   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1708364   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1708365   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1708366   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1708367   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1708368   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1708369   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1708370   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1708371   +end;
MPRINT(EM_DIAGRAM):   end;
1708372   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1708373   +/*----G_Marital_Status end----*/
1708374   +
1708375   +
1708376   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1708377   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1708378   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1708379    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1708380    quit;
1708381    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1708382    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1708383    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1708384    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1708385    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1708386    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708387    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1708388    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708389    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708390    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1708391    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708392    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708393    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708394    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1708395    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1708396    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708397    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1708398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1708399    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1708400    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708401    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708402    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708403    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1708404    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708405    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708406    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708407    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1708407  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1708408    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708409    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1708410    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 350 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708411    filename _pref
1708411  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1708412    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1708413    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1708414   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1708415   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1708416   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1708417   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1708418   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1708419   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1708420    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1708421    quit;
1708422    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1708423    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1708424    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1708425    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1708426    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1708427    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708428    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1708429    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708430    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708431    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1708432    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708433    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708434    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708435    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1708436    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1708437    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708438    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1708439    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1708440    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1708441    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708442    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708443    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708444    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1708445    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708446    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708447    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708448    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1708448  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1708449    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708450    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1708451    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 354 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708452    filename _pref
1708452  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1708453    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1708454    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1708455   +
1708456   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1708457   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1708457  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1708458   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1708459   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1708460   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1708461   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1708462   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1708463    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1708464    quit;
1708465    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1708466    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1708467    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1708468    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1708469    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1708470    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708471    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1708472    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708473    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708474    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1708475    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708476    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708477    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708478    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1708479    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1708480    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708481    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1708482    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708483    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1708484    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708485    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708486    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708487    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1708488    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708489    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708490    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708491    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1708491  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1708492    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708493    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1708494    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 393 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708495    filename _pref
1708495  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1708496    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1708497    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1708498   +
1708499   +
1708500   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1708501   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1708502   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1708503   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1708504   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1708505   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708506   +
1708507   +
1708508   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1708509   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1708510   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1708511   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1708512   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1708513   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708514   +
1708515   +
1708516   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1708517   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1708518   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1708519   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1708520   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1708521   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708522   +
1708523   +
1708524   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1708525   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1708526   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1708527   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1708528   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1708529   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708530   +
1708531   +
1708532   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1708533   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1708534   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1708535   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1708536   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1708537   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708538   +
1708539   +
1708540   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1708541   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1708542   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1708543   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1708544   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1708545   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708546   +
1708547   +
1708548   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1708549   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1708550   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1708551   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1708552   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1708553   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708554   +
1708555   +
1708556   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1708557   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1708558   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1708559   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1708560   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1708561   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1708562   +if
1708563   +_FILTERNORM1 not in ( '.')
1708564   + and
1708565   +_FILTERNORM2 not in ( '.')
1708566   + and
1708567   +_FILTERNORM3 not in ( '.')
1708568   + and
1708569   +_FILTERNORM4 not in ( '.')
1708570   + and
1708571   +_FILTERNORM5 not in ( '.')
1708572   + and
1708573   +_FILTERNORM6 not in ( '.')
1708574   + and
1708575   +_FILTERNORM7 not in ( ' ')
1708576   + and
1708577   +_FILTERNORM8 not in ( ' ')
1708578   +and
1708579   +( Dt_Customer ne .)
1708580   +and ( Income ne . and (Income<=107000))
1708581   +and ( Kidhome ne .)
1708582   +and ( MntFishProducts ne .)
1708583   +and ( MntFruits ne .)
1708584   +and ( MntGoldProds ne .)
1708585   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1708586   +and ( MntSweetProducts ne .)
1708587   +and ( MntWines ne .)
1708588   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1708589   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1708590   +and ( NumStorePurchases ne .)
1708591   +and ( NumWebPurchases ne .)
1708592   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1708593   +and ( Recency ne .)
1708594   +and ( Teenhome ne .)
1708595   +and ( Year_Birth ne .)
1708596   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1708597   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1708598   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1708599   +end;
MPRINT(EM_DIAGRAM):   end;
1708600   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1708601   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1708602    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1708603    quit;
1708604    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1708605    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1708606    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1708607    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1708608    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1708609    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708610    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1708611    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708612    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708613    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1708614    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708615    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708616    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708617    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1708618    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1708619    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708620    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1708621    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1708622    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1708623    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708624    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708625    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708626    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1708627    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708628    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708629    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708630    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1708630  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1708631    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708632    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1708633    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 459 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708634    %macro varDept(fcmpdata=,id=);
1708635    %global nobs&id scoreFlag&id;
1708636    %let scoreFlag&id = 0;
1708637    %if &id=1 or ^&fcmpStart %then %do;
1708638    proc sort data=&fcmpdata out=_temp&id nodupkey;
1708639    by NAME;
1708640    where id=&id and LHS in( %let j=1;
1708641    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1708642    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1708643    "&var" %let j = %eval(&j+1);
1708644    %end;
1708645    );
1708646    run;
1708647    %let dsid = %sysfunc(open(_temp&id));
1708648    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1708649    %let dsid = %sysfunc(close(&dsid));
1708650    %if &&nobs&id %then %do;
1708651    %let scoreFlag&id = 1;
1708652    %let fcmpStart = 1;
1708653    %end;
1708654    %else %let fcmpStart = 0;
1708655    %end;
1708656    %else %do;
1708657    proc sort data=&fcmpdata out=_tempid;
1708658    where id=&id;
1708659    by LHS;
1708660    run;
1708661    %let dsid = %sysfunc(open(_tempid));
1708662    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1708663    %let dsid = %sysfunc(close(&dsid));
1708664    %if ^&&nobs&id %then %do;
1708665    proc datasets lib=work nolist;
1708666    delete _tempid;
1708667    run;
1708668    quit;
1708669    %end;
1708670    %else %do;
1708671    data _tempAll;
1708672    set %let j=%eval(&id-1);
1708673    %do x=1 %to &j;
1708674    %if &&nobs&x %then %do;
1708675    _temp&x %end;
1708676    %end;
1708677    ;
1708678    run;
1708679    proc sql;
1708680    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1708680  ! work._tempid p2 where p.name=p2.lhs;
1708681    quit;
1708682    data _temp&id;
1708683    set _temp&id;
1708684    where LHS ne '' and NAME ne '' and Node ne '';
1708685    run;
1708686    proc datasets lib=work nolist;
1708687    delete _tempAll;
1708688    run;
1708689    %let dsid = %sysfunc(open(_temp&id));
1708690    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1708691    %let dsid = %sysfunc(close(&dsid));
1708692    %if ^&&nobs&id %then %do;
1708693    proc datasets lib=work nolist;
1708694    delete _temp&id;
1708695    run;
1708696    quit;
1708697    %end;
1708698    %else %do;
1708699    %let scoreFlag&id = 1;
1708700    data _temp&id;
1708701    set _temp&id;
1708702    where LHS ne NAME and node ne '';
1708703    run;
1708704    %let dsid = %sysfunc(open(_temp&id));
1708705    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1708706    %let dsid = %sysfunc(close(&dsid));
1708707    %if ^&&nobs&id %then %do;
1708708    proc datasets lib=work nolist;
1708709    delete _temp&id;
1708710    run;
1708711    quit;
1708712    %end;
1708713    %else %do;
1708714    proc sort data=_temp&id nodupkey;
1708715    by LHS NAME;
1708716    run;
1708717    %end;
1708718    %end;
1708719    %end;
1708720    %end;
1708721    %mend varDept;
1708722    %macro optCode(outdata=fcmpdata);
1708723    %global fcmpStart;
1708724    %let fcmpStart = 0;
1708725    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1708726    %let NumNodes=9;
1708727    %do k=1 %to &NumNodes;
1708728    %vardept(fcmpdata=&outdata, id=&k);
1708729    %end;
1708730    %mend optCode;
1708731    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1708732    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1708733    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1708734    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1708735    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708736    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1708737    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1708738    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1708739    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708740    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708741    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1708741  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1708742    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1708743    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1708744    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1708745    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708746    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1708747    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1708748    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1708749    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1708750    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1708751    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1708752    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1708753    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708754    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1708755    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1708755  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1708756    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
1708757    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1708758    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1708759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708760    filename _pref
1708760  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural29\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Neural29\EMPUBLISHSCORE.sas";
1708761    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1708762    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Neural29\EMPUBLISHSCORE.sas.
1708763   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1708764   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1708765   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1708766   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1708767   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1708768   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1708769   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1708770   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1708771   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1708772   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1708773   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1708774   +LENGTH _WARN_ $4
1708775   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1708776   +      label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
MPRINT(EM_DIAGRAM):   label S_AcceptedCmpTotal = 'Standard: AcceptedCmpTotal' ;
1708777   +
1708778   +      label S_Frq = 'Standard: Frq' ;
MPRINT(EM_DIAGRAM):   label S_Frq = 'Standard: Frq' ;
1708779   +
1708780   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1708781   +
1708782   +      label S_Mnt = 'Standard: Mnt' ;
MPRINT(EM_DIAGRAM):   label S_Mnt = 'Standard: Mnt' ;
1708783   +
1708784   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1708785   +
1708786   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1708787   +
1708788   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1708789   +
1708790   +      label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDistPurchases = 'Standard: NumDistPurchases' ;
1708791   +
1708792   +      label S_RFMstat = 'Standard: RFMstat' ;
MPRINT(EM_DIAGRAM):   label S_RFMstat = 'Standard: RFMstat' ;
1708793   +
1708794   +      label S_RMntFrq = 'Standard: RMntFrq' ;
MPRINT(EM_DIAGRAM):   label S_RMntFrq = 'Standard: RMntFrq' ;
1708795   +
1708796   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1708797   +
1708798   +      label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status0 = 'Dummy: G_Marital_Status=0' ;
1708799   +
1708800   +      label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
MPRINT(EM_DIAGRAM):   label G_Marital_Status1 = 'Dummy: G_Marital_Status=1' ;
1708801   +
1708802   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1708803   +
1708804   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1708805   +
1708806   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1708807   +
1708808   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1708809   +
1708810   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1708811   +
1708812   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1708813   +
1708814   +*** Generate dummy variables for G_Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for G_Marital_Status ;
1708815   +drop G_Marital_Status0 G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   drop G_Marital_Status0 G_Marital_Status1 ;
1708816   +if missing( G_Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( G_Marital_Status ) then do;
1708817   +   G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1708818   +   G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1708819   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1708820   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1708821   +end;
MPRINT(EM_DIAGRAM):   end;
1708822   +else do;
MPRINT(EM_DIAGRAM):   else do;
1708823   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1708824   +   _dm12 = put( G_Marital_Status , BEST12. );
MPRINT(EM_DIAGRAM):   _dm12 = put( G_Marital_Status , BEST12. );
1708825   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1708826   +   if _dm12 = '2'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '2' then do;
1708827   +      G_Marital_Status0 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = -1;
1708828   +      G_Marital_Status1 = -1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = -1;
1708829   +   end;
MPRINT(EM_DIAGRAM):   end;
1708830   +   else if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '0' then do;
1708831   +      G_Marital_Status0 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 1;
1708832   +      G_Marital_Status1 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 0;
1708833   +   end;
MPRINT(EM_DIAGRAM):   end;
1708834   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1708835   +      G_Marital_Status0 = 0;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = 0;
1708836   +      G_Marital_Status1 = 1;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = 1;
1708837   +   end;
MPRINT(EM_DIAGRAM):   end;
1708838   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1708839   +      G_Marital_Status0 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status0 = .;
1708840   +      G_Marital_Status1 = .;
MPRINT(EM_DIAGRAM):   G_Marital_Status1 = .;
1708841   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1708842   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1708843   +   end;
MPRINT(EM_DIAGRAM):   end;
1708844   +end;
MPRINT(EM_DIAGRAM):   end;
1708845   +
1708846   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708847   +*** Checking missing input Interval
1708848   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1708849   +
1708850   +IF NMISS(
1708851   +   AcceptedCmpTotal ,
1708852   +   Frq ,
1708853   +   Income ,
1708854   +   Mnt ,
1708855   +   MntGoldProds ,
1708856   +   MntMeatProducts ,
1708857   +   MntWines ,
1708858   +   NumDistPurchases ,
1708859   +   RFMstat ,
1708860   +   RMntFrq ,
1708861   +   Recency   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( AcceptedCmpTotal , Frq , Income , Mnt , MntGoldProds ,
MntMeatProducts , MntWines , NumDistPurchases , RFMstat , RMntFrq , Recency ) THEN DO;
1708862   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1708863   +
1708864   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1708865   +END;
MPRINT(EM_DIAGRAM):   END;
1708866   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708867   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1708868   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708869   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1708870   +   S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1708871   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1708872   +   S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1708873   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1708874   +   S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1708875   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1708876   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1708877   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1708878   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1708879   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1708880   +   S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1708881   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1708882   +   S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1708883   +   S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1708884   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1708885   +END;
MPRINT(EM_DIAGRAM):   END;
1708886   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1708887   +   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( AcceptedCmpTotal ) THEN S_AcceptedCmpTotal = . ;
1708888   +   ELSE S_AcceptedCmpTotal  =    -0.46762909508827 +      1.4961610131261 *
1708889   +        AcceptedCmpTotal ;
MPRINT(EM_DIAGRAM):   ELSE S_AcceptedCmpTotal = -0.46762909508827 + 1.4961610131261 *
AcceptedCmpTotal ;
1708890   +   IF MISSING( Frq ) THEN S_Frq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Frq ) THEN S_Frq = . ;
1708891   +   ELSE S_Frq  =     -1.7674482809159 +     0.13966853800993 * Frq ;
MPRINT(EM_DIAGRAM):   ELSE S_Frq = -1.7674482809159 + 0.13966853800993 * Frq ;
1708892   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1708893   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1708894   +   IF MISSING( Mnt ) THEN S_Mnt  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Mnt ) THEN S_Mnt = . ;
1708895   +   ELSE S_Mnt  =    -1.01843471091398 +      0.0016541571108 * Mnt ;
MPRINT(EM_DIAGRAM):   ELSE S_Mnt = -1.01843471091398 + 0.0016541571108 * Mnt ;
1708896   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1708897   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1708898   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds
;
1708899   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1708900   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1708901   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 *
MntMeatProducts ;
1708902   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1708903   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1708904   +   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDistPurchases ) THEN S_NumDistPurchases = . ;
1708905   +   ELSE S_NumDistPurchases  =    -1.46347520602971 +     0.21729252230374 *
1708906   +        NumDistPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDistPurchases = -1.46347520602971 + 0.21729252230374 *
NumDistPurchases ;
1708907   +   IF MISSING( RFMstat ) THEN S_RFMstat  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RFMstat ) THEN S_RFMstat = . ;
1708908   +   ELSE S_RFMstat  =    -0.33944380186973 +     0.00063877635032 * RFMstat ;
MPRINT(EM_DIAGRAM):   ELSE S_RFMstat = -0.33944380186973 + 0.00063877635032 * RFMstat ;
1708909   +   IF MISSING( RMntFrq ) THEN S_RMntFrq  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( RMntFrq ) THEN S_RMntFrq = . ;
1708910   +   ELSE S_RMntFrq  =    -1.25743573075922 +     0.03326204244626 * RMntFrq ;
MPRINT(EM_DIAGRAM):   ELSE S_RMntFrq = -1.25743573075922 + 0.03326204244626 * RMntFrq ;
1708911   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1708912   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1708913   +END;
MPRINT(EM_DIAGRAM):   END;
1708914   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708915   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1708916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708917   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708918   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1708919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708920   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1708921   +   H11  =     0.07956052778938 * S_AcceptedCmpTotal  +    -0.08976709439294 *
1708922   +        S_Frq  +    -0.03136979020873 * S_Income  +    -0.22580432887576 *
1708923   +        S_Mnt  +     0.02561890499238 * S_MntGoldProds
1708924   +          +     0.13232754556656 * S_MntMeatProducts
1708925   +          +     0.06392654003348 * S_MntWines  +      0.1248896909569 *
1708926   +        S_NumDistPurchases  +     0.01403367352534 * S_RFMstat
1708927   +          +     0.04307139255267 * S_RMntFrq  +     -0.0953931758746 *
1708928   +        S_Recency ;
MPRINT(EM_DIAGRAM):   H11 = 0.07956052778938 * S_AcceptedCmpTotal + -0.08976709439294 * S_Frq
+ -0.03136979020873 * S_Income + -0.22580432887576 * S_Mnt + 0.02561890499238 * S_MntGoldProds
+ 0.13232754556656 * S_MntMeatProducts + 0.06392654003348 * S_MntWines + 0.1248896909569 *
S_NumDistPurchases + 0.01403367352534 * S_RFMstat + 0.04307139255267 * S_RMntFrq +
-0.0953931758746 * S_Recency ;
1708929   +   H11  = H11  +     0.03232715649764 * G_Marital_Status0
1708930   +          +     0.00903998969594 * G_Marital_Status1 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.03232715649764 * G_Marital_Status0 + 0.00903998969594 *
G_Marital_Status1 ;
1708931   +   H11  =    -0.20824058516839 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -0.20824058516839 + H11 ;
1708932   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1708933   +END;
MPRINT(EM_DIAGRAM):   END;
1708934   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1708935   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1708936   +END;
MPRINT(EM_DIAGRAM):   END;
1708937   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708938   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1708939   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708940   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1708941   +   P_DepVar1  =     19.4855317610714 * H11 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 19.4855317610714 * H11 ;
1708942   +   P_DepVar1  =     0.94239569093187 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.94239569093187 + P_DepVar1 ;
1708943   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1708944   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1708945   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1708946   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1708947   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1708948   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1708949   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1708950   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1708951   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1708952   +END;
MPRINT(EM_DIAGRAM):   END;
1708953   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1708954   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1708955   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1708956   +END;
MPRINT(EM_DIAGRAM):   END;
1708957   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1708958   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1708959   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1708960   +END;
MPRINT(EM_DIAGRAM):   END;
1708961   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708962   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1708963   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1708964   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1708965   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1708966   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1708967   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1708968   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1708969   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1708970   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1708971   +END;
MPRINT(EM_DIAGRAM):   END;
1708972   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1708973   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1708974   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1708975   +drop
1708976   +H11
1708977   +;
MPRINT(EM_DIAGRAM):   drop H11 ;
1708978   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1708979    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1708980    quit;
1708981    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1708982    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1708983    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1708984    retain ID 2 Node "Neural29";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural29";
1708985    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1708986    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 605 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 605 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708987    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1708988    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708989    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 605 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 605 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708990    proc sort data=EMWS8.Neural29_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural29_variableset out=_temp2(keep=NAME CREATOR);
1708991    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1708992    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.NEURAL29_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708993    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1708994    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1708995    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1708996    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 13 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1708997    proc contents data=EMWS8.Neural29_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural29_train out=_meta(keep=NAME) noprint;
1708998    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1708999    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1709000    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709001    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 54 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709002    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709003    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1709004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709005    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 54 observations read from the data set WORK._META.
NOTE: There were 13 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 54 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709006    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709007    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1709007  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 323 rows and 5 columns.
 
1709008    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709009    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1709010    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 323 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 323 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709011    filename _pref
1709011  ! "C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas";
1709012    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1709013    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Varsel\EMFLOWSCORE.sas.
1709014   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1709015   +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
1709016   +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
1709017   +
1709018   +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
1709019   +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1709020   +
1709021   +
1709022   +/*----G_Marital_Status begin----*/
1709023   +length _NORM8 $ 8;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status begin----*/ length _NORM8 $ 8;
1709024   +_NORM8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _NORM8 = put( Marital_Status , $8. );
1709025   +%DMNORMIP( _NORM8 )
MPRINT(DMNORMIP):   call dmnorm(_NORM8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1709026   +drop _NORM8;
MPRINT(EM_DIAGRAM):   drop _NORM8;
1709027   +select(_NORM8);
MPRINT(EM_DIAGRAM):   select(_NORM8);
1709028   +  when("DIVORCED" ) G_Marital_Status = 1;
MPRINT(EM_DIAGRAM):   when("DIVORCED" ) G_Marital_Status = 1;
1709029   +  when("MARRIED " ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("MARRIED " ) G_Marital_Status = 2;
1709030   +  when("SINGLE  " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("SINGLE  " ) G_Marital_Status = 0;
1709031   +  when("TOGETHER" ) G_Marital_Status = 2;
MPRINT(EM_DIAGRAM):   when("TOGETHER" ) G_Marital_Status = 2;
1709032   +  when("WIDOW   " ) G_Marital_Status = 0;
MPRINT(EM_DIAGRAM):   when("WIDOW   " ) G_Marital_Status = 0;
1709033   +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
1709034   +end;
MPRINT(EM_DIAGRAM):   end;
1709035   +label G_Marital_Status="Grouped Levels for Marital_Status";
MPRINT(EM_DIAGRAM):   label G_Marital_Status="Grouped Levels for Marital_Status";
1709036   +/*----G_Marital_Status end----*/
1709037   +
1709038   +
1709039   +****************************************;
MPRINT(EM_DIAGRAM):   /*----G_Marital_Status end----*/
****************************************;
1709040   +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
1709041   +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1709042    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1709043    quit;
1709044    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1709045    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1709046    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1709047    retain ID 3 Node "Varsel";
MPRINT(EM_DIAGRAM):   retain ID 3 Node "Varsel";
1709048    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1709049    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709050    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1709051    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709052    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 5 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 5 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709053    proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Varsel_variableset out=_temp2(keep=NAME CREATOR);
1709054    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709055    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set EMWS8.VARSEL_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709056    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709057    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1709058    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1709059    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709060    proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Varsel_train out=_meta(keep=NAME) noprint;
1709061    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1709062    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1709063    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709064    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 47 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709065    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709066    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1709067    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709068    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 47 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 47 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709069    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709070    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1709070  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 3 rows and 5 columns.
 
1709071    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709072    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1709073    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 3 observations read from the data set WORK._TEMPX.
NOTE: 3 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 326 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709074    filename _pref
1709074  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1709075    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1709076    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1709077   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1709078   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1709079   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1709080   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1709081   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1709082   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1709083    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1709084    quit;
1709085    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1709086    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1709087    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1709088    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1709089    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1709090    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709091    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1709092    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709093    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709094    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1709095    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709096    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709097    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709098    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1709099    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1709100    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709101    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1709102    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
 
 
1709103    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1709104    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709105    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709106    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709107    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1709108    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709109    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709110    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709111    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1709111  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.
 
1709112    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709113    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1709114    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 330 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709115    filename _pref
1709115  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1709116    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1709117    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1709118   +
1709119   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1709120   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1709120  !+es;
MPRINT(EM_DIAGRAM):
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1709121   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1709122   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1709123   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1709124   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1709125   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1709126    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1709127    quit;
1709128    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1709129    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1709130    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1709131    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1709132    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1709133    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709134    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1709135    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709136    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709137    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1709138    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709139    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709140    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709141    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1709142    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1709143    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709144    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1709145    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709146    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1709147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709148    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709149    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709150    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1709151    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709152    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709153    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709154    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1709154  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.
 
1709155    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709156    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1709157    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 369 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709158    filename _pref
1709158  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1709159    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1709160    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1709161   +
1709162   +
1709163   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1709164   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1709165   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1709166   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1709167   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1709168   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709169   +
1709170   +
1709171   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1709172   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1709173   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1709174   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1709175   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1709176   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709177   +
1709178   +
1709179   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1709180   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1709181   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1709182   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1709183   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1709184   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709185   +
1709186   +
1709187   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1709188   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1709189   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1709190   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1709191   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1709192   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709193   +
1709194   +
1709195   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1709196   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1709197   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1709198   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1709199   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1709200   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709201   +
1709202   +
1709203   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1709204   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1709205   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1709206   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1709207   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1709208   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709209   +
1709210   +
1709211   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1709212   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1709213   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1709214   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1709215   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1709216   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709217   +
1709218   +
1709219   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1709220   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1709221   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1709222   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1709223   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1709224   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1709225   +if
1709226   +_FILTERNORM1 not in ( '.')
1709227   + and
1709228   +_FILTERNORM2 not in ( '.')
1709229   + and
1709230   +_FILTERNORM3 not in ( '.')
1709231   + and
1709232   +_FILTERNORM4 not in ( '.')
1709233   + and
1709234   +_FILTERNORM5 not in ( '.')
1709235   + and
1709236   +_FILTERNORM6 not in ( '.')
1709237   + and
1709238   +_FILTERNORM7 not in ( ' ')
1709239   + and
1709240   +_FILTERNORM8 not in ( ' ')
1709241   +and
1709242   +( Dt_Customer ne .)
1709243   +and ( Income ne . and (Income<=107000))
1709244   +and ( Kidhome ne .)
1709245   +and ( MntFishProducts ne .)
1709246   +and ( MntFruits ne .)
1709247   +and ( MntGoldProds ne .)
1709248   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1709249   +and ( MntSweetProducts ne .)
1709250   +and ( MntWines ne .)
1709251   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1709252   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1709253   +and ( NumStorePurchases ne .)
1709254   +and ( NumWebPurchases ne .)
1709255   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1709256   +and ( Recency ne .)
1709257   +and ( Teenhome ne .)
1709258   +and ( Year_Birth ne .)
1709259   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and (
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and (
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and (
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and (
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne
.) and ( Year_Birth ne .) then do;
1709260   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1709261   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1709262   +end;
MPRINT(EM_DIAGRAM):   end;
1709263   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1709264   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1709265    run;
 
NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
1709266    quit;
1709267    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1709268    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1709269    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1709270    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1709271    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1709272    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709273    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1709274    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709275    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709276    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1709277    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709278    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709279    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709280    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1709281    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1709282    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709283    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1709284    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
 
 
1709285    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1709286    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709287    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709288    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1709289    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1709290    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709291    run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709292    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709293    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1709293  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.
 
1709294    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709295    proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl4_FCMP data=_tempx;
1709296    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL4_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL4_FCMP has 435 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709297    %macro varDept(fcmpdata=,id=);
1709298    %global nobs&id scoreFlag&id;
1709299    %let scoreFlag&id = 0;
1709300    %if &id=1 or ^&fcmpStart %then %do;
1709301    proc sort data=&fcmpdata out=_temp&id nodupkey;
1709302    by NAME;
1709303    where id=&id and LHS in( %let j=1;
1709304    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1709305    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1709306    "&var" %let j = %eval(&j+1);
1709307    %end;
1709308    );
1709309    run;
1709310    %let dsid = %sysfunc(open(_temp&id));
1709311    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1709312    %let dsid = %sysfunc(close(&dsid));
1709313    %if &&nobs&id %then %do;
1709314    %let scoreFlag&id = 1;
1709315    %let fcmpStart = 1;
1709316    %end;
1709317    %else %let fcmpStart = 0;
1709318    %end;
1709319    %else %do;
1709320    proc sort data=&fcmpdata out=_tempid;
1709321    where id=&id;
1709322    by LHS;
1709323    run;
1709324    %let dsid = %sysfunc(open(_tempid));
1709325    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1709326    %let dsid = %sysfunc(close(&dsid));
1709327    %if ^&&nobs&id %then %do;
1709328    proc datasets lib=work nolist;
1709329    delete _tempid;
1709330    run;
1709331    quit;
1709332    %end;
1709333    %else %do;
1709334    data _tempAll;
1709335    set %let j=%eval(&id-1);
1709336    %do x=1 %to &j;
1709337    %if &&nobs&x %then %do;
1709338    _temp&x %end;
1709339    %end;
1709340    ;
1709341    run;
1709342    proc sql;
1709343    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1709343  ! work._tempid p2 where p.name=p2.lhs;
1709344    quit;
1709345    data _temp&id;
1709346    set _temp&id;
1709347    where LHS ne '' and NAME ne '' and Node ne '';
1709348    run;
1709349    proc datasets lib=work nolist;
1709350    delete _tempAll;
1709351    run;
1709352    %let dsid = %sysfunc(open(_temp&id));
1709353    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1709354    %let dsid = %sysfunc(close(&dsid));
1709355    %if ^&&nobs&id %then %do;
1709356    proc datasets lib=work nolist;
1709357    delete _temp&id;
1709358    run;
1709359    quit;
1709360    %end;
1709361    %else %do;
1709362    %let scoreFlag&id = 1;
1709363    data _temp&id;
1709364    set _temp&id;
1709365    where LHS ne NAME and node ne '';
1709366    run;
1709367    %let dsid = %sysfunc(open(_temp&id));
1709368    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1709369    %let dsid = %sysfunc(close(&dsid));
1709370    %if ^&&nobs&id %then %do;
1709371    proc datasets lib=work nolist;
1709372    delete _temp&id;
1709373    run;
1709374    quit;
1709375    %end;
1709376    %else %do;
1709377    proc sort data=_temp&id nodupkey;
1709378    by LHS NAME;
1709379    run;
1709380    %end;
1709381    %end;
1709382    %end;
1709383    %end;
1709384    %mend varDept;
1709385    %macro optCode(outdata=fcmpdata);
1709386    %global fcmpStart;
1709387    %let fcmpStart = 0;
1709388    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1709389    %let NumNodes=9;
1709390    %do k=1 %to &NumNodes;
1709391    %vardept(fcmpdata=&outdata, id=&k);
1709392    %end;
1709393    %mend optCode;
1709394    %optcode(outData=EMWS8.Ensmbl4_FCMP);
MPRINT(EM_DIAGRAM):
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;
 
NOTE: There were 54 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 40 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 3 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp3 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP3 created, with 1 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp3;
MPRINT(VARDEPT):   set _temp3;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp3 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP3 has 1 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: The data set WORK._TEMPALL has 15 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 2 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp5 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: 0 observations with duplicate key values were deleted.
The SAS System
 
NOTE: The data set WORK._TEMP5 has 2 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 39 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: The data set WORK._TEMPALL has 17 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 37 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne NAME and node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = NAME) and (node not = ' ');
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc sort data=_temp6 nodupkey;
MPRINT(VARDEPT):   by LHS NAME;
MPRINT(VARDEPT):   run;
 
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP6 has 37 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: There were 66 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 _temp3 _temp5 _temp6 ;
MPRINT(VARDEPT):   run;
 
NOTE: There were 14 observations read from the data set WORK._TEMP2.
NOTE: There were 1 observations read from the data set WORK._TEMP3.
NOTE: There were 2 observations read from the data set WORK._TEMP5.
NOTE: There were 37 observations read from the data set WORK._TEMP6.
NOTE: The data set WORK._TEMPALL has 54 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.
 
MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;
 
NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPALL (memtype=DATA).
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl4_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;
 
NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;
 
NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;
 
1709395    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1709396    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1709397    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1709398    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709399    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1709400    set EMWS8.Trans_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Trans_EMSCOREVAR;
1709401    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1709402    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.TRANS_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709403    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709404    create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5 p,
1709404  ! EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar5 as select p.lhs, p2.formula, p2.file from _temp5
p, EMWS8.Trans_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR5 created, with 2 rows and 3 columns.
 
1709405    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
1709406    data _CodeVar5;
MPRINT(EM_DIAGRAM):   data _CodeVar5;
1709407    set _all_ _CodeVar5 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar5 _postall_;
1709408    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 2 observations read from the data set WORK._CODEVAR5.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR5 has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709409    data _all_;
MPRINT(EM_DIAGRAM):    data _all_;
1709410    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1709411    where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and ^index(file, '_POSTALL_.sas');
1709412    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and (not INDEX(file, '_POSTALL_.sas'));
NOTE: The data set WORK._ALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709413    data _postall_;
MPRINT(EM_DIAGRAM):   data _postall_;
1709414    set EMWS8.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   set EMWS8.Varsel_EMSCOREVAR;
1709415    where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
MPRINT(EM_DIAGRAM):   where NAME='' and file ne '' and index(file, '_POSTALL_.sas');
1709416    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.VARSEL_EMSCOREVAR.
      WHERE (NAME=' ') and (file not = ' ') and INDEX(file, '_POSTALL_.sas');
NOTE: The data set WORK._POSTALL_ has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709417    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1709418    create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3 p,
1709418  ! EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
MPRINT(EM_DIAGRAM):   create table _CodeVar7 as select p.lhs, p2.formula, p2.file from _temp3
p, EMWS8.Varsel_EMSCOREVAR p2 where upcase(p.LHS)=upcase(p2.NAME) order by p.lhs;
NOTE: Table WORK._CODEVAR7 created, with 1 rows and 3 columns.
 
1709419    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709420    data _CodeVar7;
MPRINT(EM_DIAGRAM):   data _CodeVar7;
1709421    set _all_ _CodeVar7 _postall_;
MPRINT(EM_DIAGRAM):   set _all_ _CodeVar7 _postall_;
1709422    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set WORK._ALL_.
NOTE: There were 1 observations read from the data set WORK._CODEVAR7.
NOTE: There were 0 observations read from the data set WORK._POSTALL_.
NOTE: The data set WORK._CODEVAR7 has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709423    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1709424    * Ensmbl4: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Computing metadata for TRAIN data;
1709425    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS8.ENSMBL4_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl4_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl4_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl4_TRAIN out=WORK.M0OI6KES noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OI6KES;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OI6KES(keep=name type length label format formatl
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl,
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd,
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat =
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl,
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0OI6KES;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0OI6KES;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M19E1O9S NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2FQ551D(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN"
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO"
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON"
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD"
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" ))
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype =
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" ))
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT"
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB"
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType =
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA',
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W',
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL',
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT',
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   set WORK.M19E1O9S;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL=
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY=
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT=
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL=
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Reg8_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Reg8_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl4";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl4";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl4: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1"
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl4";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1709745    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1709746    set EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMINFO;
1709747    where DATA='Ensmbl4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl4' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE',
'MODEL');
1709748    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL4_EMINFO.
      WHERE (DATA='Ensmbl4') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709749    data EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMINFO;
1709750    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1709751    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1709752    cards;
MPRINT(EM_DIAGRAM):   cards;
 
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
1709756    run;
1709757    data EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMINFO;
1709758    set EMWS8.Ensmbl4_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMINFO WORK.MODELTEMP_INFO;
1709759    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709760    proc sort data = EMWS8.Ensmbl4_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl4_EMINFO NOTHREADS;
1709761    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709762    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_EMINFO.
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709763    proc sort data = EMWS8.Reg8_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Reg8_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1709764    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709765    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS8.REG8_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709766    proc sort data = EMWS8.Ensmbl4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl4_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1709767    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709768    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL4_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709769    data EMWS8.Ensmbl4_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMINFO;
1709770    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1709771    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1709772    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL4_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709773    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1709774    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1709775    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1709776    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
 
 
NOTE: View EMWS8.ENSMBL4_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.04 seconds
 
NOTE: View EMWS8.ENSMBL4_VALIDATE.VIEW used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "20. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "17.33 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                20. April 2016
Time:                17.33 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0ITHSMG
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl4\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0ITHSMG new;
MPRINT(EM_DIAGRAM):   run;
1709800    data EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMOUTFIT;
1709801    set EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMOUTFIT;
1709802    length TargetLabel $200;
MPRINT(EM_DIAGRAM):   length TargetLabel $200;
1709803    label targetLabel = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel,
1709803  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label targetLabel = "Target Label";
1709804    if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TargetLabel = 'DepVar';
1709805    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL4_EMOUTFIT.
NOTE: The data set EMWS8.ENSMBL4_EMOUTFIT has 1 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709806    proc sort data=EMWS8.Ensmbl4_EMREPORTFIT nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl4_EMREPORTFIT nothreads;
1709807    by TARGET;
MPRINT(EM_DIAGRAM):   by TARGET;
1709808    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL4_EMREPORTFIT.
NOTE: The data set EMWS8.ENSMBL4_EMREPORTFIT has 9 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709809    %let _EMwarndup = 0;
1709810    %let _EMtargetdup =;
1709811    %let _EMASEtargetdup =;
1709812    data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
1709813    set EMWS8.Ensmbl4_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMOUTFIT;
1709814    if .<_ASE_<0.000001 then do;
MPRINT(EM_DIAGRAM):   if .<_ASE_<0.000001 then do;
1709815    call symput('_EMwarndup', '1');
MPRINT(EM_DIAGRAM):   call symput('_EMwarndup', '1');
1709816    call symput('_EMtargetdup', target);
MPRINT(EM_DIAGRAM):   call symput('_EMtargetdup', target);
1709817    call symput('_EMASEtargetdup', put(_ASE_, best.));
MPRINT(EM_DIAGRAM):   call symput('_EMASEtargetdup', put(_ASE_, best.));
1709818    end;
MPRINT(EM_DIAGRAM):   end;
1709819    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set EMWS8.ENSMBL4_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709820    proc sort data=EMWS8.Neural25_CMeta_TRAIN out=WORK.SUBSETINMETA;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Neural25_CMeta_TRAIN out=WORK.SUBSETINMETA;
1709821    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709822    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set EMWS8.NEURAL25_CMETA_TRAIN.
NOTE: The data set WORK.SUBSETINMETA has 23 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709823    proc sort data=EMWS8.Ensmbl4_VariableSet out=WORK.SUBSETVARSET(keep=NAME REPORT);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Ensmbl4_VariableSet out=WORK.SUBSETVARSET(keep=NAME
REPORT);
1709824    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709825    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS8.ENSMBL4_VARIABLESET.
NOTE: The data set WORK.SUBSETVARSET has 13 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709826    data WORK.ASSESS_META;
MPRINT(EM_DIAGRAM):   data WORK.ASSESS_META;
1709827    merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
MPRINT(EM_DIAGRAM):   merge WORK.SUBSETINMETA WORK.SUBSETVARSET;
1709828    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1709829    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 23 observations read from the data set WORK.SUBSETINMETA.
NOTE: There were 13 observations read from the data set WORK.SUBSETVARSET.
NOTE: The data set WORK.ASSESS_META has 23 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1709830    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1709831    set EMWS8.Ensmbl4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_CMeta_TRAIN;
1709832    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1709832  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1709833    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.ENSMBL4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1709834    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1709835    set EMWS8.Ensmbl4_TRAIN(keep=
1709836    F_DepVar
1709837    I_DepVar
1709838    P_DepVar0
1709839    P_DepVar1
1709840    R_DepVar0
1709841    R_DepVar1
1709842    U_DepVar
1709843    V_DepVar0
1709844    V_DepVar1
1709845    _WARN_
1709846    DepVar
1709847    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_TRAIN(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar V_DepVar0 V_DepVar1 _WARN_ DepVar );
1709848    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2374 observations read from the data set EMWS8.PART_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.VARSEL_TRAIN.
NOTE: View EMWS8.ENSMBL4_TRAIN.VIEW used (Total process time):
      real time           0.11 seconds
      cpu time            0.12 seconds
 
NOTE: There were 2374 observations read from the data set EMWS8.REG8_TRAIN.
NOTE: There were 2374 observations read from the data set EMWS8.ENSMBL4_TRAIN.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 2374 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.12 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl4_17ZHHND nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4_17ZHHND;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_17ZHHND(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "TRAIN" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_17ZHHND;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_17ZHHND;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural25_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.151221567 _NEVENTS 359
_NNONEVENTS 2015 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 2374));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "TRAIN" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0019792629 OVLMAX 0.9945772285 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 2374 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 2374)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 2374 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 2374;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "TRAIN";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1714114    data EM_temp_assessMeta;
MPRINT(EM_DIAGRAM):    data EM_temp_assessMeta;
1714115    set EMWS8.Ensmbl4_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_CMeta_TRAIN;
1714116    where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION', 'ASSESS', 'COST')
1714116  ! ;
MPRINT(EM_DIAGRAM):   where role in('DECISION', 'PREDICT', 'RESIDUAL', 'CLASSIFICATION',
'ASSESS', 'COST');
1714117    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set EMWS8.ENSMBL4_CMETA_TRAIN.
      WHERE role in ('ASSESS', 'CLASSIFICATION', 'COST', 'DECISION', 'PREDICT', 'RESIDUAL');
NOTE: The data set WORK.EM_TEMP_ASSESSMETA has 10 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1714118    data EM_temp_assessdata;
MPRINT(EM_DIAGRAM):    data EM_temp_assessdata;
1714119    set EMWS8.Ensmbl4_VALIDATE(keep=
1714120    F_DepVar
1714121    I_DepVar
1714122    P_DepVar0
1714123    P_DepVar1
1714124    R_DepVar0
1714125    R_DepVar1
1714126    U_DepVar
1714127    V_DepVar0
1714128    V_DepVar1
1714129    _WARN_
1714130    DepVar
1714131    );
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_VALIDATE(keep= F_DepVar I_DepVar P_DepVar0 P_DepVar1
R_DepVar0 R_DepVar1 U_DepVar V_DepVar0 V_DepVar1 _WARN_ DepVar );
1714132    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1018 observations read from the data set EMWS8.PART_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.VARSEL_VALIDATE.
NOTE: View EMWS8.ENSMBL4_VALIDATE.VIEW used (Total process time):
      real time           0.08 seconds
      cpu time            0.07 seconds
 
NOTE: There were 1018 observations read from the data set EMWS8.REG8_VALIDATE.
NOTE: There were 1018 observations read from the data set EMWS8.ENSMBL4_VALIDATE.
NOTE: The data set WORK.EM_TEMP_ASSESSDATA has 1018 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):    proc freq data=EM_temp_assessdata noprint;
MPRINT(EM_DIAGRAM):   table I_DepVar*F_DepVar / out = WORK.Ensmbl4_321SYD1 nocol norow outpct;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.Ensmbl4_321SYD1;
MPRINT(EM_DIAGRAM):   length _TYPE_ $10 DATAROLE TARGET $32 TARGETLABEL $200 FROM INTO $32
CORRECTTEXT $40 ;
MPRINT(EM_DIAGRAM):   label _TYPE_ = "Outcome Type";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role";
MPRINT(EM_DIAGRAM):   label TARGET = "Target Variable";
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
MPRINT(EM_DIAGRAM):   label CORRECTTEXT = "Correct Text";
MPRINT(EM_DIAGRAM):   label CORRECT = "Correct";
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_321SYD1(rename=(F_DepVar=FROM I_DepVar=INTO));
MPRINT(EM_DIAGRAM):   retain _TYPE_ 'PREDICTION' DATAROLE "VALIDATE" TARGET "DepVar";
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   if FROM eq INTO then do;
MPRINT(EM_DIAGRAM):   CORRECT = 0;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Correct";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else do;
MPRINT(EM_DIAGRAM):   CORRECT = 1;
MPRINT(EM_DIAGRAM):   CORRECTTEXT="Incorrect";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMCLASSIFICATION;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMCLASSIFICATION WORK.Ensmbl4_321SYD1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   set WORK.Ensmbl4_321SYD1;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK.MISCREPORT(drop=INTO FROM _TYPE_);
MPRINT(EM_DIAGRAM):   set WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   length MISC $12;
MPRINT(EM_DIAGRAM):   if FROM='1' and INTO='1' then MISC='TRUEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM='1' and INTO ne '1' then MISC='FALSENEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne '1' and INTO='1' then MISC='FALSEEVENT';
MPRINT(EM_DIAGRAM):   else if FROM ne'1' and INTO ne '1' then MISC='TRUENEVENT';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.MISCREPORT nothreads;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc summary data=WORK.MISCREPORT NWAY;
MPRINT(EM_DIAGRAM):   output out=WORK.MISCCOUNT(drop=_FREQ_ _TYPE_) SUM=COUNT;
MPRINT(EM_DIAGRAM):   CLASS MISC;
MPRINT(EM_DIAGRAM):   VAR COUNT;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc transpose data=WORK.MISCCOUNT out=WORK.MISCREPORT(drop=_NAME_
_LABEL_);
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET;
MPRINT(EM_DIAGRAM):   ID MISC;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMEVENTREPORT WORK.MISCREPORT;
MPRINT(EM_DIAGRAM):   if upcase(TARGET) eq "DEPVAR" then TARGETLABEL = 'DepVar';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data ASSESS_REPORTMETA;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_VariableSet;
MPRINT(EM_DIAGRAM):   where REPORT='Y';
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename temp catalog 'sashelp.emassmt.em_assess.source';
MPRINT(EM_DIAGRAM):   filename temp;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural25_DepVar_DM;
MPRINT(EM_DIAGRAM):   where _TYPE_="TARGET";
MPRINT(EM_DIAGRAM):   call symput('ASSMT_EVENT', strip(event));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):
MPRINT(EM_ASSESS):   data _ea_tmpdata;
MPRINT(EM_ASSESS):   set EM_temp_assessdata;
MPRINT(EM_ASSESS):   _tmpfreqvar_=1;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_CHECKEMSETINIT):   DATA _NULL_;
MPRINT(EM_CHECKEMSETINIT):   EM_SETINIT = 'N';
MPRINT(EM_CHECKEMSETINIT):   IF SYSPROD('PRODNUM50') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM448') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM102') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   ELSE IF SYSPROD('PRODNUM103') THEN EM_SETINIT = 'Y';
MPRINT(EM_CHECKEMSETINIT):   CALL SYMPUT('EM_SETINIT', EM_SETINIT);
MPRINT(EM_CHECKEMSETINIT):   RUN;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Reading in reporting data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET ASSESS_REPORTMETA END = EOF;
MPRINT(EM_ASSESS):   IF TYPE = "C" OR UPCASE (LEVEL) IN ("NOMINAL", "BINARY" , "ORDINAL") THEN
DO;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMCTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTC" || LEFT (PUT (NUMCTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "C");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF UPCASE(NAME) NE UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   NUMNTOREPORT + 1;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("REPORTN" || LEFT (PUT (NUMNTOREPORT, 5.)), NAME);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("RPRT_TRGT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMNTOREPORT", NUMNTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMCTOREPORT", NUMCTOREPORT);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMTOREPORT", SUM (NUMNTOREPORT, NUMCTOREPORT));
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   PROC DMDB DATA = _ea_tmpdata VAROUT = VAROUT DMDBCAT = _D CLASSOUT =
_ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   CLASS F_DepVar ;
 
MPRINT(EM_ASSESS):   VAR P_DepVar1 _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_;
MPRINT(EM_ASSESS):   RUN ;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   PROC SORT DATA = _ASSMT_CLASSOUT;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _auxeventname (keep = __event__) ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ...FLAG0_1 = ..... TARGET IS 0, 1 & EVENT = 1;
 
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   length __event__ $ 32;
MPRINT(EM_ASSESS):   RETAIN FLAG0_1 1 NUM1 . NUM0 . __event__ "_missing_" ;
 
MPRINT(EM_ASSESS):   SET _ASSMT_CLASSOUT END = EOF;
MPRINT(EM_ASSESS):   BY NAME;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ....... LEVEL = BINARY OR NOMINAL OR ORDINAL;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   IF UPCASE(NAME) = UPCASE ("F_DepVar") THEN DO;
MPRINT(EM_ASSESS):   CUMFREQ + FREQUENCY;
MPRINT(EM_ASSESS):   IF LEVEL NE "." THEN DO;
MPRINT(EM_ASSESS):   N1 + 1;
MPRINT(EM_ASSESS):   IF (NRAW NE 0 AND NRAW NE 1) OR TYPE NE "N" OR "" > " " THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * ......................... IF EVENT NE BLANK;
MPRINT(EM_ASSESS):   * ....................LEVEL IS CHAR VAR ;
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   IF UPCASE("1") = UPCASE(LEVEL) THEN DO;
MPRINT(EM_ASSESS):   NUM1 = FREQUENCY;
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", CRAW );
MPRINT(EM_ASSESS):   __event__ = craw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   ELSE do;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("EVENTVALUERAW", NRAW );
MPRINT(EM_ASSESS):   __event__ = nraw;
MPRINT(EM_ASSESS):   end;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF LAST.NAME THEN DO;
 
MPRINT(EM_ASSESS):   * ;
MPRINT(EM_ASSESS):   * .............. IN NOMINAL CASE, NEED TO GROUP ALL '0' ;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   NUM0 = SUM (CUMFREQ, - NUM1);
MPRINT(EM_ASSESS):   IF NUM0 < 0 THEN NUM0 = 0;
MPRINT(EM_ASSESS):   IF NUM1 = . THEN NUM1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM0", NUM0 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUM1", NUM1);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM1", NUM1 / CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PNUM0", (CUMFREQ - NUM1) / CUMFREQ);
MPRINT(EM_ASSESS):   IF TYPE = "C" THEN DO;
MPRINT(EM_ASSESS):   FLAG0_1 = 0;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "C" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF TYPE = "N" THEN DO;
MPRINT(EM_ASSESS):   IF "" = " " THEN DO;
MPRINT(EM_ASSESS):   IF "1" NE "1" THEN FLAG0_1 = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("TARGETTYPE", "N" );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ................... IF TYPE = N;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("FLAG0_1", FLAG0_1 );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................IF LAST.NAME ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ...............IF LEVEL NE '.' ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * .............. IF NAME = TARGET;
MPRINT(EM_ASSESS):   ELSE IF "" > " " AND UPCASE(NAME) = UPCASE("") THEN DO;
MPRINT(EM_ASSESS):   NUMDECISIONS + 1;
MPRINT(EM_ASSESS):   LEVEL = TRANSLATE (LEVEL, "_", "'", "_", '"');
MPRINT(EM_ASSESS):   CALL SYMPUTX ("D_LABEL" || LEFT (PUT (NUMDECISIONS, 3.)), LEVEL );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   * ..................... ELSE IF UPCASE;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   output _auxeventname;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMOBS", CUMFREQ);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NUMDECISIONS", NUMDECISIONS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _NULL_;
MPRINT(EM_ASSESS):   SET VAROUT END = EOF;
MPRINT(EM_ASSESS):   IF UPCASE (NAME) = UPCASE ("P_DepVar1") THEN DO;
MPRINT(EM_ASSESS):   IF N = 0 THEN DO;
MPRINT(EM_ASSESS):   PUT //// "          Warning: All posterior probabilities are missing
values ";
MPRINT(EM_ASSESS):   PUT ///;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("ALLMISS", 1);
MPRINT(EM_ASSESS):   STOP;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("ALLMISS", 0);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB", MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB", MAX);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("DIFF", MAX - MIN);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("NMISSPROB", NMISS);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE IF UPCASE (NAME) = UPCASE ("_tmpfreqvar_") THEN DO;
MPRINT(EM_ASSESS):   AUXMIN = MIN - INT (MIN);
MPRINT(EM_ASSESS):   AUXMAX = MAX - INT (MAX);
MPRINT(EM_ASSESS):   IF AUXMIN > 0 OR AUXMAX > 0 THEN CALL SYMPUTX ("USEWEIGHT", "Y");
MPRINT(EM_ASSESS):   ELSE CALL SYMPUTX ("USEWEIGHT", "N");
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   DATA _ANY0;
MPRINT(EM_ASSESS):   SET _ea_tmpdata (KEEP = F_DepVar P_DepVar1 _tmpfreqvar_ );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................... No Formats;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF LEFT ( F_DepVar ) = "1" THEN NTARGET = 1;
MPRINT(EM_ASSESS):   ELSE NTARGET = 0;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Before proc summary of binary case;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC SUMMARY DATA = _ANY0 (KEEP = P_DepVar1 NTARGET _tmpfreqvar_ WHERE =
(NTARGET > . )) NWAY MISSING;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   CLASS P_DepVar1 ;
MPRINT(EM_ASSESS):   VAR NTARGET ;
MPRINT(EM_ASSESS):   FREQ _tmpfreqvar_ ;
MPRINT(EM_ASSESS):   OUTPUT OUT = ANYSUM (DROP = _TYPE_) MEAN = _MEANTARGET _MEANFREQVAR ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... Main Data Set Processing, Binary case;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK (KEEP = BASECAPC BASECAP __EVENT__ BASEEVENTS
BASEGAIN BASELIFT BASERESP BASERESPC BESTCAP BESTCAPC BESTGAIN BESTLIFT BESTLIFTC
BESTNUMEVENTS BESTRESP BESTRESPC BIN CBASELIFT C_LIFT C_P_CAPT_RESP C_P_RESP GAIN LIFT MAXPROB
MINPROB MNPROB NUMNONRESP NUMOBS NUMRESP PERCENTILE P_CAPT_RESP P_RESP ) WORK._TEMPSCOREDIST
(KEEP = BIN LOWERPROB UPPERPROB EVENTVALUE SCR_NUMEVENTS MODELSCORE SCR_NUMNONEVENTS RANGE
NUMOBSINGROUP PERCOBSINGROUP C_PERCOBSINGROUP SCR_P_EVENTS SCR_CP_EVENTS SCR_P_NONEVENTS
SCR_CP_NONEVENTS SCR_MNPROB SCR_MINPROB SCR_MAXPROB ) ;
 
MPRINT(EM_ASSESS):   SET ANYSUM END = EOF;
 
MPRINT(EM_ASSESS):   IF _N_ = 1 THEN SET _AUXEVENTNAME;
 
MPRINT(EM_ASSESS):   RETAIN MINPROB1 - MINPROB20 1 MAXPROB1 - MAXPROB20 0 MNPROB1 - MNPROB20 0
NUMOBS1 - NUMOBS20 0 NUMRESP1 - NUMRESP20 0 TRUEPOS1 - TRUEPOS100 0 TRUENEG1 - TRUENEG100 0
FALSEPOS1 - FALSEPOS100 0 FALSENEG1 - FALSENEG100 0 EVENTS1 - EVENTS100 NONEVENTS1 -
NONEVENTS100 0 FIRSTIN1 - FIRSTIN100 . LASTIN1 - LASTIN100 . RESPRATE 0.152259332 _NEVENTS 155
_NNONEVENTS 863 TARGET "NTARGET" ;
MPRINT(EM_ASSESS):   ARRAY MINPROBS (20) MINPROB1 - MINPROB20;
MPRINT(EM_ASSESS):   ARRAY MAXPROBS (20) MAXPROB1 - MAXPROB20;
MPRINT(EM_ASSESS):   ARRAY MNPROBS (20) MNPROB1 - MNPROB20;
MPRINT(EM_ASSESS):   ARRAY NUMOBSS (20) NUMOBS1 - NUMOBS20;
MPRINT(EM_ASSESS):   ARRAY NUMRESPS (20) NUMRESP1 - NUMRESP20;
MPRINT(EM_ASSESS):   ARRAY TRUEPOSX (100) TRUEPOS1 - TRUEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSEPOSX (100) FALSEPOS1 - FALSEPOS100;
MPRINT(EM_ASSESS):   ARRAY FALSENEGX (100) FALSENEG1 - FALSENEG100;
MPRINT(EM_ASSESS):   ARRAY TRUENEGX (100) TRUENEG1 - TRUENEG100;
MPRINT(EM_ASSESS):   ARRAY _EVENTS (100) EVENTS1 - EVENTS100;
MPRINT(EM_ASSESS):   ARRAY NONEVENTS (100) NONEVENTS1 - NONEVENTS100;
MPRINT(EM_ASSESS):   ARRAY FIRSTIN (100) FIRSTIN1 - FIRSTIN100;
MPRINT(EM_ASSESS):   ARRAY LASTIN (100) LASTIN1 - LASTIN100;
MPRINT(EM_ASSESS):   RETAIN SCR_MNPROB1 - SCR_MNPROB100 0 SCR_MINPROB1 - SCR_MINPROB100 1
SCR_MAXPROB1 - SCR_MAXPROB100 0;
MPRINT(EM_ASSESS):   ARRAY SCR_MNPROBS (100) SCR_MNPROB1 - SCR_MNPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MINPROBS (100) SCR_MINPROB1 - SCR_MINPROB100;
MPRINT(EM_ASSESS):   ARRAY SCR_MAXPROBS (100) SCR_MAXPROB1 - SCR_MAXPROB100;
MPRINT(EM_ASSESS):   DROP SCR_MINPROB1 - SCR_MINPROB100 SCR_MAXPROB1 - SCR_MAXPROB100
SCR_MNPROB1 - SCR_MNPROB100 ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...... Area For 8 Financials ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF _MEANTARGET = . THEN _MEANTARGET = RESPRATE;
MPRINT(EM_ASSESS):   DROP N1 _K SUMWEIGHTS ;
MPRINT(EM_ASSESS):   SUMWEIGHTS = 1;
 
MPRINT(EM_ASSESS):   DO _K = 1 TO CEIL (_FREQ_);
MPRINT(EM_ASSESS):   IF _K = CEIL (_FREQ_) THEN DO;
MPRINT(EM_ASSESS):   IF _FREQ_ < CEIL (_FREQ_) THEN _WEIGHT = _FREQ_ - FLOOR (_FREQ_);
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE _WEIGHT = 1;
MPRINT(EM_ASSESS):   N1 + _WEIGHT;
MPRINT(EM_ASSESS):   NTARGET = _MEANTARGET ;
MPRINT(EM_ASSESS):   DECILE = MIN (20, CEIL (N1 * 20 / 1018));
MPRINT(EM_ASSESS):   MINPROBS ( DECILE) = MIN (MINPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MAXPROBS ( DECILE) = MAX (MAXPROBS ( DECILE), P_DepVar1 );
MPRINT(EM_ASSESS):   MNPROBS ( DECILE) = SUM (MNPROBS ( DECILE), P_DepVar1 * _WEIGHT);
MPRINT(EM_ASSESS):   NUMOBSS ( DECILE) = NUMOBSS ( DECILE) + _WEIGHT;
MPRINT(EM_ASSESS):   NUMRESPS ( DECILE) = NUMRESPS ( DECILE) + _MEANTARGET * _WEIGHT;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ outside of do loop, Area for final ROC;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   RANKDELTA = (ROUND ( _FREQ_ ) + 1) / 2;
MPRINT(EM_ASSESS):   RANK = UNTIEDRANK + RANKDELTA;
MPRINT(EM_ASSESS):   DROP RANK ;
MPRINT(EM_ASSESS):   SUMRANK1 + RANK * ROUND (_MEANTARGET * _FREQ_, .0000001);
MPRINT(EM_ASSESS):   UNTIEDRANK + ROUND (_FREQ_, .00000001);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ............ Area For ROC Curve;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   DO _K = 1 TO 100;
MPRINT(EM_ASSESS):   IF P_DepVar1 * 100 >= _K THEN DO;
MPRINT(EM_ASSESS):   TRUEPOSX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   FALSEPOSX ( _K ) + _FREQ_ * (1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   TRUENEGX ( _K ) + _FREQ_ * ( 1 - _MEANTARGET) ;
MPRINT(EM_ASSESS):   FALSENEGX ( _K ) + _FREQ_ * _MEANTARGET ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   SLOT = MIN (MAX (CEIL (P_DepVar1 * 100), 1), 100) ;
MPRINT(EM_ASSESS):   DROP SLOT;
MPRINT(EM_ASSESS):   FIRSTIN ( SLOT ) = MIN ( FIRSTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   LASTIN ( SLOT ) = MAX ( LASTIN ( SLOT ), P_DepVar1);
MPRINT(EM_ASSESS):   _EVENTS ( SLOT) = _EVENTS ( SLOT) + _FREQ_ * _MEANTARGET;
MPRINT(EM_ASSESS):   NONEVENTS ( SLOT) = NONEVENTS ( SLOT) + _FREQ_ * (1 - _MEANTARGET);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ START OF OUTDIST IN BINARY CASE MAIN DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   SCR_MNPROBS ( SLOT ) = SUM (SCR_MNPROBS (SLOT), P_DepVar1 * _FREQ_ );
MPRINT(EM_ASSESS):   SCR_MINPROBS ( SLOT ) = MIN (SCR_MINPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   SCR_MAXPROBS ( SLOT ) = MAX (SCR_MAXPROBS (SLOT), P_DepVar1 );
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ End of Outdist in Binary case main DATA STEP ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   IF EOF THEN DO;
MPRINT(EM_ASSESS):   PUT //;
MPRINT(EM_ASSESS):   DO K = 1 TO 20;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LENGTH EVENTVALUE $ 32;
MPRINT(EM_ASSESS):   RETAIN EVENTVALUE "1" ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ......... Start of EOF area of BINARY processing of main data set ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SUMRANK1", SUMRANK1);
MPRINT(EM_ASSESS):   LENGTH DATAROLE $ 10;
MPRINT(EM_ASSESS):   RETAIN DATAROLE "VALIDATE" ;
MPRINT(EM_ASSESS):   RETAIN OVLMIN 0.0019934822 OVLMAX 0.9935139475 ;
MPRINT(EM_ASSESS):   DROP OVLMIN OVLMAX ;
MPRINT(EM_ASSESS):   C_NUMOBS = 0;
MPRINT(EM_ASSESS):   C_NUM_RESP = 0;
MPRINT(EM_ASSESS):   C_NUM_NONRESP = 0;
MPRINT(EM_ASSESS):   C_P_RESP = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = 0;
MPRINT(EM_ASSESS):   PREVIOUSPROFIT = 0;
MPRINT(EM_ASSESS):   MAXPROFIT = 0;
MPRINT(EM_ASSESS):   _KS_BIN_ = 0;
MPRINT(EM_ASSESS):   DROP _KS_BIN_;
MPRINT(EM_ASSESS):   AVGNUMRESP = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASERESP = 100 * RESPRATE;
MPRINT(EM_ASSESS):   BASERESPC = BASERESP;
MPRINT(EM_ASSESS):   BASECAP = 100 / 20;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................Start OF Gainschart = Outranks Area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = 0;
MPRINT(EM_ASSESS):   DO GROUP = 20 TO 1 BY -1;
 
MPRINT(EM_ASSESS):   BASECAPC + BASECAP;
MPRINT(EM_ASSESS):   PERCENTILE = GROUP * (100 / 20);
MPRINT(EM_ASSESS):   MINPROB = MINPROBS ( GROUP);
MPRINT(EM_ASSESS):   MAXPROB = MAXPROBS ( GROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MINPROB" || LEFT ( PUT (GROUP, 3.)), MINPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROB" || LEFT ( PUT (GROUP, 3.)), MAXPROB);
MPRINT(EM_ASSESS):   NUMOBS = NUMOBSS ( GROUP);
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN MNPROB = MNPROBS ( GROUP) / NUMOBS;
MPRINT(EM_ASSESS):   ELSE MNPROB = .;
MPRINT(EM_ASSESS):   C_NUMOBS = SUM (NUMOBS, C_NUMOBS);
MPRINT(EM_ASSESS):   NUMRESP = NUMRESPS ( GROUP);
MPRINT(EM_ASSESS):   NUMNONRESP = NUMOBS - NUMRESP;
MPRINT(EM_ASSESS):   C_AVGNUM_RESP + AVGNUMRESP;
MPRINT(EM_ASSESS):   IF C_NUMOBS <= _NEVENTS THEN DO;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   BESTCAPC = C_NUMOBS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BASEEVENTS = _NEVENTS / 20;
MPRINT(EM_ASSESS):   BASENONEVENTS = 0;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   FLAG + 1;
MPRINT(EM_ASSESS):   DROP FLAG;
MPRINT(EM_ASSESS):   BESTNUMEVENTS = _NEVENTS - C_NUMOBS + NUMOBS;
MPRINT(EM_ASSESS):   IF FLAG > 1 THEN BESTNUMEVENTS = 0;
MPRINT(EM_ASSESS):   BESTCAPC = 100;
MPRINT(EM_ASSESS):   IF C_NUMOBS - _NEVENTS <= NUMOBS THEN DO;
MPRINT(EM_ASSESS):   BASEEVENTS = C_NUMOBS - _NEVENTS;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS - C_NUMOBS + _NEVENTS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BASEEVENTS = 0;
MPRINT(EM_ASSESS):   BASENONEVENTS = NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   BESTCAP = BESTNUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   BESTLIFT = BESTNUMEVENTS / AVGNUMRESP;
MPRINT(EM_ASSESS):   C_BESTNUMEVENTS + BESTNUMEVENTS;
MPRINT(EM_ASSESS):   DROP C_BESTNUMEVENTS;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN BESTLIFTC = C_BESTNUMEVENTS / (_NEVENTS / 1018 *
C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE BESTLIFTC = .;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESP = BESTNUMEVENTS * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_RESP = NUMRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   P_NONRESP = NUMNONRESP * 100 / NUMOBS;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESP = .;
MPRINT(EM_ASSESS):   P_RESP = .;
MPRINT(EM_ASSESS):   P_NONRESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BESTRESPC = C_BESTNUMEVENTS * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   BESTGAIN = MAX (0, ((C_BESTNUMEVENTS / C_NUMOBS ) / ( AVGNUMRESP /
NUMOBS) - 1) * 100);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   BESTRESPC = .;
MPRINT(EM_ASSESS):   BESTGAIN = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF NUMNONRESP > 0 THEN ODDS = NUMRESP / NUMNONRESP;
MPRINT(EM_ASSESS):   ELSE ODDS = .;
MPRINT(EM_ASSESS):   C_NUM_RESP = SUM (C_NUM_RESP , NUMRESP );
MPRINT(EM_ASSESS):   C_NUM_NONRESP = SUM (C_NUM_NONRESP, NUMNONRESP );
MPRINT(EM_ASSESS):   IF C_NUM_NONRESP > 0 THEN C_ODDS = C_NUM_RESP / C_NUM_NONRESP;
MPRINT(EM_ASSESS):   ELSE C_ODDS = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   C_P_RESP = C_NUM_RESP * 100 / C_NUMOBS;
MPRINT(EM_ASSESS):   GAIN = ABS(100 * (((C_NUM_RESP / C_NUMOBS ) / (_NEVENTS / 1018)) - 1));
MPRINT(EM_ASSESS):   BASEGAIN = 100 * (( (C_AVGNUM_RESP / C_NUMOBS) / ( AVGNUMRESP / NUMOBS))
- 1);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE DO;
MPRINT(EM_ASSESS):   GAIN = .;
MPRINT(EM_ASSESS):   BASEGAIN = .;
MPRINT(EM_ASSESS):   C_P_RESP = .;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   IF BASEGAIN <= 0 THEN BASEGAIN = 0;
MPRINT(EM_ASSESS):   P_CAPT_RESP = NUMRESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   P_CAPT_NONRESP = NUMNONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   C_P_CAPT_RESP = C_NUM_RESP * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   C_P_CAPT_NONRESP = C_NUM_NONRESP * 100 / ( 1018 - _NEVENTS);
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Area For Binned KS in Outranks area;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   _DIFFERENCE = C_P_CAPT_RESP - C_P_CAPT_NONRESP ;
MPRINT(EM_ASSESS):   IF _KS_BIN_ < _DIFFERENCE THEN DO;
MPRINT(EM_ASSESS):   _KS_BIN_ = _DIFFERENCE;
MPRINT(EM_ASSESS):   _KS_BIN_PROB = MINPROB + (MAXPROB - MINPROB) / 2 ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LIFT = P_RESP * .01 / RESPRATE ;
MPRINT(EM_ASSESS):   C_LIFT = C_P_RESP * .01 / RESPRATE;
MPRINT(EM_ASSESS):   IF NUMOBS > 0 THEN DO;
MPRINT(EM_ASSESS):   BASELIFT = AVGNUMRESP / ( RESPRATE * NUMOBS );
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   ELSE BASELIFT = .;
MPRINT(EM_ASSESS):   IF C_NUMOBS > 0 THEN CBASELIFT = C_AVGNUM_RESP / (RESPRATE * C_NUMOBS);
MPRINT(EM_ASSESS):   ELSE CBASELIFT = .;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........ WITHIN DO LOOP FOR OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 + 1 - GROUP;
MPRINT(EM_ASSESS):   PERCENTILE = BIN * (100 / 20);
MPRINT(EM_ASSESS):   B_C_P_RESP = PERCENTILE;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPRANK ;
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................ END OF GAINSCHART = OUTRANKS AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFITGROUP" , MAXPROFITGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXPROFIT" , MAXPROFIT );
MPRINT(EM_ASSESS):   KS_ABSDIFF = 0 ;
MPRINT(EM_ASSESS):   MINPRECTPR = 9999;
MPRINT(EM_ASSESS):   Y0 = 1 - RESPRATE;
MPRINT(EM_ASSESS):   Y1 = RESPRATE;
MPRINT(EM_ASSESS):   MAXMUTUAL = 0;
MPRINT(EM_ASSESS):   DROP MAXMUTUAL KSPROB Y0 Y1 KS_ABSDIFF MINPRECTPR;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .....................About to start Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........................... Finished Processing Outroc ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .............. Outdist ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   BIN = 20 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS96 - EVENTS100 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS96 - NONEVENTS100);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB96 -
SCR_MNPROB100) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB96 - SCR_MINPROB100) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB96 - SCR_MAXPROB100) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 20;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 19 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS91 - EVENTS95 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS91 - NONEVENTS95);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB91 -
SCR_MNPROB95) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB91 - SCR_MINPROB95) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB91 - SCR_MAXPROB95) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 19;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 18 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS86 - EVENTS90 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS86 - NONEVENTS90);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB86 -
SCR_MNPROB90) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB86 - SCR_MINPROB90) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB86 - SCR_MAXPROB90) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 18;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 17 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS81 - EVENTS85 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS81 - NONEVENTS85);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB81 -
SCR_MNPROB85) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB81 - SCR_MINPROB85) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB81 - SCR_MAXPROB85) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 17;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 16 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS76 - EVENTS80 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS76 - NONEVENTS80);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB76 -
SCR_MNPROB80) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB76 - SCR_MINPROB80) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB76 - SCR_MAXPROB80) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 16;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 15 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS71 - EVENTS75 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS71 - NONEVENTS75);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB71 -
SCR_MNPROB75) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB71 - SCR_MINPROB75) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB71 - SCR_MAXPROB75) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 15;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 14 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS66 - EVENTS70 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS66 - NONEVENTS70);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB66 -
SCR_MNPROB70) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB66 - SCR_MINPROB70) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB66 - SCR_MAXPROB70) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 14;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 13 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS61 - EVENTS65 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS61 - NONEVENTS65);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB61 -
SCR_MNPROB65) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB61 - SCR_MINPROB65) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB61 - SCR_MAXPROB65) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 13;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 12 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS56 - EVENTS60 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS56 - NONEVENTS60);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB56 -
SCR_MNPROB60) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB56 - SCR_MINPROB60) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB56 - SCR_MAXPROB60) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 12;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 11 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS51 - EVENTS55 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS51 - NONEVENTS55);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB51 -
SCR_MNPROB55) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB51 - SCR_MINPROB55) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB51 - SCR_MAXPROB55) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 11;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 10 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS46 - EVENTS50 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS46 - NONEVENTS50);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB46 -
SCR_MNPROB50) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB46 - SCR_MINPROB50) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB46 - SCR_MAXPROB50) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 10;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 9 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS41 - EVENTS45 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS41 - NONEVENTS45);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB41 -
SCR_MNPROB45) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB41 - SCR_MINPROB45) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB41 - SCR_MAXPROB45) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 9;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 8 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS36 - EVENTS40 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS36 - NONEVENTS40);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB36 -
SCR_MNPROB40) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB36 - SCR_MINPROB40) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB36 - SCR_MAXPROB40) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 8;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 7 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS31 - EVENTS35 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS31 - NONEVENTS35);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB31 -
SCR_MNPROB35) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB31 - SCR_MINPROB35) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB31 - SCR_MAXPROB35) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 7;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 6 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS26 - EVENTS30 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS26 - NONEVENTS30);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB26 -
SCR_MNPROB30) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB26 - SCR_MINPROB30) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB26 - SCR_MAXPROB30) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 6;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 5 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS21 - EVENTS25 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS21 - NONEVENTS25);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB21 -
SCR_MNPROB25) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB21 - SCR_MINPROB25) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB21 - SCR_MAXPROB25) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 5;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 4 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS16 - EVENTS20 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS16 - NONEVENTS20);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB16 -
SCR_MNPROB20) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB16 - SCR_MINPROB20) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB16 - SCR_MAXPROB20) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 4;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 3 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS11 - EVENTS15 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS11 - NONEVENTS15);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB11 -
SCR_MNPROB15) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB11 - SCR_MINPROB15) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB11 - SCR_MAXPROB15) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 3;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 2 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS6 - EVENTS10 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS6 - NONEVENTS10);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB6 -
SCR_MNPROB10) / NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB6 - SCR_MINPROB10) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB6 - SCR_MAXPROB10) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 2;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   BIN = 1 ;
MPRINT(EM_ASSESS):   LOWERPROB = (BIN - 1) / 20;
MPRINT(EM_ASSESS):   UPPERPROB = LOWERPROB + (1 / 20);
MPRINT(EM_ASSESS):   MODELSCORE = LOWERPROB + (1 / 20) / 2;
MPRINT(EM_ASSESS):   RANGE = COMPRESS (PUT (LOWERPROB, 4.2) || "-" || PUT (UPPERPROB, 4.2));
MPRINT(EM_ASSESS):   SCR_NUMEVENTS = SUM ( OF EVENTS1 - EVENTS5 );
MPRINT(EM_ASSESS):   SCR_P_EVENTS = SCR_NUMEVENTS * 100 / _NEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_EVENTS = SUM (SCR_P_EVENTS, SCR_CP_EVENTS);
MPRINT(EM_ASSESS):   SCR_NUMNONEVENTS = SUM ( OF NONEVENTS1 - NONEVENTS5);
MPRINT(EM_ASSESS):   NUMOBSINGROUP = SUM (SCR_NUMEVENTS, SCR_NUMNONEVENTS);
MPRINT(EM_ASSESS):   IF NUMOBSINGROUP > 0 THEN SCR_MNPROB = SUM (OF SCR_MNPROB1 - SCR_MNPROB5)
/ NUMOBSINGROUP;
MPRINT(EM_ASSESS):   ELSE SCR_MNPROB = .;
MPRINT(EM_ASSESS):   SCR_MINPROB = MIN (OF SCR_MINPROB1 - SCR_MINPROB5) ;
MPRINT(EM_ASSESS):   SCR_MAXPROB = MAX (OF SCR_MAXPROB1 - SCR_MAXPROB5) ;
MPRINT(EM_ASSESS):   IF SCR_MINPROB = 1 THEN SCR_MINPROB = .;
MPRINT(EM_ASSESS):   IF SCR_MAXPROB = 0 THEN SCR_MAXPROB = .;
MPRINT(EM_ASSESS):   SCR_P_NONEVENTS = SCR_NUMNONEVENTS * 100 / _NNONEVENTS;
MPRINT(EM_ASSESS):   SCR_CP_NONEVENTS = SUM (SCR_P_NONEVENTS, SCR_CP_NONEVENTS);
MPRINT(EM_ASSESS):   PERCOBSINGROUP = NUMOBSINGROUP * 100 / 1018;
MPRINT(EM_ASSESS):   C_PERCOBSINGROUP = SUM (C_PERCOBSINGROUP, PERCOBSINGROUP);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MINPROB" || LEFT (PUT (BIN, 3.)), LOWERPROB);
MPRINT(EM_ASSESS):   CALL SYMPUTX ("SCR_MAXPROB" || LEFT (PUT (BIN, 3.)), UPPERPROB);
MPRINT(EM_ASSESS):   BIN = 20 + 1 - 1;
MPRINT(EM_ASSESS):   OUTPUT WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSPROB" , PUT (KSPROB, 5.3 ) );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_PROB" , _KS_BIN_PROB );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("_KS_BIN_" , _KS_BIN_ / 100 );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("KSDIFF" , KS_ABSDIFF );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("PRECTPR" , PRECTPR );
MPRINT(EM_ASSESS):   CALL SYMPUTX ("MAXMUTUALPROB" , MAXMUTUALPROB);
MPRINT(EM_ASSESS):   END;
MPRINT(EM_ASSESS):   LABEL __EVENT__ = "Event" DECILE = "Depth" BIN = "Bin" NUMOBS = "Number
of Observations" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * RUN for large data set;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST;
MPRINT(EM_ASSESS):   DELETE _AUXEVENTNAME;
MPRINT(EM_ASSESS):   QUIT;
 
MPRINT(EM_ASSESS):   OPTION NOCENTER LS = 95;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * Report Vars Area.;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start OF Outdist Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPSCOREDIST;
MPRINT(EM_ASSESS):   RENAME MODELSCORE = SCORE UPPERPROB = UPPOSTERIOR SCR_CP_EVENTS =
CUMULATIVEPERCENTAGEOFEVENTS SCR_CP_NONEVENTS = CUMULATIVEPERCENTAGEOFNONEVENTS EVENTVALUE =
EVENT LOWERPROB = LOWPOSTERIOR NUMOBSINGROUP = N PERCOBSINGROUP = PERCENTAGE SCR_MINPROB =
_MINP_ SCR_MAXPROB = _MAXP_ SCR_MNPROB = _MEANP_ RANGE = P_LABEL C_PERCOBSINGROUP =
CUMULATIVEPERCENTAGE SCR_NUMEVENTS = NUMBEROFEVENTS SCR_NUMNONEVENTS = NUMBEROFNONEVENTS
SCR_P_EVENTS = PERCENTAGEOFEVENTS SCR_P_NONEVENTS = PERCENTAGEOFNONEVENTS ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * .................... OUTDIST MODIFICATION LABEL AREA;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL BIN = "Bin" N = "Number of Observations" P_LABEL = "Posterior
Probability Range" EVENT = "Event" LOWPOSTERIOR = "Lower Bound Posterior Probability"
PERCENTAGEOFEVENTS = "Percentage of Events" CUMULATIVEPERCENTAGEOFNONEVENTS = "Cumulative
Percentage of Nonevents" CUMULATIVEPERCENTAGE = "Cumulative Percentage" PERCENTAGEOFEVENTS =
"Percentage of Events" PERCENTAGEOFNONEVENTS = "Percentage of Nonevents"
CUMULATIVEPERCENTAGEOFEVENTS = "Cumulative Percentage of Events" UPPOSTERIOR = "Upper Bound
Posterior Probability" NUMBEROFEVENTS = "Number of Events" PERCENTAGE = "Percentage"
NUMBEROFNONEVENTS = "Number of Nonevents" _MEANP_ = "Mean Posterior Probability" _MINP_ = "Min
Posterior Probability" _MAXP_ = "Max Posterior Probability" SCORE = "Model Score" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPSCOREDIST;
MPRINT(EM_ASSESS):   SET WORK._TEMPSCOREDIST (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ........... END OF OUTDIST MODIFICATION;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ...........Start of OUTRANKS Modification;
MPRINT(EM_ASSESS):   *;
 
MPRINT(EM_ASSESS):   PROC DATASETS NOLIST LIB = WORK;
MPRINT(EM_ASSESS):   MODIFY _TEMPRANK;
MPRINT(EM_ASSESS):   RENAME __EVENT__ = EVENT P_RESP = RESP C_P_CAPT_RESP = CAPC P_CAPT_RESP =
CAP NUMNONRESP = NUMNEVENT NUMRESP = NUMEVENT BASEEVENTS = BASENUMBEROFEVENTS BESTNUMEVENTS =
BESTNUMBEROFEVENTS MAXPROB = _MAXP_ MINPROB = _MINP_ CBASELIFT = BASELIFTC C_LIFT = LIFTC
MNPROB = _MEANP_ PERCENTILE = DECILE NUMOBS = N NUMEVENT = NUMBEROFEVENTS C_P_RESP = RESPC ;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   * ................. OUTRANKS;
MPRINT(EM_ASSESS):   *;
MPRINT(EM_ASSESS):   LABEL _MAXP_ = "Max Posterior Probability" _MINP_ = "Min Posterior
Probability" _MEANP_ = "Mean Posterior Probability" BASECAP = "Baseline % Captured Response"
BASECAPC = "Baseline Cumulative % Captured Response" BASENUMBEROFEVENTS = "Baseline Number of
Events" BASEGAIN = "Baseline Gain" BASELIFT = "Baseline Lift" BASELIFTC = "Baseline Cumulative
Lift" BASERESP = "Baseline % Response" BASERESPC = "Baseline Cumulative % Response" BASELIFTC
= "Baseline Cumulative Lift" BESTCAP = "Best % Captured Response" BESTCAPC = "Best Cumulative
% Captured Response" BESTGAIN = "Best Gain" BESTRESP = "Best % Response" BESTRESPC = "Best
Cumulative % Response" BESTLIFT = "Best Lift" BESTLIFTC = "Best Cumulative Lift"
BESTNUMBEROFEVENTS = "Best Number of Events" CAP = "% Captured Response" CAPC = "Cumulative %
Captured Response" DECILE = "Depth" GAIN = "Gain" LIFT = "Lift" LIFTC = "Cumulative Lift"
NUMNEVENT = "Number of Nonevents" N = "Number of Observations" EVENT = "Event" RESPC =
"Cumulative % Response" NUMBEROFEVENTS = "Number of Events" RESP = "% Response" ;
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   QUIT;
MPRINT(EM_ASSESS):   DATA WORK._TEMPRANK;
MPRINT(EM_ASSESS):   SET WORK._TEMPRANK (WHERE = (_MEANP_ > .));
MPRINT(EM_ASSESS):   RUN;
MPRINT(EM_ASSESS):   proc datasets lib=work nolist;
MPRINT(EM_ASSESS):   delete _ea_tmpdata;
MPRINT(EM_ASSESS):   run;
MPRINT(EM_ASSESS):   quit;
MPRINT(EM_ASSESS):  ;
MPRINT(EM_ASSESS):   OPTION ERRORS = 20;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):    data WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMRANK WORK._TEMPRANK;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32 TARGETLABEL $200 dataRole $20;
MPRINT(EM_DIAGRAM):   label TARGETLABEL = "Target Label";
MPRINT(EM_DIAGRAM):   set WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   retain target "DepVar";
MPRINT(EM_DIAGRAM):   retain TARGETLABEL 'DepVar';
MPRINT(EM_DIAGRAM):   retain dataRole "VALIDATE";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   length target $32;
MPRINT(EM_DIAGRAM):   length TARGETLABEL $200;
MPRINT(EM_DIAGRAM):   length dataRole $20;
MPRINT(EM_DIAGRAM):   length EVENT $32;
MPRINT(EM_DIAGRAM):   length P_LABEL $9;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMSCOREDIST WORK._TEMPSCOREDIST;
MPRINT(EM_DIAGRAM):   run;
1718407    %let _cn = %sysfunc(getoption(CENTER));
1718408    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1718409    proc print data=EMWS8.Ensmbl4_EMREPORTFIT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMREPORTFIT noobs label;
1718410    var STAT LABEL TRAIN
1718411    VALIDATE
1718412    ;
MPRINT(EM_DIAGRAM):   var STAT LABEL TRAIN VALIDATE ;
1718413    by TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by TARGET TARGETLABEL;
1718414    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1718415    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Fit Statistics";
MPRINT(EM_DIAGRAM):   run;
1718416    run;
 
NOTE: There were 9 observations read from the data set EMWS8.ENSMBL4_EMREPORTFIT.
NOTE: The PROCEDURE PRINT printed page 1834.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1718417    title10;
MPRINT(EM_DIAGRAM):   title10;
1718418    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1718419    proc sort data=EMWS8.Ensmbl4_EMCLASSIFICATION nothreads;
MPRINT(EM_DIAGRAM):    proc sort data=EMWS8.Ensmbl4_EMCLASSIFICATION nothreads;
1718420    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1718421    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL4_EMCLASSIFICATION.
NOTE: The data set EMWS8.ENSMBL4_EMCLASSIFICATION has 8 observations and 12 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1718422    %let _cn = %sysfunc(getoption(CENTER));
1718423    options nocenter;
MPRINT(EM_DIAGRAM):   options nocenter;
1718424    proc print data=EMWS8.Ensmbl4_EMCLASSIFICATION noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMCLASSIFICATION noobs label;
1718425    var from into pct_row pct_col count percent
1718426    ;
MPRINT(EM_DIAGRAM):   var from into pct_row pct_col count percent ;
1718427    by DATAROLE TARGET TARGETLABEL;
MPRINT(EM_DIAGRAM):   by DATAROLE TARGET TARGETLABEL;
1718428    label FROM = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,     NOQUOTE))";
MPRINT(EM_DIAGRAM):   label FROM = "Target";
1718429    label INTO = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcome_vlabel ,    NOQUOTE))";
MPRINT(EM_DIAGRAM):   label INTO = "Outcome";
1718430    label PCT_ROW = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetpct_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_ROW = "Target Percentage";
1718431    label PCT_COL = "%sysfunc(sasmsg(sashelp.dmine, rpt_outcomepct_vlabel , NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PCT_COL = "Outcome Percentage";
1718432    label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel ,      NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Frequency Count";
1718433    label PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_totalpct_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label PERCENT = "Total Percentage";
1718434    where _TYPE_='PREDICTION';
MPRINT(EM_DIAGRAM):   where _TYPE_='PREDICTION';
1718435    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1718436    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Classification Table";
MPRINT(EM_DIAGRAM):   run;
1718437    run;
 
NOTE: There were 8 observations read from the data set EMWS8.ENSMBL4_EMCLASSIFICATION.
      WHERE _TYPE_='PREDICTION';
NOTE: The PROCEDURE PRINT printed page 1835.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1718438    title9;
MPRINT(EM_DIAGRAM):   title9;
1718439    title10;
MPRINT(EM_DIAGRAM):   title10;
1718440    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1718441    %let _cn = %sysfunc(getoption(CENTER));
1718442    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1718443    data EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl4_EMEVENTREPORT;
1718444    length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT FALSEEVENT
1718444  ! TRUEEVENT 8;
MPRINT(EM_DIAGRAM):   length DATAROLE TARGET $32 TARGETLABEL $200 FALSENEVENT TRUENEVENT
FALSEEVENT TRUEEVENT 8;
1718445    label DATAROLE = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1718445  !  TARGET = "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel ,      NOQUOTE))"
1718445  ! TARGETLABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_targetlabel_vlabel, NOQUOTE))"
1718445  ! FALSEEVENT
1718446    = "%sysfunc(sasmsg(sashelp.dmine, rpt_falseevent_vlabel ,  NOQUOTE))" FALSENEVENT =
1718446  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_falsenevent_vlabel , NOQUOTE))" TRUEEVENT =
1718446  ! "%sysfunc(sasmsg(sashelp.dmine, rpt_trueevent_vlabel ,   NOQUOTE))" TRUENEVENT =
1718447       "%sysfunc(sasmsg(sashelp.dmine, rpt_truenevent_vlabel ,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label DATAROLE = "Data Role" TARGET = "Target" TARGETLABEL = "Target
Label" FALSEEVENT = "False Positive" FALSENEVENT = "False Negative" TRUEEVENT = "True
Positive" TRUENEVENT = "True Negative";
1718448    FALSEEVENT=0;
MPRINT(EM_DIAGRAM):   FALSEEVENT=0;
1718449    FALSENEVENT=0;
MPRINT(EM_DIAGRAM):   FALSENEVENT=0;
1718450    TRUEEVENT=0;
MPRINT(EM_DIAGRAM):   TRUEEVENT=0;
1718451    TRUENEVENT=0;
MPRINT(EM_DIAGRAM):   TRUENEVENT=0;
1718452    set EMWS8.Ensmbl4_EMEVENTREPORT;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl4_EMEVENTREPORT;
1718453    run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL4_EMEVENTREPORT.
NOTE: The data set EMWS8.ENSMBL4_EMEVENTREPORT has 2 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
 
 
1718454    proc print data=EMWS8.Ensmbl4_EMEVENTREPORT noobs label;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMEVENTREPORT noobs label;
1718455    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1718456    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_eventtable_title    , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Event Classification Table";
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
MPRINT(EM_DIAGRAM):   run;
1718457    by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL;
1718458    run;
 
NOTE: There were 2 observations read from the data set EMWS8.ENSMBL4_EMEVENTREPORT.
NOTE: The PROCEDURE PRINT printed page 1836.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1718459    title10;
MPRINT(EM_DIAGRAM):   title10;
1718460    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1718461    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1718462    modify Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   modify Ensmbl4_EMRANK;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1718463    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,   NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1718464    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1718464  ! ;
MPRINT(EM_DIAGRAM):   run;
1718465    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL4_EMRANK.DATA.
1718466    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.09 seconds
      cpu time            0.10 seconds
 
 
1718467    %let _cn = %sysfunc(getoption(CENTER));
1718468    options nocenter;
MPRINT(EM_DIAGRAM):    options nocenter;
1718469    proc print data=EMWS8.Ensmbl4_EMRANK label noobs;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMRANK label noobs;
1718470    var
1718471    decile gain lift liftc resp respc N _meanP_;
MPRINT(EM_DIAGRAM):   var decile gain lift liftc resp respc N _meanP_;
1718472    by
1718473    notsorted DATAROLE
1718474    notsorted TARGET
1718475    notsorted TARGETLABEL
1718476    ;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
1718477    title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
1718478    title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoreranking_title , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Rankings";
MPRINT(EM_DIAGRAM):   run;
1718479    run;
 
NOTE: There were 40 observations read from the data set EMWS8.ENSMBL4_EMRANK.
NOTE: The PROCEDURE PRINT printed page 1837.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
1718480    title10;
MPRINT(EM_DIAGRAM):   title10;
1718481    options &_cn;
MPRINT(EM_DIAGRAM):   options NOCENTER;
1718482    proc datasets library=EMWS8 nolist;
MPRINT(EM_DIAGRAM):    proc datasets library=EMWS8 nolist;
1718483    modify Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   modify Ensmbl4_EMSCOREDIST;
MPRINT(EM_DIAGRAM):   label target = "Target Variable";
1718484    label target = "%sysfunc(sasmsg(sashelp.dmine, rpt_targetvar_vlabel ,
1718484  ! NOQUOTE))";
MPRINT(EM_DIAGRAM):   label datarole = "Data Role";
1718485    label datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_datarole_vlabel ,    NOQUOTE))"
1718485  ! ;
MPRINT(EM_DIAGRAM):   run;
1718486    run;
 
NOTE: MODIFY was successful for EMWS8.ENSMBL4_EMSCOREDIST.DATA.
1718487    quit;
MPRINT(EM_DIAGRAM):   quit;
 
NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):    options nocenter;
MPRINT(EM_DIAGRAM):   proc print data=EMWS8.Ensmbl4_EMSCOREDIST label noobs;
MPRINT(EM_DIAGRAM):   var p_label numberOfEvents numberOfNonEvents _meanp_ percentage;
MPRINT(EM_DIAGRAM):   by notsorted DATAROLE notsorted TARGET notsorted TARGETLABEL ;
MPRINT(EM_DIAGRAM):   where TARGET in( "DepVar" );
MPRINT(EM_DIAGRAM):   title9 ' ';
MPRINT(EM_DIAGRAM):   title10 "Assessment Score Distribution";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):   options NOCENTER;
MPRINT(EM_DIAGRAM):   proc printto;
MPRINT(EM_DIAGRAM):   run;
