MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "21. April 2016" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "19.02 Uhr" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                21. April 2016
Time:                19.02 Uhr
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0AG_G04 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0AG_G04 new;
MPRINT(EM_DIAGRAM):   run;
1984812    filename emflow
1984812  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring NEURAL35_TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984813    *------------------------------------------------------------*;
1984814    * Ensmbl10: Scoring NEURAL35_TRAIN data;
1984815    *------------------------------------------------------------*;
1984816    data EMWS8.Ensmbl10_TRAIN
1984817    / view=EMWS8.Ensmbl10_TRAIN
1984818    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_TRAIN / view=EMWS8.Ensmbl10_TRAIN ;
1984819    set EMWS8.Neural35_TRAIN
1984820    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_TRAIN ;
1984821    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas.
1984822   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984823   +* Ensmbl10: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Combine model for DepVar;
1984824   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984825   +* Ensmbl10: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 1 of 3;
1984826   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984827   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984828   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1984829   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1984830   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1984831   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984832   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984833   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1984834   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1984835   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1984836   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984837   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984838   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1984839   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1984840   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1984841   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984842   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984843   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1984844   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1984845   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1984846   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984847   +
1984848   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1984849   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1984849  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1984850   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1984851   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1984852   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1984853   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1984854   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1984855   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984856   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1984857   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1984858   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1984859   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984860   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984861   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1984862   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984863   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1984864   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1984865   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1984866   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984867   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1984868   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1984869   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1984870   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984871   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984872   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1984873   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1984874   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1984875   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984876   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984877   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1984878   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1984879   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1984880   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1984881   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1984882   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1984883   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1984884   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1984885   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1984886   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1984887   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1984888   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1984889   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1984890   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1984891   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1984892   +LENGTH _WARN_ $4
1984893   +      F_DepVar  $ 12
1984894   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1984895   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1984896   +
1984897   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1984898   +
1984899   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1984900   +
1984901   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1984902   +
1984903   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1984904   +
1984905   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1984906   +
1984907   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1984908   +
1984909   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1984910   +
1984911   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1984912   +
1984913   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1984914   +
1984915   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1984916   +
1984917   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1984918   +
1984919   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1984920   +
1984921   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1984922   +
1984923   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1984924   +
1984925   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1984926   +
1984927   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1984928   +
1984929   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1984930   +
1984931   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1984932   +
1984933   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1984934   +
1984935   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1984936   +
1984937   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1984938   +
1984939   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1984940   +
1984941   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1984942   +
1984943   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1984944   +
1984945   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1984946   +
1984947   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1984948   +
1984949   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1984950   +
1984951   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1984952   +
1984953   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1984954   +
1984955   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1984956   +
1984957   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1984958   +
1984959   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1984960   +
1984961   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1984962   +
1984963   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1984964   +
1984965   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1984966   +
1984967   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1984968   +
1984969   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1984970   +
1984971   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1984972   +
1984973   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1984974   +
1984975   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1984976   +
1984977   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1984978   +
1984979   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1984980   +
1984981   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1984982   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1984983   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1984984   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1984985   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1984986   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1984987   +end;
MPRINT(EM_DIAGRAM):   end;
1984988   +else do;
MPRINT(EM_DIAGRAM):   else do;
1984989   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1984990   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1984991   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1984992   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1984993   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1984994   +   end;
MPRINT(EM_DIAGRAM):   end;
1984995   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1984996   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1984997   +   end;
MPRINT(EM_DIAGRAM):   end;
1984998   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1984999   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1985000   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985001   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985002   +   end;
MPRINT(EM_DIAGRAM):   end;
1985003   +end;
MPRINT(EM_DIAGRAM):   end;
1985004   +
1985005   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1985006   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1985007   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1985008   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1985009   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985010   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985011   +end;
MPRINT(EM_DIAGRAM):   end;
1985012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985013   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985014   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1985015   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985016   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985017   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1985018   +   end;
MPRINT(EM_DIAGRAM):   end;
1985019   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985020   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1985021   +   end;
MPRINT(EM_DIAGRAM):   end;
1985022   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985023   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1985024   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985025   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985026   +   end;
MPRINT(EM_DIAGRAM):   end;
1985027   +end;
MPRINT(EM_DIAGRAM):   end;
1985028   +
1985029   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1985030   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1985031   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1985032   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1985033   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985034   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985035   +end;
MPRINT(EM_DIAGRAM):   end;
1985036   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985037   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985038   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1985039   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985040   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985041   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1985042   +   end;
MPRINT(EM_DIAGRAM):   end;
1985043   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985044   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1985045   +   end;
MPRINT(EM_DIAGRAM):   end;
1985046   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985047   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1985048   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985049   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985050   +   end;
MPRINT(EM_DIAGRAM):   end;
1985051   +end;
MPRINT(EM_DIAGRAM):   end;
1985052   +
1985053   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1985054   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1985055   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1985056   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1985057   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985058   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985059   +end;
MPRINT(EM_DIAGRAM):   end;
1985060   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985061   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985062   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1985063   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985064   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985065   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1985066   +   end;
MPRINT(EM_DIAGRAM):   end;
1985067   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985068   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1985069   +   end;
MPRINT(EM_DIAGRAM):   end;
1985070   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985071   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1985072   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985073   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985074   +   end;
MPRINT(EM_DIAGRAM):   end;
1985075   +end;
MPRINT(EM_DIAGRAM):   end;
1985076   +
1985077   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1985078   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1985079   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1985080   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1985081   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985082   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985083   +end;
MPRINT(EM_DIAGRAM):   end;
1985084   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985085   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985086   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1985087   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985088   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985089   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1985090   +   end;
MPRINT(EM_DIAGRAM):   end;
1985091   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985092   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1985093   +   end;
MPRINT(EM_DIAGRAM):   end;
1985094   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985095   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1985096   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985097   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985098   +   end;
MPRINT(EM_DIAGRAM):   end;
1985099   +end;
MPRINT(EM_DIAGRAM):   end;
1985100   +
1985101   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1985102   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1985103   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1985104   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1985105   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985106   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985107   +end;
MPRINT(EM_DIAGRAM):   end;
1985108   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985109   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985110   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1985111   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985112   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985113   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1985114   +   end;
MPRINT(EM_DIAGRAM):   end;
1985115   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985116   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1985117   +   end;
MPRINT(EM_DIAGRAM):   end;
1985118   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985119   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1985120   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985121   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985122   +   end;
MPRINT(EM_DIAGRAM):   end;
1985123   +end;
MPRINT(EM_DIAGRAM):   end;
1985124   +
1985125   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1985126   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1985127   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1985128   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1985129   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1985130   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1985131   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1985132   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1985133   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1985134   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1985135   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1985136   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1985137   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985138   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985139   +end;
MPRINT(EM_DIAGRAM):   end;
1985140   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985141   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1985142   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1985143   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985144   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1985145   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1985146   +   end;
MPRINT(EM_DIAGRAM):   end;
1985147   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1985148   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1985149   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1985150   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1985151   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1985152   +   end;
MPRINT(EM_DIAGRAM):   end;
1985153   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1985154   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1985155   +   end;
MPRINT(EM_DIAGRAM):   end;
1985156   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1985157   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1985158   +   end;
MPRINT(EM_DIAGRAM):   end;
1985159   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1985160   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1985161   +   end;
MPRINT(EM_DIAGRAM):   end;
1985162   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985163   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1985164   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1985165   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1985166   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1985167   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985168   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985169   +   end;
MPRINT(EM_DIAGRAM):   end;
1985170   +end;
MPRINT(EM_DIAGRAM):   end;
1985171   +
1985172   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1985173   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1985174   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1985175   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1985176   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1985177   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1985178   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1985179   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1985180   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1985181   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1985182   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1985183   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1985184   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1985185   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985186   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985187   +end;
MPRINT(EM_DIAGRAM):   end;
1985188   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985189   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1985190   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1985191   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985192   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1985193   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1985194   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1985195   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1985196   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1985197   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985198   +         end;
MPRINT(EM_DIAGRAM):   end;
1985199   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1985200   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1985201   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1985202   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985203   +            end;
MPRINT(EM_DIAGRAM):   end;
1985204   +         end;
MPRINT(EM_DIAGRAM):   end;
1985205   +      end;
MPRINT(EM_DIAGRAM):   end;
1985206   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1985207   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1985208   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1985209   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985210   +         end;
MPRINT(EM_DIAGRAM):   end;
1985211   +      end;
MPRINT(EM_DIAGRAM):   end;
1985212   +   end;
MPRINT(EM_DIAGRAM):   end;
1985213   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985214   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1985215   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1985216   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985217   +      end;
MPRINT(EM_DIAGRAM):   end;
1985218   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1985219   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1985220   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1985221   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1985222   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1985223   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1985224   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985225   +         end;
MPRINT(EM_DIAGRAM):   end;
1985226   +      end;
MPRINT(EM_DIAGRAM):   end;
1985227   +   end;
MPRINT(EM_DIAGRAM):   end;
1985228   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1985229   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1985230   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1985231   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1985232   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1985233   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985234   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985235   +   end;
MPRINT(EM_DIAGRAM):   end;
1985236   +end;
MPRINT(EM_DIAGRAM):   end;
1985237   +
1985238   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985239   +*** Checking missing input Interval
1985240   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1985241   +
1985242   +IF NMISS(
1985243   +   Income ,
1985244   +   Kidhome ,
1985245   +   MntFishProducts ,
1985246   +   MntFruits ,
1985247   +   MntGoldProds ,
1985248   +   MntMeatProducts ,
1985249   +   MntSweetProducts ,
1985250   +   MntWines ,
1985251   +   NumCatalogPurchases ,
1985252   +   NumDealsPurchases ,
1985253   +   NumStorePurchases ,
1985254   +   NumWebPurchases ,
1985255   +   NumWebVisitsMonth ,
1985256   +   Recency ,
1985257   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1985258   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1985259   +
1985260   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985261   +END;
MPRINT(EM_DIAGRAM):   END;
1985262   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985263   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1985264   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985265   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1985266   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1985267   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1985268   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1985269   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1985270   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1985271   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1985272   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1985273   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1985274   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1985275   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1985276   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1985277   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1985278   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1985279   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1985280   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1985281   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1985282   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1985283   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1985284   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1985285   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1985286   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1985287   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1985288   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1985289   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1985290   +END;
MPRINT(EM_DIAGRAM):   END;
1985291   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1985292   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1985293   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1985294   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1985295   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1985296   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1985297   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1985298   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1985299   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1985300   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1985301   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1985302   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1985303   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1985304   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1985305   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1985306   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1985307   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1985308   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1985309   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1985310   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1985311   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1985312   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1985313   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1985314   +   ELSE S_NumCatalogPurchases
1985315   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1985316   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1985317   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1985318   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1985319   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1985320   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1985321   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1985322   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1985323   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1985324   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1985325   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1985326   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1985327   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1985328   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1985329   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1985330   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1985331   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1985332   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1985333   +END;
MPRINT(EM_DIAGRAM):   END;
1985334   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985335   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1985336   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985337   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985338   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1985339   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985340   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985341   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1985342   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985343   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1985344   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1985345   +          +    -0.08967295716195 * S_MntFishProducts
1985346   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1985347   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1985348   +          +    -0.02806094557115 * S_MntSweetProducts
1985349   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1985350   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1985351   +          +     0.25137876058262 * S_NumStorePurchases
1985352   +          +    -0.07865442401292 * S_NumWebPurchases
1985353   +          +     1.03197398967259 * S_NumWebVisitsMonth
1985354   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1985355   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
1985356   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1985357   +          +     0.19312392388912 * S_MntFishProducts
1985358   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1985359   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1985360   +          +       0.204174263605 * S_MntSweetProducts
1985361   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1985362   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1985363   +          +     0.07747830335769 * S_NumStorePurchases
1985364   +          +     0.07960837555191 * S_NumWebPurchases
1985365   +          +     0.02351602389122 * S_NumWebVisitsMonth
1985366   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1985367   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
1985368   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1985369   +          +     0.18733919794636 * S_MntFishProducts
1985370   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1985371   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1985372   +          +     0.42514606159239 * S_MntSweetProducts
1985373   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1985374   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1985375   +          +     0.36582106462789 * S_NumStorePurchases
1985376   +          +     0.04244777020435 * S_NumWebPurchases
1985377   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1985378   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1985379   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1985380   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1985381   +          +     0.05986489897572 * S_MntFishProducts
1985382   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1985383   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1985384   +          +    -0.05513370461072 * S_MntSweetProducts
1985385   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1985386   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1985387   +          +     0.64364674828841 * S_NumStorePurchases
1985388   +          +     0.15084748708424 * S_NumWebPurchases
1985389   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1985390   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1985391   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1985392   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1985393   +          +    -0.14543196273578 * S_MntFishProducts
1985394   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1985395   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1985396   +          +     0.49374793444169 * S_MntSweetProducts
1985397   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1985398   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1985399   +          +     1.23754786782746 * S_NumStorePurchases
1985400   +          +     1.11316667348511 * S_NumWebPurchases
1985401   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1985402   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1985403   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1985404   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1985405   +          +     0.29549884005341 * S_MntFishProducts
1985406   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1985407   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1985408   +          +    -0.11909215986981 * S_MntSweetProducts
1985409   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1985410   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1985411   +          +     0.30109334594548 * S_NumStorePurchases
1985412   +          +     0.01985762767489 * S_NumWebPurchases
1985413   +          +     0.44965133281333 * S_NumWebVisitsMonth
1985414   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1985415   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1985416   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1985417   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1985418   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1985419   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1985420   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1985421   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1985422   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1985423   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1985424   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1985425   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1985426   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1985427   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1985428   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1985429   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1985430   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1985431   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1985432   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1985433   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1985434   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1985435   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1985436   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1985437   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1985438   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1985439   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1985440   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1985441   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1985442   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1985443   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1985444   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1985445   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1985446   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1985447   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1985448   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1985449   +          +     0.51015833145636 * Marital_StatusDivorced
1985450   +          +     -1.1653662063616 * Marital_StatusMarried
1985451   +          +     1.19396547750441 * Marital_StatusSingle
1985452   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1985453   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1985454   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1985455   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1985456   +          +     0.09154288513995 * Marital_StatusDivorced
1985457   +          +     0.06725684628382 * Marital_StatusMarried
1985458   +          +     0.11327659191494 * Marital_StatusSingle
1985459   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1985460   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1985461   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1985462   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1985463   +          +     0.37591653615852 * Marital_StatusDivorced
1985464   +          +    -0.05024236790132 * Marital_StatusMarried
1985465   +          +    -0.28317154997144 * Marital_StatusSingle
1985466   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1985467   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1985468   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1985469   +        EducationGraduation  +       0.638986138084 * EducationMaster
1985470   +          +    -0.44885292450558 * Marital_StatusDivorced
1985471   +          +     0.78958791519299 * Marital_StatusMarried
1985472   +          +    -0.09688714431356 * Marital_StatusSingle
1985473   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1985474   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1985475   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1985476   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1985477   +          +    -0.30801073895989 * Marital_StatusDivorced
1985478   +          +     -0.1285150749223 * Marital_StatusMarried
1985479   +          +     0.06775542164414 * Marital_StatusSingle
1985480   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1985481   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1985482   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1985483   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1985484   +          +     0.22193599090368 * Marital_StatusDivorced
1985485   +          +    -0.54544672042168 * Marital_StatusMarried
1985486   +          +    -0.02237436019864 * Marital_StatusSingle
1985487   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1985488   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1985489   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1985490   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1985491   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1985492   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1985493   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1985494   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1985495   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1985496   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1985497   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1985498   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1985499   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1985500   +END;
MPRINT(EM_DIAGRAM):   END;
1985501   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1985502   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1985503   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1985504   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1985505   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1985506   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1985507   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1985508   +END;
MPRINT(EM_DIAGRAM):   END;
1985509   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985510   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1985511   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985512   +
1985513   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1985514   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1985515   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1985516   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1985517   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1985518   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985519   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1985520   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1985521   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1985522   +end;
MPRINT(EM_DIAGRAM):   end;
1985523   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985524   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1985525   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1985526   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1985527   +   end;
MPRINT(EM_DIAGRAM):   end;
1985528   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1985529   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1985530   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1985531   +   end;
MPRINT(EM_DIAGRAM):   end;
1985532   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985533   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1985534   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1985535   +   end;
MPRINT(EM_DIAGRAM):   end;
1985536   +end;
MPRINT(EM_DIAGRAM):   end;
1985537   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1985538   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1985539   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1985540   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
1985541   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1985542   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1985543   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1985544   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1985545   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1985546   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1985547   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1985548   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1985549   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1985550   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1985551   +END;
MPRINT(EM_DIAGRAM):   END;
1985552   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1985553   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1985554   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1985555   +END;
MPRINT(EM_DIAGRAM):   END;
1985556   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1985557   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1985558   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1985559   +END;
MPRINT(EM_DIAGRAM):   END;
1985560   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1985561   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1985562   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1985563   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1985564   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1985565   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1985566   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1985567   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985568   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1985569   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985570   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1985571   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1985572   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1985573   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1985574   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1985575   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1985576   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1985577   +END;
MPRINT(EM_DIAGRAM):   END;
1985578   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1985579   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1985580   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1985581   +drop
1985582   +H11
1985583   +H12
1985584   +H13
1985585   +H14
1985586   +H15
1985587   +H16
1985588   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1985589   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1985590   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1985591   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985592   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1985593   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985594   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1985595   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1985596   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1985597   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1985598   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985599   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1985600   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985601   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1985602   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1985603   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1985604   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985605   +* Ensmbl10: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 2 of 3;
1985606   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985607   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985608   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1985609   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1985610   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1985611   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1985612   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1985613   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1985614   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1985615   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1985616   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1985617   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1985618   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1985619   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1985620   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1985621   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1985622   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1985623   +LENGTH _WARN_ $4
1985624   +      F_DepVar  $ 12
1985625   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1985626   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1985627   +
1985628   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1985629   +
1985630   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1985631   +
1985632   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1985633   +
1985634   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1985635   +
1985636   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1985637   +
1985638   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1985639   +
1985640   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1985641   +
1985642   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1985643   +
1985644   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1985645   +
1985646   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1985647   +
1985648   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1985649   +
1985650   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1985651   +
1985652   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1985653   +
1985654   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1985655   +
1985656   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1985657   +
1985658   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1985659   +
1985660   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1985661   +
1985662   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1985663   +
1985664   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1985665   +
1985666   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1985667   +
1985668   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1985669   +
1985670   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1985671   +
1985672   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1985673   +
1985674   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1985675   +
1985676   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1985677   +
1985678   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1985679   +
1985680   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1985681   +
1985682   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1985683   +
1985684   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1985685   +
1985686   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1985687   +
1985688   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1985689   +
1985690   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1985691   +
1985692   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1985693   +
1985694   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1985695   +
1985696   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1985697   +
1985698   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1985699   +
1985700   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1985701   +
1985702   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1985703   +
1985704   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1985705   +
1985706   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1985707   +
1985708   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1985709   +
1985710   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1985711   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1985712   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1985713   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1985714   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985715   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985716   +end;
MPRINT(EM_DIAGRAM):   end;
1985717   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985718   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985719   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1985720   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985721   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985722   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1985723   +   end;
MPRINT(EM_DIAGRAM):   end;
1985724   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985725   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1985726   +   end;
MPRINT(EM_DIAGRAM):   end;
1985727   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985728   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1985729   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985730   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985731   +   end;
MPRINT(EM_DIAGRAM):   end;
1985732   +end;
MPRINT(EM_DIAGRAM):   end;
1985733   +
1985734   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1985735   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1985736   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1985737   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1985738   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985739   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985740   +end;
MPRINT(EM_DIAGRAM):   end;
1985741   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985742   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985743   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1985744   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985745   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985746   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1985747   +   end;
MPRINT(EM_DIAGRAM):   end;
1985748   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985749   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1985750   +   end;
MPRINT(EM_DIAGRAM):   end;
1985751   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985752   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1985753   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985754   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985755   +   end;
MPRINT(EM_DIAGRAM):   end;
1985756   +end;
MPRINT(EM_DIAGRAM):   end;
1985757   +
1985758   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1985759   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1985760   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1985761   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1985762   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985763   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985764   +end;
MPRINT(EM_DIAGRAM):   end;
1985765   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985766   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985767   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1985768   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985769   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985770   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1985771   +   end;
MPRINT(EM_DIAGRAM):   end;
1985772   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985773   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1985774   +   end;
MPRINT(EM_DIAGRAM):   end;
1985775   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985776   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1985777   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985778   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985779   +   end;
MPRINT(EM_DIAGRAM):   end;
1985780   +end;
MPRINT(EM_DIAGRAM):   end;
1985781   +
1985782   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
The SAS System

1985783   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1985784   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1985785   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1985786   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985787   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985788   +end;
MPRINT(EM_DIAGRAM):   end;
1985789   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985790   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985791   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1985792   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985793   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985794   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1985795   +   end;
MPRINT(EM_DIAGRAM):   end;
1985796   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985797   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1985798   +   end;
MPRINT(EM_DIAGRAM):   end;
1985799   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985800   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1985801   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985802   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985803   +   end;
MPRINT(EM_DIAGRAM):   end;
1985804   +end;
MPRINT(EM_DIAGRAM):   end;
1985805   +
1985806   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1985807   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1985808   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1985809   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1985810   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985811   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985812   +end;
MPRINT(EM_DIAGRAM):   end;
1985813   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985814   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985815   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1985816   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985817   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985818   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1985819   +   end;
MPRINT(EM_DIAGRAM):   end;
1985820   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985821   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1985822   +   end;
MPRINT(EM_DIAGRAM):   end;
1985823   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985824   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1985825   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985826   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985827   +   end;
MPRINT(EM_DIAGRAM):   end;
1985828   +end;
MPRINT(EM_DIAGRAM):   end;
1985829   +
1985830   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1985831   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1985832   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1985833   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1985834   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985835   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985836   +end;
MPRINT(EM_DIAGRAM):   end;
1985837   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985838   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1985839   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1985840   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985841   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1985842   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1985843   +   end;
MPRINT(EM_DIAGRAM):   end;
1985844   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1985845   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1985846   +   end;
MPRINT(EM_DIAGRAM):   end;
1985847   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985848   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1985849   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985850   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985851   +   end;
MPRINT(EM_DIAGRAM):   end;
1985852   +end;
MPRINT(EM_DIAGRAM):   end;
1985853   +
1985854   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1985855   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1985856   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1985857   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1985858   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1985859   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1985860   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1985861   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1985862   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1985863   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1985864   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1985865   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1985866   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985867   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985868   +end;
MPRINT(EM_DIAGRAM):   end;
1985869   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985870   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1985871   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1985872   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985873   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1985874   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1985875   +   end;
MPRINT(EM_DIAGRAM):   end;
1985876   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1985877   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1985878   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1985879   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1985880   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1985881   +   end;
MPRINT(EM_DIAGRAM):   end;
1985882   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1985883   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1985884   +   end;
MPRINT(EM_DIAGRAM):   end;
1985885   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1985886   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1985887   +   end;
MPRINT(EM_DIAGRAM):   end;
1985888   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1985889   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1985890   +   end;
MPRINT(EM_DIAGRAM):   end;
1985891   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985892   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1985893   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1985894   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1985895   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1985896   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985897   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985898   +   end;
MPRINT(EM_DIAGRAM):   end;
1985899   +end;
MPRINT(EM_DIAGRAM):   end;
1985900   +
1985901   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1985902   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1985903   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1985904   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1985905   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1985906   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1985907   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1985908   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1985909   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1985910   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1985911   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1985912   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1985913   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1985914   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1985915   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985916   +end;
MPRINT(EM_DIAGRAM):   end;
1985917   +else do;
MPRINT(EM_DIAGRAM):   else do;
1985918   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1985919   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1985920   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1985921   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1985922   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1985923   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1985924   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1985925   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1985926   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985927   +         end;
MPRINT(EM_DIAGRAM):   end;
1985928   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1985929   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1985930   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1985931   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985932   +            end;
MPRINT(EM_DIAGRAM):   end;
1985933   +         end;
MPRINT(EM_DIAGRAM):   end;
1985934   +      end;
MPRINT(EM_DIAGRAM):   end;
1985935   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1985936   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1985937   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1985938   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985939   +         end;
MPRINT(EM_DIAGRAM):   end;
1985940   +      end;
MPRINT(EM_DIAGRAM):   end;
1985941   +   end;
MPRINT(EM_DIAGRAM):   end;
1985942   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1985943   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1985944   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1985945   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985946   +      end;
MPRINT(EM_DIAGRAM):   end;
1985947   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1985948   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1985949   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1985950   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1985951   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1985952   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1985953   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1985954   +         end;
MPRINT(EM_DIAGRAM):   end;
1985955   +      end;
MPRINT(EM_DIAGRAM):   end;
1985956   +   end;
MPRINT(EM_DIAGRAM):   end;
1985957   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1985958   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1985959   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1985960   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1985961   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1985962   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1985963   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985964   +   end;
MPRINT(EM_DIAGRAM):   end;
1985965   +end;
MPRINT(EM_DIAGRAM):   end;
1985966   +
1985967   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985968   +*** Checking missing input Interval
1985969   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1985970   +
1985971   +IF NMISS(
1985972   +   Income ,
1985973   +   Kidhome ,
1985974   +   MntFishProducts ,
1985975   +   MntFruits ,
1985976   +   MntGoldProds ,
1985977   +   MntMeatProducts ,
1985978   +   MntSweetProducts ,
1985979   +   MntWines ,
1985980   +   NumCatalogPurchases ,
1985981   +   NumDealsPurchases ,
1985982   +   NumStorePurchases ,
1985983   +   NumWebPurchases ,
1985984   +   NumWebVisitsMonth ,
1985985   +   Recency ,
1985986   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1985987   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1985988   +
1985989   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1985990   +END;
MPRINT(EM_DIAGRAM):   END;
1985991   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985992   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1985993   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1985994   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1985995   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1985996   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1985997   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1985998   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1985999   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1986000   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1986001   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1986002   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1986003   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1986004   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1986005   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1986006   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1986007   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1986008   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1986009   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1986010   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1986011   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1986012   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1986013   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1986014   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1986015   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1986016   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1986017   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1986018   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1986019   +END;
MPRINT(EM_DIAGRAM):   END;
1986020   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1986021   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1986022   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1986023   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1986024   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1986025   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1986026   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1986027   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1986028   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1986029   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1986030   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1986031   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1986032   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1986033   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1986034   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1986035   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1986036   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1986037   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1986038   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1986039   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1986040   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1986041   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1986042   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1986043   +   ELSE S_NumCatalogPurchases
1986044   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1986045   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1986046   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1986047   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1986048   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1986049   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1986050   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1986051   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1986052   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1986053   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1986054   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1986055   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1986056   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1986057   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1986058   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1986059   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1986060   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1986061   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1986062   +END;
MPRINT(EM_DIAGRAM):   END;
1986063   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986064   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1986065   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986067   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1986068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986069   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986070   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1986071   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986072   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1986073   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1986074   +          +     0.24367603598167 * S_MntFishProducts
1986075   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1986076   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1986077   +          +     0.34054806441484 * S_MntSweetProducts
1986078   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1986079   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1986080   +          +     0.98942946974575 * S_NumStorePurchases
1986081   +          +     0.89701206630103 * S_NumWebPurchases
1986082   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1986083   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1986084   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1986085   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1986086   +          +     0.16683404689723 * S_MntFishProducts
1986087   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1986088   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1986089   +          +     0.20389084548968 * S_MntSweetProducts
1986090   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1986091   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1986092   +          +     1.27164659640366 * S_NumStorePurchases
1986093   +          +     1.02122194207802 * S_NumWebPurchases
1986094   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1986095   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1986096   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1986097   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1986098   +          +    -0.03345077166544 * S_MntFishProducts
1986099   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1986100   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1986101   +          +    -0.11948662500951 * S_MntSweetProducts
1986102   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1986103   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1986104   +          +     0.22401914357376 * S_NumStorePurchases
1986105   +          +     0.04219877865976 * S_NumWebPurchases
1986106   +          +     1.21753334166036 * S_NumWebVisitsMonth
1986107   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1986108   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1986109   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1986110   +          +     0.31175257038578 * S_MntFishProducts
1986111   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1986112   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1986113   +          +      0.0927253053382 * S_MntSweetProducts
1986114   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1986115   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1986116   +          +    -0.12667606349662 * S_NumStorePurchases
1986117   +          +     0.30148374518724 * S_NumWebPurchases
1986118   +          +     0.48934229701658 * S_NumWebVisitsMonth
1986119   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1986120   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1986121   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1986122   +          +     0.42646725119177 * S_MntFishProducts
1986123   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1986124   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1986125   +          +    -0.01493605582616 * S_MntSweetProducts
1986126   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1986127   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1986128   +          +     0.54256744091258 * S_NumStorePurchases
1986129   +          +     0.43065931458468 * S_NumWebPurchases
1986130   +          +      0.5935561420466 * S_NumWebVisitsMonth
1986131   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1986132   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1986133   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1986134   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1986135   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1986136   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1986137   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1986138   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1986139   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1986140   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1986141   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1986142   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1986143   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1986144   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1986145   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1986146   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1986147   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1986148   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1986149   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1986150   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1986151   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1986152   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1986153   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1986154   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1986155   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1986156   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1986157   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1986158   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1986159   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1986160   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1986161   +          +    -0.85912688909911 * Marital_StatusDivorced
1986162   +          +     0.81561401465875 * Marital_StatusMarried
1986163   +          +    -0.58324403081542 * Marital_StatusSingle
1986164   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1986165   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1986166   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1986167   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1986168   +          +    -0.34784695867287 * Marital_StatusDivorced
1986169   +          +    -0.18194022182247 * Marital_StatusMarried
1986170   +          +    -0.10633185904164 * Marital_StatusSingle
1986171   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1986172   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1986173   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1986174   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1986175   +          +     0.61058752124466 * Marital_StatusDivorced
1986176   +          +    -1.38793808025141 * Marital_StatusMarried
1986177   +          +     1.10060737810944 * Marital_StatusSingle
1986178   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1986179   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1986180   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1986181   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1986182   +          +     0.11973800573581 * Marital_StatusDivorced
1986183   +          +      -0.294635257911 * Marital_StatusMarried
1986184   +          +    -0.05399659601172 * Marital_StatusSingle
1986185   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1986186   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1986187   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1986188   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1986189   +          +     0.42838191659864 * Marital_StatusDivorced
1986190   +          +    -0.09150349181363 * Marital_StatusMarried
1986191   +          +    -0.33520164145276 * Marital_StatusSingle
1986192   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1986193   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1986194   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1986195   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1986196   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1986197   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1986198   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1986199   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1986200   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1986201   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1986202   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1986203   +END;
MPRINT(EM_DIAGRAM):   END;
1986204   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1986205   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1986206   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1986207   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1986208   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1986209   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1986210   +END;
MPRINT(EM_DIAGRAM):   END;
1986211   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986212   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1986213   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986214   +
1986215   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1986216   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1986217   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1986218   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1986219   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1986220   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986221   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1986222   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1986223   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1986224   +end;
MPRINT(EM_DIAGRAM):   end;
1986225   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986226   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1986227   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1986228   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1986229   +   end;
MPRINT(EM_DIAGRAM):   end;
1986230   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1986231   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1986232   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1986233   +   end;
MPRINT(EM_DIAGRAM):   end;
1986234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986235   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1986236   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1986237   +   end;
MPRINT(EM_DIAGRAM):   end;
1986238   +end;
MPRINT(EM_DIAGRAM):   end;
1986239   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1986240   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1986241   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1986242   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1986243   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1986244   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1986245   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1986246   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1986247   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1986248   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1986249   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1986250   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1986251   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1986252   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1986253   +END;
MPRINT(EM_DIAGRAM):   END;
1986254   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1986255   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1986256   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1986257   +END;
MPRINT(EM_DIAGRAM):   END;
1986258   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1986259   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1986260   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1986261   +END;
MPRINT(EM_DIAGRAM):   END;
1986262   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1986263   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1986264   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1986265   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1986266   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1986267   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1986268   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1986269   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986270   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1986271   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986272   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1986273   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1986274   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1986275   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1986276   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1986277   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1986278   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1986279   +END;
MPRINT(EM_DIAGRAM):   END;
1986280   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1986281   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1986282   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1986283   +drop
1986284   +H11
1986285   +H12
1986286   +H13
1986287   +H14
1986288   +H15
1986289   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1986290   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1986291   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1986292   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986293   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1986294   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986295   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1986296   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1986297   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1986298   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1986299   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986300   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1986301   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986302   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1986303   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1986304   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1986305   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986306   +* Ensmbl10: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 3 of 3;
1986307   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986308   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986309   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1986310   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1986311   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1986312   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986313   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1986314   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1986315   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1986316   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1986317   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1986318   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1986319   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1986320   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1986321   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1986322   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1986323   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1986324   +LENGTH _WARN_ $4
1986325   +      F_DepVar  $ 12
1986326   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1986327   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1986328   +
1986329   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1986330   +
1986331   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1986332   +
1986333   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1986334   +
1986335   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1986336   +
1986337   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1986338   +
1986339   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1986340   +
1986341   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1986342   +
1986343   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1986344   +
1986345   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1986346   +
1986347   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1986348   +
1986349   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1986350   +
1986351   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1986352   +
1986353   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1986354   +
1986355   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1986356   +
1986357   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1986358   +
1986359   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1986360   +
1986361   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1986362   +
1986363   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1986364   +
1986365   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1986366   +
1986367   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1986368   +
1986369   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1986370   +
1986371   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1986372   +
1986373   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1986374   +
1986375   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1986376   +
1986377   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1986378   +
1986379   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1986380   +
1986381   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1986382   +
1986383   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1986384   +
1986385   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1986386   +
1986387   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1986388   +
1986389   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1986390   +
1986391   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1986392   +
1986393   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1986394   +
1986395   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1986396   +
1986397   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1986398   +
1986399   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1986400   +
1986401   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1986402   +
1986403   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1986404   +
1986405   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1986406   +
1986407   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1986408   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1986409   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1986410   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1986411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986413   +end;
MPRINT(EM_DIAGRAM):   end;
1986414   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1986416   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1986417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986418   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1986419   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1986420   +   end;
MPRINT(EM_DIAGRAM):   end;
1986421   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1986422   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1986423   +   end;
MPRINT(EM_DIAGRAM):   end;
1986424   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986425   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1986426   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986427   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986428   +   end;
MPRINT(EM_DIAGRAM):   end;
1986429   +end;
MPRINT(EM_DIAGRAM):   end;
1986430   +
1986431   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1986432   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1986433   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1986434   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1986435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986437   +end;
MPRINT(EM_DIAGRAM):   end;
1986438   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1986440   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1986441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986442   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1986443   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1986444   +   end;
MPRINT(EM_DIAGRAM):   end;
1986445   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1986446   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1986447   +   end;
MPRINT(EM_DIAGRAM):   end;
1986448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986449   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1986450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986452   +   end;
MPRINT(EM_DIAGRAM):   end;
1986453   +end;
MPRINT(EM_DIAGRAM):   end;
1986454   +
1986455   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1986456   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1986457   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1986458   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1986459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986461   +end;
MPRINT(EM_DIAGRAM):   end;
1986462   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1986464   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1986465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986466   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1986467   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1986468   +   end;
MPRINT(EM_DIAGRAM):   end;
1986469   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1986470   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1986471   +   end;
MPRINT(EM_DIAGRAM):   end;
1986472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986473   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1986474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986476   +   end;
MPRINT(EM_DIAGRAM):   end;
1986477   +end;
MPRINT(EM_DIAGRAM):   end;
1986478   +
1986479   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1986480   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1986481   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1986482   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1986483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986485   +end;
MPRINT(EM_DIAGRAM):   end;
1986486   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1986488   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1986489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986490   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1986491   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1986492   +   end;
MPRINT(EM_DIAGRAM):   end;
1986493   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1986494   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1986495   +   end;
MPRINT(EM_DIAGRAM):   end;
1986496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986497   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1986498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986500   +   end;
MPRINT(EM_DIAGRAM):   end;
1986501   +end;
MPRINT(EM_DIAGRAM):   end;
1986502   +
1986503   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1986504   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1986505   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1986506   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1986507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986509   +end;
MPRINT(EM_DIAGRAM):   end;
1986510   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1986512   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1986513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986514   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1986515   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1986516   +   end;
MPRINT(EM_DIAGRAM):   end;
1986517   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1986518   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1986519   +   end;
MPRINT(EM_DIAGRAM):   end;
1986520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986521   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1986522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986524   +   end;
MPRINT(EM_DIAGRAM):   end;
1986525   +end;
MPRINT(EM_DIAGRAM):   end;
1986526   +
1986527   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1986528   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1986529   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1986530   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1986531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986533   +end;
MPRINT(EM_DIAGRAM):   end;
1986534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1986536   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1986537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986538   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1986539   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1986540   +   end;
MPRINT(EM_DIAGRAM):   end;
1986541   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1986542   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1986543   +   end;
MPRINT(EM_DIAGRAM):   end;
1986544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986545   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1986546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986548   +   end;
MPRINT(EM_DIAGRAM):   end;
1986549   +end;
MPRINT(EM_DIAGRAM):   end;
1986550   +
1986551   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1986552   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1986553   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1986554   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1986555   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1986556   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1986557   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1986558   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1986559   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1986560   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1986561   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1986562   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1986563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986565   +end;
MPRINT(EM_DIAGRAM):   end;
1986566   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986567   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1986568   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1986569   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986570   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1986571   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1986572   +   end;
MPRINT(EM_DIAGRAM):   end;
1986573   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1986574   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1986575   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1986576   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1986577   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1986578   +   end;
MPRINT(EM_DIAGRAM):   end;
1986579   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1986580   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1986581   +   end;
MPRINT(EM_DIAGRAM):   end;
1986582   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1986583   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1986584   +   end;
MPRINT(EM_DIAGRAM):   end;
1986585   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1986586   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1986587   +   end;
MPRINT(EM_DIAGRAM):   end;
1986588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986589   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1986590   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1986591   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1986592   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1986593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986595   +   end;
MPRINT(EM_DIAGRAM):   end;
1986596   +end;
MPRINT(EM_DIAGRAM):   end;
1986597   +
1986598   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1986599   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1986600   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1986601   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1986602   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1986603   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1986604   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1986605   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1986606   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1986607   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1986608   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1986609   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1986610   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1986611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1986612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986613   +end;
MPRINT(EM_DIAGRAM):   end;
1986614   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986615   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1986616   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1986617   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986618   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1986619   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1986620   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1986621   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1986622   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1986623   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1986624   +         end;
MPRINT(EM_DIAGRAM):   end;
1986625   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1986626   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1986627   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1986628   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1986629   +            end;
MPRINT(EM_DIAGRAM):   end;
1986630   +         end;
MPRINT(EM_DIAGRAM):   end;
1986631   +      end;
MPRINT(EM_DIAGRAM):   end;
1986632   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1986633   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1986634   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1986635   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1986636   +         end;
MPRINT(EM_DIAGRAM):   end;
1986637   +      end;
MPRINT(EM_DIAGRAM):   end;
1986638   +   end;
MPRINT(EM_DIAGRAM):   end;
1986639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986640   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1986641   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1986642   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1986643   +      end;
MPRINT(EM_DIAGRAM):   end;
1986644   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1986645   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1986646   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1986647   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1986648   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1986649   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1986650   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1986651   +         end;
MPRINT(EM_DIAGRAM):   end;
1986652   +      end;
MPRINT(EM_DIAGRAM):   end;
1986653   +   end;
MPRINT(EM_DIAGRAM):   end;
1986654   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1986655   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1986656   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1986657   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1986658   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1986659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1986660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986661   +   end;
MPRINT(EM_DIAGRAM):   end;
1986662   +end;
MPRINT(EM_DIAGRAM):   end;
1986663   +
1986664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986665   +*** Checking missing input Interval
1986666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1986667   +
1986668   +IF NMISS(
1986669   +   Income ,
1986670   +   Kidhome ,
1986671   +   MntFishProducts ,
1986672   +   MntFruits ,
1986673   +   MntGoldProds ,
1986674   +   MntMeatProducts ,
1986675   +   MntSweetProducts ,
1986676   +   MntWines ,
1986677   +   NumCatalogPurchases ,
1986678   +   NumDealsPurchases ,
1986679   +   NumStorePurchases ,
1986680   +   NumWebPurchases ,
1986681   +   NumWebVisitsMonth ,
1986682   +   Recency ,
1986683   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1986684   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1986685   +
1986686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1986687   +END;
MPRINT(EM_DIAGRAM):   END;
1986688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986689   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1986690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986691   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1986692   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1986693   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1986694   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1986695   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1986696   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1986697   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1986698   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1986699   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1986700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1986701   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1986702   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1986703   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1986704   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1986705   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1986706   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1986707   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1986708   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1986709   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1986710   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1986711   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1986712   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1986713   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1986714   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1986715   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1986716   +END;
MPRINT(EM_DIAGRAM):   END;
1986717   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1986718   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1986719   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1986720   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1986721   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1986722   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1986723   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1986724   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1986725   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1986726   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1986727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1986728   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1986729   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1986730   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1986731   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1986732   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1986733   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1986734   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1986735   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1986736   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1986737   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1986738   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1986739   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1986740   +   ELSE S_NumCatalogPurchases
1986741   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1986742   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1986743   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1986744   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1986745   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1986746   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1986747   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1986748   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1986749   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1986750   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1986751   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1986752   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1986753   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1986754   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1986755   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1986756   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1986757   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1986758   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1986759   +END;
MPRINT(EM_DIAGRAM):   END;
1986760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986761   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1986762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986764   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1986765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986767   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1986768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986769   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1986770   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1986771   +          +    -0.12974862644982 * S_MntFishProducts
1986772   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1986773   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1986774   +          +    -0.12290326901613 * S_MntSweetProducts
1986775   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1986776   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1986777   +          +     0.09738032540137 * S_NumStorePurchases
1986778   +          +     0.44459515215205 * S_NumWebPurchases
1986779   +          +      0.8471075994578 * S_NumWebVisitsMonth
1986780   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1986781   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
1986782   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1986783   +          +     0.02406077596811 * S_MntFishProducts
1986784   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1986785   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1986786   +          +     -0.1147507059349 * S_MntSweetProducts
1986787   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1986788   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1986789   +          +    -0.23920969262322 * S_NumStorePurchases
1986790   +          +     -0.6008837862932 * S_NumWebPurchases
1986791   +          +     0.26759743722885 * S_NumWebVisitsMonth
1986792   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1986793   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
1986794   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1986795   +          +     0.04398331533724 * S_MntFishProducts
1986796   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1986797   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1986798   +          +     0.00552488718744 * S_MntSweetProducts
1986799   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1986800   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1986801   +          +     0.60058189155105 * S_NumStorePurchases
1986802   +          +     0.51423374855856 * S_NumWebPurchases
1986803   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1986804   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1986805   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1986806   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1986807   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1986808   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1986809   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1986810   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1986811   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1986812   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1986813   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1986814   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1986815   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1986816   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1986817   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1986818   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1986819   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1986820   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1986821   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1986822   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1986823   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1986824   +          +     0.52129580188513 * Marital_StatusDivorced
1986825   +          +     -1.5224490339553 * Marital_StatusMarried
1986826   +          +     1.05062906057771 * Marital_StatusSingle
1986827   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1986828   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1986829   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1986830   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1986831   +          +    -0.14428158063317 * Marital_StatusDivorced
1986832   +          +     0.22396926143356 * Marital_StatusMarried
1986833   +          +    -0.12980854818876 * Marital_StatusSingle
1986834   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1986835   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1986836   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1986837   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1986838   +          +    -0.25615797303064 * Marital_StatusDivorced
1986839   +          +     0.18825506199046 * Marital_StatusMarried
1986840   +          +    -0.24607556819871 * Marital_StatusSingle
1986841   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1986842   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1986843   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1986844   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1986845   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1986846   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1986847   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1986848   +END;
MPRINT(EM_DIAGRAM):   END;
1986849   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1986850   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1986851   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1986852   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1986853   +END;
MPRINT(EM_DIAGRAM):   END;
1986854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986855   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1986856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986857   +
1986858   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1986859   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1986860   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1986861   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1986862   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1986863   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1986864   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1986865   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1986866   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1986867   +end;
MPRINT(EM_DIAGRAM):   end;
1986868   +else do;
MPRINT(EM_DIAGRAM):   else do;
1986869   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1986870   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1986871   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1986872   +   end;
MPRINT(EM_DIAGRAM):   end;
1986873   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1986874   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1986875   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1986876   +   end;
MPRINT(EM_DIAGRAM):   end;
1986877   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1986878   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1986879   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1986880   +   end;
MPRINT(EM_DIAGRAM):   end;
1986881   +end;
MPRINT(EM_DIAGRAM):   end;
1986882   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1986883   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1986884   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
1986885   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1986886   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1986887   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1986888   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1986889   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1986890   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1986891   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1986892   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1986893   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1986894   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1986895   +END;
MPRINT(EM_DIAGRAM):   END;
1986896   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1986897   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1986898   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1986899   +END;
MPRINT(EM_DIAGRAM):   END;
1986900   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1986901   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1986902   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1986903   +END;
MPRINT(EM_DIAGRAM):   END;
1986904   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1986905   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1986906   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1986907   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1986908   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1986909   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1986910   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1986911   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986912   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1986913   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1986914   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1986915   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1986916   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1986917   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1986918   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1986919   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1986920   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1986921   +END;
MPRINT(EM_DIAGRAM):   END;
1986922   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1986923   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1986924   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1986925   +drop
1986926   +H11
1986927   +H12
1986928   +H13
1986929   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1986930   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1986931   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1986932   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986933   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1986934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986935   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1986936   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1986937   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1986938   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1986939   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986940   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1986941   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986942   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1986943   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1986944   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1986945   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986946   +* Ensmbl10: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Average Posteriors of 3 models;
1986947   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986948   +P_DepVar1 = (
1986949   +Neural35_P_DepVar1 +
1986950   +Neural34_P_DepVar1 +
1986951   +Neural32_P_DepVar1
1986952   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural35_P_DepVar1 + Neural34_P_DepVar1 + 
Neural32_P_DepVar1 )/3;
1986953   +P_DepVar0 = (
1986954   +Neural35_P_DepVar0 +
1986955   +Neural34_P_DepVar0 +
1986956   +Neural32_P_DepVar0
1986957   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural35_P_DepVar0 + Neural34_P_DepVar0 + 
Neural32_P_DepVar0 )/3;
1986958   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986959   +* Ensmbl10: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Classification Vars;
1986960   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986961   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1986962   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1986963   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1986964   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1986965   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1986966   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1986967   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1986968   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1986969   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1986970   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1986971   +end;
MPRINT(EM_DIAGRAM):   end;
1986972   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1986973   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1986974   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1986975   +end;
MPRINT(EM_DIAGRAM):   end;
1986976   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1986977   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986978   +* Ensmbl10: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Producing Unformatted variable;
1986979   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986980   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1986981   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1986982   +else
1986983   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1986984   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986985   +* Ensmbl10: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing _WARN_ Variable;
1986986   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1986987   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1986988   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1986989   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1986990   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1986990  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1986991   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1986991  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1986992   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1986992  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1986993   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1986993  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1986994   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1986994  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1986995   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1986995  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1986996   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1986996  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1986997   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1986997  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1986998   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1986998  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1986999   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1986999  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1987000   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1987000  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1987001   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1987001  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1987002   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987003   +* Ensmbl10: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Residual Vars;
1987004   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987005   +if
1987006   +F_DepVar NE '1'
1987007   +AND F_DepVar NE '0'
1987008   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1987009   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1987010   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1987011   +end;
MPRINT(EM_DIAGRAM):   end;
1987012   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987013   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1987014   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1987015   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1987016   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1987017   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1987018   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1987019   +END;
MPRINT(EM_DIAGRAM):   END;
1987020   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1987021    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL10_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL35_TRAIN.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1987022    quit;
1987023    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
1987024    filename emflow
1987024  ! "C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring NEURAL35_VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987025    *------------------------------------------------------------*;
1987026    * Ensmbl10: Scoring NEURAL35_VALIDATE data;
1987027    *------------------------------------------------------------*;
1987028    data EMWS8.Ensmbl10_VALIDATE
1987029    / view=EMWS8.Ensmbl10_VALIDATE
1987030    ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_VALIDATE / view=EMWS8.Ensmbl10_VALIDATE ;
1987031    set EMWS8.Neural35_VALIDATE
1987032    ;
MPRINT(EM_DIAGRAM):   set EMWS8.Neural35_VALIDATE ;
1987033    %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\EMFLOWSCORE.sas.
1987034   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987035   +* Ensmbl10: Combine model for DepVar;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Combine model for DepVar;
1987036   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987037   +* Ensmbl10: Scoring Code of model 1 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 1 of 3;
1987038   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987039   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987040   +* TOOL: Extension Class;
MPRINT(EM_DIAGRAM):   * TOOL: Extension Class;
1987041   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1987042   +* NODE: FIMPORT;
MPRINT(EM_DIAGRAM):   * NODE: FIMPORT;
1987043   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987044   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987045   +* TOOL: Statistics Exploration;
MPRINT(EM_DIAGRAM):   * TOOL: Statistics Exploration;
1987046   +* TYPE: EXPLORE;
MPRINT(EM_DIAGRAM):   * TYPE: EXPLORE;
1987047   +* NODE: Stat;
MPRINT(EM_DIAGRAM):   * NODE: Stat;
1987048   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987049   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987050   +* TOOL: Filtering;
MPRINT(EM_DIAGRAM):   * TOOL: Filtering;
1987051   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1987052   +* NODE: Filter;
MPRINT(EM_DIAGRAM):   * NODE: Filter;
1987053   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987054   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987055   +* TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
MPRINT(EM_DIAGRAM):   * TOOL: SASHELP.EMCORE.EMCODETOOL.CLASS;
1987056   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1987057   +* NODE: EMCODE4;
MPRINT(EM_DIAGRAM):   * NODE: EMCODE4;
1987058   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987059   +
1987060   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1987061   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1987061  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1987062   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1987063   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1987064   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1987065   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1987066   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
1987067   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987068   +* TOOL: Transform;
MPRINT(EM_DIAGRAM):   * TOOL: Transform;
1987069   +* TYPE: MODIFY;
MPRINT(EM_DIAGRAM):   * TYPE: MODIFY;
1987070   +* NODE: Trans;
MPRINT(EM_DIAGRAM):   * NODE: Trans;
1987071   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987072   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987073   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1987074   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987075   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1987076   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1987077   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
1987078   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987079   +* TOOL: Partition Class;
MPRINT(EM_DIAGRAM):   * TOOL: Partition Class;
1987080   +* TYPE: SAMPLE;
MPRINT(EM_DIAGRAM):   * TYPE: SAMPLE;
1987081   +* NODE: Part;
MPRINT(EM_DIAGRAM):   * NODE: Part;
1987082   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987083   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987084   +* TOOL: Metadata Node;
MPRINT(EM_DIAGRAM):   * TOOL: Metadata Node;
1987085   +* TYPE: UTILITY;
MPRINT(EM_DIAGRAM):   * TYPE: UTILITY;
1987086   +* NODE: Meta2;
MPRINT(EM_DIAGRAM):   * NODE: Meta2;
1987087   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987088   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987089   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1987090   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1987091   +* NODE: Neural35;
MPRINT(EM_DIAGRAM):   * NODE: Neural35;
1987092   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987093   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1987094   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1987095   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1987096   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1987097   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1987098   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1987099   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1987100   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1987101   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1987102   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1987103   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1987104   +LENGTH _WARN_ $4
1987105   +      F_DepVar  $ 12
1987106   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1987107   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1987108   +
1987109   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1987110   +
1987111   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1987112   +
1987113   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1987114   +
1987115   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1987116   +
1987117   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1987118   +
1987119   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1987120   +
1987121   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1987122   +
1987123   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1987124   +
1987125   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1987126   +
1987127   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1987128   +
1987129   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1987130   +
1987131   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1987132   +
1987133   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1987134   +
1987135   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1987136   +
1987137   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1987138   +
1987139   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1987140   +
1987141   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1987142   +
1987143   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1987144   +
1987145   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1987146   +
1987147   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1987148   +
1987149   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1987150   +
1987151   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1987152   +
1987153   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1987154   +
1987155   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1987156   +
1987157   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1987158   +
1987159   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1987160   +
1987161   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1987162   +
1987163   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1987164   +
1987165   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1987166   +
1987167   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1987168   +
1987169   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1987170   +
1987171   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1987172   +
1987173   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1987174   +
1987175   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1987176   +
1987177   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1987178   +
1987179   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1987180   +
1987181   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1987182   +
1987183   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1987184   +
1987185   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1987186   +
1987187   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1987188   +
1987189   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1987190   +
1987191   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1987192   +
1987193   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1987194   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1987195   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1987196   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1987197   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987198   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987199   +end;
MPRINT(EM_DIAGRAM):   end;
1987200   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987201   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987202   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1987203   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987204   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987205   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1987206   +   end;
MPRINT(EM_DIAGRAM):   end;
1987207   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987208   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1987209   +   end;
MPRINT(EM_DIAGRAM):   end;
1987210   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987211   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1987212   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987213   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987214   +   end;
MPRINT(EM_DIAGRAM):   end;
1987215   +end;
MPRINT(EM_DIAGRAM):   end;
1987216   +
1987217   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1987218   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1987219   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1987220   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1987221   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987222   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987223   +end;
MPRINT(EM_DIAGRAM):   end;
1987224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987225   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987226   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1987227   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987228   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987229   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1987230   +   end;
MPRINT(EM_DIAGRAM):   end;
1987231   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987232   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1987233   +   end;
MPRINT(EM_DIAGRAM):   end;
1987234   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987235   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1987236   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987237   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987238   +   end;
MPRINT(EM_DIAGRAM):   end;
1987239   +end;
MPRINT(EM_DIAGRAM):   end;
1987240   +
1987241   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1987242   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1987243   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1987244   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1987245   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987246   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987247   +end;
MPRINT(EM_DIAGRAM):   end;
1987248   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987249   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987250   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1987251   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987252   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987253   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1987254   +   end;
MPRINT(EM_DIAGRAM):   end;
1987255   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987256   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1987257   +   end;
MPRINT(EM_DIAGRAM):   end;
1987258   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987259   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1987260   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987261   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987262   +   end;
MPRINT(EM_DIAGRAM):   end;
1987263   +end;
MPRINT(EM_DIAGRAM):   end;
1987264   +
1987265   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1987266   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1987267   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1987268   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1987269   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987270   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987271   +end;
MPRINT(EM_DIAGRAM):   end;
1987272   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987273   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987274   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1987275   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987276   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987277   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1987278   +   end;
MPRINT(EM_DIAGRAM):   end;
1987279   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987280   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1987281   +   end;
MPRINT(EM_DIAGRAM):   end;
1987282   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987283   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1987284   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987285   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987286   +   end;
MPRINT(EM_DIAGRAM):   end;
1987287   +end;
MPRINT(EM_DIAGRAM):   end;
1987288   +
1987289   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1987290   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1987291   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1987292   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1987293   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987294   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987295   +end;
MPRINT(EM_DIAGRAM):   end;
1987296   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987297   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987298   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1987299   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987300   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987301   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1987302   +   end;
MPRINT(EM_DIAGRAM):   end;
1987303   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987304   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1987305   +   end;
MPRINT(EM_DIAGRAM):   end;
1987306   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987307   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1987308   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987309   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987310   +   end;
MPRINT(EM_DIAGRAM):   end;
1987311   +end;
MPRINT(EM_DIAGRAM):   end;
1987312   +
1987313   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1987314   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1987315   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1987316   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1987317   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987318   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987319   +end;
MPRINT(EM_DIAGRAM):   end;
1987320   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987321   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987322   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1987323   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987324   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987325   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1987326   +   end;
MPRINT(EM_DIAGRAM):   end;
1987327   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987328   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1987329   +   end;
MPRINT(EM_DIAGRAM):   end;
1987330   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987331   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1987332   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987333   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987334   +   end;
MPRINT(EM_DIAGRAM):   end;
1987335   +end;
MPRINT(EM_DIAGRAM):   end;
1987336   +
1987337   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1987338   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1987339   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1987340   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1987341   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1987342   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1987343   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1987344   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1987345   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1987346   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1987347   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1987348   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1987349   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987350   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987351   +end;
MPRINT(EM_DIAGRAM):   end;
1987352   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987353   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1987354   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1987355   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987356   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1987357   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1987358   +   end;
MPRINT(EM_DIAGRAM):   end;
1987359   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1987360   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1987361   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1987362   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1987363   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1987364   +   end;
MPRINT(EM_DIAGRAM):   end;
1987365   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1987366   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1987367   +   end;
MPRINT(EM_DIAGRAM):   end;
1987368   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1987369   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1987370   +   end;
MPRINT(EM_DIAGRAM):   end;
1987371   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1987372   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1987373   +   end;
MPRINT(EM_DIAGRAM):   end;
1987374   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987375   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1987376   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1987377   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1987378   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1987379   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987380   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987381   +   end;
MPRINT(EM_DIAGRAM):   end;
1987382   +end;
MPRINT(EM_DIAGRAM):   end;
1987383   +
1987384   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1987385   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1987386   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1987387   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1987388   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1987389   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1987390   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1987391   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1987392   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1987393   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1987394   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1987395   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1987396   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1987397   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987398   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987399   +end;
MPRINT(EM_DIAGRAM):   end;
1987400   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987401   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1987402   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1987403   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987404   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1987405   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1987406   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1987407   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1987408   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1987409   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1987410   +         end;
MPRINT(EM_DIAGRAM):   end;
1987411   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1987412   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1987413   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1987414   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1987415   +            end;
MPRINT(EM_DIAGRAM):   end;
1987416   +         end;
MPRINT(EM_DIAGRAM):   end;
1987417   +      end;
MPRINT(EM_DIAGRAM):   end;
1987418   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1987419   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1987420   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1987421   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1987422   +         end;
MPRINT(EM_DIAGRAM):   end;
1987423   +      end;
MPRINT(EM_DIAGRAM):   end;
1987424   +   end;
MPRINT(EM_DIAGRAM):   end;
1987425   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987426   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1987427   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1987428   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1987429   +      end;
MPRINT(EM_DIAGRAM):   end;
1987430   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1987431   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1987432   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1987433   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1987434   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1987435   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1987436   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1987437   +         end;
MPRINT(EM_DIAGRAM):   end;
1987438   +      end;
MPRINT(EM_DIAGRAM):   end;
1987439   +   end;
MPRINT(EM_DIAGRAM):   end;
1987440   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1987441   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1987442   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1987443   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1987444   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1987445   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987446   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987447   +   end;
MPRINT(EM_DIAGRAM):   end;
1987448   +end;
MPRINT(EM_DIAGRAM):   end;
1987449   +
1987450   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987451   +*** Checking missing input Interval
1987452   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1987453   +
1987454   +IF NMISS(
1987455   +   Income ,
1987456   +   Kidhome ,
1987457   +   MntFishProducts ,
1987458   +   MntFruits ,
1987459   +   MntGoldProds ,
1987460   +   MntMeatProducts ,
1987461   +   MntSweetProducts ,
1987462   +   MntWines ,
1987463   +   NumCatalogPurchases ,
1987464   +   NumDealsPurchases ,
1987465   +   NumStorePurchases ,
1987466   +   NumWebPurchases ,
1987467   +   NumWebVisitsMonth ,
1987468   +   Recency ,
1987469   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1987470   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1987471   +
1987472   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987473   +END;
MPRINT(EM_DIAGRAM):   END;
1987474   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987475   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1987476   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987477   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1987478   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1987479   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1987480   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1987481   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1987482   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1987483   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1987484   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1987485   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1987486   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1987487   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1987488   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1987489   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1987490   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1987491   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1987492   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1987493   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1987494   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1987495   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1987496   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1987497   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1987498   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1987499   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1987500   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1987501   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1987502   +END;
MPRINT(EM_DIAGRAM):   END;
1987503   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1987504   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1987505   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1987506   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1987507   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1987508   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1987509   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1987510   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1987511   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1987512   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1987513   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1987514   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1987515   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1987516   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1987517   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1987518   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1987519   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1987520   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1987521   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1987522   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1987523   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1987524   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1987525   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1987526   +   ELSE S_NumCatalogPurchases
1987527   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1987528   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1987529   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1987530   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1987531   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1987532   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1987533   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1987534   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1987535   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1987536   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1987537   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1987538   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1987539   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1987540   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1987541   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1987542   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1987543   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1987544   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1987545   +END;
MPRINT(EM_DIAGRAM):   END;
1987546   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987547   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1987548   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987549   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987550   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1987551   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987552   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987553   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1987554   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987555   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1987556   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1987557   +          +    -0.08967295716195 * S_MntFishProducts
1987558   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1987559   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1987560   +          +    -0.02806094557115 * S_MntSweetProducts
1987561   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1987562   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1987563   +          +     0.25137876058262 * S_NumStorePurchases
1987564   +          +    -0.07865442401292 * S_NumWebPurchases
1987565   +          +     1.03197398967259 * S_NumWebVisitsMonth
1987566   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1987567   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
1987568   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1987569   +          +     0.19312392388912 * S_MntFishProducts
1987570   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1987571   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1987572   +          +       0.204174263605 * S_MntSweetProducts
1987573   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1987574   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1987575   +          +     0.07747830335769 * S_NumStorePurchases
1987576   +          +     0.07960837555191 * S_NumWebPurchases
1987577   +          +     0.02351602389122 * S_NumWebVisitsMonth
1987578   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1987579   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
1987580   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1987581   +          +     0.18733919794636 * S_MntFishProducts
1987582   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1987583   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1987584   +          +     0.42514606159239 * S_MntSweetProducts
1987585   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1987586   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1987587   +          +     0.36582106462789 * S_NumStorePurchases
1987588   +          +     0.04244777020435 * S_NumWebPurchases
1987589   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1987590   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1987591   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1987592   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1987593   +          +     0.05986489897572 * S_MntFishProducts
1987594   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1987595   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1987596   +          +    -0.05513370461072 * S_MntSweetProducts
1987597   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1987598   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1987599   +          +     0.64364674828841 * S_NumStorePurchases
1987600   +          +     0.15084748708424 * S_NumWebPurchases
1987601   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1987602   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1987603   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1987604   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1987605   +          +    -0.14543196273578 * S_MntFishProducts
1987606   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1987607   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1987608   +          +     0.49374793444169 * S_MntSweetProducts
1987609   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1987610   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1987611   +          +     1.23754786782746 * S_NumStorePurchases
1987612   +          +     1.11316667348511 * S_NumWebPurchases
1987613   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1987614   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1987615   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1987616   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1987617   +          +     0.29549884005341 * S_MntFishProducts
1987618   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1987619   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1987620   +          +    -0.11909215986981 * S_MntSweetProducts
1987621   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1987622   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1987623   +          +     0.30109334594548 * S_NumStorePurchases
1987624   +          +     0.01985762767489 * S_NumWebPurchases
1987625   +          +     0.44965133281333 * S_NumWebVisitsMonth
1987626   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1987627   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1987628   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1987629   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1987630   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1987631   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1987632   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1987633   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1987634   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1987635   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1987636   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1987637   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1987638   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1987639   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1987640   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1987641   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1987642   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1987643   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1987644   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1987645   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1987646   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1987647   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1987648   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1987649   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1987650   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1987651   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1987652   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1987653   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1987654   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1987655   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1987656   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1987657   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1987658   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1987659   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1987660   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1987661   +          +     0.51015833145636 * Marital_StatusDivorced
1987662   +          +     -1.1653662063616 * Marital_StatusMarried
1987663   +          +     1.19396547750441 * Marital_StatusSingle
1987664   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1987665   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1987666   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1987667   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1987668   +          +     0.09154288513995 * Marital_StatusDivorced
1987669   +          +     0.06725684628382 * Marital_StatusMarried
1987670   +          +     0.11327659191494 * Marital_StatusSingle
1987671   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1987672   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1987673   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1987674   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1987675   +          +     0.37591653615852 * Marital_StatusDivorced
1987676   +          +    -0.05024236790132 * Marital_StatusMarried
1987677   +          +    -0.28317154997144 * Marital_StatusSingle
1987678   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1987679   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1987680   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1987681   +        EducationGraduation  +       0.638986138084 * EducationMaster
1987682   +          +    -0.44885292450558 * Marital_StatusDivorced
1987683   +          +     0.78958791519299 * Marital_StatusMarried
1987684   +          +    -0.09688714431356 * Marital_StatusSingle
1987685   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1987686   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1987687   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1987688   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1987689   +          +    -0.30801073895989 * Marital_StatusDivorced
1987690   +          +     -0.1285150749223 * Marital_StatusMarried
1987691   +          +     0.06775542164414 * Marital_StatusSingle
1987692   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1987693   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1987694   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1987695   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1987696   +          +     0.22193599090368 * Marital_StatusDivorced
1987697   +          +    -0.54544672042168 * Marital_StatusMarried
1987698   +          +    -0.02237436019864 * Marital_StatusSingle
1987699   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1987700   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1987701   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1987702   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1987703   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1987704   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1987705   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1987706   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1987707   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1987708   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1987709   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1987710   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1987711   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1987712   +END;
MPRINT(EM_DIAGRAM):   END;
1987713   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1987714   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1987715   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1987716   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1987717   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1987718   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1987719   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1987720   +END;
MPRINT(EM_DIAGRAM):   END;
1987721   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987722   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1987723   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987724   +
1987725   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1987726   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1987727   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1987728   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1987729   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1987730   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987731   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1987732   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1987733   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1987734   +end;
MPRINT(EM_DIAGRAM):   end;
1987735   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987736   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1987737   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1987738   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1987739   +   end;
MPRINT(EM_DIAGRAM):   end;
1987740   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1987741   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1987742   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1987743   +   end;
MPRINT(EM_DIAGRAM):   end;
1987744   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987745   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1987746   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1987747   +   end;
MPRINT(EM_DIAGRAM):   end;
1987748   +end;
MPRINT(EM_DIAGRAM):   end;
1987749   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1987750   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1987751   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1987752   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
1987753   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1987754   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1987755   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1987756   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1987757   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1987758   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1987759   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1987760   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1987761   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1987762   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1987763   +END;
MPRINT(EM_DIAGRAM):   END;
1987764   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1987765   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1987766   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1987767   +END;
MPRINT(EM_DIAGRAM):   END;
1987768   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1987769   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1987770   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1987771   +END;
MPRINT(EM_DIAGRAM):   END;
1987772   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1987773   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1987774   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1987775   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1987776   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1987777   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1987778   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1987779   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987780   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1987781   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1987782   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1987783   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1987784   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1987785   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1987786   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1987787   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1987788   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1987789   +END;
MPRINT(EM_DIAGRAM):   END;
1987790   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1987791   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1987792   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1987793   +drop
1987794   +H11
1987795   +H12
1987796   +H13
1987797   +H14
1987798   +H15
1987799   +H16
1987800   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1987801   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1987802   +* Renaming variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural35;
1987803   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987804   +* Renaming Posterior variables for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural35;
1987805   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987806   +drop Neural35_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar1;
1987807   +Neural35_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar1 = P_DepVar1;
1987808   +drop Neural35_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural35_P_DepVar0;
1987809   +Neural35_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural35_P_DepVar0 = P_DepVar0;
1987810   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987811   +* Renaming _WARN_ variable for Neural35;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural35;
1987812   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987813   +length Neural35_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural35_WARN_ $4;
1987814   +drop Neural35_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural35_WARN_;
1987815   +Neural35_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural35_WARN_ = _WARN_;
1987816   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987817   +* Ensmbl10: Scoring Code of model 2 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 2 of 3;
1987818   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987819   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987820   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1987821   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1987822   +* NODE: Neural34;
MPRINT(EM_DIAGRAM):   * NODE: Neural34;
1987823   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1987824   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1987825   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1987826   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1987827   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1987828   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1987829   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1987830   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1987831   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1987832   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1987833   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1987834   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1987835   +LENGTH _WARN_ $4
1987836   +      F_DepVar  $ 12
1987837   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1987838   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1987839   +
1987840   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1987841   +
1987842   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1987843   +
1987844   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1987845   +
1987846   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1987847   +
1987848   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1987849   +
1987850   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1987851   +
1987852   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1987853   +
1987854   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1987855   +
1987856   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1987857   +
1987858   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1987859   +
1987860   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1987861   +
1987862   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1987863   +
1987864   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1987865   +
1987866   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1987867   +
1987868   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1987869   +
1987870   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1987871   +
1987872   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1987873   +
1987874   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1987875   +
1987876   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1987877   +
1987878   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1987879   +
1987880   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1987881   +
1987882   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1987883   +
1987884   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1987885   +
1987886   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1987887   +
1987888   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1987889   +
1987890   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1987891   +
1987892   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1987893   +
1987894   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1987895   +
1987896   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1987897   +
1987898   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1987899   +
1987900   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1987901   +
1987902   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1987903   +
1987904   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1987905   +
1987906   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1987907   +
1987908   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1987909   +
1987910   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1987911   +
1987912   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1987913   +
1987914   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1987915   +
1987916   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1987917   +
1987918   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1987919   +
1987920   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1987921   +
1987922   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1987923   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1987924   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1987925   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1987926   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987927   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987928   +end;
MPRINT(EM_DIAGRAM):   end;
1987929   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987930   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987931   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1987932   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987933   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987934   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1987935   +   end;
MPRINT(EM_DIAGRAM):   end;
1987936   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987937   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1987938   +   end;
MPRINT(EM_DIAGRAM):   end;
1987939   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987940   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1987941   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987942   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987943   +   end;
MPRINT(EM_DIAGRAM):   end;
1987944   +end;
MPRINT(EM_DIAGRAM):   end;
1987945   +
1987946   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1987947   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1987948   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1987949   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1987950   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987951   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987952   +end;
MPRINT(EM_DIAGRAM):   end;
1987953   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987954   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987955   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1987956   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987957   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987958   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1987959   +   end;
MPRINT(EM_DIAGRAM):   end;
1987960   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987961   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1987962   +   end;
MPRINT(EM_DIAGRAM):   end;
1987963   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987964   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1987965   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987966   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987967   +   end;
MPRINT(EM_DIAGRAM):   end;
1987968   +end;
MPRINT(EM_DIAGRAM):   end;
1987969   +
1987970   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1987971   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1987972   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1987973   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1987974   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987975   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987976   +end;
MPRINT(EM_DIAGRAM):   end;
1987977   +else do;
MPRINT(EM_DIAGRAM):   else do;
1987978   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1987979   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1987980   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1987981   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1987982   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1987983   +   end;
MPRINT(EM_DIAGRAM):   end;
1987984   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1987985   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1987986   +   end;
MPRINT(EM_DIAGRAM):   end;
1987987   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1987988   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1987989   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1987990   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1987991   +   end;
MPRINT(EM_DIAGRAM):   end;
1987992   +end;
MPRINT(EM_DIAGRAM):   end;
1987993   +
1987994   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1987995   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1987996   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1987997   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1987998   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1987999   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988000   +end;
MPRINT(EM_DIAGRAM):   end;
1988001   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988002   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988003   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1988004   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988005   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988006   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1988007   +   end;
MPRINT(EM_DIAGRAM):   end;
1988008   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988009   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1988010   +   end;
MPRINT(EM_DIAGRAM):   end;
1988011   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988012   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1988013   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988014   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988015   +   end;
MPRINT(EM_DIAGRAM):   end;
1988016   +end;
MPRINT(EM_DIAGRAM):   end;
1988017   +
1988018   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1988019   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1988020   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1988021   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1988022   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988023   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988024   +end;
MPRINT(EM_DIAGRAM):   end;
1988025   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988026   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988027   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1988028   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988029   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988030   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1988031   +   end;
MPRINT(EM_DIAGRAM):   end;
1988032   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988033   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1988034   +   end;
MPRINT(EM_DIAGRAM):   end;
1988035   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988036   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1988037   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988038   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988039   +   end;
MPRINT(EM_DIAGRAM):   end;
1988040   +end;
MPRINT(EM_DIAGRAM):   end;
1988041   +
1988042   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1988043   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1988044   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1988045   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1988046   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988047   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988048   +end;
MPRINT(EM_DIAGRAM):   end;
1988049   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988050   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988051   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1988052   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988053   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988054   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1988055   +   end;
MPRINT(EM_DIAGRAM):   end;
1988056   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988057   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1988058   +   end;
MPRINT(EM_DIAGRAM):   end;
1988059   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988060   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1988061   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988062   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988063   +   end;
MPRINT(EM_DIAGRAM):   end;
1988064   +end;
MPRINT(EM_DIAGRAM):   end;
1988065   +
1988066   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1988067   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1988068   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1988069   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1988070   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1988071   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1988072   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1988073   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1988074   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1988075   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1988076   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1988077   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1988078   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988079   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988080   +end;
MPRINT(EM_DIAGRAM):   end;
1988081   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988082   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1988083   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1988084   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988085   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1988086   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1988087   +   end;
MPRINT(EM_DIAGRAM):   end;
1988088   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1988089   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1988090   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1988091   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1988092   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1988093   +   end;
MPRINT(EM_DIAGRAM):   end;
1988094   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1988095   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1988096   +   end;
MPRINT(EM_DIAGRAM):   end;
1988097   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1988098   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1988099   +   end;
MPRINT(EM_DIAGRAM):   end;
1988100   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1988101   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1988102   +   end;
MPRINT(EM_DIAGRAM):   end;
1988103   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988104   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1988105   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1988106   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1988107   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1988108   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988109   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988110   +   end;
MPRINT(EM_DIAGRAM):   end;
1988111   +end;
MPRINT(EM_DIAGRAM):   end;
1988112   +
1988113   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1988114   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1988115   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1988116   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1988117   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1988118   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1988119   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1988120   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1988121   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1988122   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1988123   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1988124   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1988125   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1988126   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988127   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988128   +end;
MPRINT(EM_DIAGRAM):   end;
1988129   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988130   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1988131   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1988132   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988133   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1988134   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1988135   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1988136   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1988137   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1988138   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988139   +         end;
MPRINT(EM_DIAGRAM):   end;
1988140   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1988141   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1988142   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1988143   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988144   +            end;
MPRINT(EM_DIAGRAM):   end;
1988145   +         end;
MPRINT(EM_DIAGRAM):   end;
1988146   +      end;
MPRINT(EM_DIAGRAM):   end;
1988147   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1988148   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1988149   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1988150   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988151   +         end;
MPRINT(EM_DIAGRAM):   end;
1988152   +      end;
MPRINT(EM_DIAGRAM):   end;
1988153   +   end;
MPRINT(EM_DIAGRAM):   end;
1988154   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988155   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1988156   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1988157   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988158   +      end;
MPRINT(EM_DIAGRAM):   end;
1988159   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1988160   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1988161   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1988162   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1988163   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1988164   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1988165   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988166   +         end;
MPRINT(EM_DIAGRAM):   end;
1988167   +      end;
MPRINT(EM_DIAGRAM):   end;
1988168   +   end;
MPRINT(EM_DIAGRAM):   end;
1988169   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1988170   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1988171   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1988172   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1988173   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1988174   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988175   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988176   +   end;
MPRINT(EM_DIAGRAM):   end;
1988177   +end;
MPRINT(EM_DIAGRAM):   end;
1988178   +
1988179   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988180   +*** Checking missing input Interval
1988181   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1988182   +
1988183   +IF NMISS(
1988184   +   Income ,
1988185   +   Kidhome ,
1988186   +   MntFishProducts ,
1988187   +   MntFruits ,
1988188   +   MntGoldProds ,
1988189   +   MntMeatProducts ,
1988190   +   MntSweetProducts ,
1988191   +   MntWines ,
1988192   +   NumCatalogPurchases ,
1988193   +   NumDealsPurchases ,
1988194   +   NumStorePurchases ,
1988195   +   NumWebPurchases ,
1988196   +   NumWebVisitsMonth ,
1988197   +   Recency ,
1988198   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1988199   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1988200   +
1988201   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988202   +END;
MPRINT(EM_DIAGRAM):   END;
1988203   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988204   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1988205   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988206   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1988207   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1988208   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1988209   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1988210   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1988211   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1988212   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1988213   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1988214   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1988215   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1988216   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1988217   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1988218   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1988219   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1988220   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1988221   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1988222   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1988223   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1988224   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1988225   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1988226   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1988227   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1988228   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1988229   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1988230   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1988231   +END;
MPRINT(EM_DIAGRAM):   END;
1988232   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1988233   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1988234   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1988235   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1988236   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1988237   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1988238   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1988239   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1988240   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1988241   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1988242   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1988243   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1988244   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1988245   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1988246   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1988247   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1988248   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1988249   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1988250   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1988251   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1988252   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1988253   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1988254   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1988255   +   ELSE S_NumCatalogPurchases
1988256   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1988257   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1988258   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1988259   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1988260   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1988261   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1988262   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1988263   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1988264   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1988265   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1988266   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1988267   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1988268   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1988269   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1988270   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1988271   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1988272   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1988273   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1988274   +END;
MPRINT(EM_DIAGRAM):   END;
1988275   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988276   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1988277   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988278   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988279   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1988280   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988281   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988282   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1988283   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988284   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1988285   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1988286   +          +     0.24367603598167 * S_MntFishProducts
1988287   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1988288   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1988289   +          +     0.34054806441484 * S_MntSweetProducts
1988290   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1988291   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1988292   +          +     0.98942946974575 * S_NumStorePurchases
1988293   +          +     0.89701206630103 * S_NumWebPurchases
1988294   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1988295   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1988296   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1988297   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1988298   +          +     0.16683404689723 * S_MntFishProducts
1988299   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1988300   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1988301   +          +     0.20389084548968 * S_MntSweetProducts
1988302   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1988303   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1988304   +          +     1.27164659640366 * S_NumStorePurchases
1988305   +          +     1.02122194207802 * S_NumWebPurchases
1988306   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1988307   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1988308   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1988309   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1988310   +          +    -0.03345077166544 * S_MntFishProducts
1988311   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1988312   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1988313   +          +    -0.11948662500951 * S_MntSweetProducts
1988314   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1988315   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1988316   +          +     0.22401914357376 * S_NumStorePurchases
1988317   +          +     0.04219877865976 * S_NumWebPurchases
1988318   +          +     1.21753334166036 * S_NumWebVisitsMonth
1988319   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1988320   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1988321   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1988322   +          +     0.31175257038578 * S_MntFishProducts
1988323   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1988324   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1988325   +          +      0.0927253053382 * S_MntSweetProducts
1988326   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1988327   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1988328   +          +    -0.12667606349662 * S_NumStorePurchases
1988329   +          +     0.30148374518724 * S_NumWebPurchases
1988330   +          +     0.48934229701658 * S_NumWebVisitsMonth
1988331   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1988332   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1988333   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1988334   +          +     0.42646725119177 * S_MntFishProducts
1988335   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1988336   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1988337   +          +    -0.01493605582616 * S_MntSweetProducts
1988338   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1988339   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1988340   +          +     0.54256744091258 * S_NumStorePurchases
1988341   +          +     0.43065931458468 * S_NumWebPurchases
1988342   +          +      0.5935561420466 * S_NumWebVisitsMonth
1988343   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1988344   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1988345   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1988346   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1988347   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1988348   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1988349   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1988350   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1988351   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1988352   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1988353   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1988354   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1988355   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1988356   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1988357   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1988358   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1988359   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1988360   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1988361   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1988362   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1988363   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1988364   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1988365   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1988366   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1988367   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1988368   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1988369   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1988370   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1988371   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1988372   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1988373   +          +    -0.85912688909911 * Marital_StatusDivorced
1988374   +          +     0.81561401465875 * Marital_StatusMarried
1988375   +          +    -0.58324403081542 * Marital_StatusSingle
1988376   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1988377   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1988378   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1988379   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1988380   +          +    -0.34784695867287 * Marital_StatusDivorced
1988381   +          +    -0.18194022182247 * Marital_StatusMarried
1988382   +          +    -0.10633185904164 * Marital_StatusSingle
1988383   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1988384   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1988385   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1988386   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1988387   +          +     0.61058752124466 * Marital_StatusDivorced
1988388   +          +    -1.38793808025141 * Marital_StatusMarried
1988389   +          +     1.10060737810944 * Marital_StatusSingle
1988390   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1988391   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1988392   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1988393   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1988394   +          +     0.11973800573581 * Marital_StatusDivorced
1988395   +          +      -0.294635257911 * Marital_StatusMarried
1988396   +          +    -0.05399659601172 * Marital_StatusSingle
1988397   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1988398   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1988399   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1988400   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1988401   +          +     0.42838191659864 * Marital_StatusDivorced
1988402   +          +    -0.09150349181363 * Marital_StatusMarried
1988403   +          +    -0.33520164145276 * Marital_StatusSingle
1988404   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1988405   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1988406   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1988407   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1988408   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1988409   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1988410   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1988411   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1988412   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1988413   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1988414   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1988415   +END;
MPRINT(EM_DIAGRAM):   END;
1988416   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1988417   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1988418   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1988419   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1988420   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1988421   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1988422   +END;
MPRINT(EM_DIAGRAM):   END;
1988423   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988424   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1988425   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988426   +
1988427   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1988428   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1988429   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1988430   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1988431   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1988432   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988433   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1988434   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1988435   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1988436   +end;
MPRINT(EM_DIAGRAM):   end;
1988437   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988438   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1988439   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1988440   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1988441   +   end;
MPRINT(EM_DIAGRAM):   end;
1988442   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1988443   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1988444   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1988445   +   end;
MPRINT(EM_DIAGRAM):   end;
1988446   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988447   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1988448   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1988449   +   end;
MPRINT(EM_DIAGRAM):   end;
1988450   +end;
MPRINT(EM_DIAGRAM):   end;
1988451   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1988452   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1988453   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1988454   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1988455   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1988456   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1988457   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1988458   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1988459   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1988460   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1988461   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1988462   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1988463   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1988464   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1988465   +END;
MPRINT(EM_DIAGRAM):   END;
1988466   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1988467   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1988468   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1988469   +END;
MPRINT(EM_DIAGRAM):   END;
1988470   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1988471   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1988472   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1988473   +END;
MPRINT(EM_DIAGRAM):   END;
1988474   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1988475   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1988476   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1988477   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1988478   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1988479   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1988480   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1988481   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988482   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1988483   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988484   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1988485   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1988486   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1988487   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1988488   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1988489   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1988490   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1988491   +END;
MPRINT(EM_DIAGRAM):   END;
1988492   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1988493   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1988494   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1988495   +drop
1988496   +H11
1988497   +H12
1988498   +H13
1988499   +H14
1988500   +H15
1988501   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1988502   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1988503   +* Renaming variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural34;
1988504   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988505   +* Renaming Posterior variables for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural34;
1988506   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988507   +drop Neural34_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar1;
1988508   +Neural34_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar1 = P_DepVar1;
1988509   +drop Neural34_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural34_P_DepVar0;
1988510   +Neural34_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural34_P_DepVar0 = P_DepVar0;
1988511   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988512   +* Renaming _WARN_ variable for Neural34;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural34;
1988513   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988514   +length Neural34_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural34_WARN_ $4;
1988515   +drop Neural34_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural34_WARN_;
1988516   +Neural34_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural34_WARN_ = _WARN_;
1988517   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988518   +* Ensmbl10: Scoring Code of model 3 of 3;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Scoring Code of model 3 of 3;
1988519   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988520   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988521   +* TOOL: Neural;
MPRINT(EM_DIAGRAM):   * TOOL: Neural;
1988522   +* TYPE: MODEL;
MPRINT(EM_DIAGRAM):   * TYPE: MODEL;
1988523   +* NODE: Neural32;
MPRINT(EM_DIAGRAM):   * NODE: Neural32;
1988524   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1988525   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1988526   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1988527   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1988528   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1988529   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1988530   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1988531   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1988532   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1988533   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1988534   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1988535   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1988536   +LENGTH _WARN_ $4
1988537   +      F_DepVar  $ 12
1988538   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 F_DepVar $ 12 ;
1988539   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1988540   +
1988541   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1988542   +
1988543   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1988544   +
1988545   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1988546   +
1988547   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1988548   +
1988549   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1988550   +
1988551   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1988552   +
1988553   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1988554   +
1988555   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1988556   +
1988557   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1988558   +
1988559   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1988560   +
1988561   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1988562   +
1988563   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1988564   +
1988565   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1988566   +
1988567   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1988568   +
1988569   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1988570   +
1988571   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1988572   +
1988573   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1988574   +
1988575   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1988576   +
1988577   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1988578   +
1988579   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1988580   +
1988581   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1988582   +
1988583   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1988584   +
1988585   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1988586   +
1988587   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1988588   +
1988589   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1988590   +
1988591   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1988592   +
1988593   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1988594   +
1988595   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1988596   +
1988597   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1988598   +
1988599   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1988600   +
1988601   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1988602   +
1988603   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1988604   +
1988605   +      label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1988606   +
1988607   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1988608   +
1988609   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1988610   +
1988611   +      label R_DepVar1 = 'Residual: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label R_DepVar1 = 'Residual: DepVar=1' ;
1988612   +
1988613   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1988614   +
1988615   +      label R_DepVar0 = 'Residual: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label R_DepVar0 = 'Residual: DepVar=0' ;
1988616   +
1988617   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1988618   +
1988619   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1988620   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1988621   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1988622   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1988623   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988624   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988625   +end;
MPRINT(EM_DIAGRAM):   end;
1988626   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988627   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988628   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1988629   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988630   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988631   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1988632   +   end;
MPRINT(EM_DIAGRAM):   end;
1988633   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988634   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1988635   +   end;
MPRINT(EM_DIAGRAM):   end;
1988636   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988637   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1988638   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988639   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988640   +   end;
MPRINT(EM_DIAGRAM):   end;
1988641   +end;
MPRINT(EM_DIAGRAM):   end;
1988642   +
1988643   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1988644   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1988645   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1988646   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1988647   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988648   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988649   +end;
MPRINT(EM_DIAGRAM):   end;
1988650   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988651   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988652   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1988653   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988654   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988655   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1988656   +   end;
MPRINT(EM_DIAGRAM):   end;
1988657   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988658   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1988659   +   end;
MPRINT(EM_DIAGRAM):   end;
1988660   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988661   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1988662   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988663   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988664   +   end;
MPRINT(EM_DIAGRAM):   end;
1988665   +end;
MPRINT(EM_DIAGRAM):   end;
1988666   +
1988667   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1988668   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1988669   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1988670   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1988671   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988672   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988673   +end;
MPRINT(EM_DIAGRAM):   end;
1988674   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988675   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988676   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1988677   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988678   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988679   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1988680   +   end;
MPRINT(EM_DIAGRAM):   end;
1988681   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988682   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1988683   +   end;
MPRINT(EM_DIAGRAM):   end;
1988684   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988685   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1988686   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988687   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988688   +   end;
MPRINT(EM_DIAGRAM):   end;
1988689   +end;
MPRINT(EM_DIAGRAM):   end;
1988690   +
1988691   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1988692   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1988693   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1988694   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1988695   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988696   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988697   +end;
MPRINT(EM_DIAGRAM):   end;
1988698   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988699   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988700   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1988701   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988702   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988703   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1988704   +   end;
MPRINT(EM_DIAGRAM):   end;
1988705   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988706   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1988707   +   end;
MPRINT(EM_DIAGRAM):   end;
1988708   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988709   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1988710   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988711   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988712   +   end;
MPRINT(EM_DIAGRAM):   end;
1988713   +end;
MPRINT(EM_DIAGRAM):   end;
1988714   +
1988715   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1988716   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1988717   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1988718   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1988719   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988720   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988721   +end;
MPRINT(EM_DIAGRAM):   end;
1988722   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988723   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988724   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1988725   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988726   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988727   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1988728   +   end;
MPRINT(EM_DIAGRAM):   end;
1988729   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988730   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1988731   +   end;
MPRINT(EM_DIAGRAM):   end;
1988732   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988733   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1988734   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988735   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988736   +   end;
MPRINT(EM_DIAGRAM):   end;
1988737   +end;
MPRINT(EM_DIAGRAM):   end;
1988738   +
1988739   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1988740   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1988741   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1988742   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1988743   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988744   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988745   +end;
MPRINT(EM_DIAGRAM):   end;
1988746   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988747   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1988748   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1988749   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988750   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1988751   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1988752   +   end;
MPRINT(EM_DIAGRAM):   end;
1988753   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1988754   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1988755   +   end;
MPRINT(EM_DIAGRAM):   end;
1988756   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988757   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1988758   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988759   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988760   +   end;
MPRINT(EM_DIAGRAM):   end;
1988761   +end;
MPRINT(EM_DIAGRAM):   end;
1988762   +
1988763   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1988764   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1988765   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1988766   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1988767   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1988768   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1988769   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1988770   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1988771   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1988772   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1988773   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1988774   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1988775   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988776   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988777   +end;
MPRINT(EM_DIAGRAM):   end;
1988778   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988779   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1988780   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1988781   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988782   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1988783   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1988784   +   end;
MPRINT(EM_DIAGRAM):   end;
1988785   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1988786   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1988787   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1988788   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1988789   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1988790   +   end;
MPRINT(EM_DIAGRAM):   end;
1988791   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1988792   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1988793   +   end;
MPRINT(EM_DIAGRAM):   end;
1988794   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1988795   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1988796   +   end;
MPRINT(EM_DIAGRAM):   end;
1988797   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1988798   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1988799   +   end;
MPRINT(EM_DIAGRAM):   end;
1988800   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988801   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1988802   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1988803   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1988804   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1988805   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988806   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988807   +   end;
MPRINT(EM_DIAGRAM):   end;
1988808   +end;
MPRINT(EM_DIAGRAM):   end;
1988809   +
1988810   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1988811   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1988812   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1988813   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1988814   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1988815   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1988816   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1988817   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1988818   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1988819   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1988820   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1988821   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1988822   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1988823   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1988824   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988825   +end;
MPRINT(EM_DIAGRAM):   end;
1988826   +else do;
MPRINT(EM_DIAGRAM):   else do;
1988827   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1988828   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1988829   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1988830   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1988831   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1988832   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1988833   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1988834   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1988835   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988836   +         end;
MPRINT(EM_DIAGRAM):   end;
1988837   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1988838   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1988839   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1988840   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988841   +            end;
MPRINT(EM_DIAGRAM):   end;
1988842   +         end;
MPRINT(EM_DIAGRAM):   end;
1988843   +      end;
MPRINT(EM_DIAGRAM):   end;
1988844   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1988845   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1988846   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1988847   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988848   +         end;
MPRINT(EM_DIAGRAM):   end;
1988849   +      end;
MPRINT(EM_DIAGRAM):   end;
1988850   +   end;
MPRINT(EM_DIAGRAM):   end;
1988851   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1988852   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1988853   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1988854   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988855   +      end;
MPRINT(EM_DIAGRAM):   end;
1988856   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1988857   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1988858   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1988859   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1988860   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1988861   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1988862   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1988863   +         end;
MPRINT(EM_DIAGRAM):   end;
1988864   +      end;
MPRINT(EM_DIAGRAM):   end;
1988865   +   end;
MPRINT(EM_DIAGRAM):   end;
1988866   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1988867   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1988868   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1988869   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1988870   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1988871   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1988872   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988873   +   end;
MPRINT(EM_DIAGRAM):   end;
1988874   +end;
MPRINT(EM_DIAGRAM):   end;
1988875   +
1988876   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988877   +*** Checking missing input Interval
1988878   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1988879   +
1988880   +IF NMISS(
1988881   +   Income ,
1988882   +   Kidhome ,
1988883   +   MntFishProducts ,
1988884   +   MntFruits ,
1988885   +   MntGoldProds ,
1988886   +   MntMeatProducts ,
1988887   +   MntSweetProducts ,
1988888   +   MntWines ,
1988889   +   NumCatalogPurchases ,
1988890   +   NumDealsPurchases ,
1988891   +   NumStorePurchases ,
1988892   +   NumWebPurchases ,
1988893   +   NumWebVisitsMonth ,
1988894   +   Recency ,
1988895   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1988896   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1988897   +
1988898   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1988899   +END;
MPRINT(EM_DIAGRAM):   END;
1988900   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988901   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1988902   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988903   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1988904   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1988905   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1988906   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1988907   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1988908   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1988909   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1988910   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1988911   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1988912   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1988913   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1988914   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1988915   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1988916   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1988917   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1988918   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1988919   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1988920   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1988921   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1988922   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1988923   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1988924   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1988925   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1988926   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1988927   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1988928   +END;
MPRINT(EM_DIAGRAM):   END;
1988929   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1988930   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1988931   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1988932   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1988933   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1988934   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1988935   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1988936   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1988937   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1988938   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1988939   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1988940   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1988941   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1988942   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1988943   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1988944   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1988945   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1988946   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1988947   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1988948   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1988949   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1988950   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1988951   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1988952   +   ELSE S_NumCatalogPurchases
1988953   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1988954   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1988955   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1988956   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1988957   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1988958   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1988959   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1988960   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1988961   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1988962   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1988963   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1988964   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1988965   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1988966   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1988967   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1988968   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1988969   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1988970   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1988971   +END;
MPRINT(EM_DIAGRAM):   END;
1988972   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988973   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1988974   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988975   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988976   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1988977   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988978   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988979   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1988980   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1988981   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1988982   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1988983   +          +    -0.12974862644982 * S_MntFishProducts
1988984   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1988985   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1988986   +          +    -0.12290326901613 * S_MntSweetProducts
1988987   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1988988   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1988989   +          +     0.09738032540137 * S_NumStorePurchases
1988990   +          +     0.44459515215205 * S_NumWebPurchases
1988991   +          +      0.8471075994578 * S_NumWebVisitsMonth
1988992   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1988993   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
1988994   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1988995   +          +     0.02406077596811 * S_MntFishProducts
1988996   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1988997   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1988998   +          +     -0.1147507059349 * S_MntSweetProducts
1988999   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1989000   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1989001   +          +    -0.23920969262322 * S_NumStorePurchases
1989002   +          +     -0.6008837862932 * S_NumWebPurchases
1989003   +          +     0.26759743722885 * S_NumWebVisitsMonth
1989004   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1989005   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
1989006   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1989007   +          +     0.04398331533724 * S_MntFishProducts
1989008   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1989009   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1989010   +          +     0.00552488718744 * S_MntSweetProducts
1989011   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1989012   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1989013   +          +     0.60058189155105 * S_NumStorePurchases
1989014   +          +     0.51423374855856 * S_NumWebPurchases
1989015   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1989016   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1989017   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1989018   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1989019   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1989020   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1989021   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1989022   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1989023   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1989024   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1989025   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1989026   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1989027   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1989028   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1989029   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1989030   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1989031   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1989032   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1989033   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1989034   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1989035   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1989036   +          +     0.52129580188513 * Marital_StatusDivorced
1989037   +          +     -1.5224490339553 * Marital_StatusMarried
1989038   +          +     1.05062906057771 * Marital_StatusSingle
1989039   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1989040   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1989041   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1989042   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1989043   +          +    -0.14428158063317 * Marital_StatusDivorced
1989044   +          +     0.22396926143356 * Marital_StatusMarried
1989045   +          +    -0.12980854818876 * Marital_StatusSingle
1989046   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1989047   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1989048   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1989049   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1989050   +          +    -0.25615797303064 * Marital_StatusDivorced
1989051   +          +     0.18825506199046 * Marital_StatusMarried
1989052   +          +    -0.24607556819871 * Marital_StatusSingle
1989053   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1989054   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1989055   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1989056   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1989057   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1989058   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1989059   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1989060   +END;
MPRINT(EM_DIAGRAM):   END;
1989061   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1989062   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1989063   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1989064   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1989065   +END;
MPRINT(EM_DIAGRAM):   END;
1989066   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989067   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1989068   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989069   +
1989070   +*** Generate dummy variables for DepVar ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for DepVar ;
1989071   +drop DepVar1 DepVar0 ;
MPRINT(EM_DIAGRAM):   drop DepVar1 DepVar0 ;
1989072   +label F_DepVar = 'From: DepVar' ;
MPRINT(EM_DIAGRAM):   label F_DepVar = 'From: DepVar' ;
1989073   +length F_DepVar $ 12;
MPRINT(EM_DIAGRAM):   length F_DepVar $ 12;
1989074   +F_DepVar = put( DepVar , BEST. );
MPRINT(EM_DIAGRAM):   F_DepVar = put( DepVar , BEST. );
1989075   +%DMNORMIP( F_DepVar )
MPRINT(DMNORMIP):   call dmnorm(F_DepVar,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989076   +if missing( DepVar ) then do;
MPRINT(EM_DIAGRAM):   if missing( DepVar ) then do;
1989077   +   DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1989078   +   DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1989079   +end;
MPRINT(EM_DIAGRAM):   end;
1989080   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989081   +   if F_DepVar = '0'  then do;
MPRINT(EM_DIAGRAM):   if F_DepVar = '0' then do;
1989082   +      DepVar1 = 0;
MPRINT(EM_DIAGRAM):   DepVar1 = 0;
1989083   +      DepVar0 = 1;
MPRINT(EM_DIAGRAM):   DepVar0 = 1;
1989084   +   end;
MPRINT(EM_DIAGRAM):   end;
1989085   +   else if F_DepVar = '1'  then do;
MPRINT(EM_DIAGRAM):   else if F_DepVar = '1' then do;
1989086   +      DepVar1 = 1;
MPRINT(EM_DIAGRAM):   DepVar1 = 1;
1989087   +      DepVar0 = 0;
MPRINT(EM_DIAGRAM):   DepVar0 = 0;
1989088   +   end;
MPRINT(EM_DIAGRAM):   end;
1989089   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989090   +      DepVar1 = .;
MPRINT(EM_DIAGRAM):   DepVar1 = .;
1989091   +      DepVar0 = .;
MPRINT(EM_DIAGRAM):   DepVar0 = .;
1989092   +   end;
MPRINT(EM_DIAGRAM):   end;
1989093   +end;
MPRINT(EM_DIAGRAM):   end;
1989094   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1989095   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1989096   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
1989097   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1989098   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1989099   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1989100   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1989101   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1989102   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1989103   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1989104   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1989105   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1989106   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1989107   +END;
MPRINT(EM_DIAGRAM):   END;
1989108   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1989109   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1989110   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1989111   +END;
MPRINT(EM_DIAGRAM):   END;
1989112   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1989113   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1989114   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1989115   +END;
MPRINT(EM_DIAGRAM):   END;
1989116   +*** *****************************;
MPRINT(EM_DIAGRAM):   *** *****************************;
1989117   +*** Writing the Residuals  of the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Residuals of the Node DepVar ;
1989118   +*** ******************************;
MPRINT(EM_DIAGRAM):   *** ******************************;
1989119   +IF MISSING( DepVar1 ) THEN R_DepVar1  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar1 ) THEN R_DepVar1 = . ;
1989120   +ELSE R_DepVar1  = DepVar1  - P_DepVar1 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar1 = DepVar1 - P_DepVar1 ;
1989121   +IF MISSING( DepVar0 ) THEN R_DepVar0  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( DepVar0 ) THEN R_DepVar0 = . ;
1989122   +ELSE R_DepVar0  = DepVar0  - P_DepVar0 ;
MPRINT(EM_DIAGRAM):   ELSE R_DepVar0 = DepVar0 - P_DepVar0 ;
1989123   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989124   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1989125   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989126   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1989127   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1989128   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1989129   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1989130   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1989131   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1989132   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1989133   +END;
MPRINT(EM_DIAGRAM):   END;
1989134   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1989135   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1989136   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1989137   +drop
1989138   +H11
1989139   +H12
1989140   +H13
1989141   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1989142   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
1989143   +* Renaming variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming variables for Neural32;
1989144   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989145   +* Renaming Posterior variables for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming Posterior variables for Neural32;
1989146   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989147   +drop Neural32_P_DepVar1;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar1;
1989148   +Neural32_P_DepVar1 = P_DepVar1;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar1 = P_DepVar1;
1989149   +drop Neural32_P_DepVar0;
MPRINT(EM_DIAGRAM):   drop Neural32_P_DepVar0;
1989150   +Neural32_P_DepVar0 = P_DepVar0;
MPRINT(EM_DIAGRAM):   Neural32_P_DepVar0 = P_DepVar0;
1989151   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989152   +* Renaming _WARN_ variable for Neural32;
MPRINT(EM_DIAGRAM):   * Renaming _WARN_ variable for Neural32;
1989153   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989154   +length Neural32_WARN_ $4;
MPRINT(EM_DIAGRAM):   length Neural32_WARN_ $4;
1989155   +drop Neural32_WARN_;
MPRINT(EM_DIAGRAM):   drop Neural32_WARN_;
1989156   +Neural32_WARN_ = _WARN_;
MPRINT(EM_DIAGRAM):   Neural32_WARN_ = _WARN_;
1989157   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989158   +* Ensmbl10: Average Posteriors of 3 models;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Average Posteriors of 3 models;
1989159   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989160   +P_DepVar1 = (
1989161   +Neural35_P_DepVar1 +
1989162   +Neural34_P_DepVar1 +
1989163   +Neural32_P_DepVar1
1989164   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar1 = ( Neural35_P_DepVar1 + Neural34_P_DepVar1 + 
Neural32_P_DepVar1 )/3;
1989165   +P_DepVar0 = (
1989166   +Neural35_P_DepVar0 +
1989167   +Neural34_P_DepVar0 +
1989168   +Neural32_P_DepVar0
1989169   +)/3;
MPRINT(EM_DIAGRAM):   P_DepVar0 = ( Neural35_P_DepVar0 + Neural34_P_DepVar0 + 
Neural32_P_DepVar0 )/3;
1989170   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989171   +* Ensmbl10: Computing Classification Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Classification Vars;
1989172   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989173   +length I_DepVar $32;
MPRINT(EM_DIAGRAM):   length I_DepVar $32;
WARNING: Length of character variable I_DepVar has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
1989174   +label I_DepVar = 'Into: DepVar';
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar';
1989175   +length _format $200;
MPRINT(EM_DIAGRAM):   length _format $200;
1989176   +drop _format;
MPRINT(EM_DIAGRAM):   drop _format;
1989177   +_format= ' ';
MPRINT(EM_DIAGRAM):   _format= ' ';
1989178   +_p_= 0;
MPRINT(EM_DIAGRAM):   _p_= 0;
1989179   +drop _p_;
MPRINT(EM_DIAGRAM):   drop _p_;
1989180   +if P_DepVar1 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar1 > _p_ then do;
1989181   +_p_= P_DepVar1;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar1;
1989182   +_format= '1';
MPRINT(EM_DIAGRAM):   _format= '1';
1989183   +end;
MPRINT(EM_DIAGRAM):   end;
1989184   +if P_DepVar0 > _p_ then do;
MPRINT(EM_DIAGRAM):   if P_DepVar0 > _p_ then do;
1989185   +_p_= P_DepVar0;
MPRINT(EM_DIAGRAM):   _p_= P_DepVar0;
1989186   +_format= '0';
MPRINT(EM_DIAGRAM):   _format= '0';
1989187   +end;
MPRINT(EM_DIAGRAM):   end;
1989188   +%DMNORMCP(_format,I_DepVar);
MPRINT(DMNORMCP):   I_DepVar=dmnorm(_format,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1989189   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989190   +* Ensmbl10: Producing Unformatted variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Producing Unformatted variable;
1989191   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989192   +label U_DepVar = "Unnormalized Into: DepVar";
MPRINT(EM_DIAGRAM):   label U_DepVar = "Unnormalized Into: DepVar";
1989193   +if I_DepVar = '1' then U_DepVar = 1;
MPRINT(EM_DIAGRAM):   if I_DepVar = '1' then U_DepVar = 1;
1989194   +else
1989195   +if I_DepVar = '0' then U_DepVar = 0;
MPRINT(EM_DIAGRAM):   else if I_DepVar = '0' then U_DepVar = 0;
1989196   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989197   +* Ensmbl10: Computing _WARN_ Variable;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing _WARN_ Variable;
1989198   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989199   +length _WARN_ $4;
MPRINT(EM_DIAGRAM):   length _WARN_ $4;
1989200   +label _WARN_ = 'Warnings';
MPRINT(EM_DIAGRAM):   label _WARN_ = 'Warnings';
1989201   +_WARN_ = '';
MPRINT(EM_DIAGRAM):   _WARN_ = '';
1989202   +if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1989202  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1989203   +if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1989203  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1989204   +if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1989204  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1989205   +if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1989205  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL35_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1989206   +if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1989206  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1989207   +if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1989207  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1989208   +if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1989208  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1989209   +if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1989209  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL34_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1989210   +if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then substr(_WARN_, 1, 1) ='M'
1989210  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'M') and ^index(_WARN_, 'M') then 
substr(_WARN_, 1, 1) ='M';
1989211   +if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then substr(_WARN_, 2, 1) ='U'
1989211  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'U') and ^index(_WARN_, 'U') then 
substr(_WARN_, 2, 1) ='U';
1989212   +if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then substr(_WARN_, 3, 1) ='P'
1989212  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'P') and ^index(_WARN_, 'P') then 
substr(_WARN_, 3, 1) ='P';
1989213   +if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then substr(_WARN_, 4, 1) ='C'
1989213  !+;
MPRINT(EM_DIAGRAM):   if index(NEURAL32_WARN_, 'C') and ^index(_WARN_, 'C') then 
substr(_WARN_, 4, 1) ='C';
1989214   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989215   +* Ensmbl10: Computing Residual Vars;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing Residual Vars;
1989216   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1989217   +if
1989218   +F_DepVar NE '1'
1989219   +AND F_DepVar NE '0'
1989220   +then do;
MPRINT(EM_DIAGRAM):   if F_DepVar NE '1' AND F_DepVar NE '0' then do;
1989221   +R_DepVar1 = .;
MPRINT(EM_DIAGRAM):   R_DepVar1 = .;
1989222   +R_DepVar0 = .;
MPRINT(EM_DIAGRAM):   R_DepVar0 = .;
1989223   +end;
MPRINT(EM_DIAGRAM):   end;
1989224   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989225   +R_DepVar1 = -P_DepVar1;
MPRINT(EM_DIAGRAM):   R_DepVar1 = -P_DepVar1;
1989226   +R_DepVar0 = -P_DepVar0;
MPRINT(EM_DIAGRAM):   R_DepVar0 = -P_DepVar0;
1989227   +SELECT(F_DepVar);
MPRINT(EM_DIAGRAM):   SELECT(F_DepVar);
1989228   +WHEN('1') R_DepVar1 = R_DepVar1 +1;
MPRINT(EM_DIAGRAM):   WHEN('1') R_DepVar1 = R_DepVar1 +1;
1989229   +WHEN('0') R_DepVar0 = R_DepVar0 +1;
MPRINT(EM_DIAGRAM):   WHEN('0') R_DepVar0 = R_DepVar0 +1;
1989230   +OTHERWISE;
MPRINT(EM_DIAGRAM):   OTHERWISE;
1989231   +END;
MPRINT(EM_DIAGRAM):   END;
1989232   +END;
MPRINT(EM_DIAGRAM):   END;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1989233    run;

NOTE: DATA STEP view saved on file EMWS8.ENSMBL10_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS8.NEURAL35_VALIDATE.VIEW used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1989234    quit;
1989235    filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpTrainFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl10_TRAIN end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Train: Target Variable" _NOBS_= "Train: Sum of 
Frequencies" _SSE_= "Train: Sum of Squared Errors" _MAX_= "Train: Maximum Absolute Error" 
_DIV_ = "Train: Divisor for ASE" _WRONG_= "Train: Number of Wrong Classifications" _DISF_= 
"Train: Frequency of Classified Cases" _MISC_= "Train: Misclassification Rate" _ASE_ = "Train: 
Average Squared Error" _RASE_ = "Train: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   set _tmpTrainFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   
MPRINT(CALFITSTATSNOMINAL):   data _tmpValidFitTable(keep=_TARGET_ _ASE_ _DIV_ _MAX_ _NOBS_ 
_RASE_ _SSE_ _DISF_ _MISC_ _WRONG_ rename=(_TARGET_=TARGET));
MPRINT(CALFITSTATSNOMINAL):   set EMWS8.Ensmbl10_VALIDATE end=eof;
MPRINT(CALFITSTATSNOMINAL):   length _TARGET_ $32;
MPRINT(CALFITSTATSNOMINAL):   length _ASE_ _DIV_ _MAX_ _NOBS_ _RASE_ _SSE_ _DISF_ _MISC_ 
_WRONG_ 8;
MPRINT(CALFITSTATSNOMINAL):   label _TARGET_ = "Valid: Target Variable" _NOBS_= "Valid: Sum of 
Frequencies" _SSE_= "Valid: Sum of Squared Errors" _MAX_= "Valid: Maximum Absolute Error" 
_DIV_ = "Valid: Divisor for ASE" _WRONG_= "Valid: Number of Wrong Classifications" _DISF_= 
"Valid: Frequency of Classified Cases" _MISC_= "Valid: Misclassification Rate" _ASE_ = "Valid: 
Average Squared Error" _RASE_ = "Valid: Root Average Squared Error";
MPRINT(CALFITSTATSNOMINAL):   retain _TARGET_ _WRONG_ _DIV_ _MAX_ _SSE_ _DISF_ _MISC_ _ASE_ 
_RASE_ ;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar1 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar1)*(R_DepVar1);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar1));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if R_DepVar0 ne . then do;
MPRINT(CALFITSTATSNOMINAL):   _SSE_ +(R_DepVar0)*(R_DepVar0);
MPRINT(CALFITSTATSNOMINAL):   _DIV_ +1;
MPRINT(CALFITSTATSNOMINAL):   _MAX_ =max(_MAX_ ,abs(R_DepVar0));
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if F_DepVar ne "" then do;
MPRINT(CALFITSTATSNOMINAL):   _DISF_+ 1;
MPRINT(CALFITSTATSNOMINAL):   _WRONG_+(F_DepVar ne I_DepVar);
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   if eof then do;
MPRINT(CALFITSTATSNOMINAL):   _TARGET_ = "DepVar";
MPRINT(CALFITSTATSNOMINAL):   _MAX = 0;
MPRINT(CALFITSTATSNOMINAL):   if _DISF_ ne 0 then do;
MPRINT(CALFITSTATSNOMINAL):   _MISC_=_WRONG_/_DISF_;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   _NOBS_ = _DIV_/2;
MPRINT(CALFITSTATSNOMINAL):   _ASE_=_SSE_/_DIV_;
MPRINT(CALFITSTATSNOMINAL):   _RASE_=sqrt(_ASE_);
MPRINT(CALFITSTATSNOMINAL):   output;
MPRINT(CALFITSTATSNOMINAL):   end;
MPRINT(CALFITSTATSNOMINAL):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _tmpdata_(DROP= TARGET);
MPRINT(EM_DIAGRAM):   set _tmpValidFitTable;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _tmpdata_;
MPRINT(EM_DIAGRAM):   set _tmpdata_;
MPRINT(EM_DIAGRAM):   rename _ASE_=_VASE_;
MPRINT(EM_DIAGRAM):   rename _DIV_=_VDIV_;
MPRINT(EM_DIAGRAM):   rename _MAX_=_VMAX_;
MPRINT(EM_DIAGRAM):   rename _NOBS_=_VNOBS_;
MPRINT(EM_DIAGRAM):   rename _RASE_=_VRASE_;
MPRINT(EM_DIAGRAM):   rename _SSE_=_VSSE_;
MPRINT(EM_DIAGRAM):   rename _DISF_=_VDISF_;
MPRINT(EM_DIAGRAM):   rename _MISC_=_VMISC_;
MPRINT(EM_DIAGRAM):   rename _WRONG_=_VWRONG_;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMOUTFIT;
MPRINT(EM_DIAGRAM):   merge EMWS8.Ensmbl10_EMOUTFIT _tmpdata_;
MPRINT(EM_DIAGRAM):   run;
1989295    filename _pref
1989295  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas";
1989296    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1989297    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural35\EMPUBLISHSCORE.sas.
1989298   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1989299   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1989300   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1989301   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1989302   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1989303   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1989304   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1989305   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1989306   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1989307   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1989308   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1989309   +LENGTH _WARN_ $4
1989310   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1989311   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1989312   +
1989313   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1989314   +
1989315   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1989316   +
1989317   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1989318   +
1989319   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1989320   +
1989321   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1989322   +
1989323   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1989324   +
1989325   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1989326   +
1989327   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1989328   +
1989329   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1989330   +
1989331   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1989332   +
1989333   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1989334   +
1989335   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1989336   +
1989337   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1989338   +
1989339   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1989340   +
1989341   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1989342   +
1989343   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1989344   +
1989345   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1989346   +
1989347   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1989348   +
1989349   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1989350   +
1989351   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1989352   +
1989353   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1989354   +
1989355   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1989356   +
1989357   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1989358   +
1989359   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1989360   +
1989361   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1989362   +
1989363   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1989364   +
1989365   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1989366   +
1989367   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1989368   +
1989369   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1989370   +
1989371   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1989372   +
1989373   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1989374   +
1989375   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1989376   +
1989377   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1989378   +
1989379   +      label H16 = 'Hidden: H1=6' ;
MPRINT(EM_DIAGRAM):   label H16 = 'Hidden: H1=6' ;
1989380   +
1989381   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1989382   +
1989383   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1989384   +
1989385   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1989386   +
1989387   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1989388   +
1989389   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1989390   +
1989391   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1989392   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1989393   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1989394   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1989395   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989396   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989397   +end;
MPRINT(EM_DIAGRAM):   end;
1989398   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989399   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1989400   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1989401   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989402   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1989403   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1989404   +   end;
MPRINT(EM_DIAGRAM):   end;
1989405   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1989406   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1989407   +   end;
MPRINT(EM_DIAGRAM):   end;
1989408   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989409   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1989410   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989411   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989412   +   end;
MPRINT(EM_DIAGRAM):   end;
1989413   +end;
MPRINT(EM_DIAGRAM):   end;
1989414   +
1989415   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1989416   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1989417   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1989418   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1989419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989421   +end;
MPRINT(EM_DIAGRAM):   end;
1989422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1989424   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1989425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989426   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1989427   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1989428   +   end;
MPRINT(EM_DIAGRAM):   end;
1989429   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1989430   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1989431   +   end;
MPRINT(EM_DIAGRAM):   end;
1989432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989433   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1989434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989436   +   end;
MPRINT(EM_DIAGRAM):   end;
1989437   +end;
MPRINT(EM_DIAGRAM):   end;
1989438   +
1989439   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1989440   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1989441   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1989442   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1989443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989445   +end;
MPRINT(EM_DIAGRAM):   end;
1989446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989447   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1989448   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1989449   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989450   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1989451   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1989452   +   end;
MPRINT(EM_DIAGRAM):   end;
1989453   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1989454   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1989455   +   end;
MPRINT(EM_DIAGRAM):   end;
1989456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989457   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1989458   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989459   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989460   +   end;
MPRINT(EM_DIAGRAM):   end;
1989461   +end;
MPRINT(EM_DIAGRAM):   end;
1989462   +
1989463   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1989464   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1989465   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1989466   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1989467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989469   +end;
MPRINT(EM_DIAGRAM):   end;
1989470   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989471   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1989472   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1989473   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989474   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1989475   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1989476   +   end;
MPRINT(EM_DIAGRAM):   end;
1989477   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1989478   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1989479   +   end;
MPRINT(EM_DIAGRAM):   end;
1989480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989481   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1989482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989484   +   end;
MPRINT(EM_DIAGRAM):   end;
1989485   +end;
MPRINT(EM_DIAGRAM):   end;
1989486   +
1989487   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1989488   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1989489   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1989490   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1989491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989493   +end;
MPRINT(EM_DIAGRAM):   end;
1989494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1989496   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1989497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989498   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1989499   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1989500   +   end;
MPRINT(EM_DIAGRAM):   end;
1989501   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1989502   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1989503   +   end;
MPRINT(EM_DIAGRAM):   end;
1989504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989505   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1989506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989508   +   end;
MPRINT(EM_DIAGRAM):   end;
1989509   +end;
MPRINT(EM_DIAGRAM):   end;
1989510   +
1989511   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1989512   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1989513   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1989514   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1989515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989517   +end;
MPRINT(EM_DIAGRAM):   end;
1989518   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989519   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1989520   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1989521   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989522   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1989523   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1989524   +   end;
MPRINT(EM_DIAGRAM):   end;
1989525   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1989526   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1989527   +   end;
MPRINT(EM_DIAGRAM):   end;
1989528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989529   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1989530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989532   +   end;
MPRINT(EM_DIAGRAM):   end;
1989533   +end;
MPRINT(EM_DIAGRAM):   end;
1989534   +
1989535   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1989536   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1989537   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1989538   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1989539   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1989540   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1989541   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1989542   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1989543   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1989544   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1989545   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1989546   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1989547   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989548   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989549   +end;
MPRINT(EM_DIAGRAM):   end;
1989550   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989551   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1989552   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1989553   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989554   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1989555   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1989556   +   end;
MPRINT(EM_DIAGRAM):   end;
1989557   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1989558   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1989559   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1989560   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1989561   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1989562   +   end;
MPRINT(EM_DIAGRAM):   end;
1989563   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1989564   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1989565   +   end;
MPRINT(EM_DIAGRAM):   end;
1989566   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1989567   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1989568   +   end;
MPRINT(EM_DIAGRAM):   end;
1989569   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1989570   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1989571   +   end;
MPRINT(EM_DIAGRAM):   end;
1989572   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989573   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1989574   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1989575   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1989576   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1989577   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989578   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989579   +   end;
MPRINT(EM_DIAGRAM):   end;
1989580   +end;
MPRINT(EM_DIAGRAM):   end;
1989581   +
1989582   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1989583   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1989584   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1989585   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1989586   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1989587   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1989588   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1989589   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1989590   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1989591   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1989592   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1989593   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1989594   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1989595   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1989596   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989597   +end;
MPRINT(EM_DIAGRAM):   end;
1989598   +else do;
MPRINT(EM_DIAGRAM):   else do;
1989599   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1989600   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1989601   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1989602   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1989603   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1989604   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1989605   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1989606   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1989607   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1989608   +         end;
MPRINT(EM_DIAGRAM):   end;
1989609   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1989610   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1989611   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1989612   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1989613   +            end;
MPRINT(EM_DIAGRAM):   end;
1989614   +         end;
MPRINT(EM_DIAGRAM):   end;
1989615   +      end;
MPRINT(EM_DIAGRAM):   end;
1989616   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1989617   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1989618   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1989619   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1989620   +         end;
MPRINT(EM_DIAGRAM):   end;
1989621   +      end;
MPRINT(EM_DIAGRAM):   end;
1989622   +   end;
MPRINT(EM_DIAGRAM):   end;
1989623   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1989624   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1989625   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1989626   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1989627   +      end;
MPRINT(EM_DIAGRAM):   end;
1989628   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1989629   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1989630   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1989631   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1989632   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1989633   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1989634   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1989635   +         end;
MPRINT(EM_DIAGRAM):   end;
1989636   +      end;
MPRINT(EM_DIAGRAM):   end;
1989637   +   end;
MPRINT(EM_DIAGRAM):   end;
1989638   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1989639   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1989640   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1989641   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1989642   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1989643   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1989644   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989645   +   end;
MPRINT(EM_DIAGRAM):   end;
1989646   +end;
MPRINT(EM_DIAGRAM):   end;
1989647   +
1989648   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989649   +*** Checking missing input Interval
1989650   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1989651   +
1989652   +IF NMISS(
1989653   +   Income ,
1989654   +   Kidhome ,
1989655   +   MntFishProducts ,
1989656   +   MntFruits ,
1989657   +   MntGoldProds ,
1989658   +   MntMeatProducts ,
1989659   +   MntSweetProducts ,
1989660   +   MntWines ,
1989661   +   NumCatalogPurchases ,
1989662   +   NumDealsPurchases ,
1989663   +   NumStorePurchases ,
1989664   +   NumWebPurchases ,
1989665   +   NumWebVisitsMonth ,
1989666   +   Recency ,
1989667   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1989668   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1989669   +
1989670   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1989671   +END;
MPRINT(EM_DIAGRAM):   END;
1989672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989673   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1989674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989675   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1989676   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1989677   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1989678   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1989679   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1989680   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1989681   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1989682   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1989683   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1989684   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1989685   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1989686   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1989687   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1989688   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1989689   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1989690   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1989691   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1989692   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1989693   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1989694   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1989695   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1989696   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1989697   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1989698   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1989699   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1989700   +END;
MPRINT(EM_DIAGRAM):   END;
1989701   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1989702   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1989703   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1989704   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1989705   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1989706   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1989707   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1989708   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1989709   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1989710   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1989711   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1989712   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1989713   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1989714   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1989715   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1989716   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1989717   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1989718   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1989719   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1989720   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1989721   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1989722   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1989723   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1989724   +   ELSE S_NumCatalogPurchases
1989725   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1989726   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1989727   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1989728   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1989729   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1989730   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1989731   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1989732   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1989733   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1989734   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1989735   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1989736   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1989737   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1989738   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1989739   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1989740   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1989741   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1989742   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1989743   +END;
MPRINT(EM_DIAGRAM):   END;
1989744   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989745   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1989746   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989747   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989748   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1989749   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989750   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989751   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1989752   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989753   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1989754   +   H11  =     0.87660114046125 * S_Income  +     -0.7994451897827 * S_Kidhome
1989755   +          +    -0.08967295716195 * S_MntFishProducts
1989756   +          +     0.03184635437516 * S_MntFruits  +    -0.13860895575438 *
1989757   +        S_MntGoldProds  +     0.55790460748169 * S_MntMeatProducts
1989758   +          +    -0.02806094557115 * S_MntSweetProducts
1989759   +          +    -0.14537763592724 * S_MntWines  +     0.76891266523847 *
1989760   +        S_NumCatalogPurchases  +     0.16842007461305 * S_NumDealsPurchases
1989761   +          +     0.25137876058262 * S_NumStorePurchases
1989762   +          +    -0.07865442401292 * S_NumWebPurchases
1989763   +          +     1.03197398967259 * S_NumWebVisitsMonth
1989764   +          +    -1.26907156503759 * S_Recency  +    -0.76016893316351 *
1989765   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 0.87660114046125 * S_Income + -0.7994451897827 * S_Kidhome + 
-0.08967295716195 * S_MntFishProducts + 0.03184635437516 * S_MntFruits + -0.13860895575438 * 
S_MntGoldProds + 0.55790460748169 * S_MntMeatProducts + -0.02806094557115 * S_MntSweetProducts 
+ -0.14537763592724 * S_MntWines + 0.76891266523847 * S_NumCatalogPurchases + 0.16842007461305 
* S_NumDealsPurchases + 0.25137876058262 * S_NumStorePurchases + -0.07865442401292 * 
S_NumWebPurchases + 1.03197398967259 * S_NumWebVisitsMonth + -1.26907156503759 * S_Recency + 
-0.76016893316351 * S_Teenhome ;
1989766   +   H12  =     0.37295000114468 * S_Income  +    -0.12834211496575 * S_Kidhome
1989767   +          +     0.19312392388912 * S_MntFishProducts
1989768   +          +      0.1561688289137 * S_MntFruits  +     0.04004810938796 *
1989769   +        S_MntGoldProds  +     0.32599201739588 * S_MntMeatProducts
1989770   +          +       0.204174263605 * S_MntSweetProducts
1989771   +          +    -0.11560784817014 * S_MntWines  +     0.12255073568725 *
1989772   +        S_NumCatalogPurchases  +    -0.05543734180218 * S_NumDealsPurchases
1989773   +          +     0.07747830335769 * S_NumStorePurchases
1989774   +          +     0.07960837555191 * S_NumWebPurchases
1989775   +          +     0.02351602389122 * S_NumWebVisitsMonth
1989776   +          +     -0.2840853952427 * S_Recency  +    -0.47421627761687 *
1989777   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.37295000114468 * S_Income + -0.12834211496575 * S_Kidhome + 
0.19312392388912 * S_MntFishProducts + 0.1561688289137 * S_MntFruits + 0.04004810938796 * 
S_MntGoldProds + 0.32599201739588 * S_MntMeatProducts + 0.204174263605 * S_MntSweetProducts + 
-0.11560784817014 * S_MntWines + 0.12255073568725 * S_NumCatalogPurchases + -0.05543734180218 
* S_NumDealsPurchases + 0.07747830335769 * S_NumStorePurchases + 0.07960837555191 * 
S_NumWebPurchases + 0.02351602389122 * S_NumWebVisitsMonth + -0.2840853952427 * S_Recency + 
-0.47421627761687 * S_Teenhome ;
1989778   +   H13  =    -0.33428925248315 * S_Income  +    -0.03845622730742 * S_Kidhome
1989779   +          +     0.18733919794636 * S_MntFishProducts
1989780   +          +     0.45907982190052 * S_MntFruits  +    -0.48776616433719 *
1989781   +        S_MntGoldProds  +    -0.41340481007204 * S_MntMeatProducts
1989782   +          +     0.42514606159239 * S_MntSweetProducts
1989783   +          +     0.20038001368787 * S_MntWines  +    -1.21708501803782 *
1989784   +        S_NumCatalogPurchases  +    -1.06820061274533 * S_NumDealsPurchases
1989785   +          +     0.36582106462789 * S_NumStorePurchases
1989786   +          +     0.04244777020435 * S_NumWebPurchases
1989787   +          +    -0.24296342902503 * S_NumWebVisitsMonth
1989788   +          +     0.27451716762947 * S_Recency  +     0.13110477325277 *
1989789   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.33428925248315 * S_Income + -0.03845622730742 * S_Kidhome + 
0.18733919794636 * S_MntFishProducts + 0.45907982190052 * S_MntFruits + -0.48776616433719 * 
S_MntGoldProds + -0.41340481007204 * S_MntMeatProducts + 0.42514606159239 * S_MntSweetProducts 
+ 0.20038001368787 * S_MntWines + -1.21708501803782 * S_NumCatalogPurchases + 
-1.06820061274533 * S_NumDealsPurchases + 0.36582106462789 * S_NumStorePurchases + 
0.04244777020435 * S_NumWebPurchases + -0.24296342902503 * S_NumWebVisitsMonth + 
0.27451716762947 * S_Recency + 0.13110477325277 * S_Teenhome ;
1989790   +   H14  =    -0.70493412542585 * S_Income  +     0.41202796606799 * S_Kidhome
1989791   +          +     0.05986489897572 * S_MntFishProducts
1989792   +          +    -0.05040531715469 * S_MntFruits  +       0.051068387592 *
1989793   +        S_MntGoldProds  +    -0.13581881662481 * S_MntMeatProducts
1989794   +          +    -0.05513370461072 * S_MntSweetProducts
1989795   +          +     0.77472084468819 * S_MntWines  +    -0.03211788969126 *
1989796   +        S_NumCatalogPurchases  +    -0.24097486430988 * S_NumDealsPurchases
1989797   +          +     0.64364674828841 * S_NumStorePurchases
1989798   +          +     0.15084748708424 * S_NumWebPurchases
1989799   +          +    -0.94144998356377 * S_NumWebVisitsMonth
1989800   +          +     1.16778338364599 * S_Recency  +     0.32089861635238 *
1989801   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = -0.70493412542585 * S_Income + 0.41202796606799 * S_Kidhome + 
0.05986489897572 * S_MntFishProducts + -0.05040531715469 * S_MntFruits + 0.051068387592 * 
S_MntGoldProds + -0.13581881662481 * S_MntMeatProducts + -0.05513370461072 * 
S_MntSweetProducts + 0.77472084468819 * S_MntWines + -0.03211788969126 * S_NumCatalogPurchases 
+ -0.24097486430988 * S_NumDealsPurchases + 0.64364674828841 * S_NumStorePurchases + 
0.15084748708424 * S_NumWebPurchases + -0.94144998356377 * S_NumWebVisitsMonth + 
1.16778338364599 * S_Recency + 0.32089861635238 * S_Teenhome ;
1989802   +   H15  =    -0.15703510827879 * S_Income  +    -0.30977841002562 * S_Kidhome
1989803   +          +    -0.14543196273578 * S_MntFishProducts
1989804   +          +     0.32223695896711 * S_MntFruits  +    -0.31846203211698 *
1989805   +        S_MntGoldProds  +     -1.4125160823105 * S_MntMeatProducts
1989806   +          +     0.49374793444169 * S_MntSweetProducts
1989807   +          +     0.39699716010219 * S_MntWines  +    -0.88140331687645 *
1989808   +        S_NumCatalogPurchases  +    -0.87657222813687 * S_NumDealsPurchases
1989809   +          +     1.23754786782746 * S_NumStorePurchases
1989810   +          +     1.11316667348511 * S_NumWebPurchases
1989811   +          +    -1.08592446439781 * S_NumWebVisitsMonth
1989812   +          +     0.66958517589542 * S_Recency  +     0.06799032788481 *
1989813   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.15703510827879 * S_Income + -0.30977841002562 * S_Kidhome + 
-0.14543196273578 * S_MntFishProducts + 0.32223695896711 * S_MntFruits + -0.31846203211698 * 
S_MntGoldProds + -1.4125160823105 * S_MntMeatProducts + 0.49374793444169 * S_MntSweetProducts 
+ 0.39699716010219 * S_MntWines + -0.88140331687645 * S_NumCatalogPurchases + 
-0.87657222813687 * S_NumDealsPurchases + 1.23754786782746 * S_NumStorePurchases + 
1.11316667348511 * S_NumWebPurchases + -1.08592446439781 * S_NumWebVisitsMonth + 
0.66958517589542 * S_Recency + 0.06799032788481 * S_Teenhome ;
1989814   +   H16  =    -0.10360901553583 * S_Income  +     0.39257497240865 * S_Kidhome
1989815   +          +     0.29549884005341 * S_MntFishProducts
1989816   +          +     0.04922491353914 * S_MntFruits  +     -0.1412659458221 *
1989817   +        S_MntGoldProds  +    -0.12361454534126 * S_MntMeatProducts
1989818   +          +    -0.11909215986981 * S_MntSweetProducts
1989819   +          +     0.11430484977092 * S_MntWines  +    -0.66235553839539 *
1989820   +        S_NumCatalogPurchases  +     0.17261763180198 * S_NumDealsPurchases
1989821   +          +     0.30109334594548 * S_NumStorePurchases
1989822   +          +     0.01985762767489 * S_NumWebPurchases
1989823   +          +     0.44965133281333 * S_NumWebVisitsMonth
1989824   +          +     0.32338634259192 * S_Recency  +    -0.04032956941805 *
1989825   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H16 = -0.10360901553583 * S_Income + 0.39257497240865 * S_Kidhome + 
0.29549884005341 * S_MntFishProducts + 0.04922491353914 * S_MntFruits + -0.1412659458221 * 
S_MntGoldProds + -0.12361454534126 * S_MntMeatProducts + -0.11909215986981 * 
S_MntSweetProducts + 0.11430484977092 * S_MntWines + -0.66235553839539 * S_NumCatalogPurchases 
+ 0.17261763180198 * S_NumDealsPurchases + 0.30109334594548 * S_NumStorePurchases + 
0.01985762767489 * S_NumWebPurchases + 0.44965133281333 * S_NumWebVisitsMonth + 
0.32338634259192 * S_Recency + -0.04032956941805 * S_Teenhome ;
1989826   +   H11  = H11  +    -0.23026310289024 * AcceptedCmp10
1989827   +          +    -0.82550012364234 * AcceptedCmp20  +    -0.67764228269441 *
1989828   +        AcceptedCmp30  +    -0.51547666117685 * AcceptedCmp40
1989829   +          +    -0.36424958084824 * AcceptedCmp50  +       0.119862855783 *
1989830   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.23026310289024 * AcceptedCmp10 + -0.82550012364234 * 
AcceptedCmp20 + -0.67764228269441 * AcceptedCmp30 + -0.51547666117685 * AcceptedCmp40 + 
-0.36424958084824 * AcceptedCmp50 + 0.119862855783 * Complain0 ;
1989831   +   H12  = H12  +     0.02722288857426 * AcceptedCmp10
1989832   +          +      0.1236576068539 * AcceptedCmp20  +    -0.31265425960737 *
1989833   +        AcceptedCmp30  +    -0.25076565034266 * AcceptedCmp40
1989834   +          +    -0.20158659730872 * AcceptedCmp50  +    -0.43687103612629 *
1989835   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.02722288857426 * AcceptedCmp10 + 0.1236576068539 * 
AcceptedCmp20 + -0.31265425960737 * AcceptedCmp30 + -0.25076565034266 * AcceptedCmp40 + 
-0.20158659730872 * AcceptedCmp50 + -0.43687103612629 * Complain0 ;
1989836   +   H13  = H13  +     0.21852176280571 * AcceptedCmp10
1989837   +          +     0.01727991436107 * AcceptedCmp20  +     0.19303261094625 *
1989838   +        AcceptedCmp30  +    -0.65492191560509 * AcceptedCmp40
1989839   +          +    -0.09636750660684 * AcceptedCmp50  +     0.07579128571046 *
1989840   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.21852176280571 * AcceptedCmp10 + 0.01727991436107 * 
AcceptedCmp20 + 0.19303261094625 * AcceptedCmp30 + -0.65492191560509 * AcceptedCmp40 + 
-0.09636750660684 * AcceptedCmp50 + 0.07579128571046 * Complain0 ;
1989841   +   H14  = H14  +     0.20819294353855 * AcceptedCmp10
1989842   +          +      0.5159102831901 * AcceptedCmp20  +     0.55295587458643 *
1989843   +        AcceptedCmp30  +     0.80682431419623 * AcceptedCmp40
1989844   +          +     0.74007057798158 * AcceptedCmp50  +     -0.4573052390807 *
1989845   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + 0.20819294353855 * AcceptedCmp10 + 0.5159102831901 * 
AcceptedCmp20 + 0.55295587458643 * AcceptedCmp30 + 0.80682431419623 * AcceptedCmp40 + 
0.74007057798158 * AcceptedCmp50 + -0.4573052390807 * Complain0 ;
1989846   +   H15  = H15  +     1.26330939420524 * AcceptedCmp10
1989847   +          +     0.29494505935793 * AcceptedCmp20  +     0.25561322032419 *
1989848   +        AcceptedCmp30  +     0.50102236777897 * AcceptedCmp40
1989849   +          +     0.20696267245027 * AcceptedCmp50  +    -0.00849145233901 *
1989850   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 1.26330939420524 * AcceptedCmp10 + 0.29494505935793 * 
AcceptedCmp20 + 0.25561322032419 * AcceptedCmp30 + 0.50102236777897 * AcceptedCmp40 + 
0.20696267245027 * AcceptedCmp50 + -0.00849145233901 * Complain0 ;
1989851   +   H16  = H16  +     0.03638428330381 * AcceptedCmp10
1989852   +          +     0.27994215452657 * AcceptedCmp20  +    -0.03861840445025 *
1989853   +        AcceptedCmp30  +      0.3398057347433 * AcceptedCmp40
1989854   +          +    -0.00738335957724 * AcceptedCmp50  +      0.0447804375799 *
1989855   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.03638428330381 * AcceptedCmp10 + 0.27994215452657 * 
AcceptedCmp20 + -0.03861840445025 * AcceptedCmp30 + 0.3398057347433 * AcceptedCmp40 + 
-0.00738335957724 * AcceptedCmp50 + 0.0447804375799 * Complain0 ;
1989856   +   H11  = H11  +     0.27482405283962 * Education2n_Cycle
1989857   +          +     0.11084012456612 * EducationBasic  +    -0.23835071987159 *
1989858   +        EducationGraduation  +    -0.10167082180552 * EducationMaster
1989859   +          +     0.51015833145636 * Marital_StatusDivorced
1989860   +          +     -1.1653662063616 * Marital_StatusMarried
1989861   +          +     1.19396547750441 * Marital_StatusSingle
1989862   +          +    -0.99605751789992 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.27482405283962 * Education2n_Cycle + 0.11084012456612 * 
EducationBasic + -0.23835071987159 * EducationGraduation + -0.10167082180552 * EducationMaster 
+ 0.51015833145636 * Marital_StatusDivorced + -1.1653662063616 * Marital_StatusMarried + 
1.19396547750441 * Marital_StatusSingle + -0.99605751789992 * Marital_StatusTogether ;
1989863   +   H12  = H12  +    -0.05268347704739 * Education2n_Cycle
1989864   +          +     0.19362065968028 * EducationBasic  +    -0.26784257195414 *
1989865   +        EducationGraduation  +     0.16650577465959 * EducationMaster
1989866   +          +     0.09154288513995 * Marital_StatusDivorced
1989867   +          +     0.06725684628382 * Marital_StatusMarried
1989868   +          +     0.11327659191494 * Marital_StatusSingle
1989869   +          +     0.01793778876811 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.05268347704739 * Education2n_Cycle + 0.19362065968028 * 
EducationBasic + -0.26784257195414 * EducationGraduation + 0.16650577465959 * EducationMaster 
+ 0.09154288513995 * Marital_StatusDivorced + 0.06725684628382 * Marital_StatusMarried + 
0.11327659191494 * Marital_StatusSingle + 0.01793778876811 * Marital_StatusTogether ;
1989870   +   H13  = H13  +     -0.1027084329077 * Education2n_Cycle
1989871   +          +    -0.01342449140757 * EducationBasic  +    -0.35627920427273 *
1989872   +        EducationGraduation  +    -0.05554656531793 * EducationMaster
1989873   +          +     0.37591653615852 * Marital_StatusDivorced
1989874   +          +    -0.05024236790132 * Marital_StatusMarried
1989875   +          +    -0.28317154997144 * Marital_StatusSingle
1989876   +          +    -0.19247490223101 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.1027084329077 * Education2n_Cycle + -0.01342449140757 * 
EducationBasic + -0.35627920427273 * EducationGraduation + -0.05554656531793 * EducationMaster 
+ 0.37591653615852 * Marital_StatusDivorced + -0.05024236790132 * Marital_StatusMarried + 
-0.28317154997144 * Marital_StatusSingle + -0.19247490223101 * Marital_StatusTogether ;
1989877   +   H14  = H14  +     -0.4162491480577 * Education2n_Cycle
1989878   +          +     0.38075572764074 * EducationBasic  +    -0.28169469529121 *
1989879   +        EducationGraduation  +       0.638986138084 * EducationMaster
1989880   +          +    -0.44885292450558 * Marital_StatusDivorced
1989881   +          +     0.78958791519299 * Marital_StatusMarried
1989882   +          +    -0.09688714431356 * Marital_StatusSingle
1989883   +          +     0.84239030196202 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.4162491480577 * Education2n_Cycle + 0.38075572764074 * 
EducationBasic + -0.28169469529121 * EducationGraduation + 0.638986138084 * EducationMaster + 
-0.44885292450558 * Marital_StatusDivorced + 0.78958791519299 * Marital_StatusMarried + 
-0.09688714431356 * Marital_StatusSingle + 0.84239030196202 * Marital_StatusTogether ;
1989884   +   H15  = H15  +     0.33126657974568 * Education2n_Cycle
1989885   +          +     0.44539039262703 * EducationBasic  +    -0.09154902903865 *
1989886   +        EducationGraduation  +    -0.26400363440725 * EducationMaster
1989887   +          +    -0.30801073895989 * Marital_StatusDivorced
1989888   +          +     -0.1285150749223 * Marital_StatusMarried
1989889   +          +     0.06775542164414 * Marital_StatusSingle
1989890   +          +    -0.13032366945766 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.33126657974568 * Education2n_Cycle + 0.44539039262703 * 
EducationBasic + -0.09154902903865 * EducationGraduation + -0.26400363440725 * EducationMaster 
+ -0.30801073895989 * Marital_StatusDivorced + -0.1285150749223 * Marital_StatusMarried + 
0.06775542164414 * Marital_StatusSingle + -0.13032366945766 * Marital_StatusTogether ;
1989891   +   H16  = H16  +     0.02030175222681 * Education2n_Cycle
1989892   +          +    -0.19579401096879 * EducationBasic  +      0.2070703930869 *
1989893   +        EducationGraduation  +    -0.40706983167068 * EducationMaster
1989894   +          +     0.22193599090368 * Marital_StatusDivorced
1989895   +          +    -0.54544672042168 * Marital_StatusMarried
1989896   +          +    -0.02237436019864 * Marital_StatusSingle
1989897   +          +    -0.21979468164854 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H16 = H16 + 0.02030175222681 * Education2n_Cycle + -0.19579401096879 * 
EducationBasic + 0.2070703930869 * EducationGraduation + -0.40706983167068 * EducationMaster + 
0.22193599090368 * Marital_StatusDivorced + -0.54544672042168 * Marital_StatusMarried + 
-0.02237436019864 * Marital_StatusSingle + -0.21979468164854 * Marital_StatusTogether ;
1989898   +   H11  =    -1.24550293901788 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.24550293901788 + H11 ;
1989899   +   H12  =     0.36762263942809 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.36762263942809 + H12 ;
1989900   +   H13  =     0.07010867577103 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = 0.07010867577103 + H13 ;
1989901   +   H14  =    -1.94014549272156 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = -1.94014549272156 + H14 ;
1989902   +   H15  =     0.17666656180153 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = 0.17666656180153 + H15 ;
1989903   +   H16  =    -1.64626406576709 + H16 ;
MPRINT(EM_DIAGRAM):   H16 = -1.64626406576709 + H16 ;
1989904   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1989905   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1989906   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1989907   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1989908   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1989909   +   H16  = TANH(H16 );
MPRINT(EM_DIAGRAM):   H16 = TANH(H16 );
1989910   +END;
MPRINT(EM_DIAGRAM):   END;
1989911   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1989912   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1989913   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1989914   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1989915   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1989916   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1989917   +   H16  = .;
MPRINT(EM_DIAGRAM):   H16 = .;
1989918   +END;
MPRINT(EM_DIAGRAM):   END;
1989919   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989920   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1989921   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989922   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1989923   +   P_DepVar1  =     4.21126046696691 * H11  +      0.6565061288056 * H12
1989924   +          +    -1.92484011508628 * H13  +    -3.74020722142387 * H14
1989925   +          +    -3.27353026762143 * H15  +     -1.2596922869974 * H16 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.21126046696691 * H11 + 0.6565061288056 * H12 + 
-1.92484011508628 * H13 + -3.74020722142387 * H14 + -3.27353026762143 * H15 + -1.2596922869974 
* H16 ;
1989926   +   P_DepVar1  =    -1.36806658950323 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -1.36806658950323 + P_DepVar1 ;
1989927   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1989928   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1989929   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1989930   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1989931   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1989932   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1989933   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1989934   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1989935   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1989936   +END;
MPRINT(EM_DIAGRAM):   END;
1989937   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1989938   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1989939   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1989940   +END;
MPRINT(EM_DIAGRAM):   END;
1989941   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1989942   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1989943   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1989944   +END;
MPRINT(EM_DIAGRAM):   END;
1989945   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989946   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1989947   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1989948   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1989949   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1989950   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1989951   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1989952   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1989953   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1989954   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1989955   +END;
MPRINT(EM_DIAGRAM):   END;
1989956   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1989957   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1989958   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1989959   +drop
1989960   +H11
1989961   +H12
1989962   +H13
1989963   +H14
1989964   +H15
1989965   +H16
1989966   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 H16 ;
1989967   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1989968    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1989969    quit;
1989970    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1989971    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1989972    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1989973    retain ID 2 Node "Neural35";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural35";
1989974    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1989975    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1989976    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1989977    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1989978    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 2016 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 2016 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1989979    proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_variableset out=_temp2(keep=NAME CREATOR);
1989980    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1989981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL35_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1989982    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1989983    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1989984    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1989985    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1989986    proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_train out=_meta(keep=NAME) noprint;
1989987    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1989988    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1989989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1989990    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1989991    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1989992    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1989993    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1989994    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1989995    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1989996    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1989996  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 970 rows and 5 columns.

1989997    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1989998    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1989999    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 970 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 970 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990000    filename _pref
1990000  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1990001    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1990002    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1990003   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1990004   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1990005   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1990006   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1990007   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1990008   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1990009    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1990010    quit;
1990011    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1990012    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1990013    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1990014    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1990015    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1990016    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990017    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1990018    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990019    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990020    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1990021    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990023    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990024    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1990025    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1990026    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990027    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1990028    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1990029    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1990030    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990031    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990032    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990033    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1990034    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990035    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990036    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1990037    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1990037  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1990038    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990039    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1990040    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 974 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990041    filename _pref
1990041  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1990042    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1990043    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1990044   +
1990045   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1990046   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1990046  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1990047   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1990048   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1990049   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1990050   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1990051   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1990052    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1990053    quit;
1990054    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1990055    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1990056    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1990057    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1990058    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1990059    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990060    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1990061    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990062    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990063    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1990064    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990065    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990066    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990067    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1990068    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1990069    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990070    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1990071    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990072    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1990073    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990074    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990075    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990076    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1990077    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990078    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990079    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1990080    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1990080  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1990081    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990082    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1990083    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 1013 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990084    filename _pref
1990084  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1990085    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1990086    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1990087   +
1990088   +
1990089   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1990090   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1990091   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1990092   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1990093   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1990094   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990095   +
1990096   +
1990097   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1990098   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1990099   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1990100   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1990101   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1990102   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990103   +
1990104   +
1990105   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1990106   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1990107   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1990108   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1990109   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1990110   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990111   +
1990112   +
1990113   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1990114   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1990115   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1990116   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1990117   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1990118   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990119   +
1990120   +
1990121   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1990122   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1990123   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1990124   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1990125   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1990126   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990127   +
1990128   +
1990129   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1990130   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1990131   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1990132   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1990133   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1990134   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990135   +
1990136   +
1990137   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1990138   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1990139   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1990140   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1990141   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1990142   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990143   +
1990144   +
1990145   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1990146   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1990147   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1990148   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1990149   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1990150   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1990151   +if
1990152   +_FILTERNORM1 not in ( '.')
1990153   + and
1990154   +_FILTERNORM2 not in ( '.')
1990155   + and
1990156   +_FILTERNORM3 not in ( '.')
1990157   + and
1990158   +_FILTERNORM4 not in ( '.')
1990159   + and
1990160   +_FILTERNORM5 not in ( '.')
1990161   + and
1990162   +_FILTERNORM6 not in ( '.')
1990163   + and
1990164   +_FILTERNORM7 not in ( ' ')
1990165   + and
1990166   +_FILTERNORM8 not in ( ' ')
1990167   +and
1990168   +( Dt_Customer ne .)
1990169   +and ( Income ne . and (Income<=107000))
1990170   +and ( Kidhome ne .)
1990171   +and ( MntFishProducts ne .)
1990172   +and ( MntFruits ne .)
1990173   +and ( MntGoldProds ne .)
1990174   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1990175   +and ( MntSweetProducts ne .)
1990176   +and ( MntWines ne .)
1990177   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1990178   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1990179   +and ( NumStorePurchases ne .)
1990180   +and ( NumWebPurchases ne .)
1990181   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1990182   +and ( Recency ne .)
1990183   +and ( Teenhome ne .)
1990184   +and ( Year_Birth ne .)
1990185   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1990186   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1990187   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1990188   +end;
MPRINT(EM_DIAGRAM):   end;
1990189   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1990190   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1990191    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1990192    quit;
1990193    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1990194    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1990195    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1990196    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1990197    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1990198    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990199    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1990200    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990201    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990202    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1990203    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990205    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990206    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1990207    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1990208    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990209    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1990210    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1990211    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1990212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990213    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990214    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990215    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1990216    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990217    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990218    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1990219    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1990219  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1990220    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990221    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1990222    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 1079 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990223    %macro varDept(fcmpdata=,id=);
1990224    %global nobs&id scoreFlag&id;
1990225    %let scoreFlag&id = 0;
1990226    %if &id=1 or ^&fcmpStart %then %do;
1990227    proc sort data=&fcmpdata out=_temp&id nodupkey;
1990228    by NAME;
1990229    where id=&id and LHS in( %let j=1;
1990230    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1990231    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1990232    "&var" %let j = %eval(&j+1);
1990233    %end;
1990234    );
1990235    run;
1990236    %let dsid = %sysfunc(open(_temp&id));
1990237    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1990238    %let dsid = %sysfunc(close(&dsid));
1990239    %if &&nobs&id %then %do;
1990240    %let scoreFlag&id = 1;
1990241    %let fcmpStart = 1;
1990242    %end;
1990243    %else %let fcmpStart = 0;
1990244    %end;
1990245    %else %do;
1990246    proc sort data=&fcmpdata out=_tempid;
1990247    where id=&id;
1990248    by LHS;
1990249    run;
1990250    %let dsid = %sysfunc(open(_tempid));
1990251    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1990252    %let dsid = %sysfunc(close(&dsid));
1990253    %if ^&&nobs&id %then %do;
1990254    proc datasets lib=work nolist;
1990255    delete _tempid;
1990256    run;
1990257    quit;
1990258    %end;
1990259    %else %do;
1990260    data _tempAll;
1990261    set %let j=%eval(&id-1);
1990262    %do x=1 %to &j;
1990263    %if &&nobs&x %then %do;
1990264    _temp&x %end;
1990265    %end;
1990266    ;
1990267    run;
1990268    proc sql;
1990269    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1990269  ! work._tempid p2 where p.name=p2.lhs;
1990270    quit;
1990271    data _temp&id;
1990272    set _temp&id;
1990273    where LHS ne '' and NAME ne '' and Node ne '';
1990274    run;
1990275    proc datasets lib=work nolist;
1990276    delete _tempAll;
1990277    run;
1990278    %let dsid = %sysfunc(open(_temp&id));
1990279    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1990280    %let dsid = %sysfunc(close(&dsid));
1990281    %if ^&&nobs&id %then %do;
1990282    proc datasets lib=work nolist;
1990283    delete _temp&id;
1990284    run;
1990285    quit;
1990286    %end;
1990287    %else %do;
1990288    %let scoreFlag&id = 1;
1990289    data _temp&id;
1990290    set _temp&id;
1990291    where LHS ne NAME and node ne '';
1990292    run;
1990293    %let dsid = %sysfunc(open(_temp&id));
1990294    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1990295    %let dsid = %sysfunc(close(&dsid));
1990296    %if ^&&nobs&id %then %do;
1990297    proc datasets lib=work nolist;
1990298    delete _temp&id;
1990299    run;
1990300    quit;
1990301    %end;
1990302    %else %do;
1990303    proc sort data=_temp&id nodupkey;
1990304    by LHS NAME;
1990305    run;
1990306    %end;
1990307    %end;
1990308    %end;
1990309    %end;
1990310    %mend varDept;
1990311    %macro optCode(outdata=fcmpdata);
1990312    %global fcmpStart;
1990313    %let fcmpStart = 0;
1990314    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1990315    %let NumNodes=9;
1990316    %do k=1 %to &NumNodes;
1990317    %vardept(fcmpdata=&outdata, id=&k);
1990318    %end;
1990319    %mend optCode;
1990320    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1990321    filename _pref
1990321  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas";
1990322    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1990323    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural34\EMPUBLISHSCORE.sas.
1990324   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1990325   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1990326   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1990327   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1990328   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1990329   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1990330   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1990331   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1990332   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1990333   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1990334   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1990335   +LENGTH _WARN_ $4
1990336   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1990337   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1990338   +
1990339   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1990340   +
1990341   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1990342   +
1990343   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1990344   +
1990345   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1990346   +
1990347   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1990348   +
1990349   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1990350   +
1990351   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1990352   +
1990353   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1990354   +
1990355   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1990356   +
1990357   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1990358   +
1990359   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1990360   +
1990361   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1990362   +
1990363   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1990364   +
1990365   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1990366   +
1990367   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1990368   +
1990369   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1990370   +
1990371   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1990372   +
1990373   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1990374   +
1990375   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1990376   +
1990377   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1990378   +
1990379   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1990380   +
1990381   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1990382   +
1990383   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1990384   +
1990385   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1990386   +
1990387   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1990388   +
1990389   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1990390   +
1990391   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1990392   +
1990393   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1990394   +
1990395   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1990396   +
1990397   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1990398   +
1990399   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1990400   +
1990401   +      label H14 = 'Hidden: H1=4' ;
MPRINT(EM_DIAGRAM):   label H14 = 'Hidden: H1=4' ;
1990402   +
1990403   +      label H15 = 'Hidden: H1=5' ;
MPRINT(EM_DIAGRAM):   label H15 = 'Hidden: H1=5' ;
1990404   +
1990405   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1990406   +
1990407   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1990408   +
1990409   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1990410   +
1990411   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1990412   +
1990413   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1990414   +
1990415   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1990416   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1990417   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1990418   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1990419   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990420   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990421   +end;
MPRINT(EM_DIAGRAM):   end;
1990422   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990423   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1990424   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1990425   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990426   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1990427   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1990428   +   end;
MPRINT(EM_DIAGRAM):   end;
1990429   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1990430   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1990431   +   end;
MPRINT(EM_DIAGRAM):   end;
1990432   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990433   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1990434   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990435   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990436   +   end;
MPRINT(EM_DIAGRAM):   end;
1990437   +end;
MPRINT(EM_DIAGRAM):   end;
1990438   +
1990439   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1990440   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1990441   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1990442   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1990443   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990444   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990445   +end;
MPRINT(EM_DIAGRAM):   end;
1990446   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990447   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1990448   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1990449   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990450   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1990451   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1990452   +   end;
MPRINT(EM_DIAGRAM):   end;
1990453   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1990454   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1990455   +   end;
MPRINT(EM_DIAGRAM):   end;
1990456   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990457   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1990458   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990459   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990460   +   end;
MPRINT(EM_DIAGRAM):   end;
1990461   +end;
MPRINT(EM_DIAGRAM):   end;
1990462   +
1990463   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1990464   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1990465   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1990466   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1990467   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990468   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990469   +end;
MPRINT(EM_DIAGRAM):   end;
1990470   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990471   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1990472   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1990473   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990474   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1990475   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1990476   +   end;
MPRINT(EM_DIAGRAM):   end;
1990477   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1990478   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1990479   +   end;
MPRINT(EM_DIAGRAM):   end;
1990480   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990481   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1990482   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990483   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990484   +   end;
MPRINT(EM_DIAGRAM):   end;
1990485   +end;
MPRINT(EM_DIAGRAM):   end;
1990486   +
1990487   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1990488   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1990489   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1990490   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1990491   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990492   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990493   +end;
MPRINT(EM_DIAGRAM):   end;
1990494   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990495   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1990496   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1990497   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990498   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1990499   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1990500   +   end;
MPRINT(EM_DIAGRAM):   end;
1990501   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1990502   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1990503   +   end;
MPRINT(EM_DIAGRAM):   end;
1990504   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990505   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1990506   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990507   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990508   +   end;
MPRINT(EM_DIAGRAM):   end;
1990509   +end;
MPRINT(EM_DIAGRAM):   end;
1990510   +
1990511   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1990512   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1990513   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1990514   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1990515   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990516   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990517   +end;
MPRINT(EM_DIAGRAM):   end;
1990518   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990519   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1990520   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1990521   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990522   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1990523   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1990524   +   end;
MPRINT(EM_DIAGRAM):   end;
1990525   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1990526   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1990527   +   end;
MPRINT(EM_DIAGRAM):   end;
1990528   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990529   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1990530   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990531   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990532   +   end;
MPRINT(EM_DIAGRAM):   end;
1990533   +end;
MPRINT(EM_DIAGRAM):   end;
1990534   +
1990535   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1990536   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1990537   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1990538   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1990539   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990540   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990541   +end;
MPRINT(EM_DIAGRAM):   end;
1990542   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990543   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1990544   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1990545   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990546   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1990547   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1990548   +   end;
MPRINT(EM_DIAGRAM):   end;
1990549   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1990550   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1990551   +   end;
MPRINT(EM_DIAGRAM):   end;
1990552   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990553   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1990554   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990555   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990556   +   end;
MPRINT(EM_DIAGRAM):   end;
1990557   +end;
MPRINT(EM_DIAGRAM):   end;
1990558   +
1990559   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1990560   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1990561   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1990562   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1990563   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1990564   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1990565   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1990566   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1990567   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1990568   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1990569   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1990570   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1990571   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990572   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990573   +end;
MPRINT(EM_DIAGRAM):   end;
1990574   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990575   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1990576   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1990577   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990578   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1990579   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1990580   +   end;
MPRINT(EM_DIAGRAM):   end;
1990581   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1990582   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1990583   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1990584   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1990585   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1990586   +   end;
MPRINT(EM_DIAGRAM):   end;
1990587   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1990588   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1990589   +   end;
MPRINT(EM_DIAGRAM):   end;
1990590   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1990591   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1990592   +   end;
MPRINT(EM_DIAGRAM):   end;
1990593   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1990594   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1990595   +   end;
MPRINT(EM_DIAGRAM):   end;
1990596   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990597   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1990598   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1990599   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1990600   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1990601   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990602   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990603   +   end;
MPRINT(EM_DIAGRAM):   end;
1990604   +end;
MPRINT(EM_DIAGRAM):   end;
1990605   +
1990606   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1990607   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1990608   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1990609   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1990610   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1990611   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1990612   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1990613   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1990614   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1990615   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1990616   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1990617   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1990618   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1990619   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1990620   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990621   +end;
MPRINT(EM_DIAGRAM):   end;
1990622   +else do;
MPRINT(EM_DIAGRAM):   else do;
1990623   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1990624   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1990625   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1990626   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1990627   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1990628   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1990629   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1990630   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1990631   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1990632   +         end;
MPRINT(EM_DIAGRAM):   end;
1990633   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1990634   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1990635   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1990636   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1990637   +            end;
MPRINT(EM_DIAGRAM):   end;
1990638   +         end;
MPRINT(EM_DIAGRAM):   end;
1990639   +      end;
MPRINT(EM_DIAGRAM):   end;
1990640   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1990641   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1990642   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1990643   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1990644   +         end;
MPRINT(EM_DIAGRAM):   end;
1990645   +      end;
MPRINT(EM_DIAGRAM):   end;
1990646   +   end;
MPRINT(EM_DIAGRAM):   end;
1990647   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1990648   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1990649   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1990650   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1990651   +      end;
MPRINT(EM_DIAGRAM):   end;
1990652   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1990653   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1990654   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1990655   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1990656   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1990657   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1990658   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1990659   +         end;
MPRINT(EM_DIAGRAM):   end;
1990660   +      end;
MPRINT(EM_DIAGRAM):   end;
1990661   +   end;
MPRINT(EM_DIAGRAM):   end;
1990662   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1990663   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1990664   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1990665   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1990666   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1990667   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1990668   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990669   +   end;
MPRINT(EM_DIAGRAM):   end;
1990670   +end;
MPRINT(EM_DIAGRAM):   end;
1990671   +
1990672   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990673   +*** Checking missing input Interval
1990674   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1990675   +
1990676   +IF NMISS(
1990677   +   Income ,
1990678   +   Kidhome ,
1990679   +   MntFishProducts ,
1990680   +   MntFruits ,
1990681   +   MntGoldProds ,
1990682   +   MntMeatProducts ,
1990683   +   MntSweetProducts ,
1990684   +   MntWines ,
1990685   +   NumCatalogPurchases ,
1990686   +   NumDealsPurchases ,
1990687   +   NumStorePurchases ,
1990688   +   NumWebPurchases ,
1990689   +   NumWebVisitsMonth ,
1990690   +   Recency ,
1990691   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1990692   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1990693   +
1990694   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1990695   +END;
MPRINT(EM_DIAGRAM):   END;
1990696   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990697   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1990698   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990699   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1990700   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1990701   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1990702   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1990703   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1990704   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1990705   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1990706   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1990707   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1990708   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1990709   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1990710   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1990711   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1990712   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1990713   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1990714   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1990715   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1990716   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1990717   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1990718   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1990719   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1990720   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1990721   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1990722   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1990723   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1990724   +END;
MPRINT(EM_DIAGRAM):   END;
1990725   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1990726   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1990727   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1990728   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1990729   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1990730   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1990731   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1990732   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1990733   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1990734   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1990735   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1990736   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1990737   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1990738   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1990739   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1990740   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1990741   +        MntMeatProducts ;
The SAS System

MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1990742   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1990743   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1990744   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1990745   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1990746   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1990747   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1990748   +   ELSE S_NumCatalogPurchases
1990749   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1990750   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1990751   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1990752   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1990753   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1990754   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1990755   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1990756   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1990757   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1990758   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1990759   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1990760   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1990761   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1990762   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1990763   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1990764   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1990765   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1990766   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1990767   +END;
MPRINT(EM_DIAGRAM):   END;
1990768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990769   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1990770   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990771   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990772   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1990773   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990774   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990775   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1990776   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990777   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1990778   +   H11  =    -0.81572379016921 * S_Income  +    -0.07670946585348 * S_Kidhome
1990779   +          +     0.24367603598167 * S_MntFishProducts
1990780   +          +     0.19692980127348 * S_MntFruits  +    -0.03926738185333 *
1990781   +        S_MntGoldProds  +    -0.20900804333353 * S_MntMeatProducts
1990782   +          +     0.34054806441484 * S_MntSweetProducts
1990783   +          +     0.65956211369383 * S_MntWines  +    -0.95375334578522 *
1990784   +        S_NumCatalogPurchases  +    -0.73124740368567 * S_NumDealsPurchases
1990785   +          +     0.98942946974575 * S_NumStorePurchases
1990786   +          +     0.89701206630103 * S_NumWebPurchases
1990787   +          +    -1.22878611472154 * S_NumWebVisitsMonth
1990788   +          +     1.44981870978354 * S_Recency  +     0.47533125686411 *
1990789   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = -0.81572379016921 * S_Income + -0.07670946585348 * S_Kidhome + 
0.24367603598167 * S_MntFishProducts + 0.19692980127348 * S_MntFruits + -0.03926738185333 * 
S_MntGoldProds + -0.20900804333353 * S_MntMeatProducts + 0.34054806441484 * S_MntSweetProducts 
+ 0.65956211369383 * S_MntWines + -0.95375334578522 * S_NumCatalogPurchases + 
-0.73124740368567 * S_NumDealsPurchases + 0.98942946974575 * S_NumStorePurchases + 
0.89701206630103 * S_NumWebPurchases + -1.22878611472154 * S_NumWebVisitsMonth + 
1.44981870978354 * S_Recency + 0.47533125686411 * S_Teenhome ;
1990790   +   H12  =    -0.18875145195495 * S_Income  +     0.42230998482453 * S_Kidhome
1990791   +          +     0.16683404689723 * S_MntFishProducts
1990792   +          +     0.32072658929401 * S_MntFruits  +    -0.12341748032201 *
1990793   +        S_MntGoldProds  +    -1.56478754527255 * S_MntMeatProducts
1990794   +          +     0.20389084548968 * S_MntSweetProducts
1990795   +          +     0.95592931625509 * S_MntWines  +    -0.69996817353755 *
1990796   +        S_NumCatalogPurchases  +    -0.92709806328697 * S_NumDealsPurchases
1990797   +          +     1.27164659640366 * S_NumStorePurchases
1990798   +          +     1.02122194207802 * S_NumWebPurchases
1990799   +          +     -1.5111033436803 * S_NumWebVisitsMonth
1990800   +          +     1.63712814901544 * S_Recency  +     0.14205116840572 *
1990801   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = -0.18875145195495 * S_Income + 0.42230998482453 * S_Kidhome + 
0.16683404689723 * S_MntFishProducts + 0.32072658929401 * S_MntFruits + -0.12341748032201 * 
S_MntGoldProds + -1.56478754527255 * S_MntMeatProducts + 0.20389084548968 * S_MntSweetProducts 
+ 0.95592931625509 * S_MntWines + -0.69996817353755 * S_NumCatalogPurchases + 
-0.92709806328697 * S_NumDealsPurchases + 1.27164659640366 * S_NumStorePurchases + 
1.02122194207802 * S_NumWebPurchases + -1.5111033436803 * S_NumWebVisitsMonth + 
1.63712814901544 * S_Recency + 0.14205116840572 * S_Teenhome ;
1990802   +   H13  =     1.02798705354163 * S_Income  +    -0.94411708781921 * S_Kidhome
1990803   +          +    -0.03345077166544 * S_MntFishProducts
1990804   +          +     0.00038440809349 * S_MntFruits  +    -0.05068379715712 *
1990805   +        S_MntGoldProds  +     1.00464705307582 * S_MntMeatProducts
1990806   +          +    -0.11948662500951 * S_MntSweetProducts
1990807   +          +    -0.52438819731252 * S_MntWines  +     0.98586904866769 *
1990808   +        S_NumCatalogPurchases  +     0.09015295226839 * S_NumDealsPurchases
1990809   +          +     0.22401914357376 * S_NumStorePurchases
1990810   +          +     0.04219877865976 * S_NumWebPurchases
1990811   +          +     1.21753334166036 * S_NumWebVisitsMonth
1990812   +          +    -1.33712212110081 * S_Recency  +    -0.47582856683655 *
1990813   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = 1.02798705354163 * S_Income + -0.94411708781921 * S_Kidhome + 
-0.03345077166544 * S_MntFishProducts + 0.00038440809349 * S_MntFruits + -0.05068379715712 * 
S_MntGoldProds + 1.00464705307582 * S_MntMeatProducts + -0.11948662500951 * S_MntSweetProducts 
+ -0.52438819731252 * S_MntWines + 0.98586904866769 * S_NumCatalogPurchases + 0.09015295226839 
* S_NumDealsPurchases + 0.22401914357376 * S_NumStorePurchases + 0.04219877865976 * 
S_NumWebPurchases + 1.21753334166036 * S_NumWebVisitsMonth + -1.33712212110081 * S_Recency + 
-0.47582856683655 * S_Teenhome ;
1990814   +   H14  =     0.91431429848834 * S_Income  +    -1.16289676557574 * S_Kidhome
1990815   +          +     0.31175257038578 * S_MntFishProducts
1990816   +          +     0.08080436076271 * S_MntFruits  +     0.15252288175851 *
1990817   +        S_MntGoldProds  +     0.21603546207654 * S_MntMeatProducts
1990818   +          +      0.0927253053382 * S_MntSweetProducts
1990819   +          +     0.05865323888304 * S_MntWines  +    -0.23426953728277 *
1990820   +        S_NumCatalogPurchases  +    -0.46451908614085 * S_NumDealsPurchases
1990821   +          +    -0.12667606349662 * S_NumStorePurchases
1990822   +          +     0.30148374518724 * S_NumWebPurchases
1990823   +          +     0.48934229701658 * S_NumWebVisitsMonth
1990824   +          +    -0.83754390793251 * S_Recency  +     -0.4576645462819 *
1990825   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H14 = 0.91431429848834 * S_Income + -1.16289676557574 * S_Kidhome + 
0.31175257038578 * S_MntFishProducts + 0.08080436076271 * S_MntFruits + 0.15252288175851 * 
S_MntGoldProds + 0.21603546207654 * S_MntMeatProducts + 0.0927253053382 * S_MntSweetProducts + 
0.05865323888304 * S_MntWines + -0.23426953728277 * S_NumCatalogPurchases + -0.46451908614085 
* S_NumDealsPurchases + -0.12667606349662 * S_NumStorePurchases + 0.30148374518724 * 
S_NumWebPurchases + 0.48934229701658 * S_NumWebVisitsMonth + -0.83754390793251 * S_Recency + 
-0.4576645462819 * S_Teenhome ;
1990826   +   H15  =    -0.58161501095664 * S_Income  +     -1.0333658128614 * S_Kidhome
1990827   +          +     0.42646725119177 * S_MntFishProducts
1990828   +          +     -0.3264621401658 * S_MntFruits  +    -0.74616728524532 *
1990829   +        S_MntGoldProds  +    -0.97572068716712 * S_MntMeatProducts
1990830   +          +    -0.01493605582616 * S_MntSweetProducts
1990831   +          +      0.0311636632685 * S_MntWines  +    -1.68599903767191 *
1990832   +        S_NumCatalogPurchases  +    -1.25052648798307 * S_NumDealsPurchases
1990833   +          +     0.54256744091258 * S_NumStorePurchases
1990834   +          +     0.43065931458468 * S_NumWebPurchases
1990835   +          +      0.5935561420466 * S_NumWebVisitsMonth
1990836   +          +    -0.45183418369624 * S_Recency  +     0.19260512629844 *
1990837   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H15 = -0.58161501095664 * S_Income + -1.0333658128614 * S_Kidhome + 
0.42646725119177 * S_MntFishProducts + -0.3264621401658 * S_MntFruits + -0.74616728524532 * 
S_MntGoldProds + -0.97572068716712 * S_MntMeatProducts + -0.01493605582616 * 
S_MntSweetProducts + 0.0311636632685 * S_MntWines + -1.68599903767191 * S_NumCatalogPurchases 
+ -1.25052648798307 * S_NumDealsPurchases + 0.54256744091258 * S_NumStorePurchases + 
0.43065931458468 * S_NumWebPurchases + 0.5935561420466 * S_NumWebVisitsMonth + 
-0.45183418369624 * S_Recency + 0.19260512629844 * S_Teenhome ;
1990838   +   H11  = H11  +     0.61503950219838 * AcceptedCmp10
1990839   +          +     0.02945207091619 * AcceptedCmp20  +     0.99151950769472 *
1990840   +        AcceptedCmp30  +     1.08987060401718 * AcceptedCmp40
1990841   +          +     0.45427753773024 * AcceptedCmp50  +    -1.03533951966815 *
1990842   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.61503950219838 * AcceptedCmp10 + 0.02945207091619 * 
AcceptedCmp20 + 0.99151950769472 * AcceptedCmp30 + 1.08987060401718 * AcceptedCmp40 + 
0.45427753773024 * AcceptedCmp50 + -1.03533951966815 * Complain0 ;
1990843   +   H12  = H12  +     0.83823476190401 * AcceptedCmp10
1990844   +          +      1.0793719601418 * AcceptedCmp20  +     0.68538854946581 *
1990845   +        AcceptedCmp30  +     1.00297565893339 * AcceptedCmp40
1990846   +          +     0.24586379991786 * AcceptedCmp50  +     0.15471251255301 *
1990847   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.83823476190401 * AcceptedCmp10 + 1.0793719601418 * 
AcceptedCmp20 + 0.68538854946581 * AcceptedCmp30 + 1.00297565893339 * AcceptedCmp40 + 
0.24586379991786 * AcceptedCmp50 + 0.15471251255301 * Complain0 ;
1990848   +   H13  = H13  +    -0.41486094438907 * AcceptedCmp10
1990849   +          +    -0.76586628449839 * AcceptedCmp20  +    -0.59695459523693 *
1990850   +        AcceptedCmp30  +    -0.30262159911837 * AcceptedCmp40
1990851   +          +    -0.61141171124182 * AcceptedCmp50  +    -0.01086235188835 *
1990852   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.41486094438907 * AcceptedCmp10 + -0.76586628449839 * 
AcceptedCmp20 + -0.59695459523693 * AcceptedCmp30 + -0.30262159911837 * AcceptedCmp40 + 
-0.61141171124182 * AcceptedCmp50 + -0.01086235188835 * Complain0 ;
1990853   +   H14  = H14  +    -0.09662858884082 * AcceptedCmp10
1990854   +          +    -0.48515652524171 * AcceptedCmp20  +    -0.37421451374399 *
1990855   +        AcceptedCmp30  +    -0.52889523891817 * AcceptedCmp40
1990856   +          +    -0.73518448275357 * AcceptedCmp50  +    -0.36065830718672 *
1990857   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.09662858884082 * AcceptedCmp10 + -0.48515652524171 * 
AcceptedCmp20 + -0.37421451374399 * AcceptedCmp30 + -0.52889523891817 * AcceptedCmp40 + 
-0.73518448275357 * AcceptedCmp50 + -0.36065830718672 * Complain0 ;
1990858   +   H15  = H15  +      0.2985143092641 * AcceptedCmp10
1990859   +          +    -0.06881934778393 * AcceptedCmp20  +    -0.02609197044604 *
1990860   +        AcceptedCmp30  +    -0.79105657447885 * AcceptedCmp40
1990861   +          +    -0.02286855144948 * AcceptedCmp50  +     0.02884650192784 *
1990862   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H15 = H15 + 0.2985143092641 * AcceptedCmp10 + -0.06881934778393 * 
AcceptedCmp20 + -0.02609197044604 * AcceptedCmp30 + -0.79105657447885 * AcceptedCmp40 + 
-0.02286855144948 * AcceptedCmp50 + 0.02884650192784 * Complain0 ;
1990863   +   H11  = H11  +    -0.41169946146301 * Education2n_Cycle
1990864   +          +      0.8448273504441 * EducationBasic  +    -1.02497956377347 *
1990865   +        EducationGraduation  +     0.43998321745211 * EducationMaster
1990866   +          +    -0.85912688909911 * Marital_StatusDivorced
1990867   +          +     0.81561401465875 * Marital_StatusMarried
1990868   +          +    -0.58324403081542 * Marital_StatusSingle
1990869   +          +      0.9348017085106 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.41169946146301 * Education2n_Cycle + 0.8448273504441 * 
EducationBasic + -1.02497956377347 * EducationGraduation + 0.43998321745211 * EducationMaster 
+ -0.85912688909911 * Marital_StatusDivorced + 0.81561401465875 * Marital_StatusMarried + 
-0.58324403081542 * Marital_StatusSingle + 0.9348017085106 * Marital_StatusTogether ;
1990870   +   H12  = H12  +     0.22828129841893 * Education2n_Cycle
1990871   +          +     0.47579227804033 * EducationBasic  +    -0.18165301263195 *
1990872   +        EducationGraduation  +    -0.16143431016405 * EducationMaster
1990873   +          +    -0.34784695867287 * Marital_StatusDivorced
1990874   +          +    -0.18194022182247 * Marital_StatusMarried
1990875   +          +    -0.10633185904164 * Marital_StatusSingle
1990876   +          +     0.13136125361628 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + 0.22828129841893 * Education2n_Cycle + 0.47579227804033 * 
EducationBasic + -0.18165301263195 * EducationGraduation + -0.16143431016405 * EducationMaster 
+ -0.34784695867287 * Marital_StatusDivorced + -0.18194022182247 * Marital_StatusMarried + 
-0.10633185904164 * Marital_StatusSingle + 0.13136125361628 * Marital_StatusTogether ;
1990877   +   H13  = H13  +     0.38705901043652 * Education2n_Cycle
1990878   +          +     0.19703188370189 * EducationBasic  +    -0.48062640599976 *
1990879   +        EducationGraduation  +     -0.3646621736273 * EducationMaster
1990880   +          +     0.61058752124466 * Marital_StatusDivorced
1990881   +          +    -1.38793808025141 * Marital_StatusMarried
1990882   +          +     1.10060737810944 * Marital_StatusSingle
1990883   +          +    -1.21250219018366 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.38705901043652 * Education2n_Cycle + 0.19703188370189 * 
EducationBasic + -0.48062640599976 * EducationGraduation + -0.3646621736273 * EducationMaster 
+ 0.61058752124466 * Marital_StatusDivorced + -1.38793808025141 * Marital_StatusMarried + 
1.10060737810944 * Marital_StatusSingle + -1.21250219018366 * Marital_StatusTogether ;
1990884   +   H14  = H14  +    -0.20576658115662 * Education2n_Cycle
1990885   +          +    -0.09185472034614 * EducationBasic  +    -0.43674210064447 *
1990886   +        EducationGraduation  +    -0.18154054746298 * EducationMaster
1990887   +          +     0.11973800573581 * Marital_StatusDivorced
1990888   +          +      -0.294635257911 * Marital_StatusMarried
1990889   +          +    -0.05399659601172 * Marital_StatusSingle
1990890   +          +     0.34207780606239 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H14 = H14 + -0.20576658115662 * Education2n_Cycle + -0.09185472034614 * 
EducationBasic + -0.43674210064447 * EducationGraduation + -0.18154054746298 * EducationMaster 
+ 0.11973800573581 * Marital_StatusDivorced + -0.294635257911 * Marital_StatusMarried + 
-0.05399659601172 * Marital_StatusSingle + 0.34207780606239 * Marital_StatusTogether ;
1990891   +   H15  = H15  +    -0.05553093684862 * Education2n_Cycle
1990892   +          +    -0.12898006732329 * EducationBasic  +    -0.16064118923518 *
1990893   +        EducationGraduation  +     -0.6431539624694 * EducationMaster
1990894   +          +     0.42838191659864 * Marital_StatusDivorced
1990895   +          +    -0.09150349181363 * Marital_StatusMarried
1990896   +          +    -0.33520164145276 * Marital_StatusSingle
1990897   +          +    -0.15253738713197 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H15 = H15 + -0.05553093684862 * Education2n_Cycle + -0.12898006732329 * 
EducationBasic + -0.16064118923518 * EducationGraduation + -0.6431539624694 * EducationMaster 
+ 0.42838191659864 * Marital_StatusDivorced + -0.09150349181363 * Marital_StatusMarried + 
-0.33520164145276 * Marital_StatusSingle + -0.15253738713197 * Marital_StatusTogether ;
1990898   +   H11  =     -1.5079478405973 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.5079478405973 + H11 ;
1990899   +   H12  =     0.03014958331993 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.03014958331993 + H12 ;
1990900   +   H13  =    -1.78098671165572 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -1.78098671165572 + H13 ;
1990901   +   H14  =     0.22179429743277 + H14 ;
MPRINT(EM_DIAGRAM):   H14 = 0.22179429743277 + H14 ;
1990902   +   H15  =    -2.06602107857898 + H15 ;
MPRINT(EM_DIAGRAM):   H15 = -2.06602107857898 + H15 ;
1990903   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1990904   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1990905   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1990906   +   H14  = TANH(H14 );
MPRINT(EM_DIAGRAM):   H14 = TANH(H14 );
1990907   +   H15  = TANH(H15 );
MPRINT(EM_DIAGRAM):   H15 = TANH(H15 );
1990908   +END;
MPRINT(EM_DIAGRAM):   END;
1990909   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1990910   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1990911   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1990912   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1990913   +   H14  = .;
MPRINT(EM_DIAGRAM):   H14 = .;
1990914   +   H15  = .;
MPRINT(EM_DIAGRAM):   H15 = .;
1990915   +END;
MPRINT(EM_DIAGRAM):   END;
1990916   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990917   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1990918   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990919   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1990920   +   P_DepVar1  =    -4.55666337815854 * H11  +    -4.04792544554995 * H12
1990921   +          +     4.56148127429284 * H13  +     2.36841344452371 * H14
1990922   +          +    -3.07371010011749 * H15 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -4.55666337815854 * H11 + -4.04792544554995 * H12 + 
4.56148127429284 * H13 + 2.36841344452371 * H14 + -3.07371010011749 * H15 ;
1990923   +   P_DepVar1  =    -0.83283406236136 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = -0.83283406236136 + P_DepVar1 ;
1990924   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1990925   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1990926   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1990927   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1990928   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1990929   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1990930   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1990931   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1990932   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1990933   +END;
MPRINT(EM_DIAGRAM):   END;
1990934   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1990935   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1990936   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1990937   +END;
MPRINT(EM_DIAGRAM):   END;
1990938   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1990939   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1990940   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1990941   +END;
MPRINT(EM_DIAGRAM):   END;
1990942   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990943   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1990944   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1990945   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1990946   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1990947   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1990948   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1990949   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1990950   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1990951   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1990952   +END;
MPRINT(EM_DIAGRAM):   END;
1990953   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1990954   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1990955   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1990956   +drop
1990957   +H11
1990958   +H12
1990959   +H13
1990960   +H14
1990961   +H15
1990962   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 H14 H15 ;
1990963   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1990964    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1990965    quit;
1990966    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1990967    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1990968    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1990969    retain ID 2 Node "Neural34";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural34";
1990970    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1990971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990972    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1990973    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990974    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1878 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1878 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990975    proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural34_variableset out=_temp2(keep=NAME CREATOR);
1990976    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990977    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL34_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990978    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990979    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1990980    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1990981    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990982    proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural34_train out=_meta(keep=NAME) noprint;
1990983    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1990984    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1990985    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990986    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990987    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1990988    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1990989    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1990990    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990991    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1990992    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1990992  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 924 rows and 5 columns.

1990993    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1990994    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1990995    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 924 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 924 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1990996    filename _pref
1990996  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1990997    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1990998    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1990999   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1991000   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1991001   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1991002   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1991003   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1991004   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1991005    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1991006    quit;
1991007    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1991008    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1991009    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1991010    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1991011    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1991012    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991013    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1991014    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991015    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991016    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1991017    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991018    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991019    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991020    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1991021    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1991022    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991023    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1991024    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1991025    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1991026    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991027    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991028    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991029    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1991030    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991031    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991032    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1991033    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1991033  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1991034    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991035    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1991036    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 928 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991037    filename _pref
1991037  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1991038    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1991039    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1991040   +
1991041   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1991042   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1991042  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1991043   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1991044   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1991045   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1991046   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1991047   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1991048    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1991049    quit;
1991050    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1991051    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1991052    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1991053    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1991054    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1991055    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991056    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1991057    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991058    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991059    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1991060    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991061    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991062    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991063    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1991064    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1991065    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991066    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1991067    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991068    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1991069    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991070    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991071    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991072    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1991073    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991074    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991075    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1991076    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1991076  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1991077    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991078    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1991079    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 967 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991080    filename _pref
1991080  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1991081    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1991082    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1991083   +
1991084   +
1991085   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1991086   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1991087   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1991088   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1991089   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1991090   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991091   +
1991092   +
1991093   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1991094   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1991095   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1991096   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1991097   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1991098   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991099   +
1991100   +
1991101   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1991102   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1991103   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1991104   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1991105   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1991106   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991107   +
1991108   +
1991109   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1991110   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1991111   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1991112   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1991113   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1991114   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991115   +
1991116   +
1991117   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1991118   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1991119   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1991120   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1991121   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1991122   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991123   +
1991124   +
1991125   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1991126   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1991127   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1991128   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1991129   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1991130   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991131   +
1991132   +
1991133   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1991134   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1991135   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1991136   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1991137   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1991138   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991139   +
1991140   +
1991141   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1991142   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1991143   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1991144   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1991145   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1991146   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1991147   +if
1991148   +_FILTERNORM1 not in ( '.')
1991149   + and
1991150   +_FILTERNORM2 not in ( '.')
1991151   + and
1991152   +_FILTERNORM3 not in ( '.')
1991153   + and
1991154   +_FILTERNORM4 not in ( '.')
1991155   + and
1991156   +_FILTERNORM5 not in ( '.')
1991157   + and
1991158   +_FILTERNORM6 not in ( '.')
1991159   + and
1991160   +_FILTERNORM7 not in ( ' ')
1991161   + and
1991162   +_FILTERNORM8 not in ( ' ')
1991163   +and
1991164   +( Dt_Customer ne .)
1991165   +and ( Income ne . and (Income<=107000))
1991166   +and ( Kidhome ne .)
1991167   +and ( MntFishProducts ne .)
1991168   +and ( MntFruits ne .)
1991169   +and ( MntGoldProds ne .)
1991170   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1991171   +and ( MntSweetProducts ne .)
1991172   +and ( MntWines ne .)
1991173   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1991174   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1991175   +and ( NumStorePurchases ne .)
1991176   +and ( NumWebPurchases ne .)
1991177   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1991178   +and ( Recency ne .)
1991179   +and ( Teenhome ne .)
1991180   +and ( Year_Birth ne .)
1991181   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1991182   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1991183   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1991184   +end;
MPRINT(EM_DIAGRAM):   end;
1991185   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1991186   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1991187    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1991188    quit;
1991189    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1991190    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1991191    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1991192    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1991193    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1991194    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991195    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1991196    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991197    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991198    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1991199    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991200    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991201    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991202    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1991203    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1991204    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991205    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1991206    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1991207    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1991208    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991209    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991210    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991211    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1991212    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991213    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991214    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1991215    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1991215  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1991216    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991217    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1991218    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 1033 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991219    %macro varDept(fcmpdata=,id=);
1991220    %global nobs&id scoreFlag&id;
1991221    %let scoreFlag&id = 0;
1991222    %if &id=1 or ^&fcmpStart %then %do;
1991223    proc sort data=&fcmpdata out=_temp&id nodupkey;
1991224    by NAME;
1991225    where id=&id and LHS in( %let j=1;
1991226    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1991227    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1991228    "&var" %let j = %eval(&j+1);
1991229    %end;
1991230    );
1991231    run;
1991232    %let dsid = %sysfunc(open(_temp&id));
1991233    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1991234    %let dsid = %sysfunc(close(&dsid));
1991235    %if &&nobs&id %then %do;
1991236    %let scoreFlag&id = 1;
1991237    %let fcmpStart = 1;
1991238    %end;
1991239    %else %let fcmpStart = 0;
1991240    %end;
1991241    %else %do;
1991242    proc sort data=&fcmpdata out=_tempid;
1991243    where id=&id;
1991244    by LHS;
1991245    run;
1991246    %let dsid = %sysfunc(open(_tempid));
1991247    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1991248    %let dsid = %sysfunc(close(&dsid));
1991249    %if ^&&nobs&id %then %do;
1991250    proc datasets lib=work nolist;
1991251    delete _tempid;
1991252    run;
1991253    quit;
1991254    %end;
1991255    %else %do;
1991256    data _tempAll;
1991257    set %let j=%eval(&id-1);
1991258    %do x=1 %to &j;
1991259    %if &&nobs&x %then %do;
1991260    _temp&x %end;
1991261    %end;
1991262    ;
1991263    run;
1991264    proc sql;
1991265    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1991265  ! work._tempid p2 where p.name=p2.lhs;
1991266    quit;
1991267    data _temp&id;
1991268    set _temp&id;
1991269    where LHS ne '' and NAME ne '' and Node ne '';
1991270    run;
1991271    proc datasets lib=work nolist;
1991272    delete _tempAll;
1991273    run;
1991274    %let dsid = %sysfunc(open(_temp&id));
1991275    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1991276    %let dsid = %sysfunc(close(&dsid));
1991277    %if ^&&nobs&id %then %do;
1991278    proc datasets lib=work nolist;
1991279    delete _temp&id;
1991280    run;
1991281    quit;
1991282    %end;
1991283    %else %do;
1991284    %let scoreFlag&id = 1;
1991285    data _temp&id;
1991286    set _temp&id;
1991287    where LHS ne NAME and node ne '';
1991288    run;
1991289    %let dsid = %sysfunc(open(_temp&id));
1991290    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1991291    %let dsid = %sysfunc(close(&dsid));
1991292    %if ^&&nobs&id %then %do;
1991293    proc datasets lib=work nolist;
1991294    delete _temp&id;
1991295    run;
1991296    quit;
1991297    %end;
1991298    %else %do;
1991299    proc sort data=_temp&id nodupkey;
1991300    by LHS NAME;
1991301    run;
1991302    %end;
1991303    %end;
1991304    %end;
1991305    %end;
1991306    %mend varDept;
1991307    %macro optCode(outdata=fcmpdata);
1991308    %global fcmpStart;
1991309    %let fcmpStart = 0;
1991310    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1991311    %let NumNodes=9;
1991312    %do k=1 %to &NumNodes;
1991313    %vardept(fcmpdata=&outdata, id=&k);
1991314    %end;
1991315    %mend optCode;
1991316    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1991317    filename _pref
1991317  ! "C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas";
1991318    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1991319    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Neural32\EMPUBLISHSCORE.sas.
1991320   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1991321   +*** Begin Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code for Neural;
1991322   +***********************************;
MPRINT(EM_DIAGRAM):   ***********************************;
1991323   +DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
MPRINT(EM_DIAGRAM):   DROP _DM_BAD _EPS _NOCL_ _MAX_ _MAXP_ _SUM_ _NTRIALS;
1991324   + _DM_BAD = 0;
MPRINT(EM_DIAGRAM):   _DM_BAD = 0;
1991325   + _NOCL_ = .;
MPRINT(EM_DIAGRAM):   _NOCL_ = .;
1991326   + _MAX_ = .;
MPRINT(EM_DIAGRAM):   _MAX_ = .;
1991327   + _MAXP_ = .;
MPRINT(EM_DIAGRAM):   _MAXP_ = .;
1991328   + _SUM_ = .;
MPRINT(EM_DIAGRAM):   _SUM_ = .;
1991329   + _NTRIALS = .;
MPRINT(EM_DIAGRAM):   _NTRIALS = .;
1991330   + _EPS =                1E-10;
MPRINT(EM_DIAGRAM):   _EPS = 1E-10;
1991331   +LENGTH _WARN_ $4
1991332   +;
MPRINT(EM_DIAGRAM):   LENGTH _WARN_ $4 ;
1991333   +      label S_Income = 'Standard: Income' ;
MPRINT(EM_DIAGRAM):   label S_Income = 'Standard: Income' ;
1991334   +
1991335   +      label S_Kidhome = 'Standard: Kidhome' ;
MPRINT(EM_DIAGRAM):   label S_Kidhome = 'Standard: Kidhome' ;
1991336   +
1991337   +      label S_MntFishProducts = 'Standard: MntFishProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntFishProducts = 'Standard: MntFishProducts' ;
1991338   +
1991339   +      label S_MntFruits = 'Standard: MntFruits' ;
MPRINT(EM_DIAGRAM):   label S_MntFruits = 'Standard: MntFruits' ;
1991340   +
1991341   +      label S_MntGoldProds = 'Standard: MntGoldProds' ;
MPRINT(EM_DIAGRAM):   label S_MntGoldProds = 'Standard: MntGoldProds' ;
1991342   +
1991343   +      label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntMeatProducts = 'Standard: MntMeatProducts' ;
1991344   +
1991345   +      label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
MPRINT(EM_DIAGRAM):   label S_MntSweetProducts = 'Standard: MntSweetProducts' ;
1991346   +
1991347   +      label S_MntWines = 'Standard: MntWines' ;
MPRINT(EM_DIAGRAM):   label S_MntWines = 'Standard: MntWines' ;
1991348   +
1991349   +      label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumCatalogPurchases = 'Standard: NumCatalogPurchases' ;
1991350   +
1991351   +      label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumDealsPurchases = 'Standard: NumDealsPurchases' ;
1991352   +
1991353   +      label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumStorePurchases = 'Standard: NumStorePurchases' ;
1991354   +
1991355   +      label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
MPRINT(EM_DIAGRAM):   label S_NumWebPurchases = 'Standard: NumWebPurchases' ;
1991356   +
1991357   +      label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
MPRINT(EM_DIAGRAM):   label S_NumWebVisitsMonth = 'Standard: NumWebVisitsMonth' ;
1991358   +
1991359   +      label S_Recency = 'Standard: Recency' ;
MPRINT(EM_DIAGRAM):   label S_Recency = 'Standard: Recency' ;
1991360   +
1991361   +      label S_Teenhome = 'Standard: Teenhome' ;
MPRINT(EM_DIAGRAM):   label S_Teenhome = 'Standard: Teenhome' ;
1991362   +
1991363   +      label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp10 = 'Dummy: AcceptedCmp1=0' ;
1991364   +
1991365   +      label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp20 = 'Dummy: AcceptedCmp2=0' ;
1991366   +
1991367   +      label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp30 = 'Dummy: AcceptedCmp3=0' ;
1991368   +
1991369   +      label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp40 = 'Dummy: AcceptedCmp4=0' ;
1991370   +
1991371   +      label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
MPRINT(EM_DIAGRAM):   label AcceptedCmp50 = 'Dummy: AcceptedCmp5=0' ;
1991372   +
1991373   +      label Complain0 = 'Dummy: Complain=0' ;
MPRINT(EM_DIAGRAM):   label Complain0 = 'Dummy: Complain=0' ;
1991374   +
1991375   +      label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
MPRINT(EM_DIAGRAM):   label Education2n_Cycle = 'Dummy: Education=2n Cycle' ;
1991376   +
1991377   +      label EducationBasic = 'Dummy: Education=Basic' ;
MPRINT(EM_DIAGRAM):   label EducationBasic = 'Dummy: Education=Basic' ;
1991378   +
1991379   +      label EducationGraduation = 'Dummy: Education=Graduation' ;
MPRINT(EM_DIAGRAM):   label EducationGraduation = 'Dummy: Education=Graduation' ;
1991380   +
1991381   +      label EducationMaster = 'Dummy: Education=Master' ;
MPRINT(EM_DIAGRAM):   label EducationMaster = 'Dummy: Education=Master' ;
1991382   +
1991383   +      label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusDivorced = 'Dummy: Marital_Status=Divorced' ;
1991384   +
1991385   +      label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusMarried = 'Dummy: Marital_Status=Married' ;
1991386   +
1991387   +      label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusSingle = 'Dummy: Marital_Status=Single' ;
1991388   +
1991389   +      label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
MPRINT(EM_DIAGRAM):   label Marital_StatusTogether = 'Dummy: Marital_Status=Together' ;
1991390   +
1991391   +      label H11 = 'Hidden: H1=1' ;
MPRINT(EM_DIAGRAM):   label H11 = 'Hidden: H1=1' ;
1991392   +
1991393   +      label H12 = 'Hidden: H1=2' ;
MPRINT(EM_DIAGRAM):   label H12 = 'Hidden: H1=2' ;
1991394   +
1991395   +      label H13 = 'Hidden: H1=3' ;
MPRINT(EM_DIAGRAM):   label H13 = 'Hidden: H1=3' ;
1991396   +
1991397   +      label I_DepVar = 'Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label I_DepVar = 'Into: DepVar' ;
1991398   +
1991399   +      label U_DepVar = 'Unnormalized Into: DepVar' ;
MPRINT(EM_DIAGRAM):   label U_DepVar = 'Unnormalized Into: DepVar' ;
1991400   +
1991401   +      label P_DepVar1 = 'Predicted: DepVar=1' ;
MPRINT(EM_DIAGRAM):   label P_DepVar1 = 'Predicted: DepVar=1' ;
1991402   +
1991403   +      label P_DepVar0 = 'Predicted: DepVar=0' ;
MPRINT(EM_DIAGRAM):   label P_DepVar0 = 'Predicted: DepVar=0' ;
1991404   +
1991405   +      label  _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
1991406   +
1991407   +*** Generate dummy variables for AcceptedCmp1 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp1 ;
1991408   +drop AcceptedCmp10 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp10 ;
1991409   +if missing( AcceptedCmp1 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp1 ) then do;
1991410   +   AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1991411   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991412   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991413   +end;
MPRINT(EM_DIAGRAM):   end;
1991414   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991415   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1991416   +   _dm12 = put( AcceptedCmp1 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp1 , BEST. );
1991417   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991418   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1991419   +      AcceptedCmp10 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = 1;
1991420   +   end;
MPRINT(EM_DIAGRAM):   end;
1991421   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1991422   +      AcceptedCmp10 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = -1;
1991423   +   end;
MPRINT(EM_DIAGRAM):   end;
1991424   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991425   +      AcceptedCmp10 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp10 = .;
1991426   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991427   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991428   +   end;
MPRINT(EM_DIAGRAM):   end;
1991429   +end;
MPRINT(EM_DIAGRAM):   end;
1991430   +
1991431   +*** Generate dummy variables for AcceptedCmp2 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp2 ;
1991432   +drop AcceptedCmp20 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp20 ;
1991433   +if missing( AcceptedCmp2 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp2 ) then do;
1991434   +   AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1991435   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991436   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991437   +end;
MPRINT(EM_DIAGRAM):   end;
1991438   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991439   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1991440   +   _dm12 = put( AcceptedCmp2 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp2 , BEST. );
1991441   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991442   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1991443   +      AcceptedCmp20 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = 1;
1991444   +   end;
MPRINT(EM_DIAGRAM):   end;
1991445   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1991446   +      AcceptedCmp20 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = -1;
1991447   +   end;
MPRINT(EM_DIAGRAM):   end;
1991448   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991449   +      AcceptedCmp20 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp20 = .;
1991450   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991451   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991452   +   end;
MPRINT(EM_DIAGRAM):   end;
1991453   +end;
MPRINT(EM_DIAGRAM):   end;
1991454   +
1991455   +*** Generate dummy variables for AcceptedCmp3 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp3 ;
1991456   +drop AcceptedCmp30 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp30 ;
1991457   +if missing( AcceptedCmp3 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp3 ) then do;
1991458   +   AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1991459   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991460   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991461   +end;
MPRINT(EM_DIAGRAM):   end;
1991462   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991463   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1991464   +   _dm12 = put( AcceptedCmp3 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp3 , BEST. );
1991465   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991466   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1991467   +      AcceptedCmp30 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = 1;
1991468   +   end;
MPRINT(EM_DIAGRAM):   end;
1991469   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1991470   +      AcceptedCmp30 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = -1;
1991471   +   end;
MPRINT(EM_DIAGRAM):   end;
1991472   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991473   +      AcceptedCmp30 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp30 = .;
1991474   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991475   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991476   +   end;
MPRINT(EM_DIAGRAM):   end;
1991477   +end;
MPRINT(EM_DIAGRAM):   end;
1991478   +
1991479   +*** Generate dummy variables for AcceptedCmp4 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp4 ;
1991480   +drop AcceptedCmp40 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp40 ;
1991481   +if missing( AcceptedCmp4 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp4 ) then do;
1991482   +   AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1991483   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991484   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991485   +end;
MPRINT(EM_DIAGRAM):   end;
1991486   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991487   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1991488   +   _dm12 = put( AcceptedCmp4 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp4 , BEST. );
1991489   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991490   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1991491   +      AcceptedCmp40 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = 1;
1991492   +   end;
MPRINT(EM_DIAGRAM):   end;
1991493   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1991494   +      AcceptedCmp40 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = -1;
1991495   +   end;
MPRINT(EM_DIAGRAM):   end;
1991496   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991497   +      AcceptedCmp40 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp40 = .;
1991498   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991499   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991500   +   end;
MPRINT(EM_DIAGRAM):   end;
1991501   +end;
MPRINT(EM_DIAGRAM):   end;
1991502   +
1991503   +*** Generate dummy variables for AcceptedCmp5 ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for AcceptedCmp5 ;
1991504   +drop AcceptedCmp50 ;
MPRINT(EM_DIAGRAM):   drop AcceptedCmp50 ;
1991505   +if missing( AcceptedCmp5 ) then do;
MPRINT(EM_DIAGRAM):   if missing( AcceptedCmp5 ) then do;
1991506   +   AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1991507   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991508   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991509   +end;
MPRINT(EM_DIAGRAM):   end;
1991510   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991511   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1991512   +   _dm12 = put( AcceptedCmp5 , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( AcceptedCmp5 , BEST. );
1991513   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991514   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1991515   +      AcceptedCmp50 = 1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = 1;
1991516   +   end;
MPRINT(EM_DIAGRAM):   end;
1991517   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1991518   +      AcceptedCmp50 = -1;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = -1;
1991519   +   end;
MPRINT(EM_DIAGRAM):   end;
1991520   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991521   +      AcceptedCmp50 = .;
MPRINT(EM_DIAGRAM):   AcceptedCmp50 = .;
1991522   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991523   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991524   +   end;
MPRINT(EM_DIAGRAM):   end;
1991525   +end;
MPRINT(EM_DIAGRAM):   end;
1991526   +
1991527   +*** Generate dummy variables for Complain ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Complain ;
1991528   +drop Complain0 ;
MPRINT(EM_DIAGRAM):   drop Complain0 ;
1991529   +if missing( Complain ) then do;
MPRINT(EM_DIAGRAM):   if missing( Complain ) then do;
1991530   +   Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1991531   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991532   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991533   +end;
MPRINT(EM_DIAGRAM):   end;
1991534   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991535   +   length _dm12 $ 12; drop _dm12 ;
MPRINT(EM_DIAGRAM):   length _dm12 $ 12;
MPRINT(EM_DIAGRAM):   drop _dm12 ;
1991536   +   _dm12 = put( Complain , BEST. );
MPRINT(EM_DIAGRAM):   _dm12 = put( Complain , BEST. );
1991537   +   %DMNORMIP( _dm12 )
MPRINT(DMNORMIP):   call dmnorm(_dm12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991538   +   if _dm12 = '0'  then do;
MPRINT(EM_DIAGRAM):   if _dm12 = '0' then do;
1991539   +      Complain0 = 1;
MPRINT(EM_DIAGRAM):   Complain0 = 1;
1991540   +   end;
MPRINT(EM_DIAGRAM):   end;
1991541   +   else if _dm12 = '1'  then do;
MPRINT(EM_DIAGRAM):   else if _dm12 = '1' then do;
1991542   +      Complain0 = -1;
MPRINT(EM_DIAGRAM):   Complain0 = -1;
1991543   +   end;
MPRINT(EM_DIAGRAM):   end;
1991544   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991545   +      Complain0 = .;
MPRINT(EM_DIAGRAM):   Complain0 = .;
1991546   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991547   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991548   +   end;
MPRINT(EM_DIAGRAM):   end;
1991549   +end;
MPRINT(EM_DIAGRAM):   end;
1991550   +
1991551   +*** Generate dummy variables for Education ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Education ;
1991552   +drop Education2n_Cycle EducationBasic EducationGraduation EducationMaster ;
MPRINT(EM_DIAGRAM):   drop Education2n_Cycle EducationBasic EducationGraduation 
EducationMaster ;
1991553   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1991554   +Education2n_Cycle = 0;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 0;
1991555   +EducationBasic = 0;
MPRINT(EM_DIAGRAM):   EducationBasic = 0;
1991556   +EducationGraduation = 0;
MPRINT(EM_DIAGRAM):   EducationGraduation = 0;
1991557   +EducationMaster = 0;
MPRINT(EM_DIAGRAM):   EducationMaster = 0;
1991558   +if missing( Education ) then do;
MPRINT(EM_DIAGRAM):   if missing( Education ) then do;
1991559   +   Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1991560   +   EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1991561   +   EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1991562   +   EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1991563   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991564   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991565   +end;
MPRINT(EM_DIAGRAM):   end;
1991566   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991567   +   length _dm10 $ 10; drop _dm10 ;
MPRINT(EM_DIAGRAM):   length _dm10 $ 10;
MPRINT(EM_DIAGRAM):   drop _dm10 ;
1991568   +   _dm10 = put( Education , $10. );
MPRINT(EM_DIAGRAM):   _dm10 = put( Education , $10. );
1991569   +   %DMNORMIP( _dm10 )
MPRINT(DMNORMIP):   call dmnorm(_dm10,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991570   +   if _dm10 = 'GRADUATION'  then do;
MPRINT(EM_DIAGRAM):   if _dm10 = 'GRADUATION' then do;
1991571   +      EducationGraduation = 1;
MPRINT(EM_DIAGRAM):   EducationGraduation = 1;
1991572   +   end;
MPRINT(EM_DIAGRAM):   end;
1991573   +   else if _dm10 = 'PHD'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'PHD' then do;
1991574   +      Education2n_Cycle = -1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = -1;
1991575   +      EducationBasic = -1;
MPRINT(EM_DIAGRAM):   EducationBasic = -1;
1991576   +      EducationGraduation = -1;
MPRINT(EM_DIAGRAM):   EducationGraduation = -1;
1991577   +      EducationMaster = -1;
MPRINT(EM_DIAGRAM):   EducationMaster = -1;
1991578   +   end;
MPRINT(EM_DIAGRAM):   end;
1991579   +   else if _dm10 = 'MASTER'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'MASTER' then do;
1991580   +      EducationMaster = 1;
MPRINT(EM_DIAGRAM):   EducationMaster = 1;
1991581   +   end;
MPRINT(EM_DIAGRAM):   end;
1991582   +   else if _dm10 = '2N CYCLE'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = '2N CYCLE' then do;
1991583   +      Education2n_Cycle = 1;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = 1;
1991584   +   end;
MPRINT(EM_DIAGRAM):   end;
1991585   +   else if _dm10 = 'BASIC'  then do;
MPRINT(EM_DIAGRAM):   else if _dm10 = 'BASIC' then do;
1991586   +      EducationBasic = 1;
MPRINT(EM_DIAGRAM):   EducationBasic = 1;
1991587   +   end;
MPRINT(EM_DIAGRAM):   end;
1991588   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991589   +      Education2n_Cycle = .;
MPRINT(EM_DIAGRAM):   Education2n_Cycle = .;
1991590   +      EducationBasic = .;
MPRINT(EM_DIAGRAM):   EducationBasic = .;
1991591   +      EducationGraduation = .;
MPRINT(EM_DIAGRAM):   EducationGraduation = .;
1991592   +      EducationMaster = .;
MPRINT(EM_DIAGRAM):   EducationMaster = .;
1991593   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991594   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991595   +   end;
MPRINT(EM_DIAGRAM):   end;
1991596   +end;
MPRINT(EM_DIAGRAM):   end;
1991597   +
1991598   +*** Generate dummy variables for Marital_Status ;
MPRINT(EM_DIAGRAM):   *** Generate dummy variables for Marital_Status ;
1991599   +drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle
1991600   +        Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   drop Marital_StatusDivorced Marital_StatusMarried Marital_StatusSingle 
Marital_StatusTogether ;
1991601   +*** encoding is sparse, initialize to zero;
MPRINT(EM_DIAGRAM):   *** encoding is sparse, initialize to zero;
1991602   +Marital_StatusDivorced = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 0;
1991603   +Marital_StatusMarried = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 0;
1991604   +Marital_StatusSingle = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 0;
1991605   +Marital_StatusTogether = 0;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 0;
1991606   +if missing( Marital_Status ) then do;
MPRINT(EM_DIAGRAM):   if missing( Marital_Status ) then do;
1991607   +   Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1991608   +   Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1991609   +   Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1991610   +   Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1991611   +   substr(_warn_,1,1) = 'M';
MPRINT(EM_DIAGRAM):   substr(_warn_,1,1) = 'M';
1991612   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991613   +end;
MPRINT(EM_DIAGRAM):   end;
1991614   +else do;
MPRINT(EM_DIAGRAM):   else do;
1991615   +   length _dm8 $ 8; drop _dm8 ;
MPRINT(EM_DIAGRAM):   length _dm8 $ 8;
MPRINT(EM_DIAGRAM):   drop _dm8 ;
1991616   +   _dm8 = put( Marital_Status , $8. );
MPRINT(EM_DIAGRAM):   _dm8 = put( Marital_Status , $8. );
1991617   +   %DMNORMIP( _dm8 )
MPRINT(DMNORMIP):   call dmnorm(_dm8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
1991618   +   _dm_find = 0; drop _dm_find;
MPRINT(EM_DIAGRAM):   _dm_find = 0;
MPRINT(EM_DIAGRAM):   drop _dm_find;
1991619   +   if _dm8 <= 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'SINGLE' then do;
1991620   +      if _dm8 <= 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 <= 'MARRIED' then do;
1991621   +         if _dm8 = 'DIVORCED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'DIVORCED' then do;
1991622   +            Marital_StatusDivorced = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = 1;
1991623   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1991624   +         end;
MPRINT(EM_DIAGRAM):   end;
1991625   +         else do;
MPRINT(EM_DIAGRAM):   else do;
1991626   +            if _dm8 = 'MARRIED'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'MARRIED' then do;
1991627   +               Marital_StatusMarried = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = 1;
1991628   +               _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1991629   +            end;
MPRINT(EM_DIAGRAM):   end;
1991630   +         end;
MPRINT(EM_DIAGRAM):   end;
1991631   +      end;
MPRINT(EM_DIAGRAM):   end;
1991632   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1991633   +         if _dm8 = 'SINGLE'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'SINGLE' then do;
1991634   +            Marital_StatusSingle = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = 1;
1991635   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1991636   +         end;
MPRINT(EM_DIAGRAM):   end;
1991637   +      end;
MPRINT(EM_DIAGRAM):   end;
1991638   +   end;
MPRINT(EM_DIAGRAM):   end;
1991639   +   else do;
MPRINT(EM_DIAGRAM):   else do;
1991640   +      if _dm8 = 'TOGETHER'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'TOGETHER' then do;
1991641   +         Marital_StatusTogether = 1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = 1;
1991642   +         _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1991643   +      end;
MPRINT(EM_DIAGRAM):   end;
1991644   +      else do;
MPRINT(EM_DIAGRAM):   else do;
1991645   +         if _dm8 = 'WIDOW'  then do;
MPRINT(EM_DIAGRAM):   if _dm8 = 'WIDOW' then do;
1991646   +            Marital_StatusDivorced = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = -1;
1991647   +            Marital_StatusMarried = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = -1;
1991648   +            Marital_StatusSingle = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = -1;
1991649   +            Marital_StatusTogether = -1;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = -1;
1991650   +            _dm_find = 1;
MPRINT(EM_DIAGRAM):   _dm_find = 1;
1991651   +         end;
MPRINT(EM_DIAGRAM):   end;
1991652   +      end;
MPRINT(EM_DIAGRAM):   end;
1991653   +   end;
MPRINT(EM_DIAGRAM):   end;
1991654   +   if not _dm_find then do;
MPRINT(EM_DIAGRAM):   if not _dm_find then do;
1991655   +      Marital_StatusDivorced = .;
MPRINT(EM_DIAGRAM):   Marital_StatusDivorced = .;
1991656   +      Marital_StatusMarried = .;
MPRINT(EM_DIAGRAM):   Marital_StatusMarried = .;
1991657   +      Marital_StatusSingle = .;
MPRINT(EM_DIAGRAM):   Marital_StatusSingle = .;
1991658   +      Marital_StatusTogether = .;
MPRINT(EM_DIAGRAM):   Marital_StatusTogether = .;
1991659   +      substr(_warn_,2,1) = 'U';
MPRINT(EM_DIAGRAM):   substr(_warn_,2,1) = 'U';
1991660   +      _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991661   +   end;
MPRINT(EM_DIAGRAM):   end;
1991662   +end;
MPRINT(EM_DIAGRAM):   end;
1991663   +
1991664   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991665   +*** Checking missing input Interval
1991666   +*** *************************;
MPRINT(EM_DIAGRAM):   *** Checking missing input Interval *** *************************;
1991667   +
1991668   +IF NMISS(
1991669   +   Income ,
1991670   +   Kidhome ,
1991671   +   MntFishProducts ,
1991672   +   MntFruits ,
1991673   +   MntGoldProds ,
1991674   +   MntMeatProducts ,
1991675   +   MntSweetProducts ,
1991676   +   MntWines ,
1991677   +   NumCatalogPurchases ,
1991678   +   NumDealsPurchases ,
1991679   +   NumStorePurchases ,
1991680   +   NumWebPurchases ,
1991681   +   NumWebVisitsMonth ,
1991682   +   Recency ,
1991683   +   Teenhome   ) THEN DO;
MPRINT(EM_DIAGRAM):   IF NMISS( Income , Kidhome , MntFishProducts , MntFruits , MntGoldProds 
, MntMeatProducts , MntSweetProducts , MntWines , NumCatalogPurchases , NumDealsPurchases , 
NumStorePurchases , NumWebPurchases , NumWebVisitsMonth , Recency , Teenhome ) THEN DO;
1991684   +   SUBSTR(_WARN_, 1, 1) = 'M';
MPRINT(EM_DIAGRAM):   SUBSTR(_WARN_, 1, 1) = 'M';
1991685   +
1991686   +   _DM_BAD = 1;
MPRINT(EM_DIAGRAM):   _DM_BAD = 1;
1991687   +END;
MPRINT(EM_DIAGRAM):   END;
1991688   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991689   +*** Writing the Node intvl ;
MPRINT(EM_DIAGRAM):   *** Writing the Node intvl ;
1991690   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991691   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1991692   +   S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1991693   +   S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1991694   +   S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1991695   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1991696   +   S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits ;
MPRINT(EM_DIAGRAM):   S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1991697   +   S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1991698   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds ;
1991699   +   S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1991700   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1991701   +   S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1991702   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1991703   +   S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1991704   +   S_NumCatalogPurchases  =     -0.9539494374694 +     0.36073207463401 *
1991705   +        NumCatalogPurchases ;
MPRINT(EM_DIAGRAM):   S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1991706   +   S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1991707   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1991708   +   S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1991709   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1991710   +   S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1991711   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1991712   +   S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1991713   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1991714   +   S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1991715   +   S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1991716   +END;
MPRINT(EM_DIAGRAM):   END;
1991717   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1991718   +   IF MISSING( Income ) THEN S_Income  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Income ) THEN S_Income = . ;
1991719   +   ELSE S_Income  =    -2.48883438787018 +     0.00004789669836 * Income ;
MPRINT(EM_DIAGRAM):   ELSE S_Income = -2.48883438787018 + 0.00004789669836 * Income ;
1991720   +   IF MISSING( Kidhome ) THEN S_Kidhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Kidhome ) THEN S_Kidhome = . ;
1991721   +   ELSE S_Kidhome  =    -0.81505958668041 +     1.87132636245581 * Kidhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Kidhome = -0.81505958668041 + 1.87132636245581 * Kidhome ;
1991722   +   IF MISSING( MntFishProducts ) THEN S_MntFishProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFishProducts ) THEN S_MntFishProducts = . ;
1991723   +   ELSE S_MntFishProducts  =    -0.69884925989448 +     0.01914942799914 *
1991724   +        MntFishProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFishProducts = -0.69884925989448 + 0.01914942799914 * 
MntFishProducts ;
1991725   +   IF MISSING( MntFruits ) THEN S_MntFruits  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntFruits ) THEN S_MntFruits = . ;
1991726   +   ELSE S_MntFruits  =    -0.68347542544545 +     0.02517057319714 * MntFruits
1991727   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_MntFruits = -0.68347542544545 + 0.02517057319714 * MntFruits ;
1991728   +   IF MISSING( MntGoldProds ) THEN S_MntGoldProds  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntGoldProds ) THEN S_MntGoldProds = . ;
1991729   +   ELSE S_MntGoldProds  =     -0.8611213764608 +     0.01954474499711 *
1991730   +        MntGoldProds ;
MPRINT(EM_DIAGRAM):   ELSE S_MntGoldProds = -0.8611213764608 + 0.01954474499711 * MntGoldProds 
;
1991731   +   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntMeatProducts ) THEN S_MntMeatProducts = . ;
1991732   +   ELSE S_MntMeatProducts  =    -0.78623193565931 +     0.00462584508746 *
1991733   +        MntMeatProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntMeatProducts = -0.78623193565931 + 0.00462584508746 * 
MntMeatProducts ;
1991734   +   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntSweetProducts ) THEN S_MntSweetProducts = . ;
1991735   +   ELSE S_MntSweetProducts  =    -0.69020047720885 +     0.02548703406327 *
1991736   +        MntSweetProducts ;
MPRINT(EM_DIAGRAM):   ELSE S_MntSweetProducts = -0.69020047720885 + 0.02548703406327 * 
MntSweetProducts ;
1991737   +   IF MISSING( MntWines ) THEN S_MntWines  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( MntWines ) THEN S_MntWines = . ;
1991738   +   ELSE S_MntWines  =    -0.90995945712571 +     0.00292658058326 * MntWines ;
MPRINT(EM_DIAGRAM):   ELSE S_MntWines = -0.90995945712571 + 0.00292658058326 * MntWines ;
1991739   +   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumCatalogPurchases ) THEN S_NumCatalogPurchases = . ;
1991740   +   ELSE S_NumCatalogPurchases
1991741   +          =     -0.9539494374694 +     0.36073207463401 * NumCatalogPurchases
1991742   +         ;
MPRINT(EM_DIAGRAM):   ELSE S_NumCatalogPurchases = -0.9539494374694 + 0.36073207463401 * 
NumCatalogPurchases ;
1991743   +   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumDealsPurchases ) THEN S_NumDealsPurchases = . ;
1991744   +   ELSE S_NumDealsPurchases  =    -1.34788949552081 +     0.59766336614987 *
1991745   +        NumDealsPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumDealsPurchases = -1.34788949552081 + 0.59766336614987 * 
NumDealsPurchases ;
1991746   +   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumStorePurchases ) THEN S_NumStorePurchases = . ;
1991747   +   ELSE S_NumStorePurchases  =    -1.81825213465822 +     0.30716078899015 *
1991748   +        NumStorePurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumStorePurchases = -1.81825213465822 + 0.30716078899015 * 
NumStorePurchases ;
1991749   +   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebPurchases ) THEN S_NumWebPurchases = . ;
1991750   +   ELSE S_NumWebPurchases  =    -1.56492430992034 +     0.38256928346729 *
1991751   +        NumWebPurchases ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebPurchases = -1.56492430992034 + 0.38256928346729 * 
NumWebPurchases ;
1991752   +   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( NumWebVisitsMonth ) THEN S_NumWebVisitsMonth = . ;
1991753   +   ELSE S_NumWebVisitsMonth  =    -2.24769875596018 +     0.42876953368015 *
1991754   +        NumWebVisitsMonth ;
MPRINT(EM_DIAGRAM):   ELSE S_NumWebVisitsMonth = -2.24769875596018 + 0.42876953368015 * 
NumWebVisitsMonth ;
1991755   +   IF MISSING( Recency ) THEN S_Recency  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Recency ) THEN S_Recency = . ;
1991756   +   ELSE S_Recency  =    -1.69222845719633 +     0.03469514083585 * Recency ;
MPRINT(EM_DIAGRAM):   ELSE S_Recency = -1.69222845719633 + 0.03469514083585 * Recency ;
1991757   +   IF MISSING( Teenhome ) THEN S_Teenhome  = . ;
MPRINT(EM_DIAGRAM):   IF MISSING( Teenhome ) THEN S_Teenhome = . ;
1991758   +   ELSE S_Teenhome  =    -0.88382230606631 +     1.81661831567223 * Teenhome ;
MPRINT(EM_DIAGRAM):   ELSE S_Teenhome = -0.88382230606631 + 1.81661831567223 * Teenhome ;
1991759   +END;
MPRINT(EM_DIAGRAM):   END;
1991760   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991761   +*** Writing the Node bin ;
MPRINT(EM_DIAGRAM):   *** Writing the Node bin ;
1991762   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991763   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991764   +*** Writing the Node nom ;
MPRINT(EM_DIAGRAM):   *** Writing the Node nom ;
1991765   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991766   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991767   +*** Writing the Node H1 ;
MPRINT(EM_DIAGRAM):   *** Writing the Node H1 ;
1991768   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991769   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1991770   +   H11  =     1.40261108800308 * S_Income  +     -0.8062097507842 * S_Kidhome
1991771   +          +    -0.12974862644982 * S_MntFishProducts
1991772   +          +     0.08065642800368 * S_MntFruits  +    -0.12102130003972 *
1991773   +        S_MntGoldProds  +     0.19226249622126 * S_MntMeatProducts
1991774   +          +    -0.12290326901613 * S_MntSweetProducts
1991775   +          +     0.07790241176978 * S_MntWines  +     0.36123042724896 *
1991776   +        S_NumCatalogPurchases  +    -0.01034406765754 * S_NumDealsPurchases
1991777   +          +     0.09738032540137 * S_NumStorePurchases
1991778   +          +     0.44459515215205 * S_NumWebPurchases
1991779   +          +      0.8471075994578 * S_NumWebVisitsMonth
1991780   +          +    -1.10667985160899 * S_Recency  +    -0.88509832868515 *
1991781   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H11 = 1.40261108800308 * S_Income + -0.8062097507842 * S_Kidhome + 
-0.12974862644982 * S_MntFishProducts + 0.08065642800368 * S_MntFruits + -0.12102130003972 * 
S_MntGoldProds + 0.19226249622126 * S_MntMeatProducts + -0.12290326901613 * S_MntSweetProducts 
+ 0.07790241176978 * S_MntWines + 0.36123042724896 * S_NumCatalogPurchases + -0.01034406765754 
* S_NumDealsPurchases + 0.09738032540137 * S_NumStorePurchases + 0.44459515215205 * 
S_NumWebPurchases + 0.8471075994578 * S_NumWebVisitsMonth + -1.10667985160899 * S_Recency + 
-0.88509832868515 * S_Teenhome ;
1991782   +   H12  =     0.51266936686642 * S_Income  +     0.26909433357851 * S_Kidhome
1991783   +          +     0.02406077596811 * S_MntFishProducts
1991784   +          +    -0.57443793453522 * S_MntFruits  +     0.36824731232149 *
1991785   +        S_MntGoldProds  +     0.40177289143061 * S_MntMeatProducts
1991786   +          +     -0.1147507059349 * S_MntSweetProducts
1991787   +          +    -0.66379351187459 * S_MntWines  +     1.33407347415468 *
1991788   +        S_NumCatalogPurchases  +     1.00633891197299 * S_NumDealsPurchases
1991789   +          +    -0.23920969262322 * S_NumStorePurchases
1991790   +          +     -0.6008837862932 * S_NumWebPurchases
1991791   +          +     0.26759743722885 * S_NumWebVisitsMonth
1991792   +          +    -0.42755419464125 * S_Recency  +    -0.14471776361394 *
1991793   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H12 = 0.51266936686642 * S_Income + 0.26909433357851 * S_Kidhome + 
0.02406077596811 * S_MntFishProducts + -0.57443793453522 * S_MntFruits + 0.36824731232149 * 
S_MntGoldProds + 0.40177289143061 * S_MntMeatProducts + -0.1147507059349 * S_MntSweetProducts 
+ -0.66379351187459 * S_MntWines + 1.33407347415468 * S_NumCatalogPurchases + 1.00633891197299 
* S_NumDealsPurchases + -0.23920969262322 * S_NumStorePurchases + -0.6008837862932 * 
S_NumWebPurchases + 0.26759743722885 * S_NumWebVisitsMonth + -0.42755419464125 * S_Recency + 
-0.14471776361394 * S_Teenhome ;
1991794   +   H13  =    -0.19807308698832 * S_Income  +     0.25934675474849 * S_Kidhome
1991795   +          +     0.04398331533724 * S_MntFishProducts
1991796   +          +    -0.00090357598988 * S_MntFruits  +     0.05139545341773 *
1991797   +        S_MntGoldProds  +    -0.74617114336019 * S_MntMeatProducts
1991798   +          +     0.00552488718744 * S_MntSweetProducts
1991799   +          +     0.47194407197012 * S_MntWines  +    -0.35149551848487 *
1991800   +        S_NumCatalogPurchases  +    -0.30232522133093 * S_NumDealsPurchases
1991801   +          +     0.60058189155105 * S_NumStorePurchases
1991802   +          +     0.51423374855856 * S_NumWebPurchases
1991803   +          +     -0.9075304423321 * S_NumWebVisitsMonth
1991804   +          +     0.83597739226791 * S_Recency  +     0.15783202762709 *
1991805   +        S_Teenhome ;
MPRINT(EM_DIAGRAM):   H13 = -0.19807308698832 * S_Income + 0.25934675474849 * S_Kidhome + 
0.04398331533724 * S_MntFishProducts + -0.00090357598988 * S_MntFruits + 0.05139545341773 * 
S_MntGoldProds + -0.74617114336019 * S_MntMeatProducts + 0.00552488718744 * S_MntSweetProducts 
+ 0.47194407197012 * S_MntWines + -0.35149551848487 * S_NumCatalogPurchases + 
-0.30232522133093 * S_NumDealsPurchases + 0.60058189155105 * S_NumStorePurchases + 
0.51423374855856 * S_NumWebPurchases + -0.9075304423321 * S_NumWebVisitsMonth + 
0.83597739226791 * S_Recency + 0.15783202762709 * S_Teenhome ;
1991806   +   H11  = H11  +    -0.26274045665457 * AcceptedCmp10
1991807   +          +    -0.86105702939371 * AcceptedCmp20  +    -0.50476270558977 *
1991808   +        AcceptedCmp30  +    -0.84284126473343 * AcceptedCmp40
1991809   +          +     0.19764907691314 * AcceptedCmp50  +    -0.29305577412263 *
1991810   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H11 = H11 + -0.26274045665457 * AcceptedCmp10 + -0.86105702939371 * 
AcceptedCmp20 + -0.50476270558977 * AcceptedCmp30 + -0.84284126473343 * AcceptedCmp40 + 
0.19764907691314 * AcceptedCmp50 + -0.29305577412263 * Complain0 ;
1991811   +   H12  = H12  +    -0.27394139847883 * AcceptedCmp10
1991812   +          +    -0.14688750266104 * AcceptedCmp20  +    -0.27982299242327 *
1991813   +        AcceptedCmp30  +    -0.10465140408787 * AcceptedCmp40
1991814   +          +    -0.81681330244218 * AcceptedCmp50  +    -0.28152730217644 *
1991815   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.27394139847883 * AcceptedCmp10 + -0.14688750266104 * 
AcceptedCmp20 + -0.27982299242327 * AcceptedCmp30 + -0.10465140408787 * AcceptedCmp40 + 
-0.81681330244218 * AcceptedCmp50 + -0.28152730217644 * Complain0 ;
1991816   +   H13  = H13  +     0.42310780831005 * AcceptedCmp10
1991817   +          +     0.41337614261155 * AcceptedCmp20  +     0.41436520641821 *
1991818   +        AcceptedCmp30  +     0.08914989208239 * AcceptedCmp40
1991819   +          +     0.54013759697695 * AcceptedCmp50  +    -0.19478210268955 *
1991820   +        Complain0 ;
MPRINT(EM_DIAGRAM):   H13 = H13 + 0.42310780831005 * AcceptedCmp10 + 0.41337614261155 * 
AcceptedCmp20 + 0.41436520641821 * AcceptedCmp30 + 0.08914989208239 * AcceptedCmp40 + 
0.54013759697695 * AcceptedCmp50 + -0.19478210268955 * Complain0 ;
1991821   +   H11  = H11  +     0.40331200702699 * Education2n_Cycle
1991822   +          +     0.17202421641945 * EducationBasic  +    -0.29654161092174 *
1991823   +        EducationGraduation  +     -0.4835104183635 * EducationMaster
1991824   +          +     0.52129580188513 * Marital_StatusDivorced
1991825   +          +     -1.5224490339553 * Marital_StatusMarried
1991826   +          +     1.05062906057771 * Marital_StatusSingle
1991827   +          +    -1.16420887937635 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H11 = H11 + 0.40331200702699 * Education2n_Cycle + 0.17202421641945 * 
EducationBasic + -0.29654161092174 * EducationGraduation + -0.4835104183635 * EducationMaster 
+ 0.52129580188513 * Marital_StatusDivorced + -1.5224490339553 * Marital_StatusMarried + 
1.05062906057771 * Marital_StatusSingle + -1.16420887937635 * Marital_StatusTogether ;
1991828   +   H12  = H12  +     -0.3488928858263 * Education2n_Cycle
1991829   +          +     0.38279680594423 * EducationBasic  +     0.20376044836519 *
1991830   +        EducationGraduation  +     0.20697694670185 * EducationMaster
1991831   +          +    -0.14428158063317 * Marital_StatusDivorced
1991832   +          +     0.22396926143356 * Marital_StatusMarried
1991833   +          +    -0.12980854818876 * Marital_StatusSingle
1991834   +          +     0.32607015627906 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H12 = H12 + -0.3488928858263 * Education2n_Cycle + 0.38279680594423 * 
EducationBasic + 0.20376044836519 * EducationGraduation + 0.20697694670185 * EducationMaster + 
-0.14428158063317 * Marital_StatusDivorced + 0.22396926143356 * Marital_StatusMarried + 
-0.12980854818876 * Marital_StatusSingle + 0.32607015627906 * Marital_StatusTogether ;
1991835   +   H13  = H13  +    -0.18351418824199 * Education2n_Cycle
1991836   +          +     0.53417952447263 * EducationBasic  +    -0.14333929289628 *
1991837   +        EducationGraduation  +     0.04513004774082 * EducationMaster
1991838   +          +    -0.25615797303064 * Marital_StatusDivorced
1991839   +          +     0.18825506199046 * Marital_StatusMarried
1991840   +          +    -0.24607556819871 * Marital_StatusSingle
1991841   +          +     0.29531673844201 * Marital_StatusTogether ;
MPRINT(EM_DIAGRAM):   H13 = H13 + -0.18351418824199 * Education2n_Cycle + 0.53417952447263 * 
EducationBasic + -0.14333929289628 * EducationGraduation + 0.04513004774082 * EducationMaster 
+ -0.25615797303064 * Marital_StatusDivorced + 0.18825506199046 * Marital_StatusMarried + 
-0.24607556819871 * Marital_StatusSingle + 0.29531673844201 * Marital_StatusTogether ;
1991842   +   H11  =    -1.29289362679377 + H11 ;
MPRINT(EM_DIAGRAM):   H11 = -1.29289362679377 + H11 ;
1991843   +   H12  =     0.88724419151235 + H12 ;
MPRINT(EM_DIAGRAM):   H12 = 0.88724419151235 + H12 ;
1991844   +   H13  =    -0.51194544699467 + H13 ;
MPRINT(EM_DIAGRAM):   H13 = -0.51194544699467 + H13 ;
1991845   +   H11  = TANH(H11 );
MPRINT(EM_DIAGRAM):   H11 = TANH(H11 );
1991846   +   H12  = TANH(H12 );
MPRINT(EM_DIAGRAM):   H12 = TANH(H12 );
1991847   +   H13  = TANH(H13 );
MPRINT(EM_DIAGRAM):   H13 = TANH(H13 );
1991848   +END;
MPRINT(EM_DIAGRAM):   END;
1991849   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1991850   +   H11  = .;
MPRINT(EM_DIAGRAM):   H11 = .;
1991851   +   H12  = .;
MPRINT(EM_DIAGRAM):   H12 = .;
1991852   +   H13  = .;
MPRINT(EM_DIAGRAM):   H13 = .;
1991853   +END;
MPRINT(EM_DIAGRAM):   END;
1991854   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991855   +*** Writing the Node DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the Node DepVar ;
1991856   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991857   +IF _DM_BAD EQ 0 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 0 THEN DO;
1991858   +   P_DepVar1  =     4.44251020865882 * H11  +     2.67139161773156 * H12
1991859   +          +    -4.73549395111184 * H13 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 4.44251020865882 * H11 + 2.67139161773156 * H12 + 
-4.73549395111184 * H13 ;
1991860   +   P_DepVar1  =     0.45492690116644 + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.45492690116644 + P_DepVar1 ;
1991861   +   P_DepVar0  = 0;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0;
1991862   +   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
MPRINT(EM_DIAGRAM):   _MAX_ = MAX (P_DepVar1 , P_DepVar0 );
1991863   +   _SUM_ = 0.;
MPRINT(EM_DIAGRAM):   _SUM_ = 0.;
1991864   +   P_DepVar1  = EXP(P_DepVar1  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar1 = EXP(P_DepVar1 - _MAX_);
1991865   +   _SUM_ = _SUM_ + P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar1 ;
1991866   +   P_DepVar0  = EXP(P_DepVar0  - _MAX_);
MPRINT(EM_DIAGRAM):   P_DepVar0 = EXP(P_DepVar0 - _MAX_);
1991867   +   _SUM_ = _SUM_ + P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _SUM_ = _SUM_ + P_DepVar0 ;
1991868   +   P_DepVar1  = P_DepVar1  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar1 = P_DepVar1 / _SUM_;
1991869   +   P_DepVar0  = P_DepVar0  / _SUM_;
MPRINT(EM_DIAGRAM):   P_DepVar0 = P_DepVar0 / _SUM_;
1991870   +END;
MPRINT(EM_DIAGRAM):   END;
1991871   +ELSE DO;
MPRINT(EM_DIAGRAM):   ELSE DO;
1991872   +   P_DepVar1  = .;
MPRINT(EM_DIAGRAM):   P_DepVar1 = .;
1991873   +   P_DepVar0  = .;
MPRINT(EM_DIAGRAM):   P_DepVar0 = .;
1991874   +END;
MPRINT(EM_DIAGRAM):   END;
1991875   +IF _DM_BAD EQ 1 THEN DO;
MPRINT(EM_DIAGRAM):   IF _DM_BAD EQ 1 THEN DO;
1991876   +   P_DepVar1  =     0.15122156697556;
MPRINT(EM_DIAGRAM):   P_DepVar1 = 0.15122156697556;
1991877   +   P_DepVar0  =     0.84877843302443;
MPRINT(EM_DIAGRAM):   P_DepVar0 = 0.84877843302443;
1991878   +END;
MPRINT(EM_DIAGRAM):   END;
1991879   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991880   +*** Writing the I_DepVar  AND U_DepVar ;
MPRINT(EM_DIAGRAM):   *** Writing the I_DepVar AND U_DepVar ;
1991881   +*** *************************;
MPRINT(EM_DIAGRAM):   *** *************************;
1991882   +_MAXP_ = P_DepVar1 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar1 ;
1991883   +I_DepVar  = "1           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "1           " ;
1991884   +U_DepVar  =                    1;
MPRINT(EM_DIAGRAM):   U_DepVar = 1;
1991885   +IF( _MAXP_ LT P_DepVar0  ) THEN DO;
MPRINT(EM_DIAGRAM):   IF( _MAXP_ LT P_DepVar0 ) THEN DO;
1991886   +   _MAXP_ = P_DepVar0 ;
MPRINT(EM_DIAGRAM):   _MAXP_ = P_DepVar0 ;
1991887   +   I_DepVar  = "0           " ;
MPRINT(EM_DIAGRAM):   I_DepVar = "0           " ;
1991888   +   U_DepVar  =                    0;
MPRINT(EM_DIAGRAM):   U_DepVar = 0;
1991889   +END;
MPRINT(EM_DIAGRAM):   END;
1991890   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1991891   +*** End Scoring Code for Neural;
MPRINT(EM_DIAGRAM):   *** End Scoring Code for Neural;
1991892   +********************************;
MPRINT(EM_DIAGRAM):   ********************************;
1991893   +drop
1991894   +H11
1991895   +H12
1991896   +H13
1991897   +;
MPRINT(EM_DIAGRAM):   drop H11 H12 H13 ;
1991898   +drop S_:;
MPRINT(EM_DIAGRAM):   drop S_:;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1991899    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1991900    quit;
1991901    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1991902    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1991903    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1991904    retain ID 2 Node "Neural32";
MPRINT(EM_DIAGRAM):   retain ID 2 Node "Neural32";
1991905    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1991906    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991907    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1991908    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991909    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 1602 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 1602 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991910    proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural32_variableset out=_temp2(keep=NAME CREATOR);
1991911    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991912    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set EMWS8.NEURAL32_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991913    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991914    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1991915    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1991916    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991917    proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural32_train out=_meta(keep=NAME) noprint;
1991918    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1991919    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1991920    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991921    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 53 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 53 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991922    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991923    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1991924    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991925    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 53 observations read from the data set WORK._META.
NOTE: There were 34 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 53 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991926    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1991927    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1991927  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 832 rows and 5 columns.

1991928    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991929    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1991930    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: BASE data set does not exist. DATA file is being copied to BASE file.
NOTE: There were 832 observations read from the data set WORK._TEMPX.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 832 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991931    filename _pref
1991931  ! "C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas";
1991932    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1991933    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Trans\EMPUBLISHSCORE.sas.
1991934   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1991935   +* Formula Code;
MPRINT(EM_DIAGRAM):   * Formula Code;
1991936   +*------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
1991937   +MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
MPRINT(EM_DIAGRAM):   MonthsAsCustomer =int((today()-Dt_Customer)/12) ;
1991938   +HigherEducationBinary =HigherEducation ;
MPRINT(EM_DIAGRAM):   HigherEducationBinary =HigherEducation ;
1991939   +NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
MPRINT(EM_DIAGRAM):   NumDistPurchases =NumCatalogPurchases + NumWebPurchases ;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1991940    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1991941    quit;
1991942    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1991943    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1991944    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1991945    retain ID 5 Node "Trans";
MPRINT(EM_DIAGRAM):   retain ID 5 Node "Trans";
1991946    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1991947    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991948    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1991949    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991950    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 4 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991951    proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Trans_variableset out=_temp2(keep=NAME CREATOR);
1991952    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991953    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set EMWS8.TRANS_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991954    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991955    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1991956    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1991957    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 33 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991958    proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Trans_train out=_meta(keep=NAME) noprint;
1991959    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

1991960    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1991961    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991962    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 44 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 44 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991963    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991964    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1991965    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991966    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 44 observations read from the data set WORK._META.
NOTE: There were 33 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 44 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991967    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1991968    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1991968  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 4 rows and 5 columns.

1991969    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991970    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1991971    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 4 observations read from the data set WORK._TEMPX.
NOTE: 4 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 836 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991972    filename _pref
1991972  ! "C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas";
1991973    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1991974    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\EMCODE4\EMPUBLISHSCORE.sas.
1991975   +
1991976   +  Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
MPRINT(EM_DIAGRAM):   Frq=NumStorePurchases+NumWebPurchases+NumCatalogPurchases;
1991977   +  Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWin
1991977  !+es;
MPRINT(EM_DIAGRAM):   
Mnt=MntFishProducts+MntFruits+MntGoldProds+MntMeatProducts+MntSweetProducts+MntWines;
1991978   +  RMntFrq=Mnt/Frq;
MPRINT(EM_DIAGRAM):   RMntFrq=Mnt/Frq;
1991979   +  RFMstat=(Mnt*Frq)/(Recency+1);
MPRINT(EM_DIAGRAM):   RFMstat=(Mnt*Frq)/(Recency+1);
1991980   +  HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
MPRINT(EM_DIAGRAM):   HigherEducation=1*(upcase(Education) in ("GRADUATION","MASTER","PHD"));
1991981   +  Age = year(today())-Year_Birth;
MPRINT(EM_DIAGRAM):   Age = year(today())-Year_Birth;
1991982   +  AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
MPRINT(EM_DIAGRAM):   
AcceptedCmpTotal=AcceptedCmp1+AcceptedCmp2+AcceptedCmp3+AcceptedCmp4+AcceptedCmp5;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1991983    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1991984    quit;
1991985    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1991986    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1991987    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1991988    retain ID 6 Node "EMCODE4";
MPRINT(EM_DIAGRAM):   retain ID 6 Node "EMCODE4";
1991989    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1991990    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991991    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1991992    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991993    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 39 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 39 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1991994    proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.EMCODE4_variableset out=_temp2(keep=NAME CREATOR);
1991995    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1991996    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set EMWS8.EMCODE4_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1991997    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1991998    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1991999    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1992000    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 27 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992001    proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.EMCODE4_train out=_meta(keep=NAME) noprint;
1992002    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992003    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1992004    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1992005    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 41 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 41 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992006    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1992007    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1992008    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1992009    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 41 observations read from the data set WORK._META.
NOTE: There were 27 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 41 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992010    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1992011    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1992011  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 39 rows and 5 columns.

1992012    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992013    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1992014    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 39 observations read from the data set WORK._TEMPX.
NOTE: 39 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 875 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992015    filename _pref
1992015  ! "C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):    filename _pref 
"C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas";
1992016    proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
MPRINT(EM_DIAGRAM):   proc FCMP NOEXECUTE IMPUTEDDEPS OUTDEPS=_temp;
1992017    %INCLUDE _pref;
NOTE: %INCLUDE (level 1) file _PREF is file 
      C:\\predictive-models-project\Workspaces\EMWS8\Filter\EMPUBLISHSCORE.sas.
1992018   +
1992019   +
1992020   +length _FILTERFMT1  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT1 $200;
1992021   +drop _FILTERFMT1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT1 ;
1992022   +_FILTERFMT1= put(AcceptedCmp1,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT1= put(AcceptedCmp1,BEST.);
1992023   +length _FILTERNORM1  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM1 $32;
1992024   +drop _FILTERNORM1 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM1 ;
1992025   +%dmnormcp(_FILTERFMT1,_FILTERNORM1);
MPRINT(DMNORMCP):   _FILTERNORM1=dmnorm(_FILTERFMT1,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992026   +
1992027   +
1992028   +length _FILTERFMT2  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT2 $200;
1992029   +drop _FILTERFMT2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT2 ;
1992030   +_FILTERFMT2= put(AcceptedCmp2,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT2= put(AcceptedCmp2,BEST.);
1992031   +length _FILTERNORM2  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM2 $32;
1992032   +drop _FILTERNORM2 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM2 ;
1992033   +%dmnormcp(_FILTERFMT2,_FILTERNORM2);
MPRINT(DMNORMCP):   _FILTERNORM2=dmnorm(_FILTERFMT2,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992034   +
1992035   +
1992036   +length _FILTERFMT3  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT3 $200;
1992037   +drop _FILTERFMT3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT3 ;
1992038   +_FILTERFMT3= put(AcceptedCmp3,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT3= put(AcceptedCmp3,BEST.);
1992039   +length _FILTERNORM3  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM3 $32;
1992040   +drop _FILTERNORM3 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM3 ;
1992041   +%dmnormcp(_FILTERFMT3,_FILTERNORM3);
MPRINT(DMNORMCP):   _FILTERNORM3=dmnorm(_FILTERFMT3,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992042   +
1992043   +
1992044   +length _FILTERFMT4  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT4 $200;
1992045   +drop _FILTERFMT4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT4 ;
1992046   +_FILTERFMT4= put(AcceptedCmp4,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT4= put(AcceptedCmp4,BEST.);
1992047   +length _FILTERNORM4  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM4 $32;
1992048   +drop _FILTERNORM4 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM4 ;
1992049   +%dmnormcp(_FILTERFMT4,_FILTERNORM4);
MPRINT(DMNORMCP):   _FILTERNORM4=dmnorm(_FILTERFMT4,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992050   +
1992051   +
1992052   +length _FILTERFMT5  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT5 $200;
1992053   +drop _FILTERFMT5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT5 ;
1992054   +_FILTERFMT5= put(AcceptedCmp5,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT5= put(AcceptedCmp5,BEST.);
1992055   +length _FILTERNORM5  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM5 $32;
1992056   +drop _FILTERNORM5 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM5 ;
1992057   +%dmnormcp(_FILTERFMT5,_FILTERNORM5);
MPRINT(DMNORMCP):   _FILTERNORM5=dmnorm(_FILTERFMT5,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992058   +
1992059   +
1992060   +length _FILTERFMT6  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT6 $200;
1992061   +drop _FILTERFMT6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT6 ;
1992062   +_FILTERFMT6= put(Complain,BEST.);
MPRINT(EM_DIAGRAM):   _FILTERFMT6= put(Complain,BEST.);
1992063   +length _FILTERNORM6  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM6 $32;
1992064   +drop _FILTERNORM6 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM6 ;
1992065   +%dmnormcp(_FILTERFMT6,_FILTERNORM6);
MPRINT(DMNORMCP):   _FILTERNORM6=dmnorm(_FILTERFMT6,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992066   +
1992067   +
1992068   +length _FILTERFMT7  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT7 $200;
1992069   +drop _FILTERFMT7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT7 ;
1992070   +_FILTERFMT7= put(Education,$10.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT7= put(Education,$10.0);
1992071   +length _FILTERNORM7  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM7 $32;
1992072   +drop _FILTERNORM7 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM7 ;
1992073   +%dmnormcp(_FILTERFMT7,_FILTERNORM7);
MPRINT(DMNORMCP):   _FILTERNORM7=dmnorm(_FILTERFMT7,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992074   +
1992075   +
1992076   +length _FILTERFMT8  $200;
MPRINT(EM_DIAGRAM):   length _FILTERFMT8 $200;
1992077   +drop _FILTERFMT8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERFMT8 ;
1992078   +_FILTERFMT8= put(Marital_Status,$8.0);
MPRINT(EM_DIAGRAM):   _FILTERFMT8= put(Marital_Status,$8.0);
1992079   +length _FILTERNORM8  $32;
MPRINT(EM_DIAGRAM):   length _FILTERNORM8 $32;
1992080   +drop _FILTERNORM8 ;
MPRINT(EM_DIAGRAM):   drop _FILTERNORM8 ;
1992081   +%dmnormcp(_FILTERFMT8,_FILTERNORM8);
MPRINT(DMNORMCP):   _FILTERNORM8=dmnorm(_FILTERFMT8,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMCP):  );
MPRINT(EM_DIAGRAM):  ;
1992082   +if
1992083   +_FILTERNORM1 not in ( '.')
1992084   + and
1992085   +_FILTERNORM2 not in ( '.')
1992086   + and
1992087   +_FILTERNORM3 not in ( '.')
1992088   + and
1992089   +_FILTERNORM4 not in ( '.')
1992090   + and
1992091   +_FILTERNORM5 not in ( '.')
1992092   + and
1992093   +_FILTERNORM6 not in ( '.')
1992094   + and
1992095   +_FILTERNORM7 not in ( ' ')
1992096   + and
1992097   +_FILTERNORM8 not in ( ' ')
1992098   +and
1992099   +( Dt_Customer ne .)
1992100   +and ( Income ne . and (Income<=107000))
1992101   +and ( Kidhome ne .)
1992102   +and ( MntFishProducts ne .)
1992103   +and ( MntFruits ne .)
1992104   +and ( MntGoldProds ne .)
1992105   +and ( MntMeatProducts ne . and (MntMeatProducts<=964))
1992106   +and ( MntSweetProducts ne .)
1992107   +and ( MntWines ne .)
1992108   +and ( NumCatalogPurchases ne . and (NumCatalogPurchases<=14))
1992109   +and ( NumDealsPurchases ne . and (NumDealsPurchases<=10.5))
1992110   +and ( NumStorePurchases ne .)
1992111   +and ( NumWebPurchases ne .)
1992112   +and ( NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42))
1992113   +and ( Recency ne .)
1992114   +and ( Teenhome ne .)
1992115   +and ( Year_Birth ne .)
1992116   +then do;
MPRINT(EM_DIAGRAM):   if _FILTERNORM1 not in ( '.') and _FILTERNORM2 not in ( '.') and 
_FILTERNORM3 not in ( '.') and _FILTERNORM4 not in ( '.') and _FILTERNORM5 not in ( '.') and 
_FILTERNORM6 not in ( '.') and _FILTERNORM7 not in ( ' ') and _FILTERNORM8 not in ( ' ') and ( 
Dt_Customer ne .) and ( Income ne . and (Income<=107000)) and ( Kidhome ne .) and ( 
MntFishProducts ne .) and ( MntFruits ne .) and ( MntGoldProds ne .) and ( MntMeatProducts ne 
. and (MntMeatProducts<=964)) and ( MntSweetProducts ne .) and ( MntWines ne .) and ( 
NumCatalogPurchases ne . and (NumCatalogPurchases<=14)) and ( NumDealsPurchases ne . and 
(NumDealsPurchases<=10.5)) and ( NumStorePurchases ne .) and ( NumWebPurchases ne .) and ( 
NumWebVisitsMonth ne . and (NumWebVisitsMonth<=13.42)) and ( Recency ne .) and ( Teenhome ne 
.) and ( Year_Birth ne .) then do;
1992117   +if M_FILTER eq . then M_FILTER = 0;
MPRINT(EM_DIAGRAM):   if M_FILTER eq . then M_FILTER = 0;
1992118   +else M_FILTER = M_FILTER + 0;
MPRINT(EM_DIAGRAM):   else M_FILTER = M_FILTER + 0;
1992119   +end;
MPRINT(EM_DIAGRAM):   end;
1992120   +else M_FILTER = 1;
MPRINT(EM_DIAGRAM):   else M_FILTER = 1;
1992121   +label M_FILTER = 'Filtered Indicator';
MPRINT(EM_DIAGRAM):   label M_FILTER = 'Filtered Indicator';
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
1992122    run;

NOTE: Dependency structure written to data set _TEMP.
NOTE: PROCEDURE FCMP used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   quit;
1992123    quit;
1992124    filename _pref;
MPRINT(EM_DIAGRAM):   filename _pref;
NOTE: Fileref _PREF has been deassigned.
1992125    data _temp(rename=(RHS=NAME));
MPRINT(EM_DIAGRAM):   data _temp(rename=(RHS=NAME));
1992126    length Node $32;
MPRINT(EM_DIAGRAM):   length Node $32;
1992127    retain ID 7 Node "Filter";
MPRINT(EM_DIAGRAM):   retain ID 7 Node "Filter";
1992128    set _temp;
MPRINT(EM_DIAGRAM):   set _temp;
1992129    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992130    proc sort data=_temp;
MPRINT(EM_DIAGRAM):   proc sort data=_temp;
1992131    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1992132    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 110 observations read from the data set WORK._TEMP.
NOTE: The data set WORK._TEMP has 110 observations and 14 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992133    proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Filter_variableset out=_temp2(keep=NAME CREATOR);
1992134    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1992135    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set EMWS8.FILTER_VARIABLESET.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992136    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1992137    length CREATOR $32;
MPRINT(EM_DIAGRAM):   length CREATOR $32;
1992138    set _temp2;
MPRINT(EM_DIAGRAM):   set _temp2;
1992139    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 26 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992140    proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Filter_train out=_meta(keep=NAME) noprint;
1992141    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

1992142    proc sort data=_meta;
MPRINT(EM_DIAGRAM):   proc sort data=_meta;
1992143    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1992144    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 34 observations read from the data set WORK._META.
NOTE: The data set WORK._META has 34 observations and 1 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992145    data _temp2;
MPRINT(EM_DIAGRAM):   data _temp2;
1992146    merge _meta _temp2;
MPRINT(EM_DIAGRAM):   merge _meta _temp2;
1992147    by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
1992148    run;
MPRINT(EM_DIAGRAM):   run;

WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This may 
         cause unexpected results.
NOTE: There were 34 observations read from the data set WORK._META.
NOTE: There were 26 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMP2 has 34 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992149    proc sql;
MPRINT(EM_DIAGRAM):   proc sql;
1992150    create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR from
1992150  ! work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
MPRINT(EM_DIAGRAM):   create table _tempx as select p.node, p.lhs, p.id , p2.name, p2.CREATOR 
from work._temp p, work._temp2 p2 where upcase(p.NAME)=upcase(p2.NAME);
NOTE: Table WORK._TEMPX created, with 66 rows and 5 columns.

1992151    quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992152    proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
MPRINT(EM_DIAGRAM):   proc append base=EMWS8.Ensmbl10_FCMP data=_tempx;
1992153    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Appending WORK._TEMPX to EMWS8.ENSMBL10_FCMP.
NOTE: There were 66 observations read from the data set WORK._TEMPX.
NOTE: 66 observations added.
NOTE: The data set EMWS8.ENSMBL10_FCMP has 941 observations and 5 variables.
NOTE: PROCEDURE APPEND used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992154    %macro varDept(fcmpdata=,id=);
1992155    %global nobs&id scoreFlag&id;
1992156    %let scoreFlag&id = 0;
1992157    %if &id=1 or ^&fcmpStart %then %do;
1992158    proc sort data=&fcmpdata out=_temp&id nodupkey;
1992159    by NAME;
1992160    where id=&id and LHS in( %let j=1;
1992161    %do %while(%scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j) ne );
1992162    %let var = %scan(_WARN_ I_DepVar P_DepVar1 P_DepVar0, &j);
1992163    "&var" %let j = %eval(&j+1);
1992164    %end;
1992165    );
1992166    run;
1992167    %let dsid = %sysfunc(open(_temp&id));
1992168    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1992169    %let dsid = %sysfunc(close(&dsid));
1992170    %if &&nobs&id %then %do;
1992171    %let scoreFlag&id = 1;
1992172    %let fcmpStart = 1;
1992173    %end;
1992174    %else %let fcmpStart = 0;
1992175    %end;
1992176    %else %do;
1992177    proc sort data=&fcmpdata out=_tempid;
1992178    where id=&id;
1992179    by LHS;
1992180    run;
1992181    %let dsid = %sysfunc(open(_tempid));
1992182    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1992183    %let dsid = %sysfunc(close(&dsid));
1992184    %if ^&&nobs&id %then %do;
1992185    proc datasets lib=work nolist;
1992186    delete _tempid;
1992187    run;
1992188    quit;
1992189    %end;
1992190    %else %do;
1992191    data _tempAll;
1992192    set %let j=%eval(&id-1);
1992193    %do x=1 %to &j;
1992194    %if &&nobs&x %then %do;
1992195    _temp&x %end;
1992196    %end;
1992197    ;
1992198    run;
1992199    proc sql;
1992200    create table _temp&id as select p2.lhs, p2.name, p2.Node from work._tempAll p,
1992200  ! work._tempid p2 where p.name=p2.lhs;
1992201    quit;
1992202    data _temp&id;
1992203    set _temp&id;
1992204    where LHS ne '' and NAME ne '' and Node ne '';
1992205    run;
1992206    proc datasets lib=work nolist;
1992207    delete _tempAll;
1992208    run;
1992209    %let dsid = %sysfunc(open(_temp&id));
1992210    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1992211    %let dsid = %sysfunc(close(&dsid));
1992212    %if ^&&nobs&id %then %do;
1992213    proc datasets lib=work nolist;
1992214    delete _temp&id;
1992215    run;
1992216    quit;
1992217    %end;
1992218    %else %do;
1992219    %let scoreFlag&id = 1;
1992220    data _temp&id;
1992221    set _temp&id;
1992222    where LHS ne NAME and node ne '';
1992223    run;
1992224    %let dsid = %sysfunc(open(_temp&id));
1992225    %let nobs&id = %sysfunc(attrn(&dsid, NLOBSF));
1992226    %let dsid = %sysfunc(close(&dsid));
1992227    %if ^&&nobs&id %then %do;
1992228    proc datasets lib=work nolist;
1992229    delete _temp&id;
1992230    run;
1992231    quit;
1992232    %end;
1992233    %else %do;
1992234    proc sort data=_temp&id nodupkey;
1992235    by LHS NAME;
1992236    run;
1992237    %end;
1992238    %end;
1992239    %end;
1992240    %end;
1992241    %mend varDept;
1992242    %macro optCode(outdata=fcmpdata);
1992243    %global fcmpStart;
1992244    %let fcmpStart = 0;
1992245    %let outputVars = _WARN_ I_DepVar P_DepVar1 P_DepVar0;
1992246    %let NumNodes=9;
1992247    %do k=1 %to &NumNodes;
1992248    %vardept(fcmpdata=&outdata, id=&k);
1992249    %end;
1992250    %mend optCode;
1992251    %optcode(outData=EMWS8.Ensmbl10_FCMP);
MPRINT(EM_DIAGRAM):   
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp1 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=1 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: 0 observations with duplicate key values were deleted.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=1) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: The data set WORK._TEMP1 has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_temp2 nodupkey;
MPRINT(VARDEPT):   by NAME;
MPRINT(VARDEPT):   where id=2 and LHS in( "_WARN_" "I_DepVar" "P_DepVar1" "P_DepVar0" );
MPRINT(VARDEPT):   run;

NOTE: There were 98 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE (id=2) and LHS in ('I_DepVar', 'P_DepVar0', 'P_DepVar1', '_WARN_');
NOTE: 73 observations with duplicate key values were deleted.
NOTE: The data set WORK._TEMP2 has 25 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=3;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=3;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=4;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=4;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=5;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 4 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=5;
NOTE: The data set WORK._TEMPID has 4 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp5 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP5 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp5;
MPRINT(VARDEPT):   set _temp5;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP5.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP5 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp5;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP5 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=6;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 39 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=6;
NOTE: The data set WORK._TEMPID has 39 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp6 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP6 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp6;
MPRINT(VARDEPT):   set _temp6;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP6.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP6 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp6;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP6 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=7;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: There were 66 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=7;
NOTE: The data set WORK._TEMPID has 66 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _tempAll;
MPRINT(VARDEPT):   set _temp2 ;
MPRINT(VARDEPT):   run;

NOTE: There were 25 observations read from the data set WORK._TEMP2.
NOTE: The data set WORK._TEMPALL has 25 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(VARDEPT):   proc sql;
MPRINT(VARDEPT):   create table _temp7 as select p2.lhs, p2.name, p2.Node from work._tempAll 
p, work._tempid p2 where p.name=p2.lhs;
NOTE: Table WORK._TEMP7 created, with 0 rows and 3 columns.

MPRINT(VARDEPT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   data _temp7;
MPRINT(VARDEPT):   set _temp7;
MPRINT(VARDEPT):   where LHS ne '' and NAME ne '' and Node ne '';
MPRINT(VARDEPT):   run;

NOTE: There were 0 observations read from the data set WORK._TEMP7.
      WHERE (LHS not = ' ') and (NAME not = ' ') and (Node not = ' ');
NOTE: The data set WORK._TEMP7 has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempAll;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPALL (memtype=DATA).

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _temp7;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMP7 (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=8;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=8;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(VARDEPT):   proc sort data=EMWS8.Ensmbl10_FCMP out=_tempid;
MPRINT(VARDEPT):   where id=9;
MPRINT(VARDEPT):   by LHS;
MPRINT(VARDEPT):   run;

NOTE: Input data set is empty.
NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_FCMP.
      WHERE id=9;
NOTE: The data set WORK._TEMPID has 0 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(VARDEPT):   proc datasets lib=work nolist;
MPRINT(VARDEPT):   delete _tempid;
MPRINT(VARDEPT):   run;

NOTE: Deleting WORK._TEMPID (memtype=DATA).
MPRINT(VARDEPT):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(OPTCODE):  ;
MPRINT(EM_DIAGRAM):  ;

1992252    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
1992253    * Ensmbl10: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Computing metadata for TRAIN data;
1992254    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

NOTE: View EMWS8.ENSMBL10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta 
"C:\\predictive-models-project\Workspaces\EMWS8\Ensmbl10\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS8.Ensmbl10_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS8.Ensmbl10_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS8.Ensmbl10_TRAIN out=WORK.M2IRHA_9 noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IRHA_9;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 20 INFORMAT $20 
INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M2IRHA_9(keep=name type length label format formatl 
formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then format = strip(format)!!strip(put(formatl, 
best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, 
best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then informat = 
strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, 
best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2IRHA_9;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M2IRHA_9;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M2MN4HKS NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M20AZ2P6(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 
FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" 
"MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" 
"QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX" "YEAR" "YYMMDD" "YYMON" 
"YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" 
"EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) 
formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = 
"DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) 
formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" 
"NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" 
"SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = 
"DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then 
level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 
'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 
'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ 
('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 
'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 
'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   set WORK.M2MN4HKS;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= 
"Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= 
"Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower limit" UPPERLIMIT= 
"Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= 
"Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS8.Neural35_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS8.Neural35_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT 
LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Ensmbl10";
MPRINT(EM_DIAGRAM):   select(upcase(name));
MPRINT(EM_DIAGRAM):   when("P_DEPVAR1") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR1") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("P_DEPVAR0") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("R_DEPVAR0") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("F_DEPVAR") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("I_DEPVAR") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("U_DEPVAR") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("_WARN_") creator = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when("DEPVAR") model = "Ensmbl10";
MPRINT(EM_DIAGRAM):   when('');
MPRINT(EM_DIAGRAM):   otherwise;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Ensmbl10: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if NAME in( "I_DepVar" "F_DepVar" "U_DepVar" "_WARN_" "P_DepVar1" 
"P_DepVar0" "R_DepVar1" "R_DepVar0" ) then CREATOR="Ensmbl10";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
1992574    data WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):    data WORK.MODELTEMP_INFO;
1992575    set EMWS8.Ensmbl10_EMINFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMINFO;
1992576    where DATA='Ensmbl10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
MPRINT(EM_DIAGRAM):   where DATA='Ensmbl10' and KEY ^in('DECDATA', 'DECMETA', 'IMPORTANCE', 
'MODEL');
1992577    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 0 observations read from the data set EMWS8.ENSMBL10_EMINFO.
      WHERE (DATA='Ensmbl10') and KEY not in ('DECDATA', 'DECMETA', 'IMPORTANCE', 'MODEL');
NOTE: The data set WORK.MODELTEMP_INFO has 0 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992578    data EMWS8.Ensmbl10_EMINFO;
MPRINT(EM_DIAGRAM):    data EMWS8.Ensmbl10_EMINFO;
1992579    length TARGET KEY $32 DATA $43;
MPRINT(EM_DIAGRAM):   length TARGET KEY $32 DATA $43;
1992580    input TARGET KEY DATA $;
MPRINT(EM_DIAGRAM):   input TARGET KEY DATA $;
1992581    cards;
MPRINT(EM_DIAGRAM):   cards;

NOTE: The data set EMWS8.ENSMBL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):   run;
1992585    run;
1992586    data EMWS8.Ensmbl10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMINFO;
1992587    set EMWS8.Ensmbl10_EMINFO WORK.MODELTEMP_INFO;
MPRINT(EM_DIAGRAM):   set EMWS8.Ensmbl10_EMINFO WORK.MODELTEMP_INFO;
1992588    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL10_EMINFO.
NOTE: There were 0 observations read from the data set WORK.MODELTEMP_INFO.
NOTE: The data set EMWS8.ENSMBL10_EMINFO has 3 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992589    proc sort data = EMWS8.Ensmbl10_EMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Ensmbl10_EMINFO NOTHREADS;
1992590    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1992591    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 3 observations read from the data set EMWS8.ENSMBL10_EMINFO.
NOTE: The data set EMWS8.ENSMBL10_EMINFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992592    proc sort data = EMWS8.Neural35_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
MPRINT(EM_DIAGRAM):    proc sort data = EMWS8.Neural35_EMINFO OUT=WORK.SORTEDEMINFO NOTHREADS;
1992593    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1992594    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set EMWS8.NEURAL35_EMINFO.
NOTE: The data set WORK.SORTEDEMINFO has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992595    proc sort data = EMWS8.Ensmbl10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data = EMWS8.Ensmbl10_EMINFO OUT=WORK.TEMP_INFO NOTHREADS;
1992596    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1992597    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 3 observations read from the data set EMWS8.ENSMBL10_EMINFO.
NOTE: The data set WORK.TEMP_INFO has 3 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

1992598    data EMWS8.Ensmbl10_EMINFO;
MPRINT(EM_DIAGRAM):   data EMWS8.Ensmbl10_EMINFO;
1992599    merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
MPRINT(EM_DIAGRAM):   merge WORK.SORTEDEMINFO WORK.TEMP_INFO;
1992600    by TARGET KEY;
MPRINT(EM_DIAGRAM):   by TARGET KEY;
1992601    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 4 observations read from the data set WORK.SORTEDEMINFO.
NOTE: There were 3 observations read from the data set WORK.TEMP_INFO.
NOTE: The data set EMWS8.ENSMBL10_EMINFO has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

1992602    proc datasets lib=work nolist;
MPRINT(EM_DIAGRAM):   proc datasets lib=work nolist;
1992603    delete TEMP_INFO SORTEDEMINFO;
MPRINT(EM_DIAGRAM):   delete TEMP_INFO SORTEDEMINFO;
1992604    run;
MPRINT(EM_DIAGRAM):   run;

NOTE: Deleting WORK.TEMP_INFO (memtype=DATA).
NOTE: Deleting WORK.SORTEDEMINFO (memtype=DATA).
1992605    quit;
MPRINT(EM_DIAGRAM):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

NOTE: View EMWS8.ENSMBL10_TRAIN.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
NOTE: View EMWS8.ENSMBL10_VALIDATE.VIEW used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
